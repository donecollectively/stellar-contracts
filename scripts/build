#!/usr/bin/env bash
# set -x # debug mode
#set -e # exit on error
#//! EXPECTS to be run in context of `pnpm exec`

srcDir=$(dirname $0)
STC_PROJECT_PITCH=0
. $srcDir/support.sh

startTime=$(date)

programDTS() {
    tsc -p ./tsconfig.programWithCacheAPI.dts.json &&
    withDocs api-extractor run --local  -c api-extractor.programWithCacheAPI.json 
}

makeHeliosProgramWithCacheAPI() {
    inBackground "-- cacheable program .d.ts" \
        programDTS

    $ESBUILD --platform=node $ESBUILD_EXTERNALS \
        --drop-labels=__BROWSER_ONLY__ \
        --outfile=dist/HeliosProgramWithFSCache.mjs \
        src/helios/HeliosProgramWithFSCache.ts
    $ESBUILD $ESBUILD_EXTERNALS \
        --drop-labels=__NODEJS_ONLY__ \
        --outfile=dist/HeliosProgramWithMockCacheAPI.mjs \
        src/helios/HeliosProgramWithMockCacheAPI.ts    
}

testingDTS() {
    tsc -p ./tsconfig.testing.dts.json &&
    withDocs api-extractor run --local -c api-extractor.testing.json 
}

uiDTS() {
    echo "Generating UI types..."
    tsc -p ./tsconfig.ui.dts.json &&
    withDocs api-extractor run --local -c api-extractor.ui.json &&
    echo "UI types generated successfully"
}

playStartSound &
{
    # raw DTS to be fed to api-extractor
    inBackground "make dist/HeliosProgramWithCacheAPI" \
        makeHeliosProgramWithCacheAPI &
        # ... has nested background jobs.
        # ... needed for the rollup plugin

    wait  # for stuff above to finish
    makeRollupPlugin &
    inBackground "typecheck all, prep for doc-gen and main .d.ts" \
        tsc -p ./tsconfig.all.dts.json  &

}  

echo "In foreground: rollup main code bundle" 
./scripts/rollup || {
    logProblemWith "rollup main code bundle"
    echo "error in rollup main code bundle"
    wait
    exit 42
}

sleep 0.5
echo "------------------------------ waiting ------------------------------"
wait
playCheckpointSound

copyTypeInfoDTSFiles

{
    inBackground "main .d.ts and docs" \
        withDocs api-extractor run --local  &

    inBackground "testing.d.ts" \
        testingDTS &

    inBackground "ui.d.ts" \
        uiDTS
}

wait

# Verify UI types were generated
if [ ! -f "dist/ui.d.ts" ]; then
    echo "Error: UI types were not generated at dist/ui.d.ts"
    exit 1
fi

echo "build started at  $startTime"
echo "build finished at $(date)"

exitIfError
playSuccessSound 
wait

# api-extractor run --local --verbose

# to debug rollup plugins:
#   pnpm exec node --inspect-brk \
#      node_modules/rollup/dist/bin/rollup \
#         --config rollup.config.ts \
#         --configPlugin 'esbuild={loaders:{".json": "json"}, target: "esnext", tsconfig:"./tsconfig.rollupconfig.json"}'
