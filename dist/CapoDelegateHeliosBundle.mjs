import { makeSource } from '@helios-lang/compiler-utils';
import { HeliosScriptBundle, placeholderSetupDetails } from './HeliosBundle.mjs';
import './DefaultCapo.mjs';
import '@helios-lang/ledger';
import { B as BasicDelegate_hl } from './BasicDelegate.mjs';
import '@helios-lang/uplc';
import '@donecollectively/stellar-contracts/HeliosProgramWithCacheAPI';
import '@helios-lang/compiler';
import '@helios-lang/codec-utils';
import '@helios-lang/crypto';
import '@helios-lang/contract-utils';
import './environment.mjs';

class CapoDelegateBundle extends HeliosScriptBundle {
  /**
   * indicates where the script params are sourced from
   * ### advanced usage
   * use "config" to draw the script params from a json file
   * use "bundle" to draw the script params from the bundle's params and/or defined variants
   */
  scriptParamsSource = "bundle";
  isConcrete = false;
  /**
   * Creates a CapoDelegateBundle subclass based on a specific CapoHeliosBundle class
   */
  static usingCapoBundleClass(c) {
    const cb = new c(placeholderSetupDetails);
    const newClass = class aCapoBoundBundle extends this {
      capoBundle = cb;
      constructor(setupDetails = placeholderSetupDetails) {
        super(setupDetails);
      }
      isConcrete = true;
    };
    return newClass;
  }
  // constructor(public capoBundle: CapoHeliosBundle) {
  //     super();
  // }
  get main() {
    return BasicDelegate_hl;
  }
  get rev() {
    return 1n;
  }
  get params() {
    return {
      rev: this.rev,
      delegateName: this.moduleName,
      isMintDelegate: false,
      isSpendDelegate: false,
      isDgDataPolicy: false,
      requiresGovAuthority: this.requiresGovAuthority
    };
  }
  get moduleName() {
    const specialDgt = this.specializedDelegateModule;
    if (!specialDgt.moduleName) {
      throw new Error(
        "specializedDelegate module must have a moduleName"
      );
    }
    return specialDgt.moduleName;
  }
  getEffectiveModuleList() {
    const specialDgt = this.specializedDelegateModule;
    const delegateWrapper = this.mkDelegateWrapper(specialDgt.moduleName);
    return [
      ...super.getEffectiveModuleList(),
      delegateWrapper,
      this.specializedDelegateModule
    ];
  }
  get modules() {
    return [];
  }
  mkDelegateWrapper(moduleName) {
    const indent = " ".repeat(8);
    const src = `module specializedDelegate
import {
    DelegateActivity,
    DelegateDatum,
    BurningActivity,
    MintingActivity,
    SpendingActivity
} from ${moduleName}
`;
    return makeSource(src, {
      name: `generatedSpecializedDelegateModule`,
      project: "stellar-contracts",
      moreInfo: `${indent}- wraps ${moduleName} provided by ${this.constructor.name}
${indent}  (generated by stellar-contracts:src/delegation/ContractBasedDelegate.ts:mkDelegateWrapper())`
    });
  }
}

export { CapoDelegateBundle };
//# sourceMappingURL=CapoDelegateHeliosBundle.mjs.map
