{"version":3,"file":"HeliosBundle.mjs","sources":["../src/helios/CachedHeliosProgram.ts","../src/helios/scriptBundling/HeliosScriptBundle.ts"],"sourcesContent":["import {\n    Program,\n    type CompileOptions,\n    type ProgramProps,\n} from \"@helios-lang/compiler\";\nimport type { Source } from \"@helios-lang/compiler-utils\";\nimport {\n    decodeUplcProgramV2FromCbor,\n    deserializeUplcSourceMap,\n    makeUplcSourceMap,\n    type UplcProgramV2,\n    type UplcSourceMapJsonSafe,\n} from \"@helios-lang/uplc\";\nimport { bytesToHex } from \"@helios-lang/codec-utils\";\nimport { blake2b } from \"@helios-lang/crypto\";\nimport { extractName } from \"@helios-lang/compiler\";\n\nimport { textToBytes } from \"../HeliosPromotedTypes.js\";\nimport type { CompileOptionsForCachedHeliosProgram } from \"../HeliosPromotedTypes.js\";\n\nexport type CacheableProgramProps = ProgramProps & {\n    isTestnet: boolean; // non-optional\n    /**\n     * The cache key for the program. Defaults to the hash of the source code.\n     * If there is no source code, the cacheKey is required\n     */\n    cacheKey?: string;\n    /**\n     * The timeout, in milliseconds for waiting for another instance to finish compiling.\n     * The default timeout is 30 seconds.\n     */\n    timeout?: number;\n    /**\n     * The expected script hash for the program.  The compiled program is checked against\n     * this script hash, if provided.\n     */\n    expectedScriptHash?: string;\n    /**\n     * name of the script, which may be different from the name of the script's entry-point\n     * / main module\n     */\n    name?: string;\n};\n\ntype OptimizeOptions =\n    | false\n    | Omit<\n          Exclude<CompileOptions[\"optimize\"], boolean | undefined>,\n          \"iterSpecificOptions\" | \"commonSubExprCount\"\n      >;\n\n/**\n * @internal\n */\nexport type HeliosProgramCacheEntry = {\n    version: \"PlutusV2\" | \"PlutusV3\";\n    createdBy: string;\n    programElements: Record<string, string | Object>;\n    optimizeOptions: OptimizeOptions;\n    optimized?: UplcProgramV2; // | UplcProgramV3I;\n    unoptimized?: UplcProgramV2; //| UplcProgramV3I;\n    optimizedIR?: string;\n    unoptimizedIR?: string;\n    optimizedSmap?: UplcSourceMapJsonSafe;\n    unoptimizedSmap?: UplcSourceMapJsonSafe;\n};\n\n/**\n * @internal\n */\nexport type SerializedHeliosCacheEntry = {\n    version: \"PlutusV2\" | \"PlutusV3\";\n    createdBy: string;\n    programElements: Record<string, string | Object>;\n    optimizeOptions: OptimizeOptions;\n    optimized?: string;\n    unoptimized?: string;\n    optimizedIR?: string;\n    unoptimizedIR?: string;\n    optimizedSmap?: UplcSourceMapJsonSafe;\n    unoptimizedSmap?: UplcSourceMapJsonSafe;\n};\n\n/**\n * @internal\n */\nexport type PrecompiledProgramJSON = Pick<\n    SerializedHeliosCacheEntry,\n    | \"version\"\n    | \"programElements\"\n    | \"optimized\"\n    | \"unoptimized\"\n    | \"optimizedIR\"\n    | \"unoptimizedIR\"\n    | \"optimizedSmap\"\n    | \"unoptimizedSmap\"\n>;\n\n/**\n * @internal\n */\nexport type lockInfo<T> = {\n    lock: T;\n    release: () => void;\n};\n\n/**\n * @internal\n */\nexport type LockInfoForStrat<T extends CachedHeliosProgram> = Awaited<\n    ReturnType<T[\"acquireLock\"]>\n>;\n\nconst redirecToCorrectConstructor =\n    \"üê¢${this.id}: wrong direct use of new() constructor in CachedHeliosProgram; use forCurrentPlatform() instead\";\n\n/**\n * A Helios program that caches its compiled UPLC program.\n * @remarks\n * Only available in the node.js environment for now, by importing\n * HeliosProgramWithCacheAPI from the @stellar-contracts/HeliosProgramWithCacheAPI module.\n *\n * ### Feedback please?\n * Probably nobody ever sees this doc?  If you do, please let us know!\n * @public\n */\nexport class CachedHeliosProgram extends Program {\n    // static memoryCache = new Map<string, UplcProgramV2 | UplcProgramV3>();\n    props: CacheableProgramProps;\n    locks: Map<string, lockInfo<any>> = new Map();\n    programElements: Record<string, string | Object>;\n    cacheEntry: HeliosProgramCacheEntry | undefined;\n\n    sources: (Source | string)[];\n    static id: string =\n        globalThis?.id || Math.floor(Math.random() * 1000).toString();\n    id: string;\n\n    /**\n     * Creates a new CachedHeliosProgram.\n     * @remarks\n     * Expects the same arguments as the Helios {@link Program} constructor.\n     *\n     * Returns a Program subclass that also conforms to the CachedHeliosProgram interface.\n     *\n     * Use the {@link compileCached | compileCached()} method to compile the program.\n     * @public\n     */\n    constructor(mainSource: string | Source, props: CacheableProgramProps) {\n        super(mainSource, props);\n        this.sources = [mainSource, ...(props?.moduleSources || [])];\n        this.programElements = {};\n        this.id = this.subclass.id;\n        const effectiveProps = {\n            ...{\n                timeout: 30000,\n            },\n            ...(props || {}),\n        };\n        this.props = effectiveProps;\n\n        if (this.constructor === CachedHeliosProgram) {\n            throw new Error(redirecToCorrectConstructor);\n        }\n    }\n\n    /**\n     * Checks for the presence of a cache key, without attempting a lock.  Indicates\n     * whether the program is in the cache; if so, no lock is needed to read it.  Returns\n     * the cached program if found, or null if not found.  Must be implemented by each subclass\n     * as a platform-specific STATIC method.\n     */\n    static async ifCached(cacheKey: string): Promise<string | null> {\n        throw new Error(redirecToCorrectConstructor);\n    }\n\n    /**\n     * Acquires a lock for the given cache key.  Must be implemented by each subclass\n     * as a platform-specific STATIC method.  Blocks while waiting for the lock.  Returns\n     * the lock details or throws an error if the lock cannot be acquired.\n     * The method receives the cache key and the program properties, which includes\n     * the timeout to be used.\n     */\n    static async acquireLock(\n        cacheKey: string,\n        props: CacheableProgramProps\n    ): Promise<lockInfo<any>> {\n        throw new Error(redirecToCorrectConstructor);\n    }\n\n    /**\n     * Acquires a lock for the given cache key, but does not wait.  Must be implemented by each subclass\n     * as a platform-specific STATIC method.\n     */\n    static async acquireImmediateLock(\n        cacheKey: any,\n        props: CacheableProgramProps\n    ): Promise<lockInfo<any> | null> {\n        throw new Error(redirecToCorrectConstructor);\n    }\n\n    /**\n     * Stores a compiled UPLC program in the cache.  Must be implemented by each subclass\n     * as a platform-specific STATIC method.\n     */\n    static async cacheStore(\n        key: string,\n        value: string,\n        raw: HeliosProgramCacheEntry\n    ): Promise<void> {\n        throw new Error(redirecToCorrectConstructor);\n    }\n\n    static async initCacheFromBundle(\n        cacheEntries: Record<string, string | SerializedHeliosCacheEntry>\n    ): Promise<void> {\n        //!!! todo work on this more\n        for (const [key, value] of Object.entries(cacheEntries)) {\n            const found = await this.ifCached(key);\n            if (found) {\n                console.log(\n                    `üê¢${this.id}: duplicate key in compiler cache: ${key}`\n                );\n            }\n            if (\"string\" === typeof value) {\n                this.cacheStore(\n                    key,\n                    value,\n                    this.toHeliosProgramCacheEntry(JSON.parse(value))\n                );\n            } else {\n                const { version } = value;\n                if (version !== \"PlutusV2\" && version !== \"PlutusV3\") {\n                    console.log(\n                        `üê¢${this.id}: unknown version '${version}'' in compiler cache entry: ${key}; skipping`\n                    );\n                    continue;\n                }\n                try {\n                    programFromCacheEntry(value);\n                } catch (e: any) {\n                    console.log(e.message);\n                    console.log(\n                        `^^ üê¢${this.id}: error parsing CBOR program from cache entry: ${key}; skipping`\n                    );\n                    continue;\n                }\n\n                this.cacheStore(\n                    key,\n                    JSON.stringify(value),\n                    this.toHeliosProgramCacheEntry(value)\n                );\n            }\n        }\n    }\n\n    static toHeliosProgramCacheEntry(\n        value: SerializedHeliosCacheEntry\n    ): HeliosProgramCacheEntry {\n        throw new Error(\"todo\");\n    }\n\n    /**\n     * for vscode index view\n     * @internal\n     */\n    private async ______endStatics() {}\n\n    // hashObjectElements(obj: Record<string, string>): Record<string, string> {\n    //     return Object.fromEntries(\n    //         Object.entries(obj).map(([name, content]) => [\n    //             name,\n    //             bytesToHex(blake2b(textToBytes(content))),\n    //         ])\n    //     );\n    // }\n\n    /**\n     * transforms an object of strings, hashing its values\n     */\n    hashObjectEntries(obj: Record<string, string>): Record<string, string> {\n        return Object.fromEntries(\n            Object.entries(obj).map(([name, content]) => [\n                name,\n                bytesToHex(blake2b(textToBytes(content))),\n            ])\n        );\n    }\n\n    /**\n     * transforms an object of strings to a text representation in RFC822 \"headers\" style\n     */\n    objectToText(obj: Record<string, string | number | boolean>): string {\n        return Object.entries(obj)\n            .map(([name, content]) => `${name}: ${content}`)\n            .join(\"\\n\");\n    }\n\n    /**\n     * Builds an index of the source code hashes for the program elements\n     * (main script, other modules)\n     */\n    sourceHashIndex(): Record<string, string> {\n        return this.hashObjectEntries(\n            Object.fromEntries(\n                this.sources.map((s) => {\n                    const name =\n                        \"string\" === typeof s ? extractName(s) : s.name;\n                    const content = \"string\" === typeof s ? s : s.content;\n                    return [name, content];\n                })\n            )\n        );\n    }\n\n    /**\n     * Gathers the program elements needed for caching\n     */\n    gatherProgramElements(): Record<string, string | Object> {\n        return (this.programElements = {\n            ...this.sourceHashIndex(),\n            params: this.entryPoint.paramsDetails(),\n        });\n    }\n\n    computeInputsHash(options: CompileOptionsForCachedHeliosProgram): string {\n        const index = {\n            ...this.programElements,\n        };\n        const { params, ...otherElements } = index;\n        const elementsText = this.objectToText(otherElements as any);\n        const paramsContent = this.objectToText(params as any);\n        // let optimize: OptimizeOptions = options.optimize ?? {};\n        // if (true == optimize) optimize = {};\n        // const optimizeText =\n        // false == optimize ? \"unoptimized\" : this.objectToText(optimize);\n        const optimizeText = this.textOptimizeOptions(options);\n        const optimizeHash = bytesToHex(blake2b(textToBytes(optimizeText)));\n\n        const paramsHashText = this.objectToText(\n            this.hashObjectEntries({ params: paramsContent })\n        );\n        return bytesToHex(\n            blake2b(\n                textToBytes(\n                    elementsText +\n                        \"\\n\" +\n                        paramsHashText +\n                        \"\\n\" +\n                        optimizeHash +\n                        \"\\n\"\n                )\n            )\n        );\n    }\n\n    optimizeOptions(\n        options: CompileOptionsForCachedHeliosProgram\n    ): OptimizeOptions {\n        let optimize: OptimizeOptions =\n            true == options.optimize\n                ? {}\n                : (options.optimize as OptimizeOptions) ?? {};\n\n        return optimize;\n    }\n\n    textOptimizeOptions(options: CompileOptionsForCachedHeliosProgram): string {\n        let optimize = this.optimizeOptions(options);\n        if (false == optimize) return \"unoptimized\";\n        type justOptions = Exclude<OptimizeOptions, false>;\n        let o: justOptions = optimize as any;\n        return this.objectToText(\n            // sort the keys in optimize.\n            Object.fromEntries(\n                Object.entries(o).sort(([a], [b]) => a.localeCompare(b))\n            ) as justOptions\n        );\n    }\n\n    get preferredProgramName(): string {\n        return this.props.name || this.name;\n    }\n\n    getCacheKey(options: CompileOptionsForCachedHeliosProgram): string {\n        if (this.props.cacheKey) {\n            // for using ScriptHash as the caching key\n            return this.props.cacheKey;\n        }\n        const hashString = this.computeInputsHash(options);\n        const opt = false == options.optimize ? \"-unoptimized\" : \"\";\n\n        return `${this.preferredProgramName}${opt}-${hashString}`;\n    }\n\n    /**\n     * Compiles a Helios program to UPLC, with caching for performance\n     *\n     * ### Caching behavior\n     * This method seeks to quickly return a compiled version of the program, using\n     * a platform-specific cache (and lock) mechanism.\n     * #### Happy path\n     *  - if the program is found in the cache, it is immediately returned\n     * #### First compilation and cache-storage\n     *  - Otherwise, a lock is acquired and the program is compiled\n     *  - Once compiled, the cache entry is created for future use, and its lock is lifted\n     *\n     * #### When there is a compile already pending\n     *\n     * Once a Helios program starts compiling once, calling `compileCached()` on any\n     * instance of the same program with the same settings results in the same cache\n     * key.  This may occur in a different browser tab, service worker, node-js thread/worker,\n     * or a different node process.  In each case, the second `compileCached()` call:\n     *\n     *  - Issues a warning that it is waiting for another process to complete the compilation.\n     *  - waits up to 15 seconds (or the configured `timeout`) for a lock (indicating that\n     *    another instance is compiling the program already)\n     * - when the lock  is released, the compiled program is read from the cache, and returned.\n     *  - includes the unoptimized version of the UPLC program for logging\n     *\n     * #### When everything goes wrong\n     * If the process holding a lock doesn't succeed and doesn't release the lock, the\n     * lock goes stale automatically, and the lock fails (after the `timeout` period).  In\n     * this case, each instance of the program:\n     *\n     *   - makes a last attempt to compile the program\n     *   - If it fails, the local process will report the error normally, and no caching is done\n     *   - If it succeeds, the result is returned.\n     *   - it also tries to cache the result (if it can do so without delay)\n     *\n     *  - todo: measure the time cost of the \"has errors\" path.\n     *\n     * See Helios' {@link Program.compile} for more information about compiling Helios programs.\n     *\n     * import from stellar-contracts/CacheableProgramAPI in a node.js environment\n     * to access this method.  In the web environment, that import returns a different\n     * class with the same interface.\n     */\n    async compileWithCache(\n        optimizeOrOptions: boolean | CompileOptionsForCachedHeliosProgram\n    ): Promise<UplcProgramV2> {\n        // Promise<UplcProgramV2 | UplcProgramV3> {\n        const options: CompileOptionsForCachedHeliosProgram =\n            typeof optimizeOrOptions === \"boolean\"\n                ? { optimize: optimizeOrOptions }\n                : optimizeOrOptions;\n        const optimize = this.optimizeOptions(optimizeOrOptions as any);\n\n        const programElements = (this.programElements =\n            this.gatherProgramElements());\n\n        const start = Date.now();\n        const cacheKey = this.getCacheKey(options);\n        // const cachedProgram = CachedHeliosProgram.memoryCache.get(cacheKey);\n\n        const fromCache = await this.getFromCache(cacheKey);\n        if (fromCache) {\n            // const programCount = fromCache.alt ? 2 : 1;\n            console.log(`üê¢${this.id}: ${cacheKey}: from cache`);\n            const end1 = Date.now();\n            this.compileTime = {\n                fetchedCache: end1 - start,\n            }\n            return fromCache;\n        }\n        // not in cache.  Get the lock; if we get it, then we compile.  If not, we wait\n        // for the lock to be released by another instance.\n        const weMustCompile = await this.acquireImmediateLock(cacheKey);\n        const otherInstanceIsCompiling = !weMustCompile;\n        if (otherInstanceIsCompiling) {\n            console.log(\n                `üê¢${this.id}: waiting for pending compile: ${cacheKey}`\n            );\n            try {\n                const cacheEntry = await this.waitForCaching(cacheKey);\n                const program = programFromCacheEntry(cacheEntry);        \n                this.cacheEntry = deserializeHeliosCacheEntry(cacheEntry);\n                debugger\n                return program\n            } catch (e) {\n                console.log(\n                    `üê¢${this.id}: Failed getting cache-awaited program with cacheKey: ${cacheKey}; will compile in-process`\n                );\n                // if this happens, there should be a lock in the locks map... vvvvv\n            }\n        }\n        // we either are delayed from a failed wait-for-cache (with pending lock)\n        // ... or we got an immediate lock\n        let lock = weMustCompile || this.locks.get(cacheKey);\n        if (!lock) {\n            throw new Error(\n                `we should have a lock one way or other at this point`\n            );\n        }\n\n        try {\n            console.log(\n                `üê¢${this.id}: compiling program with cacheKey: ${cacheKey}`\n            );\n            const start = Date.now();\n            // slow!\n            const uplcProgram = this.compile(options);\n            const end1 = Date.now();\n            const cacheEntry: HeliosProgramCacheEntry = {\n                version: \"PlutusV2\",\n                createdBy: this.id,\n                optimizeOptions: optimize,\n                programElements,\n            };\n\n            if (uplcProgram.alt) {\n                cacheEntry.unoptimized = uplcProgram.alt;\n                cacheEntry.unoptimizedIR = uplcProgram.alt.ir;\n                cacheEntry.unoptimizedSmap = makeUplcSourceMap({\n                    term: uplcProgram.alt.root,\n                }).toJsonSafe();\n\n                cacheEntry.optimized = uplcProgram;\n                cacheEntry.optimizedIR = uplcProgram.ir;\n                cacheEntry.optimizedSmap = makeUplcSourceMap({\n                    term: uplcProgram.root,\n                }).toJsonSafe();\n            } else {\n                const sourceMap = makeUplcSourceMap({ term: uplcProgram.root });\n                if (false == options.optimize) {\n                    cacheEntry.unoptimized = uplcProgram;\n                    cacheEntry.unoptimizedIR = uplcProgram.ir;\n                    cacheEntry.unoptimizedSmap = sourceMap.toJsonSafe();\n                } else {\n                    cacheEntry.optimized = uplcProgram;\n                    cacheEntry.optimizedIR = uplcProgram.ir;\n                    cacheEntry.optimizedSmap = sourceMap.toJsonSafe();\n                }\n            }\n            this.cacheEntry = cacheEntry;\n            this.storeInCache(cacheKey, cacheEntry);\n            const end2 = Date.now();\n            this.compileTime = {\n                compiled: end1 - start,\n                stored: end2 - end1,\n            }\n            return uplcProgram;\n        } catch (e: any) {\n            debugger;\n            console.log(\n                `üê¢${this.id}: compiler cache: throwing compile error: ${e.message} (not caching) (dbpa)`\n            );\n            this.releaseLock(cacheKey);\n            throw e;\n        }\n    }\n    compileTime: {\n        compiled?: number,\n        stored?: number,\n        fetchedCache?: number,\n    } | undefined;\n\n    async waitForCaching(\n        cacheKey: string\n    ): Promise<SerializedHeliosCacheEntry> {\n        // we won't get the lock very quickly, but it should come through as\n        // soon as the other process finishes.\n        return this.acquireLock(cacheKey).then(async (lock) => {\n            if (lock) {\n                const cached = await this.ifCached(cacheKey);\n                if (cached) {\n                    lock?.release();\n                    return cached;\n                }\n                // things aren't great if we get here.  But we got the lock, so we can\n                // use it to store the program in the cache.\n                this.locks.set(cacheKey, lock);\n                console.log(\n                    `üê¢${this.id}: waitForCaching: Lock acquired but no cache entry.  Storing lock in map`\n                );\n                throw new Error(\n                    `Lock acquired but no cache entry for ${cacheKey}; compute locally then release this.locks[key].`\n                );\n            }\n            throw new Error(\n                `Lock for ${cacheKey} not acquired; compute locally (and try to populate the cache if possible)`\n            );\n        });\n    }\n\n    async getFromCache(\n        cacheKey: string\n    ): Promise<undefined | UplcProgramV2 /* | UplcProgramV3 */> {\n        const cacheEntry = await this.ifCached(cacheKey);\n        if (cacheEntry) {\n            this.cacheEntry = deserializeHeliosCacheEntry(cacheEntry)\n            // debugger\n            return programFromCacheEntry(cacheEntry);\n        }\n        return undefined;\n    }\n\n    get subclass(): typeof CachedHeliosProgram {\n        return this.constructor as typeof CachedHeliosProgram;\n    }\n\n    static checkPlatform(): \"web\" | \"nodejs\" {\n        // determine if in-browser or using node.js\n        // thanks to https://gist.github.com/rhysburnie/498bfd98f24b7daf5fd5930c7f3c1b7b\n\n        // alt: consider this approach https://stackoverflow.com/a/31090240\n\n        // thuthy\n        var _nodejs: any =\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            process.versions.node;\n        if (_nodejs) {\n            _nodejs = {\n                version: process.versions.node,\n            };\n        }\n\n        // truthy\n        var _browser: any =\n            !_nodejs &&\n            (typeof window !== \"undefined\" || typeof self !== \"undefined\");\n        if (_browser) {\n            // _browser = {\n            //     window: false,\n            //     self: false,\n            //     $: false,\n            // };\n            if (typeof global === \"undefined\") {\n                if (typeof window !== \"undefined\") {\n                    global = window;\n                    _browser.window = true;\n                } else if (typeof self !== \"undefined\") {\n                    global = self;\n                    _browser.self = true;\n                }\n                // } else if (typeof $ !== \"undefined\") {\n                //     global = $;\n                //     _browser.$ = true;\n                // }\n            }\n        }\n\n        if (_nodejs) {\n            console.log(\"Node.js detected\");\n            return \"nodejs\";\n            // module.export = {\n            //     nodejs: _nodejs,\n            //     browser: _browser,\n            // };\n        }\n        console.log(\"Browser env detected\");\n        return \"web\";\n    }\n\n    /**\n     * for vscode index view\n     * @internal\n     */\n    async __vvv_______instanceToStatic() {}\n\n    async ifCached(\n        cacheKey: string\n    ): Promise<SerializedHeliosCacheEntry | null> {\n        const string = await this.subclass.ifCached(cacheKey);\n        if (string) {\n            try {\n                return JSON.parse(string) as SerializedHeliosCacheEntry;\n            } catch (e: any) {\n                console.log(\n                    `  -- üê¢${this.id}: cleaning up invalid cache entry for ${cacheKey}: ${e.message}`\n                );\n                // (cleanup implied by returning null)\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Acquires a lock for the given cache key, waiting according to the\n     * configured `timeout` for another instance to finish compiling.\n     *\n     * Throws an error if the timeout expires\n     */\n    async acquireLock(cacheKey: string) {\n        return this.subclass.acquireLock(cacheKey, this.props).then((lock) => {\n            this.locks.set(cacheKey, lock);\n            return lock;\n        });\n    }\n\n    /**\n     * Acquires a lock for the given cache key if it can do so immediately.\n     * Stores the lock in the instance's lock map.\n     */\n    async acquireImmediateLock(cacheKey: string) {\n        const lock = await this.subclass.acquireImmediateLock(\n            cacheKey,\n            this.props\n        );\n        if (lock) {\n            this.locks.set(cacheKey, lock);\n        }\n        return lock;\n    }\n\n    /**\n     * Stores a compiled UPLC program in the cache.\n     * Requires the lock to exist.\n     * Releases the lock after storing the program.\n     */\n    async storeInCache(\n        cacheKey: string,\n        value: HeliosProgramCacheEntry\n    ): Promise<void> {\n        if (!this.locks.has(cacheKey)) {\n            throw new Error(\n                `storeInCache: the lock for ${cacheKey} is not present`\n            );\n        }\n\n        return this.subclass\n            .cacheStore(\n                cacheKey,\n                stringifyCacheEntry(value),\n                value\n            )\n            .then(() => {\n                this.releaseLock(cacheKey);\n            });\n    }\n\n    /**\n     * Releases the lock for the given cache key.\n     * Removes the lock from the instance's lock map.\n     * Throws an error if the lock is not found.\n     */\n    releaseLock(cacheKey: string) {\n        const lock = this.locks.get(cacheKey);\n        if (lock) {\n            lock.release();\n            this.locks.delete(cacheKey);\n        } else {\n            throw new Error(`releaseLock: no lock found for ${cacheKey}`);\n        }\n    }\n}\n\nexport function stringifyCacheEntry(entry: HeliosProgramCacheEntry): string {\n    return JSON.stringify(\n        serializeCacheEntry(entry),\n        null,\n        2\n    );\n}\n\nexport function serializeCacheEntry(\n    entry: HeliosProgramCacheEntry): SerializedHeliosCacheEntry \n{\n    const { optimized, unoptimized } = entry;\n    return {\n        ...entry,\n        ...(optimized\n            ? { optimized: bytesToHex(optimized.toCbor()) }\n            : {}),\n        ...(unoptimized\n            ? { unoptimized: bytesToHex(unoptimized.toCbor()) }\n            : {}),\n    } as any;\n}\n\nexport function programFromCacheEntry(\n    fromCache: PrecompiledProgramJSON | SerializedHeliosCacheEntry\n): UplcProgramV2 {\n    //  | UplcProgramV3 {\n    // the program is a hex-string, accepted by both UplcProgramV2 and UplcProgramV3\n    const {\n        optimized,\n        optimizedIR,\n        unoptimized,\n        unoptimizedIR,\n        version,\n        optimizedSmap,\n        unoptimizedSmap,\n        // optimizeOptions,\n        // createdBy,\n        programElements\n    } = fromCache;\n    if (version !== \"PlutusV2\") throw new Error(`pv3supportpending`);\n    // TargetClass = version == \"PlutusV2\" ? UplcProgramV2 : UplcProgramV3;\n\n    const o = optimized\n        ? decodeUplcProgramV2FromCbor(optimized, {\n              ir: optimizedIR,\n              sourceMap: optimizedSmap,\n          })\n        : undefined;\n    const u = unoptimized\n        ? decodeUplcProgramV2FromCbor(unoptimized, {\n              ir: unoptimizedIR,\n              sourceMap: unoptimizedSmap,\n          })\n        : undefined;\n    if (o) {\n        if (u) {\n            return o.withAlt(u); // | UplcProgramV3;\n        }\n        return o;\n    }\n    if (!u) {\n        throw new Error(\n            `üê¢ No optimized or unoptimized program in cache entry: ${fromCache}`\n        );\n    }\n    return u;\n}\n\nexport function deserializeHeliosCacheEntry(\n    entry: SerializedHeliosCacheEntry\n): HeliosProgramCacheEntry {\n    const {\n        optimized,\n        optimizedIR,\n        unoptimized,\n        unoptimizedIR,\n        version,\n        optimizedSmap,\n        unoptimizedSmap,\n        optimizeOptions,\n        createdBy,\n        programElements\n    } = entry\n\n    return {\n        optimized: optimized ? decodeUplcProgramV2FromCbor(optimized) : undefined,\n        unoptimized: unoptimized ? decodeUplcProgramV2FromCbor(unoptimized) : undefined,\n        optimizedSmap: optimizedSmap || undefined, \n        //XXX it's already json-safe. deserializeUplcSourceMap(optimizedSmap).toJsonSafe() : undefined,\n        unoptimizedSmap: unoptimizedSmap || undefined,\n        //XXX it's already json-safe. deserializeUplcSourceMap(unoptimizedSmap).toJsonSafe(): undefined,\n        optimizeOptions,\n        version,\n        createdBy,\n        programElements,\n        optimizedIR,\n        unoptimizedIR,\n    };\n}\n","import type { DataType, Program } from \"@helios-lang/compiler\";\nimport type { Source } from \"@helios-lang/compiler-utils\";\nimport {\n    type UplcData,\n    type UplcProgramV2,\n    type UplcSourceMapJsonSafe,\n} from \"@helios-lang/uplc\";\nimport { decodeUplcProgramV2FromCbor } from \"@helios-lang/uplc\";\n// import { decodeUplcProgramV3FromCbor } from \"@helios-lang/uplc\";\n\nimport { HeliosProgramWithCacheAPI } from \"@donecollectively/stellar-contracts/HeliosProgramWithCacheAPI\";\n\nimport type { CapoHeliosBundle } from \"./CapoHeliosBundle.js\";\nimport type {\n    configBaseWithRev,\n    HeliosOptimizeOptions,\n    SetupOrMainnetSignalForBundle,\n    StellarBundleSetupDetails,\n    UplcRecord,\n} from \"../../StellarContract.js\";\nimport type { anyUplcProgram } from \"../../HeliosPromotedTypes.js\";\nimport type {\n    CapoBundleClass,\n    HeliosBundleClassWithCapo,\n    HeliosBundleTypes,\n} from \"../HeliosMetaTypes.js\";\nimport {\n    programFromCacheEntry,\n    serializeCacheEntry,\n    type PrecompiledProgramJSON,\n} from \"../CachedHeliosProgram.js\";\nimport type { DeployedScriptDetails } from \"../../configuration/DeployedScriptConfigs.js\";\nimport { bytesToHex, equalsBytes } from \"@helios-lang/codec-utils\";\nimport { makeCast } from \"@helios-lang/contract-utils\";\nimport { makeMintingPolicyHash } from \"@helios-lang/ledger\";\nimport { environment } from \"../../environment.js\";\n\n/**\n * @internal\n */\nexport const defaultNoDefinedModuleName = \"‚Äπdefault-needs-override‚Ä∫\";\n\n/**\n * @public\n */\nexport const placeholderSetupDetails: StellarBundleSetupDetails<any> = {\n    originatorLabel: \"for abstract bundleClass\",\n    setup: {\n        isMainnet: \"mainnet\" === environment.CARDANO_NETWORK,\n    },\n};\n\nlet T__id = 0;\n\n/**\n * Base class for any Helios script bundle\n * @remarks\n * See also {@link CapoHeliosBundle} and {@link CapoDelegateBundle}\n * and {@link DelegatedDataBundle} for specialized bundle types\n * @public\n */\nexport abstract class HeliosScriptBundle {\n    /**\n     * an indicator of a Helios bundle that is intended to be used as a Capo contract\n     * @remarks\n     * the CapoHeliosBundle class overrides this to true.\n     * @internal\n     */\n    static isCapoBundle = false;\n    abstract requiresGovAuthority: boolean;\n    /**\n     * set to true if the bundle depends on having a deployed capo's configuration details\n     * @public\n     */\n    static needsCapoConfiguration = false;\n\n    /**\n     * an opt-in indicator of abstractness\n     * @remarks\n     * Subclasses that aren't intended for instantiation can set this to true.\n     *\n     * Subclasses that don't set this will not be treated as abstract.\n     * @public\n     */\n    static isAbstract?: boolean | undefined = undefined;\n\n    // static get defaultParams() {\n    //     return {};\n    // }\n    //\n    // static currentRev = 1n;\n\n    /**\n     * Constructs a base class for any Helios script bundle,\n     * given the class for an application-specific CapoHeliosBundle.\n     * @remarks\n     * The resulting class provides its own CapoHeliosBundle instance\n     * for independent use (specifically, for compiling this bundle using\n     * the dependency libraries provided by the Capo bundle).\n     */\n    //\n    //     * NOTE: the following is NOT needed for efficiency, and not implemented\n    //     *, as the Capo\n    //     * bundle referenced above should never need to be compiled via\n    //     * `this.capoBundle.program`.\n    //     *\n    //     * XXX - For application runtime purposes, it can ALSO accept a\n    //     * XXX - CapoHeliosBundle instance as a constructor argument,\n    //     * XXX - enabling lower-overhead instantiation and re-use across\n    //     * XXX - various bundles used within a single Capo,\n    //     */\n    static usingCapoBundleClass<CB extends CapoBundleClass>(\n        c: CB, generic : \"generic\" | false = false\n    ): HeliosBundleClassWithCapo {\n        //@ts-expect-error returning a subclass without concrete implementations\n        // of the abstract members; hopefully the subclass will error if they're missing\n        const cb = new c(placeholderSetupDetails);\n\n        abstract class aCapoBoundBundle extends HeliosScriptBundle {\n            capoBundle = cb;\n            constructor(\n                setupDetails: StellarBundleSetupDetails<any> = placeholderSetupDetails\n            ) {\n                super(setupDetails);\n            }\n\n            isConcrete = !!!generic;\n        }\n\n        return aCapoBoundBundle as HeliosBundleClassWithCapo &\n            typeof aCapoBoundBundle;\n    }\n\n    static create<THIS extends typeof HeliosScriptBundle>(\n        this: THIS,\n        setupDetails: StellarBundleSetupDetails<any> = placeholderSetupDetails\n    ) {\n        //@ts-expect-error creating instance of abstract class\n        const created = new this(setupDetails);\n\n        created.init(setupDetails);\n        return created;\n    }\n    abstract scriptParamsSource: \"config\" | \"bundle\" | \"none\";\n    capoBundle?: CapoHeliosBundle;\n    isConcrete = false;\n    configuredScriptDetails?: DeployedScriptDetails = undefined;\n\n    /**\n     * optional attribute explicitly naming a type for the datum\n     * @remarks\n     * This can be used if needed for a contract whose entry point uses an abstract\n     * type for the datum; the type-bridge & type-gen system will use this data type\n     * instead of inferring the type from the entry point.\n     */\n    datumTypeName?: string;\n\n    /**\n     * optional attribute explicitly naming a type for the redeemer\n     * @remarks\n     * This can be used if needed for a contract whose entry point uses an abstract\n     * type for the redeemer; the type-bridge & type-gen system will use this data type\n     * instead of inferring the type from the entry point.\n     */\n    redeemerTypeName: string = \"\";\n    isMainnet: boolean;\n    _program: HeliosProgramWithCacheAPI | undefined = undefined;\n    previousOnchainScript:\n        | {\n              validatorHash: number[];\n              uplcProgram: anyUplcProgram;\n          }\n        | undefined = undefined;\n    _progIsPrecompiled = false;\n    setup: SetupOrMainnetSignalForBundle;\n    setupDetails!: StellarBundleSetupDetails<any>;\n    ___id: number = T__id++;\n    _didInit = false;\n    _selectedVariant?: string;\n    debug = false;\n    // scriptHash?: number[] | undefined;\n    configuredUplcParams: UplcRecord<any> | undefined = undefined;\n    configuredParams: any | undefined = undefined;\n    precompiledScriptDetails?: {\n        [variant: string]: DeployedScriptDetails<any, \"native\">;\n    };\n    alreadyCompiledScript: anyUplcProgram | undefined;\n\n    constructor(\n        setupDetails: StellarBundleSetupDetails<any> = placeholderSetupDetails\n    ) {\n        // this.devReloadModules()\n        // if (setupDetails) debugger;\n        this.setupDetails = setupDetails;\n        this.configuredParams = setupDetails.params;\n        this.setup = setupDetails.setup;\n        this.isMainnet = this.setup.isMainnet;\n\n        if (this.setup && \"undefined\" === typeof this.isMainnet) {\n            debugger;\n            throw new Error(\n                `${this.constructor.name}: setup.isMainnet must be defined (debugging breakpoint available)`\n            );\n        }\n    }\n\n    get hasAnyVariant() {\n        return true;\n    }\n\n    init(setupDetails: StellarBundleSetupDetails<any>) {\n        const {\n            deployedDetails,\n            params,\n            params: { delegateName, variant = \"singleton\" } = {},\n            setup,\n            scriptParamsSource = this.scriptParamsSource,\n            previousOnchainScript,\n            originatorLabel,\n        } = setupDetails;\n        // const { config,\n        //     // programBundle\n        // } = deployedDetails || {};\n\n        if (this.scriptParamsSource !== scriptParamsSource) {\n            console.warn(\n                `   -- ${this.constructor.name}: ${originatorLabel} overrides scriptParamsSource\\n        was ${this.scriptParamsSource}, now ${scriptParamsSource}`\n            );\n            // debugger\n            this.scriptParamsSource = scriptParamsSource;\n        }\n        if (scriptParamsSource === \"config\") {\n            if (params) {\n                this.configuredParams = params;\n            } else if (!originatorLabel) {\n                debugger;\n                this.scriptParamsSource;\n                throw new Error(\n                    `${this.constructor.name}: scriptParamsSource=config, but no program bundle, no script params`\n                );\n            }\n        } else if (scriptParamsSource == \"bundle\") {\n            // the bundle has its own built-in params\n\n            if (!this.precompiledScriptDetails) {\n                debugger;\n                throw new Error(\n                    `${this.constructor.name}: scriptParamsSource=bundle without precompiled script details (${originatorLabel})`\n                );\n            }\n            const thisVariant = this.precompiledScriptDetails[variant];\n            if (!thisVariant) {\n                const msg = `${this.constructor.name}: no precompiled variant '${variant}' (${originatorLabel})`;\n                console.warn(\n                    `${msg}\\n  -- available variants: ${Object.keys(\n                        this.precompiledScriptDetails\n                    ).join(\", \")}`\n                );\n                console.log(\n                    \"configured variant should be in scriptBundle's 'params'\"\n                );\n                debugger;\n                throw new Error(msg);\n            }\n            this._selectedVariant = variant;\n            // debugger\n            const preConfig = thisVariant.config;\n            preConfig.rev = BigInt(preConfig.rev || 1);\n\n            if (preConfig.capoMph?.bytes) {\n                preConfig.capoMph = makeMintingPolicyHash(\n                    preConfig.capoMph.bytes\n                );\n            }\n            this.configuredParams = preConfig;\n\n            // // temp singleton\n            // const selectedVariant = \"singleton\";\n            // this.configuredParams =\n            //     this.getPreconfiguredVariantParams(selectedVariant);\n        } else if (this.scriptParamsSource != \"none\") {\n            throw new Error(\n                `unknown scriptParamsSource: ${this.scriptParamsSource} (${originatorLabel})`\n            );\n        }\n\n        this._didInit = true;\n    }\n\n    get scriptHash() {\n        const hash =\n            this.previousOnchainScript?.uplcProgram.hash() ||\n            this.configuredScriptDetails?.scriptHash ||\n            this.alreadyCompiledScript?.hash();\n        if (!hash) {\n            console.log(\"scriptHash called before program is loaded.  Call loadProgram() first (expensive!) if this is intentional\")\n            const script = this.compiledScript()\n            return script.hash()\n            // debugger;\n            throw new Error(\n                \"no scriptHash available yet (dbpa) - has the program been loaded and compiled?\"\n            );\n        }\n        return hash;\n    }\n\n    /**\n     * deferred initialization of program details, preventing the need to\n     * load the program prior to it actually being needed\n     */\n    initProgramDetails() {\n        const { setupDetails } = this;\n\n        const {\n            deployedDetails,\n            params,\n            params: { delegateName, variant = \"singleton\" } = {},\n            setup,\n            previousOnchainScript,\n        } = setupDetails;\n        const {\n            config,\n            // programBundle\n        } = deployedDetails || {};\n\n        if (previousOnchainScript) {\n            this.previousOnchainScript = previousOnchainScript;\n            // this.scriptHash = previousOnchainScript.uplcProgram.hash();\n            // \"string\" === typeof deployedDetails?.scriptHash\n            //     ? hexToBytes(deployedDetails.scriptHash)\n            //     : deployedDetails?.scriptHash;\n            return;\n        }\n\n        if (this.scriptParamsSource === \"config\") {\n            if (params) {\n                if (this.precompiledScriptDetails) {\n                    const { configuredParams } = this;\n                    const uplcPreConfig = this.paramsToUplc(configuredParams);\n\n                    // checks the current params against the precompiled params\n                    // throws an error on any mismatches\n\n                    // omits delegateName from the strict checks\n                    //  ... it's provided by the bundle, which the\n                    //  ... off-chain wrapper class may not have access to.\n                    const {\n                        params: { delegateName, ...params },\n                    } = setupDetails;\n                    this.isConcrete = true;\n                    const uplcRuntimeConfig = this.paramsToUplc(params);\n                    let didFindProblem: string = \"\";\n                    for (const k of Object.keys(uplcPreConfig)) {\n                        const runtime = uplcRuntimeConfig[k];\n                        // skips past any runtime setting that was not explicitly set\n                        if (!runtime) continue;\n                        const pre = uplcPreConfig[k];\n                        if (!runtime.isEqual(pre)) {\n                            if (!didFindProblem) {\n                                console.warn(\n                                    `${this.constructor.name}: config mismatch between pre-config and runtime-config`\n                                );\n                                didFindProblem = k;\n                            }\n                            console.warn(\n                                `‚Ä¢ ${k}:  pre-config: `,\n                                configuredParams[k] || (pre.rawData ?? pre),\n                                ` at runtime:`,\n                                params[k] || (runtime.rawData ?? runtime)\n                            );\n                        }\n                    }\n                    if (didFindProblem) {\n                        throw new Error(\n                            `runtime-config conflicted with pre-config (see logged details) at key ${didFindProblem}`\n                        );\n                    }\n                }\n                // moved to init\n                // this.configuredParams = setupDetails.params;\n                this.configuredUplcParams = this.paramsToUplc(\n                    setupDetails.params\n                );\n            }\n        } else if (this.scriptParamsSource == \"bundle\") {\n            // the bundle has its own built-in params\n\n            // temp singleton\n            const selectedVariant = \"singleton\";\n            this.configuredParams =\n                this.getPreconfiguredVariantParams(selectedVariant);\n            if (this.configuredParams) {\n                this.configuredUplcParams =\n                    this.getPreconfiguredUplcParams(selectedVariant);\n            }\n        } else if (this.scriptParamsSource != \"none\") {\n            throw new Error(\n                `unknown scriptParamsSource: ${this.scriptParamsSource}`\n            );\n        }\n    }\n\n    // XXinitProgramDetails() {\n    //     const {setupDetails} = this;\n    //     // if (!setupDetails?.params) {\n    //     //     debugger\n    //     //     console.warn(`setupDetails/params not set (dbpa)`);\n    //     // }\n    //     const {\n    //         deployedDetails,\n    //         params,\n    //         params: { delegateName, variant = \"singleton\" } = {},\n    //         setup,\n    //         previousOnchainScript\n    //     } = setupDetails;\n    //     const { config,\n    //         // programBundle\n    //     } = deployedDetails || {};\n\n    //     if (previousOnchainScript) {\n    //         this.previousOnchainScript = previousOnchainScript;\n    //         this.scriptHash = previousOnchainScript.uplcProgram.hash();\n    //             // \"string\" === typeof deployedDetails?.scriptHash\n    //             //     ? hexToBytes(deployedDetails.scriptHash)\n    //             //     : deployedDetails?.scriptHash;\n    //         return;\n    //     }\n\n    //     if (this.scriptParamsSource === \"config\") {\n    //         debugger;\n    //         // WHERE TO GET THE PROGRAM BUNDLE IN THIS CASE??\n    //         //   IS IT MAYBE ALREADY COMPILED?\n    //         if (false) { //programBundle) {\n    //         //     if (!scriptHash)\n    //         //         throw new Error(\n    //         //     `${this.constructor.name}: missing deployedDetails.scriptHash`\n    //         // );\n\n    //             // debugger; // do we need to cross-check config <=> params ?\n    //             this.configuredParams = config;\n    //             this.configuredUplcParams = this.paramsToUplc(config);\n    //             // change to preCompiledRawProgram,\n    //             // and use async getPreCompiledProgram(variant)\n    //             //    to get either this raw program or async-imported program data\n    //             this.precompiledScriptDetails = {\n    //                 singleton: {\n    //                     // programBundle,\n    //                 config\n    //             },\n    //             };\n    //             // this.precompiledBundle = programBundle;\n    //         } else if (params) {\n    //             if (this.precompiledScriptDetails) {\n    //                 // change to async getPreCompiledProgram(variant)\n    //                 const thisVariant = this.precompiledScriptDetails[variant];\n    //                 if (!thisVariant) {\n    //                     const msg = `${this.constructor.name}: no precompiled variant '${variant}'`;\n    //                     console.warn(\n    //                         `${msg}\\n  -- available variants: ${Object.keys(\n    //                             this.precompiledScriptDetails\n    //                         ).join(\", \")}`\n    //                     );\n    //                     console.log(\n    //                         \"configured variant should be in scriptBundle's 'params'\"\n    //                     );\n    //                     throw new Error(msg);\n    //                 }\n    //                 this._selectedVariant = variant;\n    //                 debugger\n    //                 const preConfig = thisVariant.config;\n    //                 preConfig.rev = BigInt(preConfig.rev);\n\n    //                 if (preConfig.capoMph?.bytes) {\n    //                     preConfig.capoMph = makeMintingPolicyHash(\n    //                         preConfig.capoMph.bytes\n    //                     );\n    //                 }\n    //                 const uplcPreConfig = this.paramsToUplc(preConfig);\n    //                 // omits delegateName from the strict checks\n    //                 //  ... it's provided by the bundle, which the\n    //                 //  ... off-chain wrapper class may not have access to.\n    //                 const {\n    //                     params: { delegateName, ...params },\n    //                 } = setupDetails;\n    //                 this.isConcrete = true;\n    //                 const uplcRuntimeConfig = this.paramsToUplc(params);\n    //                 let didFindProblem: string = \"\";\n    //                 for (const k of Object.keys(uplcPreConfig)) {\n    //                     const runtime = uplcRuntimeConfig[k];\n    //                     // skips past any runtime setting that was not explicitly set\n    //                     if (!runtime) continue;\n    //                     const pre = uplcPreConfig[k];\n    //                     if (!runtime.isEqual(pre)) {\n    //                         if (!didFindProblem) {\n    //                             console.warn(\n    //                                 `${this.constructor.name}: config mismatch between pre-config and runtime-config`\n    //                             );\n    //                             didFindProblem = k;\n    //                         }\n    //                         console.warn(\n    //                             `‚Ä¢ ${k}:  pre-config: `,\n    //                             preConfig[k] || (pre.rawData ?? pre),\n    //                             ` at runtime:`,\n    //                             params[k] || (runtime.rawData ?? runtime)\n    //                         );\n    //                     }\n    //                 }\n    //                 if (didFindProblem) {\n    //                     throw new Error(\n    //                         `runtime-config conflicted with pre-config (see logged details) at key ${didFindProblem}`\n    //                     );\n    //                 }\n    //             }\n    //             // moved to init\n    //             // this.configuredParams = setupDetails.params;\n    //             this.configuredUplcParams = this.paramsToUplc(\n    //                 setupDetails.params\n    //             );\n    //         } else if (!setup.isPlaceholder) {\n    //             debugger\n    //             throw new Error(\n    //                 `${this.constructor.name}: scriptParamsSource=config, but no program bundle, no script params`\n    //             );\n    //         }\n    //     } else if (this.scriptParamsSource == \"mixed\") {\n    //         debugger;\n    //         const {params} = setupDetails\n\n    //         if (this.configuredParams) {\n    //             debugger;\n    //             throw new Error(\n    //                 `unreachable: configuredParameters used without deployedDetails? (dbpa)`\n    //             );\n    //         }\n    //     } else if (this.scriptParamsSource == \"bundle\") {\n    //         // the bundle has its own built-in params\n\n    //         // temp singleton\n    //         const selectedVariant = \"singleton\";\n    //         this.configuredParams =\n    //             this.getPreconfiguredVariantParams(selectedVariant);\n    //         if (this.configuredParams) {\n    //             this.configuredUplcParams =\n    //                 this.getPreconfiguredUplcParams(selectedVariant);\n    //         }\n    //     } else {\n    //         throw new Error(`unknown scriptParamsSource: ${this.scriptParamsSource}`);\n    //     }\n    // }\n\n    get isPrecompiled() {\n        // return !!this.preCompiledScriptDetails\n        if (this.scriptParamsSource == \"bundle\") {\n            return true;\n        }\n        if (!!this.configuredScriptDetails) {\n            debugger;\n            // ^^  inspect this situation to verify   vvvv\n            console.warn(\n                `scriptParamsSource is not 'bundle'; isPrecompiled() returns false at ${this.setupDetails.originatorLabel}`\n            );\n            return false;\n        }\n        return false;\n        // return !! this.configuredScriptDetails\n    }\n\n    // !!! deprecate or change to async? (-> loadPrecompiledVariant() -> programFromCacheEntry())\n    getPreCompiledBundle(variant: string) {\n        throw new Error(\"deprecated\");\n\n        // const foundVariant = this.preCompiledScriptDetails?.[variant];\n        // if (!foundVariant) {\n        //     throw new Error(\n        //         `${this.constructor.name}: variant ${variant} not found in preCompiledScriptDetails`\n        //     );\n        // }\n\n        // return foundVariant.programBundle;\n    }\n\n    getPreconfiguredVariantParams(variantName: string) {\n        const p = this.variants?.[variantName] || this.params;\n        return p;\n    }\n\n    getPreconfiguredUplcParams(\n        variantName: string\n    ): UplcRecord<any> | undefined {\n        // debugger\n        const p = this.getPreconfiguredVariantParams(variantName);\n        if (!p) return undefined;\n        return this.paramsToUplc(p);\n    }\n\n    // these should be unnecessary if we arrange the rollup plugin\n    // ... to watch the underlying helios files for changes that would affect the bundle\n    // checkDevReload() {\n    //     const env = process.env.NODE_ENV;\n    //     if (env !== \"test\" && env !== \"development\") {\n    //         console.log(\"disabling module reloading in non-dev environment\");\n    //         return\n    //     }\n    //     this.reloadModule(this.main);\n    //     for (const module of this.modules) {\n    //         this.reloadModule(module)\n    //     }\n    // }\n    // reloadModule(module: HeliosModuleSrc) {\n    //     // treat module.name as a filename.\n    //     // check if it can be opened as a file.\n    //     // reassign module.content to the file's contents.\n\n    //     if (existsSync(module.name)) {\n    //         console.log(`bundle module load: ${module.name}`);\n    //         const newContent = readFileSync(module.name, \"utf8\");\n    //         if (module.content !== newContent) {\n    //             console.log(`‚ôªÔ∏è module reload: ${module.name}`);\n    //             module.content = newContent;\n    //         }\n    //     }\n    // }\n\n    get params() {\n        return undefined as any;\n    }\n    /**\n     * The known variants of this contract script, with any contract\n     * parameters applicable to each variant.  By default, there is a\n     * singleton variant that uses the result of `get params()`.\n     */\n    get variants(): { [variantName: string]: any } {\n        return { singleton: this.params };\n    }\n\n    get main(): Source {\n        throw new Error(\n            `${this.constructor.name}: get main() must be implemented in subclass`\n        );\n    }\n\n    /**\n     * A list of modules always available for import to Capo-hosted policy scripts\n     * @public\n     */\n    implicitIncludedCapoModules(): string[] {\n        return [\n            \"CapoMintHelpers\",\n            \"CapoDelegateHelpers\",\n            \"StellarHeliosHelpers\",\n            \"CapoHelpers\",\n        ];\n    }\n\n    /**\n     * specifies a list module names to be included in the compilation of this script\n     * @remarks\n     * Only used in bundles created with `HeliosScriptBundle.usingCapoBundleClass()` or\n     * `CapoDelegateBundle.usingCapoBundleClass()`.\n     *\n     * Each of these module-names MUST be provided by the CapoHeliosBundle used for\n     * this script bundle (in its `get modules()`).  CapoMintHelpers, CapoDelegateHelpers,\n     * StellarHeliosHelpers and CapoHelpers are always available for import to the\n     * policy script, and the module names you list here will be added to that list.\n     *\n     * These module names will then be available for `import { ... }` statements in your helios script.\n     *\n     * ### Beware of Shifting Sands\n     *\n     * If you include any modules provided by other scripts in your project, you should\n     * be aware that any material changes to those scripts will change your delegate's validator,\n     * resulting in a need to deploy new script contracts.  This is why it's important to only include\n     * modules that are relatively stable, or whose changes SHOULD trigger a new deployment\n     * for this script.\n     *\n     * When you can use isolation techniques including abstract data definitions and/or granular\n     * code-modularization, you can reduce the incidence of such changes while ensuring that needed\n     * upgrades are easy to manage.\n     * @public\n     */\n    includeFromCapoModules(): string[] {\n        return [];\n    }\n\n    /**\n     * Computes a list of modules to be provided to the Helios compiler\n     * @remarks\n     * includes any explicit `modules` from your script bundle, along with any\n     * modules, provided by your Capo and listed by name in your\n     * `includeFromCapoModules()` method.\n     * @public\n     */\n    getEffectiveModuleList() {\n        if (!this.capoBundle) {\n            return [...this.modules];\n        }\n\n        return [...this.resolveCapoIncludedModules(), ...this.modules];\n    }\n\n    resolveCapoIncludedModules() {\n        const includeList = [\n            ...this.implicitIncludedCapoModules(),\n            ...this.includeFromCapoModules(),\n        ];\n\n        const unsatisfiedIncludes = new Set(includeList);\n        const capoModules = this.capoBundle!.modules;\n        if (!capoModules) {\n            throw new Error(\n                `${\n                    this.capoBundle!.constructor.name\n                }: no modules() list defined`\n            );\n        }\n        const capoIncludedModules = capoModules.filter((x) => {\n            const mName = x.moduleName!;\n            const found = includeList.includes(mName);\n            unsatisfiedIncludes.delete(mName);\n            return found;\n        });\n\n        if (unsatisfiedIncludes.size) {\n            throw new Error(\n                `${\n                    this.displayName\n                }: includeFromCapoModules() includes modules not provided by the Capo:\\n ${Array.from(\n                    unsatisfiedIncludes\n                )\n                    .map((m) => `   ‚Ä¢ ${m}\\n`)\n                    .join(\"\\n\")}`\n            );\n        }\n\n        return capoIncludedModules;\n    }\n\n    logModuleDetails() {\n        const capoIncludedModules = this.resolveCapoIncludedModules();\n\n        function moduleDetails(m: Source) {\n            const pInfo = m.project ? ` [in ${m.project}]/` : \"\";\n            return `    ‚Ä¢ ${m.moduleName}${pInfo}${m.name} (${m.content.length} chars)`;\n        }\n\n        console.log(\n            `\\nModules in ${this.displayName}:\\n` +\n                ` ‚Ä¢ includeFromCapoModules(): ${this.includeFromCapoModules().join(\n                    \", \"\n                )}\\n` +\n                ` ‚Ä¢ implicit Capo modules:    ${this.implicitIncludedCapoModules().join(\n                    \", \"\n                )}\\n` +\n                ` ‚Ä¢ modules from Capo: \\n${capoIncludedModules\n                    .map(moduleDetails)\n                    .join(\"\\n\")}\\n` +\n                ` ‚Ä¢ get modules() (${this.modules.length}): \\n${this.modules\n                    .map(moduleDetails)\n                    .join(\"\\n\")}`\n        );\n    }\n\n    /**\n     * lists any helios modules owned by & needed for this script bundle.\n     * @remarks\n     * Modules listed here should (imported from their .hl files as helios Source objects.\n     *\n     * Any modules shared ***from other script bundles in your project*** should instead be\n     * added to your Capo's `modules`, and named in your `includeFromCapoModules()` method.\n     *\n     * Any of these modules needed by ***other script bundles*** in your project may also be\n     * listed in your Capo's `modules`.\n     */\n    get modules(): Source[] {\n        return [];\n    }\n\n    get displayName() {\n        return this.moduleName || this.program.name;\n    }\n    get bridgeClassName() {\n        const mName = this.displayName;\n        return `${mName}DataBridge`;\n    }\n\n    /**\n     * indicates whether the script should be optimized.\n     * @remarks\n     * Defaults to the general optimize setting provided by the factoryArgs.\n     * Override to force optimization on or off.\n     */\n    get optimize(): HeliosOptimizeOptions | boolean | undefined {\n        return this.setup!.optimize ?? true;\n    }\n\n    get moduleName() {\n        return this.constructor.name\n            .replace(/Bundle/, \"\")\n            .replace(/Helios/, \"\");\n        defaultNoDefinedModuleName; // overridden in subclasses where relevant\n    }\n\n    /**\n     * Sets the currently-selected variant for this bundle, asserting its presence\n     * in the `variants()` list.\n     */\n    withVariant(vn: string) {\n        if (!this.variants) {\n            throw new Error(\n                `variants not defined for ${this.constructor.name}`\n            );\n        }\n        const foundVariant =\n            this.variants[vn] ?? this.precompiledScriptDetails?.[vn];\n        if (!foundVariant) {\n            throw new Error(\n                `${this.constructor.name}: variant ${vn} not found in variants()`\n            );\n        }\n        if (this._selectedVariant) {\n            throw new Error(\n                `we aren't sharing variants on a single bundle instance, right?`\n            );\n        }\n\n        this._selectedVariant = vn;\n        return this;\n    }\n\n    previousCompiledScript() {\n        const { uplcProgram, validatorHash } = this.previousOnchainScript || {};\n        if (!uplcProgram) return undefined;\n        if (!validatorHash) return undefined;\n\n        const actualHash = uplcProgram.hash();\n        if (!equalsBytes(validatorHash, actualHash)) {\n            throw new Error(\n                `script hash mismatch: ${bytesToHex(\n                    validatorHash\n                )} != ${bytesToHex(actualHash)}`\n            );\n        }\n\n        return uplcProgram;\n    }\n    async loadPrecompiledVariant(\n        variant: string\n    ): Promise<PrecompiledProgramJSON> {\n        debugger\n        throw new Error(\n            `${this.constructor.name}: Dysfunctional bundler bypass (loadPrecompiledVariant() not found) (dbpa)`\n        );\n    }\n\n    /**\n     * resolves the compiled script for this class with its provided\n     * configuration details\n     * @remarks\n     * The configuration details & pre-compiled script may be injected by\n     * the HeliosRollupBundler or by compiling the script with provided\n     * params (in tests or during a first deployment of a Capo)\n     *\n     * When the asyncOk flag is not present, returns or fails synchronously.\n     * With the asyncOk flag, returns synchronously if the script is already\n     * compiled, or returns a Promise that resolves to the compiled script.\n     */\n    compiledScript(): anyUplcProgram;\n    compiledScript(asyncOk: true): anyUplcProgram | Promise<anyUplcProgram>;\n    compiledScript(asyncOk?: true): anyUplcProgram | Promise<anyUplcProgram> {\n        const {\n            setup,\n            previousOnchainScript,\n            _program: loadedProgram,\n        } = this;\n\n        if (this.alreadyCompiledScript) {\n            return this.alreadyCompiledScript;\n        }\n\n        let program = loadedProgram!;\n        if (!asyncOk) {\n            throw new Error(\n                `compiledScript() must be called with asyncOk=true when the script is not already loaded`\n            );\n        }\n\n        if (this.isPrecompiled) {\n            // debugger;\n            const { singleton } = this.precompiledScriptDetails!;\n            if (singleton && !this._selectedVariant) {\n                this.withVariant(\"singleton\");\n            }\n            const detailsForVariant =\n                this.precompiledScriptDetails?.[this._selectedVariant!];\n            return this.loadPrecompiledVariant(this._selectedVariant!).then(\n                (programForVariant: PrecompiledProgramJSON) => {\n                    if (!detailsForVariant || !programForVariant) {\n                        throw new Error(\n                            `${this.constructor.name}: variant ${this._selectedVariant} not found in preCompiled`\n                        );\n                    }\n                    const bundleForVariant = {\n                        ...detailsForVariant,\n                        programBundle: programForVariant,\n                    };\n                    const p = (this.alreadyCompiledScript =\n                        programFromCacheEntry(bundleForVariant.programBundle));\n                    return p;\n                }\n            );\n        }\n\n        if (!this.configuredParams || !setup) {\n            debugger; // eslint-disable-line no-debugger - keep for downstream troubleshooting\n            // theoretically only here for type-narrowing\n            throw new Error(\n                `${this.constructor.name}: missing required params or setup for compiledScript() (debugging breakpoint available)`\n            );\n        }\n        program = this.loadProgram();\n        const params = this.configuredUplcParams;\n\n        // debugger\n        const maybeOptimizing = this.optimize ? \"and optimizing \" : \"\";\n        console.warn(\n            `${this.constructor.name}: compiling ${maybeOptimizing}helios script.  This could take 30s or more... `\n        );\n\n        // falls back to actually compiling the program.\n        // on server side, this comes with caching for performance.\n        // on the browser, there's not (currently) a cache.  It's intended\n        // that the preCompiledScriptDetails will usually be available, so\n        // the cases where this is needed on the browser\n        // side should be rare (from .hlb's params() or variants())\n        // or only used in special cases of capo deployment (with its configuredScriptDetails)\n        const t = new Date().getTime();\n        const rawValues: Record<string, any> = {};\n        if (params) {\n            for (const [p, v] of Object.entries(params)) {\n                program.changeParam(p, v);\n                rawValues[p] = v.rawData;\n            }\n        }\n\n        const net = this.isMainnet ? \"mainnet\" : \"testnet\";\n        console.log(\n            `(${net}) ${this.moduleName} with params:\\n`,\n            Object.fromEntries(\n                Object.entries(program.entryPoint.paramsDetails()).map(\n                    ([k, uplcVal]) => {\n                        return [k, [uplcVal, rawValues[k]?.toString()].flat()];\n                    }\n                )\n            )\n        );\n\n        return program\n            .compileWithCache({\n                optimize: this.optimize,\n            })\n            .then((uplcProgram) => {\n                //     // optimize: {\n                //     //     keepTracing: true,\n                //     //     factorizeCommon: false,\n                //     //     inlineSimpleExprs: false,\n                //     //     flattenNestedFuncExprs: false,\n                //     //     removeUnusedArgs: false,\n                //     //     replaceUncalledArgsWithUnit: false,\n                //     //     inlineErrorFreeSingleUserCallExprs: false,\n                //     //     inlineSingleUseFuncExprs: false,\n                //     // },\n                //     withAlt: true,\n                // });\n                this.alreadyCompiledScript = uplcProgram;\n                const scriptHash = bytesToHex(uplcProgram.hash());\n                console.log(\n                    program.compileTime ||\n                        `compiled: ${new Date().getTime() - t}ms`,\n                    `-> ${scriptHash}`\n                );\n                // if (globalThis.document) {\n                //     console.log({\n                //         uplcProgram,\n                //         cbor: bytesToHex(uplcProgram.toCbor()),\n                //     });\n                // }\n                return uplcProgram;\n            });\n    }\n\n    // !!! deprecate or change to async? (-> loadPrecompiledVariant() -> programFromCacheEntry())\n    get preBundledScript() {\n        throw new Error(\"deprecated\");\n        // if (!this.isPrecompiled) return undefined;\n        // const { singleton } = this.preCompiledScriptDetails!;\n        // if (singleton && !this._selectedVariant) {\n        //     this.withVariant(\"singleton\");\n        // }\n        // const bundleForVariant = this.preCompiledScriptDetails?.[this._selectedVariant!];\n        // if (!bundleForVariant) {\n        //     throw new Error(\n        //         `${this.constructor.name}: variant ${this._selectedVariant} not found in preCompiled`\n        //     );\n        // }\n        // return programFromCacheEntry(bundleForVariant.programBundle);\n    }\n\n    async getSerializedProgramBundle() {\n        const compiledScript = await this.compiledScript(true);\n        const cacheEntry = this.program.cacheEntry;\n        if (!cacheEntry) throw new Error(`missing cacheEntry`);\n        const serializedCacheEntry = serializeCacheEntry(cacheEntry);\n        const {\n            programElements,\n            version,\n            optimizeOptions,\n            optimized,\n            unoptimized,\n            optimizedIR,\n            unoptimizedIR,\n            optimizedSmap,\n            unoptimizedSmap,\n        } = serializedCacheEntry;\n        return {\n            scriptHash: bytesToHex(compiledScript.hash()),\n            programBundle: {\n                programElements,\n                version,\n                optimized,\n                unoptimized,\n                optimizedIR,\n                unoptimizedIR,\n                optimizedSmap,\n                unoptimizedSmap,\n            },\n        };\n    }\n\n    decodeAnyPlutusUplcProgram(\n        version: \"PlutusV2\" | \"PlutusV3\",\n        cborHex: string,\n        ir?: string,\n        sourceMap?: UplcSourceMapJsonSafe,\n        alt?: anyUplcProgram\n    ) {\n        if (version === \"PlutusV2\") {\n            if (alt && alt.plutusVersion != \"PlutusScriptV2\") {\n                throw new Error(\n                    `expected alt script to have matching Plutus V2, not ${alt.plutusVersion}`\n                );\n            }\n            return decodeUplcProgramV2FromCbor(cborHex, {\n                ir: ir,\n                sourceMap: sourceMap,\n                alt: alt as UplcProgramV2,\n            });\n        } else if (version === \"PlutusV3\") {\n            throw new Error(`Plutus V3 not yet supported`);\n            // if (alt && alt.plutusVersion != \"PlutusScriptV3\") {\n            //     throw new Error(`expected alt script to have matching Plutus V3, not ${alt.plutusVersion}`);\n            // }\n            // return decodeUplcProgramV3FromCbor(cborHex, {\n            //     ir: ir,\n            //     sourceMap: sourceMap,\n            //     alt: alt as UplcProgramV3\n            // });\n        } else {\n            throw new Error(`unexpected Plutus version ${version}`);\n        }\n    }\n\n    /**\n     * provides a temporary indicator of mainnet-ness, while not\n     * requiring the question to be permanently resolved.\n     */\n    isDefinitelyMainnet() {\n        return this.isMainnet ?? false;\n    }\n\n    get program(): HeliosProgramWithCacheAPI {\n        if (!this._program) {\n            debugger;\n            throw new Error(\n                \"call loadProgram() (a one-time expense) before accessing this.program (dbpa)\"\n            );\n        }\n        return this._program!;\n    }\n\n    loadProgram() {\n        if (this._program) {\n            // bust through pre-cached version if the\n            // fundamental settings are changed\n            if (\n                this.isPrecompiled != this._progIsPrecompiled ||\n                this.setup?.isMainnet !== this.isMainnet\n            ) {\n                throw new Error(\"unused code path? program cache busting\");\n                console.warn(\"busting program cache\");\n                this._program = undefined;\n            } else {\n                return this._program;\n            }\n        }\n        const isMainnet = this.setup?.isMainnet ?? false;\n        const isTestnet = !isMainnet;\n\n        const ts1 = Date.now();\n        let mName = this.moduleName;\n        if (mName === defaultNoDefinedModuleName) {\n            mName = \"\";\n        }\n        const moduleSources = this.getEffectiveModuleList();\n\n        if (!isTestnet) {\n            debugger;\n        }\n        try {\n            console.warn(`${this.constructor.name}: loading program`);\n            // console.log(`HERE ${this.___id}: ${new Error(\"(where?)\").stack}`)\n            const p = new HeliosProgramWithCacheAPI(this.main, {\n                isTestnet,\n                moduleSources,\n                name: mName, // it will fall back to the program name if this is empty\n            });\n            this._program = p;\n            this.initProgramDetails();\n            this._progIsPrecompiled = this.isPrecompiled;\n\n            // Hi!  Are you investigating a duplicate load of the same module?\n            //  üî•üî•üî•  thanks! you're saving people 100ms at a time!\n            console.log(\n                `üì¶ ${mName}: loaded & parsed ${\n                    this.isPrecompiled\n                        ? \"w/ pre-compiled program\"\n                        : \"for type-gen\"\n                }: ${Date.now() - ts1}ms`\n                // new Error(`stack`).stack\n            );\n            return p;\n        } catch (e: any) {\n            // !!! probably this stuff needs to move to compileWithScriptParams()\n            if (e.message.match(/invalid parameter name/)) {\n                debugger;\n                throw new Error(\n                    e.message +\n                        `\\n   ... this typically occurs when your StellarContract class (${this.constructor.name})` +\n                        \"\\n   ... can be missing a getContractScriptParams() method \" +\n                        \"\\n   ... to map from the configured settings to contract parameters\"\n                );\n            }\n            const [unsetConst, constName] =\n                e.message.match(/used unset const '(.*?)'/) || [];\n            if (unsetConst) {\n                console.log(e.message);\n                throw new Error(\n                    `${this.constructor.name}: missing required script param '${constName}' in static getDefaultParams() or getContractScriptParams()`\n                );\n            }\n            if (!e.site) {\n                console.error(\n                    `unexpected error while compiling helios program (or its imported module): ${\n                        mName || this.main.name\n                    }\\n` +\n                        `> ${e.message}\\n` +\n                        `(debugging breakpoint available)\\n` +\n                        `This likely indicates a problem in Helios' error reporting - \\n` +\n                        `   ... please provide a minimal reproducer as an issue report for repair!\\n\\n` +\n                        e.stack.split(\"\\n\").slice(1).join(\"\\n\")\n                );\n                try {\n                    debugger;\n                    // debugger'ing?  YOU ARE AWESOME!\n                    //  reminder: ensure \"pause on caught exceptions\" is enabled\n                    //  before playing this next line to dig deeper into the error.\n\n                    const try2 = new HeliosProgramWithCacheAPI(this.main, {\n                        isTestnet,\n                        moduleSources,\n                        name: mName, // it will fall back to the program name if this is empty\n                    });\n\n                    // const script2 = new Program(codeModule, {\n                    //     moduleSources: modules,\n                    //     isTestnet: this.setup.isTest,\n                    // });\n                    // console.log({ params });\n                    // if (params) {\n                    //     for (const [p, v] of Object.entries(params || {})) {\n                    //         script2.changeParam(p, v);\n                    //     }\n                    //     script2.compile();\n                    // }\n                    console.warn(\"NOTE: no error thrown on second attempt\");\n                } catch (sameError) {\n                    // entirely expected it would throw the same error\n                    // throw sameError;\n                }\n                // throw e;\n            }\n            debugger;\n            const [_, notFoundModule] =\n                e.message.match(/module '(.*)' not found/) || [];\n            if (notFoundModule) {\n                this.logModuleDetails();\n                console.log(\n                    `${this.constructor.name} module '${notFoundModule}' not found; see module details above`\n                );\n            }\n            if (!e.site) {\n                console.warn(\n                    \"error thrown from helios doesn't have source site info; rethrowing it\"\n                );\n                throw e;\n            }\n            const moduleName2 = e.site.file; // moduleName? & filename ? :pray:\n            const errorModule = [this.main, ...moduleSources].find(\n                (m) => m.name == moduleName2\n            );\n\n            // const errorModule = [codeModule, ...modules].find(\n            //     (m) => (m as any).name == moduleName\n            // );\n\n            const {\n                project,\n                moduleName,\n                name: srcFilename = \"‚Äπunknown path to module‚Ä∫\",\n                moreInfo,\n            } = errorModule || {};\n            let errorInfo: string = \"\";\n\n            if (!HeliosProgramWithCacheAPI.checkFile(srcFilename)) {\n                const indent = \" \".repeat(6);\n                errorInfo = project\n                    ? `\\n${indent}Error found in project ${project}:${srcFilename}\\n` +\n                      `${indent}- in module ${moduleName}:\\n${moreInfo}\\n` +\n                      `${indent}  ... this can be caused by not providing correct types in a module specialization,\\n` +\n                      `${indent}  ... or if your module definition doesn't include a correct path to your helios file\\n`\n                    : `\\n${indent}WARNING: the error was found in a Helios file that couldn't be resolved in your project\\n` +\n                      `${indent}  ... this can be caused if your module definition doesn't include a correct path to your helios file\\n` +\n                      `${indent}  ... (possibly in mkHeliosModule(heliosCode, \\n${indent}    \"${srcFilename}\"\\n${indent})\\n`;\n            }\n\n            const { startLine, startColumn } = e.site;\n            const t = new Error(errorInfo);\n            const modifiedStack = t.stack!.split(\"\\n\").slice(1).join(\"\\n\");\n            debugger;\n            const additionalErrors = (e.otherErrors || []).slice(1).map(\n                (oe) =>\n                    `       |         ‚ö†Ô∏è  also: ${\n                        // (oe.message as string).replace(e.site.file, \"\")}`);\n                        oe.site.file == e.site.file\n                            ? oe.site\n                                  .toString()\n                                  .replace(e.site.file + \":\", \"at \") +\n                              \": \" +\n                              oe.originalMessage\n                            : oe.site.toString() + \" - \" + oe.originalMessage\n                    }`\n            );\n            const addlErrorText = additionalErrors.length\n                ? [\"\", ...additionalErrors, \"       v\"].join(\"\\n\")\n                : \"\";\n            t.message = `${e.kind}: ${\n                this.constructor.name\n            }\\n${e.site.toString()} - ${\n                e.originalMessage\n            }${addlErrorText}\\n${errorInfo}`;\n\n            t.stack =\n                `${this.constructor.name}: ${\n                    e.message\n                }\\n    at ${moduleName2} (${srcFilename}:${1 + startLine}:${\n                    1 + startColumn\n                })\\n` + modifiedStack;\n\n            throw t;\n        }\n    }\n\n    isHeliosScriptBundle() {\n        return true;\n    }\n\n    addTypeProxies() {\n        // const typeGenerator = new BundleTypeGenerator(this);\n        // const { activityTypeDetails, datumTypeDetails } = typeGenerator;\n        // this.Activity = new ActivityMaker(this);\n        // if (datumTypeDetails) {\n        //     this.readDatum = new DataReader(datumTypeDetails);\n        // }\n    }\n\n    effectiveDatumTypeName() {\n        return (\n            this.datumTypeName ||\n            this.locateDatumType()?.name ||\n            \"‚Äπunknown datum-type name‚Ä∫\"\n        );\n    }\n\n    /**\n     * @internal\n     */\n    locateDatumType(): DataType | undefined {\n        let datumType: DataType | undefined;\n        // let datumTypeName: string | undefined;\n\n        const program = this.loadProgram();\n        const programName = program.name;\n        const argTypes = program.entryPoint.mainArgTypes;\n        const argCount = argTypes.length;\n        if (argCount === 2) {\n            datumType = argTypes[0];\n            // datumTypeName = argTypes[0].name;\n        }\n\n        if (this.datumTypeName) {\n            datumType =\n                program.entryPoint.userTypes[programName][this.datumTypeName];\n            if (!datumType) {\n                throw new Error(\n                    `${this.constructor.name}.datumTypeName=\\`${this.datumTypeName}\\` not found in userTypes of script program ${programName}`\n                );\n            }\n        }\n\n        return datumType;\n    }\n\n    /**\n     * @internal\n     */\n    locateRedeemerType(): DataType {\n        const program = this.program;\n        const argTypes = program.entryPoint.mainArgTypes;\n        const argCount = argTypes.length;\n\n        let redeemerType: DataType;\n        if (argCount === 2) {\n            redeemerType = argTypes[1];\n        } else {\n            redeemerType = argTypes[0];\n        }\n\n        if (this.redeemerTypeName) {\n            const programName = program.name;\n            redeemerType =\n                program.entryPoint.userTypes[programName][\n                    this.redeemerTypeName\n                ];\n            if (!redeemerType) {\n                throw new Error(\n                    `${this.constructor.name}.redeemerTypeName=\\`${this.redeemerTypeName}\\` not found in userTypes of script program ${programName}`\n                );\n            }\n        }\n\n        return redeemerType;\n    }\n\n    get includeEnums(): string[] {\n        return [];\n    }\n\n    /**\n     * @internal\n     */\n    getTopLevelTypes(): HeliosBundleTypes {\n        const types = {\n            datum: this.locateDatumType(),\n            redeemer: this.locateRedeemerType(),\n        };\n\n        const program = this.program;\n        const { userTypes } = program;\n        const { mainModule } = program.entryPoint;\n        const mainTypes = userTypes[mainModule.name.value];\n        for (const [typeName, type] of Object.entries(mainTypes)) {\n            const s = type.toSchema();\n            if (s.kind == \"struct\") {\n                types[typeName] = type;\n            }\n            if (s.kind == \"enum\" && this.includeEnums.includes(typeName)) {\n                types[typeName] = type;\n            }\n        }\n\n        if (userTypes.specializedDelegate) {\n            const specializationName = this.moduleName;\n            const specializationTypes = userTypes[specializationName];\n            if (!specializationTypes) {\n                console.log(\n                    \"NOTE: the module name for the delegate policy script must match bundle's moduleName\"\n                );\n                debugger; // eslint-disable-line no-debugger - keep for downstream troubleshooting\n                throw new Error(\n                    `specialization types not found for ${this.moduleName} in program ${program.name} (debugging breakpoint available)`\n                );\n            }\n            for (const [typeName, type] of Object.entries(\n                specializationTypes\n            )) {\n                const s = type.toSchema();\n                if (s.kind == \"struct\") {\n                    types[typeName] = type;\n                }\n                if (s.kind == \"enum\" && this.includeEnums.includes(typeName)) {\n                    types[typeName] = type;\n                }\n            }\n        }\n\n        return types;\n    }\n\n    /**\n     * @internal\n     */\n    paramsToUplc<ConfigType extends configBaseWithRev>(\n        params: Record<string, any>\n    ): UplcRecord<ConfigType> {\n        const namespace = this.program.name;\n        const { paramTypes } = this.program;\n\n        return Object.fromEntries(\n            Object.entries(params)\n                .map<[string, UplcData]>(([paramName, data]) => {\n                    const fullName = `${namespace}::${paramName}`;\n                    // console.log(\"  -- param\", fullName);\n                    const thatType = paramTypes[fullName];\n                    if (!thatType) {\n                        // group the params by namespace to produce a list of:\n                        //   \"namespace::{ ... paramNames ... }\"\n                        //   \"namespace2::{ ... paramNames ... }\"\n                        const availableParams = Object.entries(\n                            paramTypes\n                        ).reduce((acc, [k, v]) => {\n                            const [ns, name] = k.split(\"::\");\n                            if (!acc[ns]) acc[ns] = [];\n                            acc[ns].push(name);\n                            return acc;\n                        }, {} as Record<string, string[]>);\n                        // if (Array.isArray(data)) {\n                        //     // probably it's wrong to categorically reject arrays,\n                        //     // but if you have this problem, please let us know and we'll help you resolve it.\n                        //     throw new Error(\n                        //         `invalid script-parameter '${paramName}' in namespace '${namespace}' \\n` +\n                        //             `  ... expected single value, got array`\n                        //     );\n                        // }\n\n                        // throw an error showing all the namespaces and all the short params in each\n                        const availableScriptParams = Object.entries(\n                            availableParams\n                        )\n                            .map(\n                                ([ns, names]) =>\n                                    `  ${ns}::{${names.join(\", \")}}`\n                            )\n                            .join(\"\\n\");\n                        // console.log(\"availableScriptParams\", availableScriptParams);\n                        if (paramName == \"0\") {\n                            throw new Error(\n                                `numeric param name is probably wrong`\n                            );\n                        }\n                        if ((paramName = \"addrHint\")) {\n                            // silently ignore this one\n                            return undefined as any;\n                        }\n                        throw new Error(\n                            `invalid script-parameter '${paramName}' in namespace '${namespace}' \\n` +\n                                `  ... expected one of: ${availableScriptParams}`\n                        );\n                    }\n                    return [\n                        fullName,\n                        this.typeToUplc(thatType, data, `params[${fullName}]`),\n                    ];\n                })\n                .filter((x) => !!x)\n        ) as UplcRecord<ConfigType>;\n    }\n\n    /**\n     * @internal\n     */\n    typeToUplc(type: DataType, data: any, path: string = \"\"): UplcData {\n        const schema = type.toSchema();\n        if (!this.setup) {\n            debugger;\n        }\n        const isMainnet = this.setup!.isMainnet;\n        if (\"undefined\" == typeof isMainnet) {\n            throw new Error(\n                `${this.constructor.name}: isMainnet must be defined in the setup`\n            );\n        }\n        const cast = makeCast(schema, {\n            isMainnet,\n            unwrapSingleFieldEnumVariants: true,\n        });\n        return cast.toUplcData(data, path);\n    }\n}\n"],"names":["textToBytes","start","delegateName","params"],"mappings":"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"}