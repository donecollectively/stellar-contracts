{"version":3,"file":"DelegatedDataBundle.mjs","sources":["../src/helios/scriptBundling/DelegatedDataBundle.ts"],"sourcesContent":["import type { Source } from \"@helios-lang/compiler-utils\";\nimport { CapoDelegateBundle } from \"./CapoDelegateBundle.js\";\n\n/**\n * @public\n */\nexport abstract class DelegatedDataBundle extends CapoDelegateBundle {\n    scriptParamsSource : \"config\" | \"bundle\" = \"config\"\n    /**\n     * The delegate module specialization for this script bundle.\n     * @remarks\n     * Each delegated-data policy bundle needs to provide its own specialization, probably\n     * by using a template, or by copying the UnspecializedDelegateScript and adding any\n     * application-specific logic needed.\n     * \n     * The specialized module must export `DelegateActivity` and `DelegateDatum` enums,\n     * each of which follows the conventions seen in the UnspecializedDelegateScript.\n     * The DelegateActivity's additionalDelegateValidation() function must handle MintingActivities,\n     * BurningActivities, and SpendingActivities, to govern the creation, updating, and deletion of \n     * delegated-data records for defined variants of their nested enums indicating delegate-specific\n     * activities.\n     * \n     * For example, a Vesting delegate might have SpendingActivities::AddingFunds and \n     * SpendingActivities::WithdrawingVestedValue; its DelegateActivity::additionalDelegateValidation()\n     * would handle each of these cases according to the application's needs, along with any\n     * creation or deletion activities within those DelegateActivity variants.\n     * \n     * The `xxxLifecycleActivities` variants are not handled by DelegatedData specializations; the\n     * Capo's mint/spend delegate governs these variants of delegate behaviors.  A delegate bundle\n     * receiving these activities will throw errors by virtue of the BasicDelegate's logic.\n     * \n     * Likewise, the `xxxDelegateData` variants are not handled by DelegatedData specializations,\n     * but by the mint/spend delegate, which transfers its responsbility for these activities to your \n     * specialized delegate.\n     * \n     * @public\n     */\n    abstract specializedDelegateModule: Source;\n\n    /**\n     * when set to true, the controller class will include the Capo's\n     * gov authority in the transaction, to ease transaction setup.\n     * @remarks\n     * If you set this to false, a delegated-data script will not \n     * require governance authority for its transactions, and you will\n     * need to explicitly enforce any user-level permissions needed\n     * for authorizing delegated-data transactions.\n     * @public\n     */\n    abstract requiresGovAuthority: boolean;\n\n    get params() {\n        return {\n            rev: this.rev,\n            delegateName: this.moduleName,\n            isMintDelegate: false,\n            isSpendDelegate: false,\n            isDgDataPolicy: true,\n            requiresGovAuthority: this.requiresGovAuthority,\n        }\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAMO,MAAe,4BAA4B,kBAAA,CAAmB;AAAA,EACjE,kBAAA,GAA2C,QAAA;AAAA,EA4C3C,IAAI,MAAA,GAAS;AACT,IAAA,OAAO;AAAA,MACH,KAAK,IAAA,CAAK,GAAA;AAAA,MACV,cAAc,IAAA,CAAK,UAAA;AAAA,MACnB,cAAA,EAAgB,KAAA;AAAA,MAChB,eAAA,EAAiB,KAAA;AAAA,MACjB,cAAA,EAAgB,IAAA;AAAA,MAChB,sBAAsB,IAAA,CAAK;AAAA,KAC/B;AAAA,EACJ;AACJ;;;;"}