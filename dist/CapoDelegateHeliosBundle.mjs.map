{"version":3,"file":"CapoDelegateHeliosBundle.mjs","sources":["../src/helios/scriptBundling/CapoDelegateBundle.ts"],"sourcesContent":["import { makeSource, type Source } from \"@helios-lang/compiler-utils\";\nimport { CapoHeliosBundle } from \"./CapoHeliosBundle.js\";\nimport {\n    HeliosScriptBundle,\n    placeholderSetupDetails,\n} from \"./HeliosScriptBundle.js\";\nimport {\n    type CapoBundleClass,\n    type Constructor,\n    type EmptyConstructor\n} from \"../HeliosMetaTypes.js\";\nimport BasicDelegate from \"../../delegation/BasicDelegate.hl\";\nimport type { configBaseWithRev, StellarBundleSetupDetails, stellarSubclass } from \"../../StellarContract.js\";\n// .hl files are transpiled to helios Source (JS object) attributes.\nimport type { capoDelegateConfig } from \"../../delegation/RolesAndDelegates.js\";\n// ?? any important need to export the transpiled source?\n// export {BasicDelegate}\n\nexport type CapoDelegateBundleClass = new () => CapoDelegateBundle;\n\n// this class expresses a \"has dependences from the Capo\" semantic,\n// ... not because it expects any dynamic code dependencies from an\n// ... application-specific Capo.  Also, this class being abstract, it never\n// ... is used directly.  The direct requirements of its included code from\n// ... BasicDelegate are easily satisfied by the unspecialized Capo bundle.\n//\n// Subclasses of this class MAY have application-specific dependencies\n// ... to be provided by an application-specific Capo.\n\nconst USING_EXTENSION = Symbol(\"USING_EXTENSION\");\n\n/**\n * @public\n */\nexport type ConcreteCapoDelegateBundle = typeof CapoDelegateBundle &\n    Constructor<CapoDelegateBundle> & \n    EmptyConstructor<CapoDelegateBundle> &\n\n    {\n        capoBundle: CapoHeliosBundle;\n        isConcrete: true;\n    };\n\n/**\n * for any Capo delegate; combines the BasicDelegate with a\n *  concrete specialization\n * @public\n **/\nexport abstract class CapoDelegateBundle extends HeliosScriptBundle {\n    /**\n     * The delegate module specialization for this script bundle.\n     * @remarks\n     * Basic mint/spend delegates can use the UnspecializedDelegateScript for this purpose.\n     * \n     * Delegated-data policy bundles need to provide their own specialization, probably\n     * by using a template, or by copying the UnspecializedDelegateScript and adding any\n     * application-specific logic needed.\n     * @public\n     */\n    abstract specializedDelegateModule: Source;\n\n    /**\n     * indicates where the script params are sourced from\n     * ### advanced usage\n     * use \"config\" to draw the script params from a json file\n     * use \"bundle\" to draw the script params from the bundle's params and/or defined variants\n     */\n    scriptParamsSource : \"bundle\" | \"config\" = \"bundle\" as const\n    \n    \n    /**\n     * when set to true, the controller class will include the Capo's\n     * gov authority in the transaction, to ease transaction setup.\n     * @remarks\n     * If you set this to false, a delegated-data script will not \n     * require governance authority for its transactions, and you will\n     * need to explicitly enforce any user-level permissions needed\n     * for authorizing delegated-data transactions.\n     * @public\n     */\n    declare capoBundle: CapoHeliosBundle;\n    isConcrete = false;\n\n    /**\n     * Creates a CapoDelegateBundle subclass based on a specific CapoHeliosBundle class\n     */\n    static usingCapoBundleClass<\n        THIS extends typeof CapoDelegateBundle,\n        CB extends CapoBundleClass\n    >(\n        this: THIS, \n        c: CB, \n        generic : \"generic\" | false = false\n    ) : ConcreteCapoDelegateBundle {\n        //@ts-expect-error returning a subclass without concrete implementations\n        // of the abstract members; hopefully the subclass will error if they're missing\n        const cb = new c(placeholderSetupDetails);\n        //@ts-expect-error - same as above\n        const newClass = class aCapoBoundBundle extends this {\n            capoBundle = cb;\n            constructor(setupDetails: StellarBundleSetupDetails<any>=placeholderSetupDetails) {\n                super(setupDetails);\n            }\n            isConcrete = !!!generic;\n        } as typeof newClass\n        // as typeof CapoDelegateBundle & CapoDelegateBundleClass // & CB\n\n        return newClass\n    }\n\n    // constructor(public capoBundle: CapoHeliosBundle) {\n    //     super();\n    // }\n\n    get main() {\n        return BasicDelegate;\n    }\n\n    get rev() : bigint {\n        return 1n;\n    }\n\n    get params() {\n        return {\n            rev: this.rev,\n            delegateName: this.moduleName,\n            isMintDelegate: false,\n            isSpendDelegate: false,\n            isDgDataPolicy: false,\n            requiresGovAuthority: this.requiresGovAuthority,\n        }\n    }\n\n    get moduleName() {\n        \n        const specialDgt = this.specializedDelegateModule;\n        if (!specialDgt.moduleName) {\n            throw new Error(\n                \"specializedDelegate module must have a moduleName\"\n            );\n        }\n        return specialDgt.moduleName;\n    }\n\n    getEffectiveModuleList() {\n        const specialDgt = this.specializedDelegateModule;\n        const delegateWrapper = this.mkDelegateWrapper(specialDgt.moduleName);\n\n        return [\n            ... super.getEffectiveModuleList(),\n            delegateWrapper,\n            this.specializedDelegateModule,\n        ]\n    }\n\n    get modules(): Source[] {\n        return []\n    }\n\n    mkDelegateWrapper(moduleName) {\n        const indent = \" \".repeat(8);\n        const src = `module specializedDelegate\nimport {\n    DelegateActivity,\n    DelegateDatum,\n    BurningActivity,\n    MintingActivity,\n    SpendingActivity\n} from ${moduleName}\\n`;\n        // console.log(\"mkDelegateWrapper:\", new Error( src));\n        return makeSource(src, {\n            name: `generatedSpecializedDelegateModule`,\n            project: \"stellar-contracts\",\n            moreInfo:\n                `${indent}- wraps ${moduleName} provided by ${this.constructor.name}\\n` +\n                `${indent}  (generated by stellar-contracts:src/delegation/ContractBasedDelegate.ts:mkDelegateWrapper())`,\n        });\n    }\n}\n"],"names":["BasicDelegate"],"mappings":";;;;;;;;;;;;;AAgDO,MAAe,2BAA2B,kBAAA,CAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBhE,kBAAA,GAA2C,QAAA;AAAA,EAc3C,UAAA,GAAa,KAAA;AAAA;AAAA;AAAA;AAAA,EAKb,OAAO,oBAAA,CAKH,CAAA,EACA,OAAA,GAA8B,KAAA,EACH;AAG3B,IAAA,MAAM,EAAA,GAAK,IAAI,CAAA,CAAE,uBAAuB,CAAA;AAExC,IAAA,MAAM,QAAA,GAAW,MAAM,gBAAA,SAAyB,IAAA,CAAK;AAAA,MACjD,UAAA,GAAa,EAAA;AAAA,MACb,WAAA,CAAY,eAA6C,uBAAA,EAAyB;AAC9E,QAAA,KAAA,CAAM,YAAY,CAAA;AAAA,MACtB;AAAA,MACA,UAAA,GAAa,CAAC,CAAC,CAAC,OAAA;AAAA,KACpB;AAGA,IAAA,OAAO,QAAA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,IAAA,GAAO;AACP,IAAA,OAAOA,gBAAA;AAAA,EACX;AAAA,EAEA,IAAI,GAAA,GAAe;AACf,IAAA,OAAO,EAAA;AAAA,EACX;AAAA,EAEA,IAAI,MAAA,GAAS;AACT,IAAA,OAAO;AAAA,MACH,KAAK,IAAA,CAAK,GAAA;AAAA,MACV,cAAc,IAAA,CAAK,UAAA;AAAA,MACnB,cAAA,EAAgB,KAAA;AAAA,MAChB,eAAA,EAAiB,KAAA;AAAA,MACjB,cAAA,EAAgB,KAAA;AAAA,MAChB,sBAAsB,IAAA,CAAK;AAAA,KAC/B;AAAA,EACJ;AAAA,EAEA,IAAI,UAAA,GAAa;AAEb,IAAA,MAAM,aAAa,IAAA,CAAK,yBAAA;AACxB,IAAA,IAAI,CAAC,WAAW,UAAA,EAAY;AACxB,MAAA,MAAM,IAAI,KAAA;AAAA,QACN;AAAA,OACJ;AAAA,IACJ;AACA,IAAA,OAAO,UAAA,CAAW,UAAA;AAAA,EACtB;AAAA,EAEA,sBAAA,GAAyB;AACrB,IAAA,MAAM,aAAa,IAAA,CAAK,yBAAA;AACxB,IAAA,MAAM,eAAA,GAAkB,IAAA,CAAK,iBAAA,CAAkB,UAAA,CAAW,UAAU,CAAA;AAEpE,IAAA,OAAO;AAAA,MACH,GAAI,MAAM,sBAAA,EAAuB;AAAA,MACjC,eAAA;AAAA,MACA,IAAA,CAAK;AAAA,KACT;AAAA,EACJ;AAAA,EAEA,IAAI,OAAA,GAAoB;AACpB,IAAA,OAAO,EAAC;AAAA,EACZ;AAAA,EAEA,kBAAkB,UAAA,EAAY;AAC1B,IAAA,MAAM,MAAA,GAAS,GAAA,CAAI,MAAA,CAAO,CAAC,CAAA;AAC3B,IAAA,MAAM,GAAA,GAAM,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA,EAOX,UAAU;AAAA,CAAA;AAEX,IAAA,OAAO,WAAW,GAAA,EAAK;AAAA,MACnB,IAAA,EAAM,CAAA,kCAAA,CAAA;AAAA,MACN,OAAA,EAAS,mBAAA;AAAA,MACT,QAAA,EACI,GAAG,MAAM,CAAA,QAAA,EAAW,UAAU,CAAA,aAAA,EAAgB,IAAA,CAAK,YAAY,IAAI;AAAA,EAChE,MAAM,CAAA,8FAAA;AAAA,KAChB,CAAA;AAAA,EACL;AACJ;;;;"}