import { U as UnspecializedDelegate_hl } from '../UnspecializedDelegate.mjs';
import { CapoDelegateBundle } from '../CapoDelegateHeliosBundle.mjs';
import { C as CapoHeliosBundle } from '../CapoHeliosBundle2.mjs';
import '@helios-lang/compiler-utils';
import '../HeliosScriptBundle.mjs';
import '@helios-lang/uplc';
import '@donecollectively/stellar-contracts/HeliosProgramWithCacheAPI';
import '@helios-lang/compiler';
import '@helios-lang/codec-utils';
import '@helios-lang/crypto';
import '@helios-lang/contract-utils';
import '@helios-lang/ledger';
import '@helios-lang/tx-utils';
import 'nanoid';
import '../DefaultCapo.mjs';
import '../BasicDelegate.mjs';

class UnspecializedDgtBundle extends CapoDelegateBundle.usingCapoBundleClass(CapoHeliosBundle) {
  preCompiled = {
    singleton: {
      programBundle: { "programElements": { "src/delegation/BasicDelegate.hl": "8cfe457712446efd045a29ccc37fdffb4502fec575f437ede11598b8f1d22bf7", "src/CapoMintHelpers.hl": "8ee230326ab9c357f57753aa2bb2b5fb16de1759081ab9d5848028099a5ef57b", "src/delegation/CapoDelegateHelpers.hl": "8017b5cad0320064f13280bf744b90a59f4de20c8d1160eab151089d0a77df7f", "src/StellarHeliosHelpers.hl": "c69793552ca21b6577965c7d8f48dde4d41bb2bf10a4f72ad3099fa0599cdeff", "src/CapoHelpers.hl": "66f789ebe0eb571038bf79205bcd985cd7dad22080e275848f1c73eadfbd9fb7", "generatedSpecializedDelegateModule": "fee9343bddb8db8f9f5d9d189f5111230fc239eb9de4c8827a58bd5b38e9a72b", "src/delegation/UnspecializedDelegate.hl": "a87c86450dba4c73c26e89b798b5b7ac3131c812485139b2dd155cf44a70f026", "params": { "BasicDelegate::rev": "const rev: Int = ##01;", "BasicDelegate::instance": "const instance: ByteArray = #67656e6572616c;", "BasicDelegate::delegateName": "const delegateName: String = ##55556e7370656369616c697a656444656c6567617465;", "BasicDelegate::isMintDelegate": "const isMintDelegate: Bool = ##d87a80;", "BasicDelegate::isSpendDelegate": "const isSpendDelegate: Bool = ##d87a80;", "BasicDelegate::isDgDataPolicy": "const isDgDataPolicy: Bool = ##d87980;", "BasicDelegate::requiresGovAuthority": "const requiresGovAuthority: Bool = ##d87a80;" } }, "version": "PlutusV2", "optimized": "", "unoptimized": "", "optimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __common13 = __core__unConstrData(__CONTEXT);
    __common14 = __core__sndPair(__common13);
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__bytearray__show = (self_5) -> {
        recurse_5 = (recurse_4, self_6) -> {
            n_1 = __core__lengthOfByteString(self_6);
            __core__ifThenElse(
                __core__lessThanInteger(0, n_1),
                () -> {
                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_3 = __core__indexByteString__safe(self_6, 0);
                    recurse_3 = (recurse_2, self_4, bytes_1) -> {
                        digit = __core__modInteger(self_4, 16);
                        bytes_2 = __core__consByteString(__core__ifThenElse(
                            __core__lessThanInteger(digit, 10),
                            __core__addInteger(digit, 48),
                            __core__addInteger(digit, 87)
                        ), bytes_1);
                        __core__ifThenElse(
                            __core__lessThanInteger(self_4, 16),
                            () -> {
                                bytes_2
                            },
                            () -> {
                                recurse_2(recurse_2, __core__divideInteger(self_4, 16), bytes_2)
                            }
                        )()
                    };
                    __core__decodeUtf8__safe(__core__ifThenElse(
                        __core__lessThanInteger(self_3, 0),
                        () -> {
                            __core__consByteString(45, recurse_3(recurse_3, __core__multiplyInteger(self_3, -1), #))
                        },
                        () -> {
                            recurse_3(recurse_3, self_3, #)
                        }
                    )()));
                    __core__ifThenElse(
                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                        __core__consByteString(48, hex_bytes),
                        hex_bytes
                    )), recurse_4(recurse_4, __core__sliceByteString(1, n_1, self_6)))
                },
                () -> {
                    ""
                }
            )()
        };
        recurse_5(recurse_5, self_5)
    };
    __helios__value__new = (assetClass, i_1) -> {
        mph = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));
        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));
        __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i_1)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
    };
    __helios__assetclass__new = (mph_1, token_name) -> {
        __core__constrData(0, __core__mkCons(__core__bData(mph_1), __core__mkCons(__core__bData(token_name), __core__mkNilData(()))))
    };
    __helios__tx__minted = (self_18) -> {
        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))))))
    };
    __helios__scriptcontext__tx = __core__headList(__common14);
    __helios__common__assert_constr_index = (data, i_2) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_2),
            () -> {
                data
            },
            () -> {
                error()
            }
        )()
    };
    __helios__common__fold = (self_19, fn, z) -> {
        recurse_7 = (recurse_6, self_20, z_1) -> {
            __core__chooseList(self_20, () -> {
                z_1
            }, () -> {
                recurse_6(recurse_6, __core__tailList__safe(self_20), fn(z_1, __core__headList__safe(self_20)))
            })()
        };
        recurse_7(recurse_7, self_19, z)
    };
    __helios__int__show = (self_21) -> {
        __core__decodeUtf8__safe(recurse_9 = (recurse_8, i_3, bytes_3) -> {
            bytes_4 = __core__consByteString(__core__addInteger(__core__modInteger(i_3, 10), 48), bytes_3);
            __core__ifThenElse(
                __core__lessThanInteger(i_3, 10),
                () -> {
                    bytes_4
                },
                () -> {
                    recurse_8(recurse_8, __core__divideInteger(i_3, 10), bytes_4)
                }
            )()
        };
        __core__ifThenElse(
            __core__lessThanInteger(self_21, 0),
            () -> {
                __core__consByteString(45, recurse_9(recurse_9, __core__multiplyInteger(self_21, -1), #))
            },
            () -> {
                recurse_9(recurse_9, self_21, #)
            }
        )())
    };
    __helios__common__unBData__safe = (data_5, callback_ok, callback_nok_2) -> {
        __core__chooseData(data_5, callback_nok_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
            callback_ok(__core__unBData__safe(data_5))
        })()
    };
    __helios__value__show = (self_29) -> {
        __helios__common__fold(self_29, (prev_1, pair_3) -> {
            mph_data = __core__fstPair(pair_3);
            tokens_data = __core__sndPair(pair_3);
            __core__appendString(prev_1, __helios__common__unBData__safe(mph_data, (mph_4) -> {
                __core__appendString(__core__ifThenElse(
                    __core__equalsByteString(mph_4, #),
                    () -> {
                        ""
                    },
                    () -> {
                        __core__appendString(__helios__bytearray__show(mph_4), "
")
                    }
                )(), __core__chooseData(tokens_data, () -> {
                    ""
                }, () -> {
                    __helios__common__fold(__core__unMapData__safe(tokens_data), (prev_2, pair_4) -> {
                        token_name_data = __core__fstPair(pair_4);
                        qty_data = __core__sndPair(pair_4);
                        __helios__common__unBData__safe(token_name_data, (token_name_2) -> {
                            __core__chooseData(qty_data, () -> {
                                ""
                            }, () -> {
                                ""
                            }, () -> {
                                ""
                            }, () -> {
                                qty = __core__unIData__safe(qty_data);
                                __core__ifThenElse(
                                    __core__equalsByteString(mph_4, #),
                                    () -> {
                                        __core__appendString("lovelace ", __core__appendString(__helios__int__show(qty), "
"))
                                    },
                                    () -> {
                                        __core__appendString("  .", __core__appendString(__core__ifThenElse(
                                            n = __core__lengthOfByteString(token_name_2);
                                            recurse_1 = (recurse, i) -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(i, n),
                                                    () -> {
                                                        true
                                                    },
                                                    () -> {
                                                        b0 = __core__indexByteString__safe(token_name_2, i);
                                                        __core__ifThenElse(
                                                            __core__lessThanEqualsInteger(b0, 127),
                                                            () -> {
                                                                recurse(recurse, __core__addInteger(i, 1))
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                                                    () -> {
                                                                        inext_2 = __core__addInteger(i, 2);
                                                                        __core__ifThenElse(
                                                                            __core__lessThanEqualsInteger(inext_2, n),
                                                                            () -> {
                                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid_5, c1_2) -> {
                                                                                    __core__ifThenElse(
                                                                                        valid_5,
                                                                                        () -> {
                                                                                            c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                                                            __core__ifThenElse(
                                                                                                __core__ifThenElse(
                                                                                                    __core__lessThanEqualsInteger(128, c_2),
                                                                                                    () -> {
                                                                                                        __core__lessThanEqualsInteger(c_2, 2047)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )(),
                                                                                                () -> {
                                                                                                    recurse(recurse, inext_2)
                                                                                                },
                                                                                                () -> {
                                                                                                    false
                                                                                                }
                                                                                            )()
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )()
                                                                                })
                                                                            },
                                                                            () -> {
                                                                                false
                                                                            }
                                                                        )()
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                                                            () -> {
                                                                                inext_1 = __core__addInteger(i, 3);
                                                                                __core__ifThenElse(
                                                                                    __core__lessThanEqualsInteger(inext_1, n),
                                                                                    () -> {
                                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid_3, c1_1) -> {
                                                                                            __core__ifThenElse(
                                                                                                valid_3,
                                                                                                () -> {
                                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 2)), (valid_4, c2_1) -> {
                                                                                                        __core__ifThenElse(
                                                                                                            valid_4,
                                                                                                            () -> {
                                                                                                                c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__lessThanEqualsInteger(2048, c_1),
                                                                                                                        () -> {
                                                                                                                            __core__lessThanEqualsInteger(c_1, 65535)
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            false
                                                                                                                        }
                                                                                                                    )(),
                                                                                                                    () -> {
                                                                                                                        recurse(recurse, inext_1)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                false
                                                                                                            }
                                                                                                        )()
                                                                                                    })
                                                                                                },
                                                                                                () -> {
                                                                                                    false
                                                                                                }
                                                                                            )()
                                                                                        })
                                                                                    },
                                                                                    () -> {
                                                                                        false
                                                                                    }
                                                                                )()
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                                                    () -> {
                                                                                        inext = __core__addInteger(i, 4);
                                                                                        __core__ifThenElse(
                                                                                            __core__lessThanEqualsInteger(inext, n),
                                                                                            () -> {
                                                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid, c1) -> {
                                                                                                    __core__ifThenElse(
                                                                                                        valid,
                                                                                                        () -> {
                                                                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 2)), (valid_1, c2) -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    valid_1,
                                                                                                                    () -> {
                                                                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 3)), (valid_2, c3) -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                valid_2,
                                                                                                                                () -> {
                                                                                                                                    c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__lessThanEqualsInteger(65536, c),
                                                                                                                                            () -> {
                                                                                                                                                __core__lessThanEqualsInteger(c, 2097151)
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                false
                                                                                                                                            }
                                                                                                                                        )(),
                                                                                                                                        () -> {
                                                                                                                                            recurse(recurse, inext)
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            false
                                                                                                                                        }
                                                                                                                                    )()
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    false
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        })
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    },
                                                                                    () -> {
                                                                                        false
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            };
                                            recurse_1(recurse_1, 0),
                                            () -> {
                                                __core__decodeUtf8__safe(token_name_2)
                                            },
                                            () -> {
                                                __helios__bytearray__show(token_name_2)
                                            }
                                        )(), __core__appendString(" ", __core__appendString(__helios__int__show(qty), "
"))))
                                    }
                                )()
                            }, () -> {
                                ""
                            })()
                        }, () -> {
                            ""
                        })
                    }, prev_1)
                }, () -> {
                    ""
                }, () -> {
                    ""
                }, () -> {
                    ""
                })())
            }, () -> {
                ""
            }))
        }, "")
    };
    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common14));
    __helios__scriptcontext__get_current_input = () -> {
        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));
        recurse_17 = (recurse_16, lst_2) -> {
            __core__chooseList(lst_2, () -> {
                error()
            }, () -> {
                item_3 = __core__headList__safe(lst_2);
                __core__ifThenElse(
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item_3))), id),
                    () -> {
                        item_3
                    },
                    () -> {
                        recurse_16(recurse_16, __core__tailList__safe(lst_2))
                    }
                )()
            })()
        };
        recurse_17(recurse_17, __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))
    };
    __helios__common__length = (lst_3) -> {
        recurse_19 = (recurse_18, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_19(recurse_19, lst_3)
    };
    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {
        recurse_21 = (recurse_20, self_39, key_2) -> {
            __core__chooseList(self_39, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_39);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_38, key_1)
    };
    __helios__common__find_safe = (self_44, fn_3) -> {
        recurse_25 = (recurse_24, self_45, fn_4) -> {
            __core__chooseList(self_45, () -> {
                __core__constrData(1, __core__mkNilData(()))
            }, () -> {
                head_2 = __core__headList__safe(self_45);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__constrData(0, __core__mkCons(head_2, __core__mkNilData(())))
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(self_45), fn_4)
                    }
                )()
            })()
        };
        recurse_25(recurse_25, self_44, fn_3)
    };
    __helios__value__contains_policy = (self_46, mph_5) -> {
        mph_6 = __core__bData(mph_5);
        recurse_27 = (recurse_26, map_3) -> {
            __core__chooseList(map_3, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mph_6),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_26(recurse_26, __core__tailList__safe(map_3))
                    }
                )()
            })()
        };
        recurse_27(recurse_27, self_46)
    };
    __helios__value__is_zero = (self_47) -> {
        recurse_31 = (recurse_30, map_4) -> {
            __core__chooseList(map_4, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_4)));
                    recurse_29 = (recurse_28, tokens_2) -> {
                        __core__chooseList(tokens_2, () -> {
                            true
                        }, () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),
                                () -> {
                                    recurse_28(recurse_28, __core__tailList__safe(tokens_2))
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    };
                    recurse_29(recurse_29, tokens_1),
                    () -> {
                        recurse_30(recurse_30, __core__tailList__safe(map_4))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_31(recurse_31, self_47)
    };
    __helios__value__get_policy = (self_48, mph_7) -> {
        mph_8 = __core__bData(mph_7);
        recurse_33 = (recurse_32, map_5) -> {
            __core__chooseList(map_5, () -> {
                error()
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_5)), mph_8),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_5)))
                    },
                    () -> {
                        recurse_32(recurse_32, __core__tailList__safe(map_5))
                    }
                )()
            })()
        };
        recurse_33(recurse_33, self_48)
    };
    __helios__value__get_inner_map_int = (map_6, key_3) -> {
        recurse_35 = (recurse_34, map_7, key_4) -> {
            __core__chooseList(map_7, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), key_4),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_7)))
                    },
                    () -> {
                        recurse_34(recurse_34, __core__tailList__safe(map_7), key_4)
                    }
                )()
            })()
        };
        recurse_35(recurse_35, map_6, key_3)
    };
    __helios__common__any = (self_49, fn_5) -> {
        recurse_39 = (recurse_38, self_50, fn_6) -> {
            __core__chooseList(self_50, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_6(__core__headList__safe(self_50)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_38(recurse_38, __core__tailList__safe(self_50), fn_6)
                    }
                )()
            })()
        };
        recurse_39(recurse_39, self_49, fn_5)
    };
    __helios__value__merge_map_keys = (a_5, b_5) -> {
        (aKeys) -> {
            recurse_43 = (recurse_42, keys, map_10) -> {
                __core__chooseList(map_10, () -> {
                    __core__mkNilData(())
                }, () -> {
                    key_6 = __core__fstPair(__core__headList__safe(map_10));
                    __core__ifThenElse(
                        __helios__common__any(aKeys, (item_4) -> {
                            __core__equalsData(item_4, key_6)
                        }),
                        () -> {
                            recurse_42(recurse_42, keys, __core__tailList__safe(map_10))
                        },
                        () -> {
                            __core__mkCons(key_6, recurse_42(recurse_42, keys, __core__tailList__safe(map_10)))
                        }
                    )()
                })()
            };
            b_4 = recurse_43(recurse_43, aKeys, b_5);
            recurse_41 = (recurse_40, lst_6, rem) -> {
                __core__chooseList(rem, () -> {
                    lst_6
                }, () -> {
                    __core__mkCons(__core__headList__safe(rem), recurse_40(recurse_40, lst_6, __core__tailList__safe(rem)))
                })()
            };
            recurse_41(recurse_41, b_4, aKeys)
        }(recurse_37 = (recurse_36, map_9) -> {
            __core__chooseList(map_9, () -> {
                __core__mkNilData(())
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_9)), recurse_36(recurse_36, __core__tailList__safe(map_9)))
            })()
        };
        recurse_37(recurse_37, a_5))
    };
    __helios__value__get_inner_map = (map_11, mph_9) -> {
        recurse_47 = (recurse_46, map_12) -> {
            __core__chooseList(map_12, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_12)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_12)))
                    },
                    () -> {
                        recurse_46(recurse_46, __core__tailList__safe(map_12))
                    }
                )()
            })()
        };
        recurse_47(recurse_47, map_11)
    };
    __helios__value____add = (a_8, b_8) -> {
        recurse_49 = (recurse_48, keys_2) -> {
            __core__chooseList(keys_2, () -> {
                __core__mkNilPairData(())
            }, () -> {
                key_8 = __core__headList__safe(keys_2);
                tail_1 = recurse_48(recurse_48, __core__tailList__safe(keys_2));
                item_5 = (a_6, b_6) -> {
                    recurse_45 = (recurse_44, keys_1) -> {
                        __core__chooseList(keys_1, () -> {
                            __core__mkNilPairData(())
                        }, () -> {
                            key_7 = __core__headList__safe(keys_1);
                            tail = recurse_44(recurse_44, __core__tailList__safe(keys_1));
                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_6, key_7), __helios__value__get_inner_map_int(b_6, key_7));
                            __core__ifThenElse(
                                __core__equalsInteger(sum, 0),
                                () -> {
                                    tail
                                },
                                () -> {
                                    __core__mkCons(__core__mkPairData(key_7, __core__iData(sum)), tail)
                                }
                            )()
                        })()
                    };
                    recurse_45(recurse_45, __helios__value__merge_map_keys(a_6, b_6))
                }(__helios__value__get_inner_map(a_8, key_8), __helios__value__get_inner_map(b_8, key_8));
                __core__chooseList(item_5, () -> {
                    tail_1
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_8, __core__mapData(item_5)), tail_1)
                })()
            })()
        };
        recurse_49(recurse_49, __helios__value__merge_map_keys(a_8, b_8))
    };
    __helios__common__filter = (self_52, fn_8, nil) -> {
        recurse_57 = (recurse_56, self_53, fn_9) -> {
            __core__chooseList(self_53, () -> {
                nil
            }, () -> {
                head_5 = __core__headList__safe(self_53);
                __core__ifThenElse(
                    fn_9(head_5),
                    () -> {
                        __core__mkCons(head_5, recurse_56(recurse_56, __core__tailList__safe(self_53), fn_9))
                    },
                    () -> {
                        recurse_56(recurse_56, __core__tailList__safe(self_53), fn_9)
                    }
                )()
            })()
        };
        recurse_57(recurse_57, self_52, fn_8)
    };
    __helios__common__enum_fields_after_4 = (self_59) -> {
        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_59)))))))
    };
    __helios__value__get_safe = (self_66, assetClass_2) -> {
        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_2)));
        tokenName_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_2))));
        outer_3 = (outer_2, inner_3, map_13) -> {
            __core__chooseList(map_13, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), mintingPolicyHash),
                    () -> {
                        inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_13))))
                    },
                    () -> {
                        outer_2(outer_2, inner_3, __core__tailList__safe(map_13))
                    }
                )()
            })()
        };
        outer_3(outer_3, (inner_4, map_14) -> {
            __core__chooseList(map_14, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_14)), tokenName_2),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_14)))
                    },
                    () -> {
                        inner_4(inner_4, __core__tailList__safe(map_14))
                    }
                )()
            })()
        }, self_66)
    };
    __helios__txoutputdatum__inline = (self_69) -> {
        pair_5 = __core__unConstrData(self_69);
        index_1 = __core__fstPair(pair_5);
        fields_4 = __core__sndPair(pair_5);
        __core__ifThenElse(
            __core__equalsInteger(index_1, 2),
            () -> {
                __core__headList(fields_4)
            },
            () -> {
                error()
            }
        )()
    };
    __helios__txinput__address = (self_76) -> {
        self_9 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_76))));
        __core__headList(__core__sndPair(__core__unConstrData(self_9)))
    };
    __helios__tx__value_locked_by = (self_87, vh_1) -> {
        (outputs) -> {
            __helios__common__fold(outputs, (prev_3, txOutput) -> {
                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))
            }, __core__mkNilPairData(()))
        }(self_81 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_87))))));
        __helios__common__filter(self_81, (output) -> {
            (credential) -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),
                    () -> {
                        __core__equalsByteString(vh_1, self_84 = __helios__common__assert_constr_index(credential, 1);
                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_84)))))
                    },
                    () -> {
                        false
                    }
                )()
            }(self_9 = __core__headList(__core__sndPair(__core__unConstrData(output)));
            __core__headList(__core__sndPair(__core__unConstrData(self_9))))
        }, __core__mkNilData(())))
    };
    __helios__common__mStruct_field = (self_98, name_1) -> {
        map_15 = __core__unMapData(self_98);
        name_data = __core__bData(name_1);
        recurse_63 = (recurse_62, map_16) -> {
            __core__chooseList(map_16, () -> {
                error()
            }, () -> {
                head_6 = __core__headList__safe(map_16);
                key_11 = __core__fstPair(head_6);
                value_3 = __core__sndPair(head_6);
                __core__ifThenElse(
                    __core__equalsData(key_11, name_data),
                    () -> {
                        value_3
                    },
                    () -> {
                        recurse_62(recurse_62, __core__tailList__safe(map_16))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, map_15)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, tn) -> {
        tnBytes_1 = __core__encodeUtf8(tn);
        __core__chooseUnit(__core__ifThenElse(
            __core__ifThenElse(
                __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),
                false,
                true
            ),
            () -> {
                ()
            },
            () -> {
                error()
            }
        )(), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), 1))
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __core__headList(__core__sndPair(__core__unConstrData(txInput)));
        redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));
        (spendsExpectedInput) -> {
            __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {
                x_4
            }, () -> {
                error()
            })
        }(recurse_71 = (recurse_70, map_22) -> {
            __core__chooseList(map_22, () -> {
                error()
            }, () -> {
                item_7 = __core__fstPair(__core__headList__safe(map_22));
                __core__ifThenElse(
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(item_7)), 1),
                        () -> {
                            (sp) -> {
                                __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)
                            }
                        },
                        () -> {
                            (__1) -> {
                                false
                            }
                        }
                    )()(item_7),
                    () -> {
                        item_7
                    },
                    () -> {
                        recurse_70(recurse_70, __core__tailList__safe(map_22))
                    }
                )()
            })()
        };
        recurse_71(recurse_71, redeemers))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {
        __core__ifThenElse(
            __core__chooseData(value_5, () -> {
                true
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            })(),
            () -> {
                (__lhs_0) -> {
                    fields_7 = __core__sndPair(__core__unConstrData(__lhs_0));
                    __cond_2 = __core__headList(fields_7);
                    __core__ifThenElse(
                        __core__chooseData(__cond_2, () -> {
                            false
                        }, () -> {
                            true
                        }, () -> {
                            false
                        }, () -> {
                            false
                        }, () -> {
                            false
                        })(),
                        () -> {
                            (__lhs_0_1) -> {
                                __core__headList(fields_7)
                            }
                        },
                        () -> {
                            (__3) -> {
                                error()
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    error()
                }
            }
        )()(value_5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_110) -> {
        d = __core__headList(__core__sndPair(__core__unConstrData(self_110)));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_116) -> {
        d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_116)))));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_119) -> {
        d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_119)))));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_130, mph_11) -> {
        __helios__assetclass__new(mph_11, __core__encodeUtf8(d = __core__headList(self_130);
        __core__decodeUtf8(__core__unBData(d))))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_137, mph_14) -> {
        (uut) -> {
            validatorHash = __core__headList(__core__tailList(self_137));
            ac_1 = __helios__assetclass__new(mph_14, __core__encodeUtf8(uut));
            hasDelegate = __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),
                () -> {
                    (__lhs_0_15) -> {
                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_15))));
                        a_3 = __helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx, vh_3), ac_1);
                        __core__ifThenElse(
                            __core__lessThanEqualsInteger(a_3, 0),
                            false,
                            true
                        )
                    }
                },
                () -> {
                    (__lhs_0_12) -> {
                        (__cond_10) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_10)), 0),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10)
                        }(self_136 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                        __helios__common__find_safe(self_136, (o) -> {
                            a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);
                            __core__ifThenElse(
                                __core__lessThanEqualsInteger(a_3, 0),
                                false,
                                true
                            )
                        }))
                    }
                }
            )()(validatorHash);
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    __core__ifThenElse(
                        hasDelegate,
                        false,
                        true
                    ),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )(),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), hasDelegate)
        }(d = __core__headList(self_137);
        __core__decodeUtf8(__core__unBData(d)))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_155) -> {
        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_155)))))))
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (self_171) -> {
        (i_8) -> {
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
            __core__chooseUnit(__core__ifThenElse(
                __core__chooseData(inputData, () -> {
                    true
                }, () -> {
                    false
                }, () -> {
                    false
                }, () -> {
                    false
                }, () -> {
                    false
                })(),
                () -> {
                    (__lhs_0_25) -> {
                        index_9 = __core__fstPair(__core__unConstrData(__lhs_0_25));
                        fields_70 = __core__sndPair(__core__unConstrData(__lhs_0_25));
                        __cond_16 = __core__headList(fields_70);
                        __core__ifThenElse(
                            __core__chooseData(__cond_16, () -> {
                                true
                            }, () -> {
                                false
                            }, () -> {
                                false
                            }, () -> {
                                false
                            }, () -> {
                                false
                            })(),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __core__fstPair(__core__unConstrData(__lhs_0_26));
                                    ()
                                }
                            },
                            () -> {
                                (__17) -> {
                                    ()
                                }
                            }
                        )()(__cond_16)
                    }
                },
                () -> {
                    (__16) -> {
                        ()
                    }
                }
            )()(inputData), inputData)
        }(self_9 = __core__headList(__core__tailList(__core__tailList(__core__tailList(self_171))));
        __core__headList(__core__sndPair(__core__unConstrData(self_9))))
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_180) -> {
        link_1 = __core__unListData(__core__headList(self_180));
        input_1 = __core__headList(__core__tailList(__core__tailList(__core__tailList(self_180))));
        mph_18 = __core__unBData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_180))))));
        (uut_1) -> {
            validatorHash_1 = __core__headList(__core__tailList(link_1));
            targetValue = __module__StellarHeliosHelpers__mkTv(mph_18, uut_1);
            returnedUnchanged = __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash_1)), 0),
                () -> {
                    (__lhs_0_44) -> {
                        vh_4 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_44))));
                        __core__chooseUnit((assertionOk) -> {
                            __core__ifThenElse(
                                assertionOk,
                                () -> {
                                    ()
                                },
                                () -> {
                                    error()
                                }
                            )()
                        }(a_12 = __helios__tx__value_locked_by(__helios__scriptcontext__tx, vh_4);
                        recurse_61 = (recurse_60, keys_4) -> {
                            __core__chooseList(keys_4, () -> {
                                true
                            }, () -> {
                                key_10 = __core__headList__safe(keys_4);
                                __core__ifThenElse(
                                    b = (a_10, b_10) -> {
                                        recurse_59 = (recurse_58, keys_3) -> {
                                            __core__chooseList(keys_3, () -> {
                                                true
                                            }, () -> {
                                                key_9 = __core__headList__safe(keys_3);
                                                __core__ifThenElse(
                                                    b = (a_qty, b_qty) -> {
                                                        __core__ifThenElse(
                                                            __core__lessThanInteger(a_qty, b_qty),
                                                            false,
                                                            true
                                                        )
                                                    }(__helios__value__get_inner_map_int(a_10, key_9), __helios__value__get_inner_map_int(b_10, key_9));
                                                    __core__ifThenElse(
                                                        b,
                                                        false,
                                                        true
                                                    ),
                                                    () -> {
                                                        false
                                                    },
                                                    () -> {
                                                        recurse_58(recurse_58, __core__tailList__safe(keys_3))
                                                    }
                                                )()
                                            })()
                                        };
                                        recurse_59(recurse_59, __helios__value__merge_map_keys(a_10, b_10))
                                    }(__helios__value__get_inner_map(a_12, key_10), __helios__value__get_inner_map(targetValue, key_10));
                                    __core__ifThenElse(
                                        b,
                                        false,
                                        true
                                    ),
                                    () -> {
                                        false
                                    },
                                    () -> {
                                        recurse_60(recurse_60, __core__tailList__safe(keys_4))
                                    }
                                )()
                            })()
                        };
                        recurse_61(recurse_61, __helios__value__merge_map_keys(a_12, targetValue))), (__cond_27) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_27)), 0),
                                () -> {
                                    (__lhs_0_46) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_45) -> {
                                        error()
                                    }
                                }
                            )()(__cond_27)
                        }(self_136 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                        __helios__common__find_safe(self_136, (o_1) -> {
                            __core__equalsByteString(__core__serialiseData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(o_1)))))), __core__serialiseData(self_71 = __core__headList(__core__sndPair(__core__unConstrData(input_1)));
                            self_70 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_71))));
                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70)))))))
                        })))
                    }
                },
                () -> {
                    (__lhs_0_43) -> {
                        error()
                    }
                }
            )()(validatorHash_1);
            __core__chooseUnit(__core__ifThenElse(
                returnedUnchanged,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1, mph_18);
            __core__ifThenElse(
                cond,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), self_180))
        }(d = __core__headList(link_1);
        __core__decodeUtf8(__core__unBData(d)))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_184) -> {
        __cond_28 = __core__headList(__core__tailList(self_184));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 0),
            () -> {
                (__lhs_0_56) -> {
                    error()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 1),
                    () -> {
                        (__lhs_0_55) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_48) -> {
                            utxo_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_48))));
                            activity = __module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2);
                            __common47 = __core__unConstrData(activity);
                            __common48 = __core__fstPair(__common47);
                            __core__ifThenElse(
                                __core__equalsInteger(__common48, 2),
                                () -> {
                                    (__lhs_0_54) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__common48, 4),
                                        () -> {
                                            (__lhs_0_53) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__common48, 1),
                                                () -> {
                                                    (__lhs_0_52) -> {
                                                        activity
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__common48, 5),
                                                        () -> {
                                                            (__lhs_0_51) -> {
                                                                activity
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__common48, 3),
                                                                () -> {
                                                                    (__lhs_0_50) -> {
                                                                        activity
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_49) -> {
                                                                        activity
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()(activity)
                        }
                    }
                )()
            }
        )()(__cond_28)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_185, key_14) -> {
        __helios__common__map_get(self_185, __core__bData(__core__encodeUtf8(key_14)), (x_5) -> {
            __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))
        }, () -> {
            __core__constrData(1, __core__mkNilData(()))
        })
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput, self_194, typeName) -> {
        __cond_31 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(self_158 = __module__CapoHelpers__CapoCtx[]__getCharterData_4(self_194);
        __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(self_158)))), typeName);
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_31)), 1),
            () -> {
                (__lhs_0_61) -> {
                    error()
                }
            },
            () -> {
                (__lhs_0_59) -> {
                    entry = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_59)));
                    __cond_32 = __helios__common__mStruct_field(entry, #747065);
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_32)), 1),
                        () -> {
                            (__lhs_0_60) -> {
                                policyLink = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_60))));
                                (idPrefix_2) -> {
                                    (callback_8) -> {
                                        callback_8(policyLink, idPrefix_2)
                                    }
                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_60))));
                                __core__decodeUtf8(__core__unBData(d)))
                            }
                        },
                        () -> {
                            (__27) -> {
                                error()
                            }
                        }
                    )()(__cond_32)((dgtLink, idPrefix_1) -> {
                        __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_194, dgtLink, __core__constrData(4, __core__mkCons(__core__bData(__core__encodeUtf8(typeName)), __core__mkNilData(()))), __core__constrData(0, __core__mkCons(__core__bData(__core__encodeUtf8(idPrefix_1)), __core__mkNilData(()))))
                    })
                }
            }
        )()(__cond_31)
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5, self_195, __useopt__required_5) -> {
        required_11 = __core__ifThenElse(
            __useopt__required_5,
            () -> {
                false
            },
            () -> {
                true
            }
        )();
        input_2 = __helios__scriptcontext__get_current_input();
        acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_195)), __core__unBData(__core__headList(self_195)));
        (isUsingMintDgt) -> {
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    isUsingMintDgt,
                    () -> {
                        true
                    },
                    () -> {
                        __core__ifThenElse(
                            required_11,
                            false,
                            true
                        )
                    }
                )(),
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), isUsingMintDgt)
        }(a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_2))));
        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), acMintDgt);
        __core__ifThenElse(
            __core__lessThanEqualsInteger(a_3, 0),
            false,
            true
        ))
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6, self_196, __useopt__required_6) -> {
        required_13 = __core__ifThenElse(
            __useopt__required_6,
            () -> {
                false
            },
            () -> {
                true
            }
        )();
        input_3 = __helios__scriptcontext__get_current_input();
        acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(self_152 = __module__CapoHelpers__CapoCtx[]__getCharterData_6(self_196);
        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_152)))), __core__unBData(__core__headList(self_196)));
        (isUsingSpendDgt) -> {
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    isUsingSpendDgt,
                    () -> {
                        true
                    },
                    () -> {
                        __core__ifThenElse(
                            required_13,
                            false,
                            true
                        )
                    }
                )(),
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), isUsingSpendDgt)
        }(a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_3))));
        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), acSpendDgt);
        __core__ifThenElse(
            __core__lessThanEqualsInteger(a_3, 0),
            false,
            true
        ))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_197) -> {
        __cond_33 = __core__headList(__core__tailList(self_197));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 1),
            () -> {
                (self_160) -> {
                    data_137 = __core__headList(__core__sndPair(__core__unConstrData(self_160)));
                    __helios__common__assert_constr_index(data_137, 0)
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 2),
                    () -> {
                        (self_162) -> {
                            data_137 = __core__headList(__core__sndPair(__core__unConstrData(self_162)));
                            __helios__common__assert_constr_index(data_137, 0)
                        }
                    },
                    () -> {
                        (__28) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_33)
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__address, self_198) -> {
        charterAc_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_198)), #63686172746572);
        capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_198);
        __cond_34 = __core__headList(__core__tailList(self_198));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_34)), 2),
            () -> {
                (__lhs_0_64) -> {
                    __helios__common__assert_constr_index(__helios__txoutputdatum__inline((self_70) -> {
                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70)))))
                    }(self_100 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                    recurse_67 = (recurse_66, lst_12) -> {
                        __core__chooseList(lst_12, () -> {
                            error()
                        }, () -> {
                            item_6 = __core__headList__safe(lst_12);
                            __core__ifThenElse(
                                __core__ifThenElse(
                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item_6))), capoAddr),
                                    () -> {
                                        a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(item_6))))), charterAc_2);
                                        __core__ifThenElse(
                                            __core__lessThanEqualsInteger(a_3, 0),
                                            false,
                                            true
                                        )
                                    },
                                    () -> {
                                        false
                                    }
                                )(),
                                () -> {
                                    item_6
                                },
                                () -> {
                                    recurse_66(recurse_66, __core__tailList__safe(lst_12))
                                }
                            )()
                        })()
                    };
                    recurse_67(recurse_67, self_100))), 0)
                }
            },
            () -> {
                (__29) -> {
                    error()
                }
            }
        )()(__cond_34)
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_200, dgtLink_1, role_1, idPrefix_3) -> {
        (input, mph_17) -> {
            __core__mkCons(__core__listData(dgtLink_1), __core__mkCons(role_1, __core__mkCons(idPrefix_3, __core__mkCons(input, __core__mkCons(__core__bData(mph_17), __core__mkNilData(()))))))
        }((inputs_1, mph_13) -> {
            (uutName) -> {
                __cond_6 = __core__headList(__core__tailList(dgtLink_1));
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_6)), 1),
                    () -> {
                        (__lhs_0_8) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_6) -> {
                            vh_2 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_6))));
                            needsAddrWithCred = __core__constrData(1, __core__mkCons(__core__bData(vh_2), __core__mkNilData(())));
                            ac = __helios__assetclass__new(mph_13, __core__encodeUtf8(uutName));
                            __cond_7 = __helios__common__find_safe(inputs_1, (i_7) -> {
                                __core__ifThenElse(
                                    __core__equalsData(self_9 = __helios__txinput__address(i_7);
                                    __core__headList(__core__sndPair(__core__unConstrData(self_9))), needsAddrWithCred),
                                    () -> {
                                        a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_7))));
                                        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), ac);
                                        __core__ifThenElse(
                                            __core__lessThanEqualsInteger(a_3, 0),
                                            false,
                                            true
                                        )
                                    },
                                    () -> {
                                        false
                                    }
                                )()
                            });
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_7)), 0),
                                () -> {
                                    (foundGood) -> {
                                        foundGood
                                    }
                                },
                                () -> {
                                    (__lhs_0_7) -> {
                                        error()
                                    }
                                }
                            )()(__cond_7)
                        }
                    }
                )()(__cond_6)
            }(d = __core__headList(dgtLink_1);
            __core__decodeUtf8(__core__unBData(d)))
        }(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), __core__unBData(__core__headList(self_200))), __core__unBData(__core__headList(self_200)))
    };
    __module__CapoHelpers__CapoCtx[]__address_1 = (self_201) -> {
        __helios__txinput__address(__cond_35 = __core__headList(__core__tailList(self_201));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 1),
            () -> {
                (self_11) -> {
                    __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_11))))
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 2),
                    () -> {
                        (self_11) -> {
                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_11))))
                        }
                    },
                    () -> {
                        (__30) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_35))
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_204, id_1) -> {
        capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_1(self_204);
        (txin_4) -> {
            __core__ifThenElse(
                __core__equalsData(__helios__txinput__address(txin_4), capoAddr_1),
                () -> {
                    data_159 = __helios__txoutputdatum__inline(self_70 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_4))));
                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70))))));
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_159)), 2),
                        () -> {
                            (__lhs_0_71) -> {
                                x_7 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_159);
                                __core__ifThenElse(
                                    __core__equalsByteString(id_1, #),
                                    () -> {
                                        true
                                    },
                                    () -> {
                                        __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_7, #406964)), id_1)
                                    }
                                )()
                            }
                        },
                        () -> {
                            (__31) -> {
                                false
                            }
                        }
                    )()(data_159)
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput, self_205, newDataId, dataTypePurpose) -> {
        dgData = __helios__txoutputdatum__inline(self_70 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_205, newDataId);
        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70))))));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(dgData)), 2),
            () -> {
                (__lhs_0_72) -> {
                    data_160 = __module__StellarHeliosHelpers__fromCip68Wrapper(dgData);
                    recIdStr_2 = __core__decodeUtf8(newDataId);
                    __core__ifThenElse(
                        self = __core__unBData(__helios__common__mStruct_field(data_160, #406964));
                        __core__ifThenElse(
                            __core__equalsByteString(self, newDataId),
                            false,
                            true
                        ),
                        () -> {
                            error()
                        },
                        () -> {
                            __core__ifThenElse(
                                (self_24) -> {
                                    __core__ifThenElse(
                                        __core__equalsString(self_24, dataTypePurpose),
                                        false,
                                        true
                                    )
                                }(d = __helios__common__mStruct_field(data_160, #747065);
                                __core__decodeUtf8(__core__unBData(d))),
                                () -> {
                                    error()
                                },
                                () -> {
                                    true
                                }
                            )()
                        }
                    )()
                }
            },
            () -> {
                (__32) -> {
                    error()
                }
            }
        )()(dgData)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1 = (self_206, recId_5) -> {
        recIdStr_3 = __core__decodeUtf8(recId_5);
        ac_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_206)), recId_5);
        capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_1(self_206);
        (__cond_40) -> {
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_40)), 1),
                () -> {
                    (__lhs_0_74) -> {
                        error()
                    }
                },
                () -> {
                    (__lhs_0_73) -> {
                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_73)))
                    }
                }
            )()(__cond_40)
        }(self_136 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
        __helios__common__find_safe(self_136, (txout) -> {
            __core__ifThenElse(
                __core__equalsInteger(__helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txout))))), ac_2), 1),
                () -> {
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txout))), capoAddr_2)
                },
                () -> {
                    false
                }
            )()
        }))
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_208) -> {
        charter_2 = __core__headList(__core__tailList(self_208));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),
            () -> {
                (__lhs_0_86) -> {
                    self_208
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),
                    () -> {
                        (__lhs_0_85) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_81) -> {
                            mph_21 = __core__unBData(__core__headList(self_208));
                            charterAc_4 = __helios__assetclass__new(mph_21, #63686172746572);
                            (charterUtxo_3) -> {
                                datum_5 = __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_70 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_3))));
                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70))))));
                                __helios__common__assert_constr_index(data_137, 0), 0);
                                __core__mkCons(__core__bData(mph_21), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_3, __core__mkNilData(())))), __core__mkNilData(())))
                            }((__cond_44) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_44)), 0),
                                    () -> {
                                        (self_9) -> {
                                            __core__headList(__core__sndPair(__core__unConstrData(self_9)))
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_83) -> {
                                            error()
                                        }
                                    }
                                )()(__cond_44)
                            }(self_133 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                            __helios__common__find_safe(self_133, (txin_6) -> {
                                a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_6))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_4);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            })))
                        }
                    }
                )()
            }
        )()(charter_2)
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_209) -> {
        charter_3 = __core__headList(__core__tailList(self_209));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 1),
            () -> {
                (__lhs_0_90) -> {
                    self_209
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 2),
                    () -> {
                        (__lhs_0_89) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_87) -> {
                            mph_22 = __core__unBData(__core__headList(self_209));
                            (utxo_5) -> {
                                datum_6 = __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_70 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_5))));
                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70))))));
                                __helios__common__assert_constr_index(data_137, 0), 0);
                                __core__mkCons(__core__bData(mph_22), __core__mkCons(__core__constrData(1, __core__mkCons(datum_6, __core__mkCons(utxo_5, __core__mkNilData(())))), __core__mkNilData(())))
                            }(charterAc = __helios__assetclass__new(mph_22, #63686172746572);
                            (__cond_12) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 0),
                                    () -> {
                                        (self_9) -> {
                                            __core__headList(__core__sndPair(__core__unConstrData(self_9)))
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_19) -> {
                                            error()
                                        }
                                    }
                                )()(__cond_12)
                            }(self_133 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                            __helios__common__find_safe(self_133, (txin) -> {
                                a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            })))
                        }
                    }
                )()
            }
        )()(charter_3)
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed_1)));
        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed_1)))));
        idxBytes = __core__serialiseData(__core__iData(seedIdx));
        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));
        txoInfo = __core__ifThenElse(
            __core__ifThenElse(
                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),
                false,
                true
            ),
            () -> {
                error()
            },
            () -> {
                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)
            }
        )();
        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));
        (p) -> {
            __core__appendString(__core__appendString(p, "-"), mhs)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_219, fn_25) -> {
        recurse_87 = (recurse_86, map_29) -> {
            __core__chooseList(map_29, () -> {
                ()
            }, () -> {
                head_43 = __core__headList__safe(map_29);
                __core__chooseUnit(fn_25(__core__unBData(__core__fstPair(head_43)), __core__unIData(__core__sndPair(head_43))), recurse_86(recurse_86, __core__tailList__safe(map_29)))
            })()
        };
        recurse_87(recurse_87, self_219)
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_223, key_21) -> {
        __helios__common__map_get(self_223, __core__bData(key_21), (x_11) -> {
            __core__constrData(0, __core__mkCons(x_11, __core__mkNilData(())))
        }, () -> {
            __core__constrData(1, __core__mkNilData(()))
        })
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_227, comp_4) -> {
        recurse_55 = (recurse_54, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                tail_2 = recurse_54(recurse_54, __core__tailList__safe(lst_11));
                x_3 = __core__headList__safe(lst_11);
                recurse_53 = (recurse_52, lst_9) -> {
                    __core__chooseList(lst_9, () -> {
                        __core__mkCons(x_3, lst_9)
                    }, () -> {
                        head_3 = __core__headList__safe(lst_9);
                        __core__ifThenElse(
                            comp_4(__core__unBData(__core__fstPair(x_3)), __core__unIData(__core__sndPair(x_3)), __core__unBData(__core__fstPair(head_3)), __core__unIData(__core__sndPair(head_3))),
                            () -> {
                                __core__mkCons(x_3, lst_9)
                            },
                            () -> {
                                __core__mkCons(head_3, recurse_52(recurse_52, __core__tailList__safe(lst_9)))
                            }
                        )()
                    })()
                };
                recurse_53(recurse_53, tail_2)
            })()
        };
        recurse_55(recurse_55, self_227)
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_26, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__otherMintedValue, otherMintedValue) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __core__mkNilPairData(())
            }
        )();
        (delegateApproval) -> {
            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
            expectedValue = __helios__value____add(__helios__value____add(__core__mkNilPairData(()), otherMintedValue_1), (self_228) -> {
                recurse_93 = (recurse_92, lst_24) -> {
                    __core__chooseList(lst_24, () -> {
                        __core__mkNilPairData(())
                    }, () -> {
                        __helios__value____add(__core__unMapData(__core__headList__safe(lst_24)), recurse_92(recurse_92, __core__tailList__safe(lst_24)))
                    })()
                };
                recurse_93(recurse_93, self_228)
            }(recurse_51 = (recurse_50, rem_1) -> {
                __core__chooseList(rem_1, () -> {
                    __core__mkNilData(())
                }, () -> {
                    __core__mkCons(__core__mapData(purpose_2 = __core__decodeUtf8(__core__unBData(__core__headList__safe(rem_1)));
                    __module__StellarHeliosHelpers__mkTv(mph_26, mkTokenName_1(purpose_2))), recurse_50(recurse_50, __core__tailList__safe(rem_1)))
                })()
            };
            recurse_51(recurse_51, purposes)));
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    __helios__value__contains_policy(valueMinted, mph_26),
                    false,
                    true
                ),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_26), (k1, _v1, k2, _v2) -> {
                __core__lessThanByteString(k1, k2)
            });
            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_3, i_12) -> {
                ()
            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, mph_26);
            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {
                __core__lessThanByteString(k1, k2)
            });
            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_2, i_11) -> {
                ()
            }), msg_1 = __helios__value__show(__helios__common__filter(valueMinted, (pair_38) -> {
                (b_15, __37) -> {
                    __core__ifThenElse(
                        __core__equalsByteString(b_15, mph_26),
                        false,
                        true
                    )
                }(__core__unBData(__core__fstPair(pair_38)), __core__unMapData(__core__sndPair(pair_38)))
            }, __core__mkNilPairData(())));
            ()), thisPolicyMintOK = __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted));
            __core__chooseUnit(__core__ifThenElse(
                thisPolicyMintOK,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__chooseUnit(cond = __core__chooseUnit(__core__ifThenElse(
                b = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), (input_4) -> {
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_4))), seed_2)
                });
                __core__ifThenElse(
                    b,
                    false,
                    true
                ),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), true);
            (), otherPoliciesMintOk = __core__ifThenElse(
                b = __helios__value__is_zero(otherMintedValue_1);
                __core__ifThenElse(
                    b,
                    false,
                    true
                ),
                () -> {
                    true
                },
                () -> {
                    remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue, mph_26),
                        () -> {
                            key_23 = __core__bData(mph_26);
                            recurse_91 = (recurse_90, self_225) -> {
                                __core__chooseList(self_225, () -> {
                                    self_225
                                }, () -> {
                                    head_45 = __core__headList__safe(self_225);
                                    tail_4 = __core__tailList__safe(self_225);
                                    __core__ifThenElse(
                                        __core__equalsData(key_23, __core__fstPair(head_45)),
                                        () -> {
                                            recurse_90(recurse_90, tail_4)
                                        },
                                        () -> {
                                            __core__mkCons(head_45, recurse_90(recurse_90, tail_4))
                                        }
                                    )()
                                })()
                            };
                            recurse_91(recurse_91, expectedValue)
                        },
                        () -> {
                            expectedValue
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint),
                        () -> {
                            true
                        },
                        () -> {
                            __core__chooseUnit(recurse_89 = (recurse_88, map_30) -> {
                                __core__chooseList(map_30, () -> {
                                    ()
                                }, () -> {
                                    head_44 = __core__headList__safe(map_30);
                                    __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {
                                        mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);
                                        __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_3, expectedCount) -> {
                                            __core__ifThenElse(
                                                (b) -> {
                                                    __core__ifThenElse(
                                                        b,
                                                        false,
                                                        true
                                                    )
                                                }(__cond_54 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy, tokenName_3);
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_54)), 1),
                                                    () -> {
                                                        (__lhs_0_112) -> {
                                                            false
                                                        }
                                                    },
                                                    () -> {
                                                        (__lhs_0_111) -> {
                                                            actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_111))));
                                                            __core__equalsInteger(actualCount, expectedCount)
                                                        }
                                                    }
                                                )()(__cond_54)),
                                                () -> {
                                                    error()
                                                },
                                                () -> {
                                                    ()
                                                }
                                            )()
                                        })
                                    }(__core__unBData(__core__fstPair(head_44)), __core__unMapData(__core__sndPair(head_44))), recurse_88(recurse_88, __core__tailList__safe(map_30)))
                                })()
                            };
                            recurse_89(recurse_89, remainingExpectedMint), true)
                        }
                    )()
                }
            )();
            __core__chooseUnit(__core__ifThenElse(
                otherPoliciesMintOk,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__ifThenElse(
                thisPolicyMintOK,
                () -> {
                    otherPoliciesMintOk
                },
                () -> {
                    false
                }
            )()))))))
        }(__lhs_0_110 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
        charterAc_1 = __helios__assetclass__new(mph_26, #63686172746572);
        hasCharter_1 = (txin_1) -> {
            a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));
            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_1);
            __core__ifThenElse(
                __core__lessThanEqualsInteger(a_3, 0),
                false,
                true
            )
        };
        (charterUtxo_1) -> {
            __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_70 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));
            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70))))));
            __helios__common__assert_constr_index(data_137, 0), 0)
        }(__cond_13 = __helios__common__find_safe(refInputs_1, hasCharter_1);
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_13)), 0),
            () -> {
                (self_9) -> {
                    __core__headList(__core__sndPair(__core__unConstrData(self_9)))
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    (__cond_14) -> {
                        __core__ifThenElse(
                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 0),
                            () -> {
                                (self_9) -> {
                                    __core__headList(__core__sndPair(__core__unConstrData(self_9)))
                                }
                            },
                            () -> {
                                (__lhs_0_22) -> {
                                    error()
                                }
                            }
                        )()(__cond_14)
                    }(self_133 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                    __helios__common__find_safe(self_133, hasCharter_1))
                }
            }
        )()(__cond_13)), 0);
        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_110);
        true)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_259) -> {
        (key_29) -> {
            key_30 = __core__bData(__core__encodeUtf8(key_29));
            recurse_99 = (recurse_98, self_260) -> {
                __core__chooseList(self_260, () -> {
                    self_260
                }, () -> {
                    head_49 = __core__headList__safe(self_260);
                    tail_6 = __core__tailList__safe(self_260);
                    __core__ifThenElse(
                        __core__equalsData(key_30, __core__fstPair(head_49)),
                        () -> {
                            recurse_98(recurse_98, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_49, recurse_98(recurse_98, tail_6))
                        }
                    )()
                })()
            };
            recurse_99(recurse_99, self_259)
        }
    };
    __core__ifThenElse(
        __common7 = __core__fstPair(__core__unConstrData(__DATUM));
        __core__ifThenElse(
            __core__equalsInteger(__common7, 2),
            () -> {
                (__lhs_0_261) -> {
                    error()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__common7, 1),
                    () -> {
                        __common17 = __core__fstPair(__core__unConstrData(__REDEEMER));
                        __common19 = __core__equalsInteger(__common17, 1);
                        (isD) -> {
                            __common21 = __core__sndPair(__core__unConstrData(isD));
                            __common22 = __core__headList(__common21);
                            __common23 = __core__unListData(__common22);
                            __common55 = __core__tailList(__common23);
                            __common56 = __core__headList(__common55);
                            __common57 = __core__unBData(__common56);
                            __common58 = __core__mkCons(__core__bData(__common57), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(())));
                            __common50 = __core__tailList(__common55);
                            __common51 = __core__headList(__common50);
                            __common52 = __core__unBData(__common51);
                            __core__chooseUnit(__core__ifThenElse(
                                __core__ifThenElse(
                                    __core__equalsByteString(__common52, #01),
                                    false,
                                    true
                                ),
                                () -> {
                                    ()
                                },
                                () -> {
                                    error()
                                }
                            )(), __core__chooseUnit(__core__ifThenElse(
                                __core__ifThenElse(
                                    __core__equalsByteString(__common52, #67656e6572616c),
                                    false,
                                    true
                                ),
                                () -> {
                                    ()
                                },
                                () -> {
                                    error()
                                }
                            )(), __core__chooseUnit(__core__ifThenElse(
                                __core__ifThenElse(
                                    __core__equalsByteString(__common52, #556e7370656369616c697a656444656c6567617465),
                                    false,
                                    true
                                ),
                                () -> {
                                    ()
                                },
                                () -> {
                                    error()
                                }
                            )(), myDgTkn = __helios__value__show(self_36 = __helios__scriptcontext__get_current_input();
                            self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_36))));
                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))));
                            checkNonDelegatedActivities = __core__ifThenElse(
                                __core__equalsInteger(__common17, 8),
                                () -> {
                                    (__lhs_0_239) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __common19,
                                        () -> {
                                            (__lhs_0_233) -> {
                                                innerActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_233)));
                                                __common9 = __core__fstPair(__core__unConstrData(innerActivity));
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__common9, 0),
                                                    () -> {
                                                        (__lhs_0_237) -> {
                                                            __common28 = __core__sndPair(__core__unConstrData(__lhs_0_237));
                                                            seed_9 = __core__headList(__common28);
                                                            (purpose_9) -> {
                                                                otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__common57, __common52), -1);
                                                                cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common58);
                                                                (isUpdatingCharter) -> {
                                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__common57, seed_9, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_9)), __core__mkNilData(())), false, (), true, otherMintedValue_2);
                                                                    __core__ifThenElse(
                                                                        isMintingOk,
                                                                        () -> {
                                                                            isUpdatingCharter
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }(__cond_109 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5);
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_109)), 5),
                                                                    () -> {
                                                                        (__lhs_0_238) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__75) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()(__cond_109))
                                                            }(d = __core__headList(__core__tailList(__common28));
                                                            __core__decodeUtf8(__core__unBData(d)))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__common9, 1),
                                                            () -> {
                                                                (__lhs_0_236) -> {
                                                                    __core__equalsInteger(self_13 = __helios__tx__minted(__helios__scriptcontext__tx);
                                                                    __common53 = __core__unConstrData(__helios__assetclass__new(__common57, __common52));
                                                                    __common54 = __core__sndPair(__common53);
                                                                    mph_2 = __core__headList(__common54);
                                                                    tokenName_1 = __core__headList(__core__tailList(__common54));
                                                                    outer_1 = (outer, inner, map) -> {
                                                                        __core__chooseList(map, () -> {
                                                                            error()
                                                                        }, () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),
                                                                                () -> {
                                                                                    inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                                                                                },
                                                                                () -> {
                                                                                    outer(outer, inner, __core__tailList__safe(map))
                                                                                }
                                                                            )()
                                                                        })()
                                                                    };
                                                                    outer_1(outer_1, (inner_1, map_1) -> {
                                                                        __core__chooseList(map_1, () -> {
                                                                            error()
                                                                        }, () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                                                                                () -> {
                                                                                    __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                                                                                },
                                                                                () -> {
                                                                                    inner_1(inner_1, __core__tailList__safe(map_1))
                                                                                }
                                                                            )()
                                                                        })()
                                                                    }, self_13), -1)
                                                                }
                                                            },
                                                            () -> {
                                                                (__lhs_0_234) -> {
                                                                    error()
                                                                }
                                                            }
                                                        )()
                                                    }
                                                )()(innerActivity)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__common17, 0),
                                                () -> {
                                                    (__lhs_0_133) -> {
                                                        dCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_133)));
                                                        __common31 = __core__fstPair(__core__unConstrData(dCLA));
                                                        __common34 = __core__equalsInteger(__common31, 0);
                                                        (cctx_4) -> {
                                                            __core__chooseUnit(__cond_106 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4);
                                                            __common49 = __core__fstPair(__core__unConstrData(__cond_106));
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__common49, 0),
                                                                () -> {
                                                                    (__lhs_0_232) -> {
                                                                        cCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_232)));
                                                                        __core__ifThenElse(
                                                                            __core__equalsData(cCLA, dCLA),
                                                                            () -> {
                                                                                ()
                                                                            },
                                                                            () -> {
                                                                                error()
                                                                            }
                                                                        )()
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__common49, 5),
                                                                        () -> {
                                                                            (__lhs_0_230) -> {
                                                                                __core__ifThenElse(
                                                                                    __common34,
                                                                                    () -> {
                                                                                        (__lhs_0_231) -> {
                                                                                            ()
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__74) -> {
                                                                                            error()
                                                                                        }
                                                                                    }
                                                                                )()(dCLA)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__73) -> {
                                                                                error()
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_106), neededRole = __core__ifThenElse(
                                                                __core__equalsInteger(__common31, 4),
                                                                () -> {
                                                                    (__lhs_0_101) -> {
                                                                        error()
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__common31, 5),
                                                                        () -> {
                                                                            (__lhs_0_100) -> {
                                                                                error()
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__common31, 6),
                                                                                () -> {
                                                                                    (__lhs_0_99) -> {
                                                                                        __core__constrData(1, __core__mkNilData(()))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__common31, 1),
                                                                                        () -> {
                                                                                            (__lhs_0_98) -> {
                                                                                                __core__constrData(0, __core__mkNilData(()))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__common31, 2),
                                                                                                () -> {
                                                                                                    (__lhs_0_97) -> {
                                                                                                        __core__constrData(1, __core__mkNilData(()))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__common31, 3),
                                                                                                        () -> {
                                                                                                            (__lhs_0_96) -> {
                                                                                                                __core__constrData(6, __core__mkNilData(()))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_95) -> {
                                                                                                                __core__constrData(0, __core__mkNilData(()))
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(dCLA);
                                                            __common32 = __core__unConstrData(neededRole);
                                                            __common33 = __core__fstPair(__common32);
                                                            myCurrentRole = __core__ifThenElse(
                                                                __core__equalsInteger(__common33, 7),
                                                                () -> {
                                                                    (__lhs_0_137) -> {
                                                                        error()
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__common33, 1),
                                                                        () -> {
                                                                            (__lhs_0_136) -> {
                                                                                __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, false);
                                                                                __core__ifThenElse(
                                                                                    cond,
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), neededRole)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__common33, 0),
                                                                                () -> {
                                                                                    (__lhs_0_135) -> {
                                                                                        __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, false);
                                                                                        __core__ifThenElse(
                                                                                            cond,
                                                                                            () -> {
                                                                                                ()
                                                                                            },
                                                                                            () -> {
                                                                                                error()
                                                                                            }
                                                                                        )(), neededRole)
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__common33, 6),
                                                                                        () -> {
                                                                                            (__lhs_0_134) -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true),
                                                                                                    () -> {
                                                                                                        __core__constrData(0, __core__mkNilData(()))
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true),
                                                                                                            () -> {
                                                                                                                __core__constrData(1, __core__mkNilData(()))
                                                                                                            },
                                                                                                            () -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__43) -> {
                                                                                                error()
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(neededRole);
                                                            __core__ifThenElse(
                                                                __core__ifThenElse(
                                                                    __common34,
                                                                    () -> {
                                                                        (__lhs_0_226) -> {
                                                                            __common29 = __core__sndPair(__core__unConstrData(__lhs_0_226));
                                                                            seed_8 = __core__headList(__common29);
                                                                            (purpose_8) -> {
                                                                                mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                    () -> {
                                                                                        __common12 = __core__bData(__core__encodeUtf8(purpose_8));
                                                                                        (__lhs_0_227) -> {
                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                __module__CapoMintHelpers__validateUutMinting(__common57, seed_8, __core__mkCons(__common12, __core__mkNilData(())), true, mkTn, false, ()),
                                                                                                () -> {
                                                                                                    ()
                                                                                                },
                                                                                                () -> {
                                                                                                    ()
                                                                                                }
                                                                                            )(), (__cond_105) -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_105)), 1),
                                                                                                    () -> {
                                                                                                        (__lhs_0_229) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__lhs_0_228) -> {
                                                                                                            dgtLink_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_228))));
                                                                                                            __core__chooseUnit(cond = __core__equalsString(d = __core__headList(dgtLink_3);
                                                                                                            __core__decodeUtf8(__core__unBData(d)), mkTn(purpose_8));
                                                                                                            __core__ifThenElse(
                                                                                                                cond,
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            )(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3, __common57))
                                                                                                        }
                                                                                                    }
                                                                                                )()(__cond_105)
                                                                                            }((self_193) -> {
                                                                                                __helios__common__map_get(self_193, __common12, (x_6) -> {
                                                                                                    __core__constrData(0, __core__mkCons(x_6, __core__mkNilData(())))
                                                                                                }, () -> {
                                                                                                    __core__constrData(1, __core__mkNilData(()))
                                                                                                })
                                                                                            }(self_154 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                                            __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_154)))))))))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__72) -> {
                                                                                            error()
                                                                                        }
                                                                                    }
                                                                                )()(myCurrentRole)
                                                                            }(d = __core__headList(__core__tailList(__common29));
                                                                            __core__decodeUtf8(__core__unBData(d)))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__common31, 1),
                                                                            () -> {
                                                                                (__lhs_0_174) -> {
                                                                                    charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4), 0);
                                                                                    __common40 = __core__tailList(__helios__common__enum_fields_after_4(charterData_4));
                                                                                    __common0 = __core__unListData(__core__headList(__core__tailList(__common40)));
                                                                                    nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                                    nextChangeList = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData_2)))));
                                                                                    newChange = __core__headList(nextChangeList);
                                                                                    __lhs_0_175 = __helios__common__assert_constr_index(newChange, 0);
                                                                                    __lhs_0_0_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_175))));
                                                                                    __common42 = __core__tailList(__lhs_0_0_2);
                                                                                    action = __core__headList(__lhs_0_0_2);
                                                                                    __common41 = __core__fstPair(__core__unConstrData(action));
                                                                                    __common5 = __core__equalsInteger(__common41, 1);
                                                                                    role_2 = __core__headList(__common42);
                                                                                    __common43 = __core__unConstrData(role_2);
                                                                                    __common44 = __core__fstPair(__common43);
                                                                                    __common4 = __core__equalsInteger(__common44, 4);
                                                                                    OdgtLink = __core__headList(__core__tailList(__common42));
                                                                                    newDgtRoleName = __core__ifThenElse(
                                                                                        __common4,
                                                                                        () -> {
                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name
                                                                                        },
                                                                                        () -> {
                                                                                            (__56) -> {
                                                                                                error()
                                                                                            }
                                                                                        }
                                                                                    )()(role_2);
                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                        __common5,
                                                                                        () -> {
                                                                                            (__lhs_0_224) -> {
                                                                                                error()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__70) -> {
                                                                                                ()
                                                                                            }
                                                                                        }
                                                                                    )()(action), __core__chooseUnit((cond) -> {
                                                                                        __core__ifThenElse(
                                                                                            cond,
                                                                                            () -> {
                                                                                                ()
                                                                                            },
                                                                                            () -> {
                                                                                                error()
                                                                                            }
                                                                                        )()
                                                                                    }(self_244 = __core__tailList(nextChangeList);
                                                                                    __core__equalsData(__core__listData(self_244), __core__listData(__common0))), __core__ifThenElse(
                                                                                        __common5,
                                                                                        () -> {
                                                                                            (__lhs_0_223) -> {
                                                                                                error()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__common41, 0),
                                                                                                () -> {
                                                                                                    (__lhs_0_222) -> {
                                                                                                        __common45 = __core__sndPair(__core__unConstrData(__lhs_0_222));
                                                                                                        seed_7 = __core__headList(__common45);
                                                                                                        (purpose_7) -> {
                                                                                                            idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_222);
                                                                                                            (callback_14) -> {
                                                                                                                callback_14(seed_7, purpose_7, idPrefix_9)
                                                                                                            }
                                                                                                        }(d = __core__headList(__core__tailList(__common45));
                                                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_221) -> {
                                                                                                        seed_6 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_221)));
                                                                                                        (purpose_6) -> {
                                                                                                            idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_221);
                                                                                                            (callback_13) -> {
                                                                                                                callback_13(seed_6, purpose_6, idPrefix_8)
                                                                                                            }
                                                                                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_221))));
                                                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                                                    }
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()(action)((seed_5, purpose_5, pendingActionIdPrefix) -> {
                                                                                        possibleMintDgtVerifications = __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),
                                                                                            () -> {
                                                                                                (__lhs_0_193) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                                    () -> {
                                                                                                        (__lhs_0_177) -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __common5,
                                                                                                                () -> {
                                                                                                                    (__lhs_0_185) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__58) -> {
                                                                                                                        mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                        mintedDgTkn = __module__CapoMintHelpers__validateUutMinting(__common57, seed_5, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_5)), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, ());
                                                                                                                        dgtLink_2 = __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(OdgtLink)), 1),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_179) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (self_192) -> {
                                                                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_192))))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(OdgtLink);
                                                                                                                        (__common1) -> {
                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                __core__equalsString(__common1, mkTokenName_2(purpose_5)),
                                                                                                                                () -> {
                                                                                                                                    ()
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            )(), (delegateTakesOwnership) -> {
                                                                                                                                possibleExtraReplacementCheck = __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__common41, 2),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_180) -> {
                                                                                                                                            __core__chooseUnit(__cond_87 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__common40)), newDgtRoleName);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_87)), 0),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_182) -> {
                                                                                                                                                        dde = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_182)));
                                                                                                                                                        entryType_1 = __helios__common__mStruct_field(dde, #747065);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_1)), 1),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_184) -> {
                                                                                                                                                                    (idPrefix_7) -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __core__equalsString(idPrefix_7, pendingActionIdPrefix),
                                                                                                                                                                            () -> {
                                                                                                                                                                                ()
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                error()
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_184))));
                                                                                                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__60) -> {
                                                                                                                                                                    error()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(entryType_1)
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_181) -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_87), true)
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__59) -> {
                                                                                                                                            true
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(action);
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        mintedDgTkn,
                                                                                                                                        () -> {
                                                                                                                                            true
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            false
                                                                                                                                        }
                                                                                                                                    )(),
                                                                                                                                    () -> {
                                                                                                                                        possibleExtraReplacementCheck
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        false
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }(assertion_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2, __common57);
                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                assertion_2,
                                                                                                                                () -> {
                                                                                                                                    ()
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            )(), true)))
                                                                                                                        }(d = __core__headList(dgtLink_2);
                                                                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                                                                    }
                                                                                                                }
                                                                                                            )()(action)
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__57) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()(myCurrentRole);
                                                                                        otherPossibleVerifications = __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),
                                                                                            () -> {
                                                                                                (__lhs_0_220) -> {
                                                                                                    error()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                                    () -> {
                                                                                                        (__lhs_0_194) -> {
                                                                                                            (isNotADuplicate) -> {
                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                    isNotADuplicate,
                                                                                                                    () -> {
                                                                                                                        ()
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                )(), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__common40)), newDgtRoleName);
                                                                                                                possibleReplacementIsCorrect = __core__ifThenElse(
                                                                                                                    __core__equalsInteger(__common41, 0),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_218) -> {
                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 0),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_219) -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__69) -> {
                                                                                                                                        ()
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(existingRoleEntryMaybe), true)
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__common41, 2),
                                                                                                                            () -> {
                                                                                                                                __common46 = __core__equalsInteger(__common44, 2);
                                                                                                                                (__lhs_0_199) -> {
                                                                                                                                    replacesDgt = __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_199))))));
                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                        __common46,
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_217) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__common44, 3),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_216) -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__equalsInteger(__common44, 7),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_215) -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__68) -> {
                                                                                                                                                                ()
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(role_2), existingDgtLink_1 = __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 1),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_202) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_200) -> {
                                                                                                                                                __lhs_0_0_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_200)));
                                                                                                                                                entryType_2 = __helios__common__mStruct_field(__lhs_0_0_4, #747065);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_2)), 1),
                                                                                                                                                    () -> {
                                                                                                                                                        (self_146) -> {
                                                                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_146))))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__66) -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(entryType_2)
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(existingRoleEntryMaybe);
                                                                                                                                    existingDgTkn = __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__common44, 0),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_210) -> {
                                                                                                                                                some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4), __common57);
                                                                                                                                                __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__common44, 1),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_209) -> {
                                                                                                                                                        some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_4)))), __common57);
                                                                                                                                                        __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __common4,
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_208) -> {
                                                                                                                                                                some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1, __common57);
                                                                                                                                                                __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__common44, 5),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_207) -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __core__equalsInteger(__common44, 6),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_206) -> {
                                                                                                                                                                                error()
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __common46,
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_205) -> {
                                                                                                                                                                                        error()
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __core__equalsInteger(__common44, 3),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_204) -> {
                                                                                                                                                                                                error()
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_203) -> {
                                                                                                                                                                                                error()
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(role_2);
                                                                                                                                    __core__chooseUnit(cond = __core__equalsData(replacesDgt, __core__headList(__core__sndPair(__core__unConstrData(existingDgTkn))));
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        cond,
                                                                                                                                        () -> {
                                                                                                                                            ()
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    )(), true))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_197) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(action);
                                                                                                                __core__ifThenElse(
                                                                                                                    isNotADuplicate,
                                                                                                                    () -> {
                                                                                                                        possibleReplacementIsCorrect
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )())
                                                                                                            }(recurse_23 = (recurse_22, self_41, fn_2) -> {
                                                                                                                __core__chooseList(self_41, () -> {
                                                                                                                    true
                                                                                                                }, () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        fn_2(__core__headList__safe(self_41)),
                                                                                                                        () -> {
                                                                                                                            recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            false
                                                                                                                        }
                                                                                                                    )()
                                                                                                                })()
                                                                                                            };
                                                                                                            recurse_23(recurse_23, __common0, (pdChange_2) -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(pdChange_2)), 0),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_195) -> {
                                                                                                                            __lhs_0_0_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_195))));
                                                                                                                            pendingRole = __core__headList(__core__tailList(__lhs_0_0_3));
                                                                                                                            __core__ifThenElse(
                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(pendingRole)), 4),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_196) -> {
                                                                                                                                        changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_196);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__equalsString(changingDgtName, newDgtRoleName),
                                                                                                                                            false,
                                                                                                                                            true
                                                                                                                                        )
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__64) -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(pendingRole)
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        (__63) -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    }
                                                                                                                )()(pdChange_2)
                                                                                                            }))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__62) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()(myCurrentRole);
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            __core__equalsInteger(__helios__common__length(__common0), 0),
                                                                                            () -> {
                                                                                                ()
                                                                                            },
                                                                                            () -> {
                                                                                                error()
                                                                                            }
                                                                                        )(), __core__ifThenElse(
                                                                                            possibleMintDgtVerifications,
                                                                                            () -> {
                                                                                                otherPossibleVerifications
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )())
                                                                                    })))
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__common31, 2),
                                                                                    () -> {
                                                                                        (__lhs_0_173) -> {
                                                                                            error()
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__common31, 3),
                                                                                            () -> {
                                                                                                (__lhs_0_150) -> {
                                                                                                    (pendingChangesList) -> {
                                                                                                        (previousManifest) -> {
                                                                                                            nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                                                            __common36 = __core__tailList(__helios__common__enum_fields_after_4(nextCharterData_1));
                                                                                                            nextManifest = __core__unMapData(__core__headList(__common36));
                                                                                                            __core__chooseUnit(cond = __core__equalsInteger(__helios__common__length(__core__unListData(__core__headList(__core__tailList(__common36)))), 0);
                                                                                                            __core__ifThenElse(
                                                                                                                cond,
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            )(), spendDgtCheck = __core__ifThenElse(
                                                                                                                b = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true);
                                                                                                                __core__ifThenElse(
                                                                                                                    b,
                                                                                                                    false,
                                                                                                                    true
                                                                                                                ),
                                                                                                                () -> {
                                                                                                                    true
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __helios__common__fold(pendingChangesList, (prev_5, item_18) -> {
                                                                                                                        prev_5((a_17, b_16) -> {
                                                                                                                            pdChange = __core__ifThenElse(
                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(item_18)), 0),
                                                                                                                                () -> {
                                                                                                                                    (self_141) -> {
                                                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_141))))
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_151) -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(item_18);
                                                                                                                            (pendingTypeName) -> {
                                                                                                                                __core__chooseUnit(__cond_71 = __core__headList(pdChange);
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_71)), 1),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_159) -> {
                                                                                                                                            __cond_74 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(b_16, pendingTypeName);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_74)), 0),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_160) -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__52) -> {
                                                                                                                                                        ()
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_74)
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__49) -> {
                                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__helios__common__length(b_16), 0),
                                                                                                                                                () -> {
                                                                                                                                                    error()
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            )(), head_48 = __core__headList(b_16);
                                                                                                                                            (CME_key, __lhs_1) -> {
                                                                                                                                                ME_type = __helios__common__mStruct_field(__lhs_1, #747065);
                                                                                                                                                __lhs_0_155 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                ME_policyLink = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_155))));
                                                                                                                                                (ME_idPrefix) -> {
                                                                                                                                                    refCount = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_155))))));
                                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                        __core__equalsInteger(refCount, 1),
                                                                                                                                                        () -> {
                                                                                                                                                            ()
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                        __core__equalsString(pendingTypeName, CME_key),
                                                                                                                                                        () -> {
                                                                                                                                                            ()
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    )(), (ME_name) -> {
                                                                                                                                                        (pendingLink) -> {
                                                                                                                                                            (pendingName) -> {
                                                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                    __core__equalsData(__core__listData(ME_policyLink), __core__listData(pendingLink)),
                                                                                                                                                                    () -> {
                                                                                                                                                                        ()
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                )(), (nextIdPrefix) -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __core__equalsString(nextIdPrefix, ME_idPrefix),
                                                                                                                                                                        () -> {
                                                                                                                                                                            ()
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            error()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }(__cond_72 = __core__headList(pdChange);
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_72)), 2),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_157) -> {
                                                                                                                                                                            idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_157);
                                                                                                                                                                            __core__chooseUnit(__cond_73 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__tailList(b_16), pendingTypeName);
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_73)), 0),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_158) -> {
                                                                                                                                                                                        error()
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__51) -> {
                                                                                                                                                                                        ()
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()(__cond_73), idPrefix_6)
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_72)), 0),
                                                                                                                                                                            () -> {
                                                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__50) -> {
                                                                                                                                                                                    error()
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_72)))
                                                                                                                                                            }((self_32) -> {
                                                                                                                                                                __core__appendString("'", __core__appendString(self_32, "'"))
                                                                                                                                                            }(d = __core__headList(pendingLink);
                                                                                                                                                            __core__decodeUtf8(__core__unBData(d))))
                                                                                                                                                        }(self_258 = __core__headList(__core__tailList(__core__tailList(pdChange)));
                                                                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_258)))))
                                                                                                                                                    }((self_32) -> {
                                                                                                                                                        __core__appendString("'", __core__appendString(self_32, "'"))
                                                                                                                                                    }(d = __core__headList(ME_policyLink);
                                                                                                                                                    __core__decodeUtf8(__core__unBData(d))))))
                                                                                                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_155))));
                                                                                                                                                __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                            }(__core__decodeUtf8(__core__unBData(__core__fstPair(head_48))), __core__sndPair(head_48)))
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_71), __cond_70 = __core__headList(pdChange);
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_70)), 0),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_154) -> {
                                                                                                                                            (callback_12) -> {
                                                                                                                                                callback_12(a_17, __core__tailList(b_16))
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__48) -> {
                                                                                                                                            (callback_11) -> {
                                                                                                                                                callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(a_17)(pendingTypeName), __core__tailList(b_16))
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_70))
                                                                                                                            }(__cond_69 = __core__headList(__core__tailList(pdChange));
                                                                                                                            __core__ifThenElse(
                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_69)), 4),
                                                                                                                                () -> {
                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__47) -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_69))
                                                                                                                        })
                                                                                                                    }, (callback_9) -> {
                                                                                                                        callback_9(previousManifest, nextManifest)
                                                                                                                    })((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                        __core__equalsData(__core__mapData(nextManifestRemainder), __core__mapData(prevManifestRemainder))
                                                                                                                    })
                                                                                                                }
                                                                                                            )();
                                                                                                            mintDgtCheck = __core__ifThenElse(
                                                                                                                b = __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true);
                                                                                                                __core__ifThenElse(
                                                                                                                    b,
                                                                                                                    false,
                                                                                                                    true
                                                                                                                ),
                                                                                                                () -> {
                                                                                                                    true
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    mint = __helios__tx__minted(__helios__scriptcontext__tx);
                                                                                                                    mintThisPolicy = __helios__common__map_get(mint, __core__bData(__common57), (x_12) -> {
                                                                                                                        __core__constrData(0, __core__mkCons(x_12, __core__mkNilData(())))
                                                                                                                    }, () -> {
                                                                                                                        __core__constrData(1, __core__mkNilData(()))
                                                                                                                    });
                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__lessThanEqualsInteger(__core__subtractInteger(__helios__common__length(mint), 1), 1),
                                                                                                                            false,
                                                                                                                            true
                                                                                                                        ),
                                                                                                                        () -> {
                                                                                                                            error()
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            ()
                                                                                                                        }
                                                                                                                    )(), observedTokenBurn = __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(mintThisPolicy)), 0),
                                                                                                                        () -> {
                                                                                                                            (self_253) -> {
                                                                                                                                __core__unMapData(__core__headList(__core__sndPair(__core__unConstrData(self_253))))
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_161) -> {
                                                                                                                                __core__mkNilPairData(())
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(mintThisPolicy);
                                                                                                                    remainingMint = __helios__common__fold(pendingChangesList, (foldingBurn, pcChange_1) -> {
                                                                                                                        pdChange_1 = __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(pcChange_1)), 0),
                                                                                                                            () -> {
                                                                                                                                (self_141) -> {
                                                                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_141))))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_163) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(pcChange_1);
                                                                                                                        __cond_77 = __core__headList(__core__tailList(pdChange_1));
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_77)), 4),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_165) -> {
                                                                                                                                    typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_165);
                                                                                                                                    __cond_78 = __core__headList(pdChange_1);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_78)), 0),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_172) -> {
                                                                                                                                                foldingBurn
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__54) -> {
                                                                                                                                                __cond_79 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest, typeName_4);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_79)), 1),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_171) -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_166) -> {
                                                                                                                                                            __lhs_0_0_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_166)));
                                                                                                                                                            ME_type_1 = __helios__common__mStruct_field(__lhs_0_0_1, #747065);
                                                                                                                                                            tn_5 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0_1, #746e));
                                                                                                                                                            mph_29 = __helios__common__mStruct_field(__lhs_0_0_1, #6d7068);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_29)), 0),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_170) -> {
                                                                                                                                                                        foldingBurn
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__55) -> {
                                                                                                                                                                        __lhs_0_167 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                                        refCount_1 = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_167))))));
                                                                                                                                                                        __cond_81 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn, tn_5);
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_81)), 1),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_169) -> {
                                                                                                                                                                                    error()
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_168) -> {
                                                                                                                                                                                    burningCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_168))));
                                                                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __core__equalsInteger(__core__subtractInteger(0, refCount_1), burningCount),
                                                                                                                                                                                            false,
                                                                                                                                                                                            true
                                                                                                                                                                                        ),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            error()
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            ()
                                                                                                                                                                                        }
                                                                                                                                                                                    )(), key_27 = __core__bData(tn_5);
                                                                                                                                                                                    recurse_97 = (recurse_96, self_252) -> {
                                                                                                                                                                                        __core__chooseList(self_252, () -> {
                                                                                                                                                                                            self_252
                                                                                                                                                                                        }, () -> {
                                                                                                                                                                                            head_47 = __core__headList__safe(self_252);
                                                                                                                                                                                            tail_5 = __core__tailList__safe(self_252);
                                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                                __core__equalsData(key_27, __core__fstPair(head_47)),
                                                                                                                                                                                                () -> {
                                                                                                                                                                                                    recurse_96(recurse_96, tail_5)
                                                                                                                                                                                                },
                                                                                                                                                                                                () -> {
                                                                                                                                                                                                    __core__mkCons(head_47, recurse_96(recurse_96, tail_5))
                                                                                                                                                                                                }
                                                                                                                                                                                            )()
                                                                                                                                                                                        })()
                                                                                                                                                                                    };
                                                                                                                                                                                    recurse_97(recurse_97, foldingBurn))
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()(__cond_81)
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(mph_29)
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_79)
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_78)
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__53) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_77)
                                                                                                                    }, observedTokenBurn);
                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                        __core__equalsInteger(__helios__common__length(remainingMint), 0),
                                                                                                                        () -> {
                                                                                                                            ()
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    )(), true))
                                                                                                                }
                                                                                                            )();
                                                                                                            __core__ifThenElse(
                                                                                                                mintDgtCheck,
                                                                                                                () -> {
                                                                                                                    spendDgtCheck
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    false
                                                                                                                }
                                                                                                            )())
                                                                                                        }(self_158 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);
                                                                                                        __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(self_158)))))
                                                                                                    }(self_159 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);
                                                                                                    __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(self_159))))))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__common31, 6),
                                                                                                    () -> {
                                                                                                        (__lhs_0_140) -> {
                                                                                                            manifestActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_140)));
                                                                                                            __common10 = __core__fstPair(__core__unConstrData(manifestActivity));
                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                __core__equalsInteger(__common10, 0),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_149) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__common10, 1),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_148) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __core__equalsInteger(__common10, 2),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_142) -> {
                                                                                                                                        __common35 = __core__sndPair(__core__unConstrData(__lhs_0_142));
                                                                                                                                        (key_31) -> {
                                                                                                                                            tokenName_4 = __core__unBData(__core__headList(__core__tailList(__common35)));
                                                                                                                                            charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4), 0);
                                                                                                                                            nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                                                                                            __common37 = __core__tailList(__helios__common__enum_fields_after_4(nextCharterData));
                                                                                                                                            __common38 = __core__headList(__common37);
                                                                                                                                            __common39 = __core__unMapData(__common38);
                                                                                                                                            (__lhs_0_143) -> {
                                                                                                                                                __core__chooseUnit(__cond_65 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__common39, key_31);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_65)), 1),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_147) -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_144) -> {
                                                                                                                                                            __lhs_0_0 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_144)));
                                                                                                                                                            entryType = __helios__common__mStruct_field(__lhs_0_0, #747065);
                                                                                                                                                            tn_4 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0, #746e));
                                                                                                                                                            mph_28 = __helios__common__mStruct_field(__lhs_0_0, #6d7068);
                                                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                __core__equalsByteString(tn_4, tokenName_4),
                                                                                                                                                                () -> {
                                                                                                                                                                    ()
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    error()
                                                                                                                                                                }
                                                                                                                                                            )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_28)), 0),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_146) -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__46) -> {
                                                                                                                                                                        ()
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(mph_28), __core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType)), 0),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_145) -> {
                                                                                                                                                                        ()
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__45) -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(entryType)))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_65), (cond) -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        cond,
                                                                                                                                                        () -> {
                                                                                                                                                            ()
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }(self_261 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_3))));
                                                                                                                                                __core__equalsData(__core__mapData(self_261), __core__mapData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__common39)(key_31)))))
                                                                                                                                            }(hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_4, tokenName_4);
                                                                                                                                            recIdStr = __core__decodeUtf8(tokenName_4);
                                                                                                                                            (__cond_36) -> {
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 1),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_68) -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_67) -> {
                                                                                                                                                            __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_67)))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_36)
                                                                                                                                            }(self_133 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                                                                                                                                            __helios__common__find_safe(self_133, hasDD)))
                                                                                                                                        }(d = __core__headList(__common35);
                                                                                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__common10, 3),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_141) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__44) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()(manifestActivity), true)
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__common31, 5),
                                                                                                            () -> {
                                                                                                                (__lhs_0_139) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__lhs_0_138) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(dCLA),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )())
                                                        }(self_191 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common58);
                                                        __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(self_157 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_191);
                                                        __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_157))), __core__unBData(__core__headList(self_191)));
                                                        __core__ifThenElse(
                                                            cond,
                                                            () -> {
                                                                ()
                                                            },
                                                            () -> {
                                                                error()
                                                            }
                                                        )(), self_191))
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__common17, 5),
                                                        () -> {
                                                            (__lhs_0_132) -> {
                                                                __common24 = __core__sndPair(__core__unConstrData(__lhs_0_132));
                                                                seed_4 = __core__headList(__common24);
                                                                (dataTypePurpose_1) -> {
                                                                    cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__common58);
                                                                    __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_3, false);
                                                                    __core__ifThenElse(
                                                                        cond,
                                                                        () -> {
                                                                            ()
                                                                        },
                                                                        () -> {
                                                                            error()
                                                                        }
                                                                    )(), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1, cctx_3, dataTypePurpose_1);
                                                                    tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);
                                                                    (purpose_4) -> {
                                                                        __core__ifThenElse(
                                                                            __core__ifThenElse(
                                                                                __core__ifThenElse(
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoMintHelpers__validateUutMinting(__common57, seed_4, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_4)), __core__mkNilData(())), true, tnFactory, false, ()),
                                                                                        () -> {
                                                                                            true
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )(),
                                                                                    () -> {
                                                                                        __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1, cctx_3, __core__encodeUtf8(tnFactory(purpose_4)), dataTypePurpose_1)
                                                                                    },
                                                                                    () -> {
                                                                                        false
                                                                                    }
                                                                                )(),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )(),
                                                                            () -> {
                                                                                (self_181) -> {
                                                                                    true
                                                                                }(__cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(policyDelegateInput);
                                                                                __common30 = __core__fstPair(__core__unConstrData(__cond_17));
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__common30, 3),
                                                                                    () -> {
                                                                                        (__lhs_0_30) -> {
                                                                                            ma_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_30)));
                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                __core__chooseData(ma_1, () -> {
                                                                                                    true
                                                                                                }, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    false
                                                                                                })(),
                                                                                                () -> {
                                                                                                    (__lhs_0_31) -> {
                                                                                                        fields_72 = __core__sndPair(__core__unConstrData(__lhs_0_31));
                                                                                                        cond = __core__equalsData(seed_4, __core__chooseList(fields_72, () -> {
                                                                                                            error()
                                                                                                        }, () -> {
                                                                                                            __core__headList__safe(fields_72)
                                                                                                        })());
                                                                                                        __core__ifThenElse(
                                                                                                            cond,
                                                                                                            () -> {
                                                                                                                ()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__21) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                }
                                                                                            )()(ma_1), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(policyDelegateInput))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__common30, 8),
                                                                                            () -> {
                                                                                                (__lhs_0_27) -> {
                                                                                                    activities = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_27))));
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__ifThenElse(
                                                                                                            __core__lessThanEqualsInteger(__helios__common__length(activities), 0),
                                                                                                            false,
                                                                                                            true
                                                                                                        ),
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    )(), foundWithThisSeed = __helios__common__filter(activities, (a_14) -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(a_14)), 3),
                                                                                                            () -> {
                                                                                                                (__lhs_0_28) -> {
                                                                                                                    ma = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_28)));
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__chooseData(ma, () -> {
                                                                                                                            true
                                                                                                                        }, () -> {
                                                                                                                            false
                                                                                                                        }, () -> {
                                                                                                                            false
                                                                                                                        }, () -> {
                                                                                                                            false
                                                                                                                        }, () -> {
                                                                                                                            false
                                                                                                                        })(),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_29) -> {
                                                                                                                                index_11 = __core__fstPair(__core__unConstrData(__lhs_0_29));
                                                                                                                                fields_71 = __core__sndPair(__core__unConstrData(__lhs_0_29));
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __core__equalsInteger(index_11, index_11),
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )(), __core__ifThenElse(
                                                                                                                                    __core__equalsData(seed_4, __core__headList(fields_71)),
                                                                                                                                    () -> {
                                                                                                                                        true
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        false
                                                                                                                                    }
                                                                                                                                )())
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__20) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(ma)
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__19) -> {
                                                                                                                    false
                                                                                                                }
                                                                                                            }
                                                                                                        )()(a_14)
                                                                                                    }, __core__mkNilData(()));
                                                                                                    __common3 = __helios__common__length(foundWithThisSeed);
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__ifThenElse(
                                                                                                            __core__lessThanEqualsInteger(__common3, 0),
                                                                                                            false,
                                                                                                            true
                                                                                                        ),
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__equalsInteger(__common3, 1),
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    )(), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(policyDelegateInput))))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__18) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()(__cond_17))
                                                                            },
                                                                            () -> {
                                                                                false
                                                                            }
                                                                        )()
                                                                    }(self_262 = __core__headList(__core__tailList(__core__tailList(policyDelegateInput)));
                                                                    d = __core__headList(__core__sndPair(__core__unConstrData(self_262)));
                                                                    __core__decodeUtf8(__core__unBData(d))))
                                                                }(d = __core__headList(__core__tailList(__common24));
                                                                __core__decodeUtf8(__core__unBData(d)))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__common17, 6),
                                                                () -> {
                                                                    (__lhs_0_131) -> {
                                                                        __common25 = __core__sndPair(__core__unConstrData(__lhs_0_131));
                                                                        (dDataType) -> {
                                                                            recId_7 = __core__unBData(__core__headList(__core__tailList(__common25)));
                                                                            __common26 = __core__decodeUtf8(recId_7);
                                                                            cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__common58);
                                                                            __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_2, false);
                                                                            __core__ifThenElse(
                                                                                cond,
                                                                                () -> {
                                                                                    ()
                                                                                },
                                                                                () -> {
                                                                                    error()
                                                                                }
                                                                            )(), __core__chooseUnit((cond) -> {
                                                                                ()
                                                                            }((self_181) -> {
                                                                                true
                                                                            }(self_179 = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1, cctx_2, dDataType);
                                                                            __core__chooseUnit(__cond_25 = __core__headList(__core__tailList(self_179));
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_25)), 4),
                                                                                () -> {
                                                                                    (__lhs_0_40) -> {
                                                                                        ()
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__26) -> {
                                                                                        error()
                                                                                    }
                                                                                }
                                                                            )()(__cond_25), __cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(self_179);
                                                                            __common27 = __core__fstPair(__core__unConstrData(__cond_21));
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__common27, 2),
                                                                                () -> {
                                                                                    (__lhs_0_38) -> {
                                                                                        sa_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_38)));
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            __core__chooseData(sa_1, () -> {
                                                                                                true
                                                                                            }, () -> {
                                                                                                false
                                                                                            }, () -> {
                                                                                                false
                                                                                            }, () -> {
                                                                                                false
                                                                                            }, () -> {
                                                                                                false
                                                                                            })(),
                                                                                            () -> {
                                                                                                (__lhs_0_39) -> {
                                                                                                    __common8 = __core__unConstrData(__lhs_0_39);
                                                                                                    index_13 = __core__fstPair(__common8);
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__equalsInteger(index_13, index_13),
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    )(), foundRecId_1 = __core__unBData(__core__headList(__core__sndPair(__common8)));
                                                                                                    __core__ifThenElse(
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsByteString(recId_7, foundRecId_1),
                                                                                                            false,
                                                                                                            true
                                                                                                        ),
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        }
                                                                                                    )())
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__25) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()(sa_1), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(self_179))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__common27, 8),
                                                                                        () -> {
                                                                                            (__lhs_0_32) -> {
                                                                                                activities_1 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_32))));
                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                    __core__ifThenElse(
                                                                                                        __core__lessThanEqualsInteger(__helios__common__length(activities_1), 0),
                                                                                                        false,
                                                                                                        true
                                                                                                    ),
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        error()
                                                                                                    }
                                                                                                )(), actsOnThisRecord = __helios__common__filter(activities_1, (a_15) -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 5),
                                                                                                        () -> {
                                                                                                            (__lhs_0_37) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 6),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_36) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 7),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_35) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 2),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_33) -> {
                                                                                                                                        sa = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_33)));
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__chooseData(sa, () -> {
                                                                                                                                                true
                                                                                                                                            }, () -> {
                                                                                                                                                false
                                                                                                                                            }, () -> {
                                                                                                                                                false
                                                                                                                                            }, () -> {
                                                                                                                                                false
                                                                                                                                            }, () -> {
                                                                                                                                                false
                                                                                                                                            })(),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_34) -> {
                                                                                                                                                    index_12 = __core__fstPair(__core__unConstrData(__lhs_0_34));
                                                                                                                                                    fields_73 = __core__sndPair(__core__unConstrData(__lhs_0_34));
                                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                        __core__equalsInteger(index_12, index_12),
                                                                                                                                                        () -> {
                                                                                                                                                            ()
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    )(), foundRecId = __core__unBData(__core__headList(fields_73));
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __core__equalsByteString(recId_7, foundRecId),
                                                                                                                                                            false,
                                                                                                                                                            true
                                                                                                                                                        ),
                                                                                                                                                        () -> {
                                                                                                                                                            error()
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            true
                                                                                                                                                        }
                                                                                                                                                    )())
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__24) -> {
                                                                                                                                                    error()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(sa)
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__23) -> {
                                                                                                                                        false
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()(a_15)
                                                                                                }, __core__mkNilData(()));
                                                                                                __common2 = __helios__common__length(actsOnThisRecord);
                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                    __core__ifThenElse(
                                                                                                        __core__lessThanEqualsInteger(__common2, 0),
                                                                                                        false,
                                                                                                        true
                                                                                                    ),
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        error()
                                                                                                    }
                                                                                                )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                    __core__equalsInteger(__common2, 1),
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        error()
                                                                                                    }
                                                                                                )(), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(self_179))))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__22) -> {
                                                                                                error()
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()(__cond_21)))), (inputDD) -> {
                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__equalsData(inputDD, inputDD),
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__equalsString("settings", dDataType),
                                                                                    () -> {
                                                                                        (curSettingsId) -> {
                                                                                            ()
                                                                                        }((self_263) -> {
                                                                                            __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_263))))
                                                                                        }((oe) -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(oe)), 1),
                                                                                                () -> {
                                                                                                    (__lhs_0_58) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_57) -> {
                                                                                                        e_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_57)));
                                                                                                        some_2 = __core__unBData(__helios__common__mStruct_field(e_1, #746e));
                                                                                                        __core__constrData(0, __core__mkCons(__core__bData(some_2), __core__mkNilData(())))
                                                                                                    }
                                                                                                }
                                                                                            )()(oe)
                                                                                        }(charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_2), 0);
                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData)))), "currentSettings"))))
                                                                                    },
                                                                                    () -> {
                                                                                        ()
                                                                                    }
                                                                                )(), __core__ifThenElse(
                                                                                    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1, cctx_2, recId_7, dDataType),
                                                                                    () -> {
                                                                                        true
                                                                                    },
                                                                                    () -> {
                                                                                        false
                                                                                    }
                                                                                )()))
                                                                            }(hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_2, recId_7);
                                                                            (__cond_37) -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_37)), 1),
                                                                                    () -> {
                                                                                        (__lhs_0_70) -> {
                                                                                            error()
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__lhs_0_69) -> {
                                                                                            __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_69)))
                                                                                        }
                                                                                    }
                                                                                )()(__cond_37)
                                                                            }(self_133 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                                                                            __helios__common__find_safe(self_133, hasDD_1)))))
                                                                        }(d = __core__headList(__common25);
                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__common17, 7),
                                                                        () -> {
                                                                            (__lhs_0_129) -> {
                                                                                error()
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__common17, 2),
                                                                                () -> {
                                                                                    (__lhs_0_128) -> {
                                                                                        true
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__common17, 3),
                                                                                        () -> {
                                                                                            (__lhs_0_127) -> {
                                                                                                true
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__lhs_0_126) -> {
                                                                                                true
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()(__REDEEMER);
                            __core__chooseUnit(__core__ifThenElse(
                                checkNonDelegatedActivities,
                                () -> {
                                    ()
                                },
                                () -> {
                                    error()
                                }
                            )(), (cctx_7) -> {
                                __core__ifThenElse(
                                    __core__ifThenElse(
                                        __core__ifThenElse(
                                            __common19,
                                            () -> {
                                                (__lhs_0_121) -> {
                                                    true
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__common17, 0),
                                                    () -> {
                                                        (__lhs_0_117) -> {
                                                            CLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_117)));
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(CLA)), 0),
                                                                () -> {
                                                                    (__lhs_0_118) -> {
                                                                        error()
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__39) -> {
                                                                        true
                                                                    }
                                                                }
                                                            )()(CLA)
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__common17, 3),
                                                            () -> {
                                                                (__lhs_0_116) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__common17, 5),
                                                                    () -> {
                                                                        (__lhs_0_115) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__common17, 6),
                                                                            () -> {
                                                                                (__lhs_0_114) -> {
                                                                                    true
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__common17, 7),
                                                                                    () -> {
                                                                                        (__lhs_0_113) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__38) -> {
                                                                                            error()
                                                                                        }
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(__REDEEMER),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__equalsByteString(__core__serialiseData(__helios__scriptcontext__tx), __core__serialiseData(isD))
                                        }
                                    )(),
                                    () -> {
                                        true
                                    },
                                    () -> {
                                        error()
                                    }
                                )()
                            }(charter_1 = __core__headList(__core__tailList(__common58));
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 1),
                                () -> {
                                    (__lhs_0_80) -> {
                                        __common58
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 2),
                                        () -> {
                                            (__lhs_0_79) -> {
                                                __common58
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_75) -> {
                                                mph_20 = __core__unBData(__core__headList(__common58));
                                                charterAc_3 = __helios__assetclass__new(mph_20, #63686172746572);
                                                (__cond_42) -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_42)), 1),
                                                        () -> {
                                                            (__lhs_0_78) -> {
                                                                __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common58)
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_77) -> {
                                                                charterUtxo_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_77)));
                                                                datum_4 = __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_70 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));
                                                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70))))));
                                                                __helios__common__assert_constr_index(data_137, 0), 0);
                                                                __core__mkCons(__core__bData(mph_20), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))
                                                            }
                                                        }
                                                    )()(__cond_42)
                                                }(self_133 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                                                __helios__common__find_safe(self_133, (txin_5) -> {
                                                    a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_5))));
                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_3);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(a_3, 0),
                                                        false,
                                                        true
                                                    )
                                                }))
                                            }
                                        }
                                    )()
                                }
                            )()(charter_1))))))
                        }
                    },
                    () -> {
                        __common15 = __core__unConstrData(__REDEEMER);
                        __common16 = __core__fstPair(__common15);
                        __common18 = __core__equalsInteger(__common16, 1);
                        (__41) -> {
                            __core__ifThenElse(
                                __common18,
                                () -> {
                                    (__lhs_0_125) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __common20 = __core__equalsInteger(__common16, 0);
                                    __core__ifThenElse(
                                        __common20,
                                        () -> {
                                            (__lhs_0_124) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            (__42) -> {
                                                __core__ifThenElse(
                                                    __common18,
                                                    () -> {
                                                        (__lhs_0_123) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __common20,
                                                            () -> {
                                                                (__lhs_0_122) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                (__40) -> {
                                                                    false
                                                                }
                                                            }
                                                        )()
                                                    }
                                                )()(__REDEEMER)
                                            }
                                        }
                                    )()
                                }
                            )()(__REDEEMER)
                        }
                    }
                )()
            }
        )()(__DATUM),
        () -> {
            ()
        },
        () -> {
            error()
        }
    )()
}`, "unoptimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __helios__error = (msg) -> {
        __core__trace(msg, () -> {
            error()
        })()
    };
    __helios__print = (msg_1) -> {
        __core__trace(msg_1, ())
    };
    __helios__string____add = __core__appendString;
    __helios__assert = (cond, msg_2) -> {
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                __core__trace(msg_2, () -> {
                    error()
                })()
            }
        )()
    };
    __helios__bool____not = (b) -> {
        __core__ifThenElse(
            b,
            false,
            true
        )
    };
    __helios__bytearray____eq = __core__equalsByteString;
    __helios__bytearray____neq = (self, other) -> {
        __helios__bool____not(__helios__bytearray____eq(self, other))
    };
    __helios__int____to_data = __core__iData;
    __helios__int__serialize = (self_1) -> {
        () -> {
            __core__serialiseData(__helios__int____to_data(self_1))
        }
    };
    __helios__string__encode_utf8 = (self_2) -> {
        () -> {
            __core__encodeUtf8(self_2)
        }
    };
    __helios__bool__and = (a, b_1) -> {
        __core__ifThenElse(
            a(),
            () -> {
                b_1()
            },
            () -> {
                false
            }
        )()
    };
    __helios__bool__or = (a_1, b_2) -> {
        __core__ifThenElse(
            a_1(),
            () -> {
                true
            },
            () -> {
                b_2()
            }
        )()
    };
    __helios__string____to_data = (s) -> {
        __core__bData(__core__encodeUtf8(s))
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes) -> {
        n = __core__lengthOfByteString(bytes);
        recurse_1 = (recurse, i) -> {
            __core__ifThenElse(
                __core__equalsInteger(i, n),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes, i);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse(recurse, __core__addInteger(i, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __core__lessThanEqualsInteger(128, c_2)
                                                            }, () -> {
                                                                __core__lessThanEqualsInteger(c_2, 2047)
                                                            }),
                                                            () -> {
                                                                recurse(recurse, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __helios__bool__and(() -> {
                                                                                    __core__lessThanEqualsInteger(2048, c_1)
                                                                                }, () -> {
                                                                                    __core__lessThanEqualsInteger(c_1, 65535)
                                                                                }),
                                                                                () -> {
                                                                                    recurse(recurse, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __core__lessThanEqualsInteger(65536, c)
                                                                                                    }, () -> {
                                                                                                        __core__lessThanEqualsInteger(c, 2097151)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        recurse(recurse, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_1(recurse_1, 0)
    };
    __helios__int__to_hex = (self_3) -> {
        () -> {
            recurse_3 = (recurse_2) -> {
                (self_4, bytes_1) -> {
                    digit = __core__modInteger(self_4, 16);
                    bytes_2 = __core__consByteString(__core__ifThenElse(
                        __core__lessThanInteger(digit, 10),
                        __core__addInteger(digit, 48),
                        __core__addInteger(digit, 87)
                    ), bytes_1);
                    __core__ifThenElse(
                        __core__lessThanInteger(self_4, 16),
                        () -> {
                            bytes_2
                        },
                        () -> {
                            recurse_2(recurse_2)(__core__divideInteger(self_4, 16), bytes_2)
                        }
                    )()
                }
            };
            __core__decodeUtf8__safe(__core__ifThenElse(
                __core__lessThanInteger(self_3, 0),
                () -> {
                    __core__consByteString(45, recurse_3(recurse_3)(__core__multiplyInteger(self_3, -1), #))
                },
                () -> {
                    recurse_3(recurse_3)(self_3, #)
                }
            )())
        }
    };
    __helios__bytearray__show = (self_5) -> {
        () -> {
            recurse_5 = (recurse_4, self_6) -> {
                n_1 = __core__lengthOfByteString(self_6);
                __core__ifThenElse(
                    __core__lessThanInteger(0, n_1),
                    () -> {
                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_6, 0))());
                        __core__ifThenElse(
                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                            __core__consByteString(48, hex_bytes),
                            hex_bytes
                        )), recurse_4(recurse_4, __core__sliceByteString(1, n_1, self_6)))
                    },
                    () -> {
                        ""
                    }
                )()
            };
            recurse_5(recurse_5, self_5)
        }
    };
    __helios__bytearray__decode_utf8_safe = (self_7) -> {
        () -> {
            __core__ifThenElse(
                __helios__string__is_valid_utf8(self_7),
                () -> {
                    __core__decodeUtf8__safe(self_7)
                },
                () -> {
                    __helios__bytearray__show(self_7)()
                }
            )()
        }
    };
    __helios__value__ZERO = __core__mkNilPairData(());
    __helios__common__enum_fields = (self_8) -> {
        __core__sndPair(__core__unConstrData(self_8))
    };
    __helios__common__enum_field_0 = (self_9) -> {
        __core__headList(__helios__common__enum_fields(self_9))
    };
    __helios__common__enum_fields_after_0 = (self_10) -> {
        __core__tailList(__helios__common__enum_fields(self_10))
    };
    __helios__common__enum_field_1 = (self_11) -> {
        __core__headList(__helios__common__enum_fields_after_0(self_11))
    };
    __helios__value__new = (assetClass, i_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(0, i_1),
            () -> {
                __helios__value__ZERO
            },
            () -> {
                mph = __helios__common__enum_field_0(assetClass);
                tokenName = __helios__common__enum_field_1(assetClass);
                __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i_1)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
            }
        )()
    };
    __helios__common__list_0 = __core__mkNilData(());
    __helios__common__list_1 = (a_2) -> {
        __core__mkCons(a_2, __helios__common__list_0)
    };
    __helios__common__list_2 = (arg0, arg1) -> {
        __core__mkCons(arg0, __helios__common__list_1(arg1))
    };
    __helios__bytearray____to_data = __core__bData;
    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;
    __helios__assetclass__new = (mph_1, token_name) -> {
        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_1), __helios__bytearray____to_data(token_name)))
    };
    __helios__int____neg = (self_12) -> {
        __core__multiplyInteger(self_12, -1)
    };
    __helios__int____eq = __core__equalsInteger;
    __helios__mintingpolicyhash__show = __helios__bytearray__show;
    __helios__value__get = (self_13) -> {
        (assetClass_1) -> {
            mph_2 = __helios__common__enum_field_0(assetClass_1);
            tokenName_1 = __helios__common__enum_field_1(assetClass_1);
            outer_1 = (outer, inner, map) -> {
                __core__chooseList(map, () -> {
                    __helios__error(__helios__string____add(__helios__string____add("policy ", __helios__mintingpolicyhash__show(__core__unBData(mph_2))()), " not found"))
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),
                        () -> {
                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                        },
                        () -> {
                            outer(outer, inner, __core__tailList__safe(map))
                        }
                    )()
                })()
            };
            inner_2 = (inner_1, map_1) -> {
                __core__chooseList(map_1, () -> {
                    __helios__error("tokenName not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                        },
                        () -> {
                            inner_1(inner_1, __core__tailList__safe(map_1))
                        }
                    )()
                })()
            };
            outer_1(outer_1, inner_2, self_13)
        }
    };
    __helios__common__enum_fields_after_1 = (self_14) -> {
        __core__tailList(__helios__common__enum_fields_after_0(self_14))
    };
    __helios__common__enum_fields_after_2 = (self_15) -> {
        __core__tailList(__helios__common__enum_fields_after_1(self_15))
    };
    __helios__common__enum_fields_after_3 = (self_16) -> {
        __core__tailList(__helios__common__enum_fields_after_2(self_16))
    };
    __helios__common__enum_field_4 = (self_17) -> {
        __core__headList(__helios__common__enum_fields_after_3(self_17))
    };
    __helios__tx__minted = (self_18) -> {
        __core__unMapData(__helios__common__enum_field_4(self_18))
    };
    __helios__scriptcontext__data = __CONTEXT;
    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);
    __helios__common__assert_constr_index = (data, i_2) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_2),
            () -> {
                data
            },
            () -> {
                __helios__error("unexpected constructor index")
            }
        )()
    };
    __helios__string____eq = __core__equalsString;
    __helios__common____eq = __core__equalsData;
    __helios__assetclass____eq = __helios__common____eq;
    __helios__common__fold = (self_19, fn, z) -> {
        recurse_7 = (recurse_6, self_20, z_1) -> {
            __core__chooseList(self_20, () -> {
                z_1
            }, () -> {
                recurse_6(recurse_6, __core__tailList__safe(self_20), fn(z_1, __core__headList__safe(self_20)))
            })()
        };
        recurse_7(recurse_7, self_19, z)
    };
    __helios__int__show_digit = (x) -> {
        __core__addInteger(__core__modInteger(x, 10), 48)
    };
    __helios__int__show = (self_21) -> {
        () -> {
            __core__decodeUtf8__safe(recurse_9 = (recurse_8, i_3, bytes_3) -> {
                bytes_4 = __core__consByteString(__helios__int__show_digit(i_3), bytes_3);
                __core__ifThenElse(
                    __core__lessThanInteger(i_3, 10),
                    () -> {
                        bytes_4
                    },
                    () -> {
                        recurse_8(recurse_8, __core__divideInteger(i_3, 10), bytes_4)
                    }
                )()
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_21, 0),
                () -> {
                    __core__consByteString(45, recurse_9(recurse_9, __core__multiplyInteger(self_21, -1), #))
                },
                () -> {
                    recurse_9(recurse_9, self_21, #)
                }
            )())
        }
    };
    __helios__data__show = (self_22) -> {
        () -> {
            show_data_list = (list, show_item) -> {
                __helios__common__fold(list, (prev, item) -> {
                    __core__ifThenElse(
                        __helios__string____eq(prev, ""),
                        () -> {
                            show_item(item)
                        },
                        () -> {
                            __helios__string____add(prev, __helios__string____add(",", show_item(item)))
                        }
                    )()
                }, "")
            };
            (recurse_11, data_2) -> {
                recurse_11(recurse_11, data_2)
            }((recurse_10, data_1) -> {
                __core__chooseData(data_1, () -> {
                    pair_1 = __core__unConstrData__safe(data_1);
                    tag = __core__fstPair(pair_1);
                    fields = __core__sndPair(pair_1);
                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add("{", __helios__string____add(show_data_list(fields, (item_2) -> {
                        recurse_10(recurse_10, item_2)
                    }), "}")))
                }, () -> {
                    map_2 = __core__unMapData__safe(data_1);
                    __helios__string____add("{", __helios__string____add(show_data_list(map_2, (pair) -> {
                        key = recurse_10(recurse_10, __core__fstPair(pair));
                        value_1 = recurse_10(recurse_10, __core__sndPair(pair));
                        __helios__string____add(key, __helios__string____add(":", value_1))
                    }), "}"))
                }, () -> {
                    lst = __core__unListData__safe(data_1);
                    __helios__string____add("[", __helios__string____add(show_data_list(lst, (item_1) -> {
                        recurse_10(recurse_10, item_1)
                    }), "]"))
                }, () -> {
                    value = __core__unIData__safe(data_1);
                    __helios__int__show(value)()
                }, () -> {
                    bytes_5 = __core__unBData__safe(data_1);
                    __helios__bytearray__show(bytes_5)()
                })()
            }, self_22)
        }
    };
    __helios__data__show_constr_data = (callback_1) -> {
        (data_3) -> {
            callback_nok = __helios__data__show(data_3);
            __core__chooseData(data_3, () -> {
                pair_2 = __core__unConstrData__safe(data_3);
                callback_1(__core__fstPair(pair_2), __core__sndPair(pair_2))
            }, callback_nok, callback_nok, callback_nok, callback_nok)()
        }
    };
    __helios__data__show_field = (index, callback_2) -> {
        (list_1) -> {
            recurse_13 = (recurse_12) -> {
                (lst_1, i_4) -> {
                    __core__chooseList(lst_1, () -> {
                        "<missing>"
                    }, () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(i_4, 0),
                            () -> {
                                head = __core__headList__safe(lst_1);
                                callback_2(head)
                            },
                            () -> {
                                recurse_12(recurse_12)(__core__tailList__safe(lst_1), __core__subtractInteger(i_4, 1))
                            }
                        )()
                    })()
                }
            };
            recurse_13(recurse_13)(list_1, index)
        }
    };
    __helios__data__show_bdata = (callback_3) -> {
        (data_4) -> {
            callback_nok_1 = __helios__data__show(data_4);
            __core__chooseData(data_4, callback_nok_1, callback_nok_1, callback_nok_1, callback_nok_1, () -> {
                callback_3(__core__unBData__safe(data_4))
            })()
        }
    };
    __helios__assetclass__show = (self_23) -> {
        () -> {
            __helios__data__show_constr_data((tag_1, fields_1) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_1, 0),
                    () -> {
                        mph_str = __helios__data__show_field(0, __helios__data__show_bdata((mph_3) -> {
                            __helios__bytearray__show(mph_3)()
                        }))(fields_1);
                        token_name_str = __helios__data__show_field(1, __helios__data__show_bdata((token_name_1) -> {
                            __helios__bytearray__show(token_name_1)()
                        }))(fields_1);
                        __core__appendString(mph_str, __core__appendString(".", token_name_str))
                    },
                    () -> {
                        __helios__data__show(self_23)()
                    }
                )()
            })(self_23)
        }
    };
    __helios__string____neq = (self_24, other_1) -> {
        __helios__bool____not(__helios__string____eq(self_24, other_1))
    };
    __helios__int____gt = (a_3, b_3) -> {
        __helios__bool____not(__core__lessThanEqualsInteger(a_3, b_3))
    };
    __helios__common__unBData__safe = (data_5, callback_ok, callback_nok_2) -> {
        __core__chooseData(data_5, callback_nok_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
            callback_ok(__core__unBData__safe(data_5))
        })()
    };
    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;
    __helios__common__unMapData__safe = (data_6, callback_ok_1, callback_nok_3) -> {
        __core__chooseData(data_6, callback_nok_3, () -> {
            callback_ok_1(__core__unMapData__safe(data_6))
        }, callback_nok_3, callback_nok_3, callback_nok_3)()
    };
    __helios__common__unIData__safe = (data_7, callback_ok_2, callback_nok_4) -> {
        __core__chooseData(data_7, callback_nok_4, callback_nok_4, callback_nok_4, () -> {
            callback_ok_2(__core__unIData__safe(data_7))
        }, callback_nok_4)()
    };
    __helios__real__ONE = 1000000;
    __helios__real__floor = (self_25) -> {
        () -> {
            __core__divideInteger(self_25, __helios__real__ONE)
        }
    };
    __helios__int__abs = (self_26) -> {
        () -> {
            __core__ifThenElse(
                __core__lessThanInteger(self_26, 0),
                () -> {
                    __core__multiplyInteger(self_26, -1)
                },
                () -> {
                    self_26
                }
            )()
        }
    };
    __helios__real__abs = __helios__int__abs;
    __helios__int__show_padded = (self_27, n_2) -> {
        recurse_15 = (recurse_14, x_1, pos, bytes_6) -> {
            __core__ifThenElse(
                __core__equalsInteger(x_1, 0),
                () -> {
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(n_2, pos),
                        () -> {
                            bytes_6
                        },
                        () -> {
                            recurse_14(recurse_14, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_6))
                        }
                    )()
                },
                () -> {
                    recurse_14(recurse_14, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__helios__int__show_digit(x_1), bytes_6))
                }
            )()
        };
        recurse_15(recurse_15, self_27, 0, #)
    };
    __helios__int____mod = __core__modInteger;
    __helios__real__PRECISION = 6;
    __helios__real__show = (self_28) -> {
        () -> {
            show_positive = (x_2) -> {
                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_2)())())(), __helios__string____add(".", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_2, __helios__real__ONE), __helios__real__PRECISION))))
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_28, 0),
                () -> {
                    __helios__string____add("-", show_positive(__core__multiplyInteger(self_28, -1)))
                },
                () -> {
                    show_positive(self_28)
                }
            )()
        }
    };
    __helios__value__show = (self_29) -> {
        (__useopt__ada, ada) -> {
            __helios__common__fold(self_29, (prev_1, pair_3) -> {
                mph_data = __core__fstPair(pair_3);
                tokens_data = __core__sndPair(pair_3);
                __helios__string____add(prev_1, __helios__common__unBData__safe(mph_data, (mph_4) -> {
                    __helios__string____add(__core__ifThenElse(
                        __helios__mintingpolicyhash____eq(mph_4, #),
                        () -> {
                            ""
                        },
                        () -> {
                            __helios__string____add(__helios__mintingpolicyhash__show(mph_4)(), "
")
                        }
                    )(), __helios__common__unMapData__safe(tokens_data, (tokens) -> {
                        __helios__common__fold(tokens, (prev_2, pair_4) -> {
                            token_name_data = __core__fstPair(pair_4);
                            qty_data = __core__sndPair(pair_4);
                            __helios__common__unBData__safe(token_name_data, (token_name_2) -> {
                                __helios__common__unIData__safe(qty_data, (qty) -> {
                                    __core__ifThenElse(
                                        __helios__mintingpolicyhash____eq(mph_4, #),
                                        () -> {
                                            __core__ifThenElse(
                                                __helios__bool__and(() -> {
                                                    __useopt__ada
                                                }, () -> {
                                                    ada
                                                }),
                                                () -> {
                                                    __helios__string____add("ada ", __helios__string____add(__helios__real__show(qty)(), "
"))
                                                },
                                                () -> {
                                                    __helios__string____add("lovelace ", __helios__string____add(__helios__int__show(qty)(), "
"))
                                                }
                                            )()
                                        },
                                        () -> {
                                            __helios__string____add("  .", __helios__string____add(__helios__bytearray__decode_utf8_safe(token_name_2)(), __helios__string____add(" ", __helios__string____add(__helios__int__show(qty)(), "
"))))
                                        }
                                    )()
                                }, () -> {
                                    ""
                                })
                            }, () -> {
                                ""
                            })
                        }, prev_1)
                    }, () -> {
                        ""
                    }))
                }, () -> {
                    ""
                }))
            }, "")
        }
    };
    __helios__int____neq = (self_30, other_2) -> {
        __helios__bool____not(__helios__int____eq(self_30, other_2))
    };
    __helios__int____sub = __core__subtractInteger;
    __helios__value__to_map = (self_31) -> {
        () -> {
            self_31
        }
    };
    __helios__string__show = (self_32) -> {
        () -> {
            __core__appendString("'", __core__appendString(self_32, "'"))
        }
    };
    __helios__txinput____eq = __helios__common____eq;
    __helios__bool__show = (self_33) -> {
        () -> {
            __core__ifThenElse(
                self_33,
                "true",
                "false"
            )
        }
    };
    __helios__bool__trace = (self_34) -> {
        (prefix) -> {
            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_34)()), self_34)
        }
    };
    __helios__txoutput__value = (self_35) -> {
        __core__unMapData(__helios__common__enum_field_1(self_35))
    };
    __helios__txinput__output = __helios__common__enum_field_1;
    __helios__txinput__value = (self_36) -> {
        __helios__txoutput__value(__helios__txinput__output(self_36))
    };
    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);
    __helios__scriptcontext__get_spending_purpose_output_id = () -> {
        __helios__common__enum_field_0(__helios__scriptcontext__purpose)
    };
    __helios__txinput__output_id = __helios__common__enum_field_0;
    __helios__tx__inputs = (self_37) -> {
        __core__unListData(__helios__common__enum_field_0(self_37))
    };
    __helios__scriptcontext__get_current_input = () -> {
        id = __helios__scriptcontext__get_spending_purpose_output_id();
        recurse_17 = (recurse_16, lst_2) -> {
            __core__chooseList(lst_2, () -> {
                __helios__error("not found")
            }, () -> {
                item_3 = __core__headList__safe(lst_2);
                __core__ifThenElse(
                    __core__equalsData(__helios__txinput__output_id(item_3), id),
                    () -> {
                        item_3
                    },
                    () -> {
                        recurse_16(recurse_16, __core__tailList__safe(lst_2))
                    }
                )()
            })()
        };
        recurse_17(recurse_17, __helios__tx__inputs(__helios__scriptcontext__tx))
    };
    __helios__bytearray__from_data = __core__unBData;
    __helios__string__from_data = (d) -> {
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__common__length = (lst_3) -> {
        recurse_19 = (recurse_18, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_19(recurse_19, lst_3)
    };
    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {
        recurse_21 = (recurse_20, self_39, key_2) -> {
            __core__chooseList(self_39, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_39);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_38, key_1)
    };
    __helios__common__enum_tag_equals = (data_8, i_5) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_8)), i_5)
    };
    __helios__option__NONE_FUNC = (callback_4) -> {
        callback_4(false, ())
    };
    __helios__option__SOME_FUNC = (some) -> {
        (callback_5) -> {
            callback_5(true, some)
        }
    };
    __helios__bytearray__from_data_safe = (data_9) -> {
        __core__chooseData(data_9, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unBData__safe(data_9))
        })()
    };
    __helios__int__from_data_safe = (data_10) -> {
        __core__chooseData(data_10, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unIData__safe(data_10))
        }, () -> {
            __helios__option__NONE_FUNC
        })()
    };
    __helios__common__all = (self_40, fn_1) -> {
        recurse_23 = (recurse_22, self_41, fn_2) -> {
            __core__chooseList(self_41, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_41)),
                    () -> {
                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_23(recurse_23, self_40, fn_1)
    };
    __helios__common__identity = (self_42) -> {
        self_42
    };
    __helios__assetclass____to_data = __helios__common__identity;
    __helios__assetclass__from_data = __helios__common__identity;
    __helios__data__from_data = __helios__common__identity;
    __helios__bool__from_data = (d_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),
            false,
            true
        )
    };
    __helios__int__from_data = __core__unIData;
    __helios__common__serialize = (self_43) -> {
        () -> {
            __core__serialiseData(self_43)
        }
    };
    __helios__tx__serialize = __helios__common__serialize;
    __helios__common__find_safe = (self_44, fn_3, callback_6) -> {
        recurse_25 = (recurse_24, self_45, fn_4) -> {
            __core__chooseList(self_45, () -> {
                __core__constrData(1, __helios__common__list_0)
            }, () -> {
                head_2 = __core__headList__safe(self_45);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__constrData(0, __helios__common__list_1(callback_6(head_2)))
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(self_45), fn_4)
                    }
                )()
            })()
        };
        recurse_25(recurse_25, self_44, fn_3)
    };
    __helios__string__is_valid_data = (data_11) -> {
        __core__chooseData(data_11, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__string__is_valid_utf8(__core__unBData__safe(data_11))
        })()
    };
    __helios__bytearray__is_valid_data = (data_12) -> {
        __core__chooseData(data_12, false, false, false, false, true)
    };
    __helios__txoutputid__from_data = __helios__common__identity;
    __helios__common__test_constr_data_2 = (data_13, index_1, test_a, test_b) -> {
        __core__chooseData(data_13, () -> {
            pair_5 = __core__unConstrData__safe(data_13);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_5), index_1),
                () -> {
                    fields_2 = __core__sndPair(pair_5);
                    __core__chooseList(fields_2, () -> {
                        false
                    }, () -> {
                        __core__ifThenElse(
                            test_a(__core__headList__safe(fields_2)),
                            () -> {
                                tail = __core__tailList__safe(fields_2);
                                __core__chooseList(tail, () -> {
                                    false
                                }, () -> {
                                    __core__ifThenElse(
                                        test_b(__core__headList__safe(tail)),
                                        () -> {
                                            __core__chooseList(__core__tailList__safe(tail), () -> {
                                                true
                                            }, () -> {
                                                false
                                            })()
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data_fixed_length = (n_3) -> {
        (data_14) -> {
            __core__chooseData(data_14, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_7 = __core__unBData__safe(data_14);
                __core__ifThenElse(
                    __core__equalsInteger(__core__lengthOfByteString(bytes_7), n_3),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__txid__is_valid_data = (data_15) -> {
        __core__chooseData(data_15, () -> {
            pair_6 = __core__unConstrData__safe(data_15);
            index_2 = __core__fstPair(pair_6);
            fields_3 = __core__sndPair(pair_6);
            __core__ifThenElse(
                __core__equalsInteger(0, index_2),
                () -> {
                    __core__chooseList(fields_3, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_3), () -> {
                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_3))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__int__is_valid_data = (data_16) -> {
        __core__chooseData(data_16, false, false, false, true, false)
    };
    __helios__txoutputid__is_valid_data = (data_17) -> {
        __helios__common__test_constr_data_2(data_17, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)
    };
    __helios__data__is_valid_data = (data_18) -> {
        true
    };
    __helios__value__contains_policy = (self_46) -> {
        (mph_5) -> {
            mph_6 = __helios__mintingpolicyhash____to_data(mph_5);
            recurse_27 = (recurse_26, map_3) -> {
                __core__chooseList(map_3, () -> {
                    false
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mph_6),
                        () -> {
                            true
                        },
                        () -> {
                            recurse_26(recurse_26, __core__tailList__safe(map_3))
                        }
                    )()
                })()
            };
            recurse_27(recurse_27, self_46)
        }
    };
    __helios__value__from_map = __helios__common__identity;
    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;
    __helios__value__is_zero_inner = (tokens_1) -> {
        recurse_29 = (recurse_28, tokens_2) -> {
            __core__chooseList(tokens_2, () -> {
                true
            }, () -> {
                __helios__bool__and(() -> {
                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)
                }, () -> {
                    recurse_28(recurse_28, __core__tailList__safe(tokens_2))
                })
            })()
        };
        recurse_29(recurse_29, tokens_1)
    };
    __helios__value__is_zero = (self_47) -> {
        () -> {
            recurse_31 = (recurse_30, map_4) -> {
                __core__chooseList(map_4, () -> {
                    true
                }, () -> {
                    __helios__bool__and(() -> {
                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_4))))
                    }, () -> {
                        recurse_30(recurse_30, __core__tailList__safe(map_4))
                    })
                })()
            };
            recurse_31(recurse_31, self_47)
        }
    };
    __helios__value__get_policy = (self_48) -> {
        (mph_7) -> {
            mph_8 = __helios__mintingpolicyhash____to_data(mph_7);
            recurse_33 = (recurse_32, map_5) -> {
                __core__chooseList(map_5, () -> {
                    __helios__error("policy not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_5)), mph_8),
                        () -> {
                            __core__unMapData(__core__sndPair(__core__headList__safe(map_5)))
                        },
                        () -> {
                            recurse_32(recurse_32, __core__tailList__safe(map_5))
                        }
                    )()
                })()
            };
            recurse_33(recurse_33, self_48)
        }
    };
    __helios__value__get_inner_map_int = (map_6, key_3) -> {
        recurse_35 = (recurse_34, map_7, key_4) -> {
            __core__chooseList(map_7, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), key_4),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_7)))
                    },
                    () -> {
                        recurse_34(recurse_34, __core__tailList__safe(map_7), key_4)
                    }
                )()
            })()
        };
        recurse_35(recurse_35, map_6, key_3)
    };
    __helios__value__get_map_keys = (map_8) -> {
        recurse_37 = (recurse_36, map_9) -> {
            __core__chooseList(map_9, () -> {
                __helios__common__list_0
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_9)), recurse_36(recurse_36, __core__tailList__safe(map_9)))
            })()
        };
        recurse_37(recurse_37, map_8)
    };
    __helios__common__any = (self_49, fn_5) -> {
        recurse_39 = (recurse_38, self_50, fn_6) -> {
            __core__chooseList(self_50, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_6(__core__headList__safe(self_50)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_38(recurse_38, __core__tailList__safe(self_50), fn_6)
                    }
                )()
            })()
        };
        recurse_39(recurse_39, self_49, fn_5)
    };
    __helios__common__is_in_bytearray_list = (lst_5, key_5) -> {
        __helios__common__any(lst_5, (item_4) -> {
            __core__equalsData(item_4, key_5)
        })
    };
    __helios__common__concat = (a_4, b_4) -> {
        recurse_41 = (recurse_40, lst_6, rem) -> {
            __core__chooseList(rem, () -> {
                lst_6
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_40(recurse_40, lst_6, __core__tailList__safe(rem)))
            })()
        };
        recurse_41(recurse_41, b_4, a_4)
    };
    __helios__value__merge_map_keys = (a_5, b_5) -> {
        aKeys = __helios__value__get_map_keys(a_5);
        recurse_43 = (recurse_42, keys, map_10) -> {
            __core__chooseList(map_10, () -> {
                __helios__common__list_0
            }, () -> {
                key_6 = __core__fstPair(__core__headList__safe(map_10));
                __core__ifThenElse(
                    __helios__common__is_in_bytearray_list(aKeys, key_6),
                    () -> {
                        recurse_42(recurse_42, keys, __core__tailList__safe(map_10))
                    },
                    () -> {
                        __core__mkCons(key_6, recurse_42(recurse_42, keys, __core__tailList__safe(map_10)))
                    }
                )()
            })()
        };
        uniqueBKeys = recurse_43(recurse_43, aKeys, b_5);
        __helios__common__concat(aKeys, uniqueBKeys)
    };
    __helios__value__add_or_subtract_inner = (op) -> {
        (a_6, b_6) -> {
            recurse_45 = (recurse_44, keys_1, result) -> {
                __core__chooseList(keys_1, () -> {
                    result
                }, () -> {
                    key_7 = __core__headList__safe(keys_1);
                    tail_1 = recurse_44(recurse_44, __core__tailList__safe(keys_1), result);
                    sum = op(__helios__value__get_inner_map_int(a_6, key_7), __helios__value__get_inner_map_int(b_6, key_7));
                    __core__ifThenElse(
                        __core__equalsInteger(sum, 0),
                        () -> {
                            tail_1
                        },
                        () -> {
                            __core__mkCons(__core__mkPairData(key_7, __core__iData(sum)), tail_1)
                        }
                    )()
                })()
            };
            recurse_45(recurse_45, __helios__value__merge_map_keys(a_6, b_6), __core__mkNilPairData(()))
        }
    };
    __helios__value__get_inner_map = (map_11, mph_9) -> {
        recurse_47 = (recurse_46, map_12) -> {
            __core__chooseList(map_12, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_12)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_12)))
                    },
                    () -> {
                        recurse_46(recurse_46, __core__tailList__safe(map_12))
                    }
                )()
            })()
        };
        recurse_47(recurse_47, map_11)
    };
    __helios__value__add_or_subtract = (a_7, b_7, op_1) -> {
        recurse_49 = (recurse_48, keys_2, result_1) -> {
            __core__chooseList(keys_2, () -> {
                result_1
            }, () -> {
                key_8 = __core__headList__safe(keys_2);
                tail_2 = recurse_48(recurse_48, __core__tailList__safe(keys_2), result_1);
                item_5 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_7, key_8), __helios__value__get_inner_map(b_7, key_8));
                __core__chooseList(item_5, () -> {
                    tail_2
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_8, __core__mapData(item_5)), tail_2)
                })()
            })()
        };
        recurse_49(recurse_49, __helios__value__merge_map_keys(a_7, b_7), __core__mkNilPairData(()))
    };
    __helios__value____add = (a_8, b_8) -> {
        __helios__value__add_or_subtract(a_8, b_8, __core__addInteger)
    };
    __helios__common__map = (self_51, fn_7, init) -> {
        recurse_51 = (recurse_50, rem_1, lst_7) -> {
            __core__chooseList(rem_1, () -> {
                lst_7
            }, () -> {
                __core__mkCons(fn_7(__core__headList__safe(rem_1)), recurse_50(recurse_50, __core__tailList__safe(rem_1), lst_7))
            })()
        };
        recurse_51(recurse_51, self_51, init)
    };
    __helios__value____to_data = __core__mapData;
    __helios__value__value = __helios__common__identity;
    __helios__value__from_data = __core__unMapData;
    __helios__common__insert_in_sorted = (x_3, lst_8, comp) -> {
        recurse_53 = (recurse_52, lst_9) -> {
            __core__chooseList(lst_9, () -> {
                __core__mkCons(x_3, lst_9)
            }, () -> {
                head_3 = __core__headList__safe(lst_9);
                __core__ifThenElse(
                    comp(x_3, head_3),
                    () -> {
                        __core__mkCons(x_3, lst_9)
                    },
                    () -> {
                        __core__mkCons(head_3, recurse_52(recurse_52, __core__tailList__safe(lst_9)))
                    }
                )()
            })()
        };
        recurse_53(recurse_53, lst_8)
    };
    __helios__common__sort = (lst_10, comp_1) -> {
        recurse_55 = (recurse_54, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                (head_4, tail_3) -> {
                    __helios__common__insert_in_sorted(head_4, tail_3, comp_1)
                }(__core__headList__safe(lst_11), recurse_54(recurse_54, __core__tailList__safe(lst_11)))
            })()
        };
        recurse_55(recurse_55, lst_10)
    };
    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;
    __helios__common__filter = (self_52, fn_8, nil) -> {
        recurse_57 = (recurse_56, self_53, fn_9) -> {
            __core__chooseList(self_53, () -> {
                nil
            }, () -> {
                head_5 = __core__headList__safe(self_53);
                __core__ifThenElse(
                    fn_9(head_5),
                    () -> {
                        __core__mkCons(head_5, recurse_56(recurse_56, __core__tailList__safe(self_53), fn_9))
                    },
                    () -> {
                        recurse_56(recurse_56, __core__tailList__safe(self_53), fn_9)
                    }
                )()
            })()
        };
        recurse_57(recurse_57, self_52, fn_8)
    };
    __helios__common__filter_map = (self_54, fn_10) -> {
        __helios__common__filter(self_54, fn_10, __core__mkNilPairData(()))
    };
    __helios__bytearray____lt = __core__lessThanByteString;
    __helios__int__max = (a_9, b_9) -> {
        __core__ifThenElse(
            __core__lessThanInteger(a_9, b_9),
            b_9,
            a_9
        )
    };
    __helios__common__slice_bytearray = (self_55, selfLengthFn) -> {
        (start, end) -> {
            normalize = (pos_1) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(pos_1, 0),
                    () -> {
                        __core__addInteger(__core__addInteger(selfLengthFn(self_55), 1), pos_1)
                    },
                    () -> {
                        pos_1
                    }
                )()
            };
            fn_12 = (start_1) -> {
                fn_11 = (end_1) -> {
                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_55)
                };
                fn_11(normalize(end))
            };
            fn_12(normalize(start))
        }
    };
    __helios__bytearray__slice = (self_56) -> {
        __helios__common__slice_bytearray(self_56, __core__lengthOfByteString)
    };
    __helios__bytearray__blake2b = (self_57) -> {
        () -> {
            __core__blake2b_256(self_57)
        }
    };
    __helios__bytearray__length = __core__lengthOfByteString;
    __helios__bytearray____add = __core__appendByteString;
    __helios__txid__serialize = __helios__common__serialize;
    __helios__txoutputid__index = (self_58) -> {
        __helios__int__from_data(__helios__common__enum_field_1(self_58))
    };
    __helios__txoutputid__tx_id = __helios__common__enum_field_0;
    __helios__common__enum_fields_after_4 = (self_59) -> {
        __core__tailList(__helios__common__enum_fields_after_3(self_59))
    };
    __helios__common__enum_fields_after_5 = (self_60) -> {
        __core__tailList(__helios__common__enum_fields_after_4(self_60))
    };
    __helios__common__enum_fields_after_6 = (self_61) -> {
        __core__tailList(__helios__common__enum_fields_after_5(self_61))
    };
    __helios__common__enum_fields_after_7 = (self_62) -> {
        __core__tailList(__helios__common__enum_fields_after_6(self_62))
    };
    __helios__common__enum_fields_after_8 = (self_63) -> {
        __core__tailList(__helios__common__enum_fields_after_7(self_63))
    };
    __helios__common__enum_field_9 = (self_64) -> {
        __core__headList(__helios__common__enum_fields_after_8(self_64))
    };
    __helios__tx__redeemers = (self_65) -> {
        __core__unMapData(__helios__common__enum_field_9(self_65))
    };
    __helios__scriptpurpose__spending____is = (data_19) -> {
        __helios__common__enum_tag_equals(data_19, 1)
    };
    __helios__txoutputid____eq = __helios__common____eq;
    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;
    __helios__value__get_safe = (self_66) -> {
        (assetClass_2) -> {
            mintingPolicyHash = __helios__common__enum_field_0(assetClass_2);
            tokenName_2 = __helios__common__enum_field_1(assetClass_2);
            outer_3 = (outer_2, inner_3, map_13) -> {
                __core__chooseList(map_13, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), mintingPolicyHash),
                        () -> {
                            inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_13))))
                        },
                        () -> {
                            outer_2(outer_2, inner_3, __core__tailList__safe(map_13))
                        }
                    )()
                })()
            };
            inner_5 = (inner_4, map_14) -> {
                __core__chooseList(map_14, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_14)), tokenName_2),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_14)))
                        },
                        () -> {
                            inner_4(inner_4, __core__tailList__safe(map_14))
                        }
                    )()
                })()
            };
            outer_3(outer_3, inner_5, self_66)
        }
    };
    __helios__scriptpurpose____to_data = __helios__common__identity;
    __helios__txid__show = (self_67) -> {
        () -> {
            __helios__data__show_constr_data((tag_2, fields_4) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_2, 0),
                    () -> {
                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_8) -> {
                            __helios__bytearray__show(bytes_8)()
                        }))(fields_4)
                    },
                    () -> {
                        __helios__data__show(self_67)()
                    }
                )()
            })(self_67)
        }
    };
    __helios__data__show_idata = (callback_7) -> {
        (data_20) -> {
            callback_nok_5 = __helios__data__show(data_20);
            __core__chooseData(data_20, callback_nok_5, callback_nok_5, callback_nok_5, () -> {
                callback_7(__core__unIData__safe(data_20))
            }, callback_nok_5)()
        }
    };
    __helios__txoutputid__show = (self_68) -> {
        () -> {
            __helios__data__show_constr_data((tag_3, fields_5) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_3, 0),
                    () -> {
                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {
                            __helios__txid__show(tx_id_data)()
                        })(fields_5);
                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_6) -> {
                            __helios__int__show(i_6)()
                        }))(fields_5);
                        __core__appendString(tx_id_str, __core__appendString("#", index_str))
                    },
                    () -> {
                        __helios__data__show(self_68)()
                    }
                )()
            })(self_68)
        }
    };
    __helios__txoutputdatum__inline = (self_69) -> {
        pair_7 = __core__unConstrData(self_69);
        index_3 = __core__fstPair(pair_7);
        fields_6 = __core__sndPair(pair_7);
        __core__ifThenElse(
            __core__equalsInteger(index_3, 2),
            () -> {
                __core__headList(fields_6)
            },
            () -> {
                __helios__error("not an inline datum")
            }
        )()
    };
    __helios__common__enum_field_2 = (self_70) -> {
        __core__headList(__helios__common__enum_fields_after_1(self_70))
    };
    __helios__txoutput__datum = __helios__common__enum_field_2;
    __helios__txinput__datum = (self_71) -> {
        __helios__txoutput__datum(__helios__txinput__output(self_71))
    };
    __helios__tx__ref_inputs = (self_72) -> {
        __core__unListData(__helios__common__enum_field_1(self_72))
    };
    __helios__tx__outputs = (self_73) -> {
        __core__unListData(__helios__common__enum_field_2(self_73))
    };
    __helios__address____eq = __helios__common____eq;
    __helios__txoutput__address = __helios__common__enum_field_0;
    __helios__bytearray__decode_utf8 = (self_74) -> {
        () -> {
            __core__decodeUtf8(self_74)
        }
    };
    __helios__string__serialize = (self_75) -> {
        () -> {
            __core__serialiseData(__helios__string____to_data(self_75))
        }
    };
    __helios__txinput__address = (self_76) -> {
        __helios__txoutput__address(__helios__txinput__output(self_76))
    };
    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);
    __helios__txoutput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_0 = __core__tailList;
    __helios__common__struct_field_1 = (self_77) -> {
        __core__headList(__helios__common__struct_fields_after_0(self_77))
    };
    __helios__common__struct_field_0 = __core__headList;
    __helios__struct____to_data = __core__listData;
    __helios__struct__serialize = (self_78) -> {
        () -> {
            __core__serialiseData(__helios__struct____to_data(self_78))
        }
    };
    __helios__struct____eq = (self_79, other_3) -> {
        __core__equalsData(__helios__struct____to_data(self_79), __helios__struct____to_data(other_3))
    };
    __helios__value__compare_inner = (comp_2, a_10, b_10) -> {
        recurse_59 = (recurse_58, keys_3) -> {
            __core__chooseList(keys_3, () -> {
                true
            }, () -> {
                key_9 = __core__headList__safe(keys_3);
                __core__ifThenElse(
                    __helios__bool____not(comp_2(__helios__value__get_inner_map_int(a_10, key_9), __helios__value__get_inner_map_int(b_10, key_9))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_58(recurse_58, __core__tailList__safe(keys_3))
                    }
                )()
            })()
        };
        recurse_59(recurse_59, __helios__value__merge_map_keys(a_10, b_10))
    };
    __helios__value__compare = (a_11, b_11, comp_3) -> {
        recurse_61 = (recurse_60, keys_4) -> {
            __core__chooseList(keys_4, () -> {
                true
            }, () -> {
                key_10 = __core__headList__safe(keys_4);
                __core__ifThenElse(
                    __helios__bool____not(__helios__value__compare_inner(comp_3, __helios__value__get_inner_map(a_11, key_10), __helios__value__get_inner_map(b_11, key_10))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_60(recurse_60, __core__tailList__safe(keys_4))
                    }
                )()
            })()
        };
        recurse_61(recurse_61, __helios__value__merge_map_keys(a_11, b_11))
    };
    __helios__value____geq = (a_12, b_12) -> {
        __helios__value__compare(a_12, b_12, (a_qty, b_qty) -> {
            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))
        })
    };
    __helios__value__contains = (self_80) -> {
        (value_2) -> {
            __helios__value____geq(self_80, value_2)
        }
    };
    __helios__txoutput__sum_values = (outputs) -> {
        __helios__common__fold(outputs, (prev_3, txOutput) -> {
            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))
        }, __helios__value__ZERO)
    };
    __helios__common__filter_list = (self_81, fn_13) -> {
        __helios__common__filter(self_81, fn_13, __helios__common__list_0)
    };
    __helios__tx__filter_outputs = (self_82, fn_14) -> {
        __helios__common__filter_list(__helios__tx__outputs(self_82), fn_14)
    };
    __helios__address__credential = __helios__common__enum_field_0;
    __helios__spendingcredential__is_validator = (self_83) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_83)), 1)
    };
    __helios__validatorhash____eq = __helios__bytearray____eq;
    __helios__validatorhash__from_data = __helios__bytearray__from_data;
    __helios__spendingcredential__validator__hash = (self_84) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_84))
    };
    __helios__spendingcredential__validator__cast = (data_21) -> {
        __helios__common__assert_constr_index(data_21, 1)
    };
    __helios__txoutput__is_locked_by = (self_85) -> {
        (hash) -> {
            credential = __helios__address__credential(__helios__txoutput__address(self_85));
            __core__ifThenElse(
                __helios__spendingcredential__is_validator(credential),
                () -> {
                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))
                },
                () -> {
                    false
                }
            )()
        }
    };
    __helios__tx__outputs_locked_by = (self_86) -> {
        (vh) -> {
            __helios__tx__filter_outputs(self_86, (output) -> {
                __helios__txoutput__is_locked_by(output)(vh)
            })
        }
    };
    __helios__tx__value_locked_by = (self_87) -> {
        (vh_1) -> {
            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_87)(vh_1))
        }
    };
    __helios__txoutputdatum__serialize = __helios__common__serialize;
    __helios__data__constrdata____is = (data_22) -> {
        __core__chooseData(data_22, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__data__constrdata__fields = (data_23) -> {
        __core__sndPair(__core__unConstrData(data_23))
    };
    __helios__data__constrdata__tag = (data_24) -> {
        __core__fstPair(__core__unConstrData(data_24))
    };
    __helios__txinput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_1 = (self_88) -> {
        __core__tailList(__helios__common__struct_fields_after_0(self_88))
    };
    __helios__common__struct_fields_after_2 = (self_89) -> {
        __core__tailList(__helios__common__struct_fields_after_1(self_89))
    };
    __helios__common__struct_fields_after_3 = (self_90) -> {
        __core__tailList(__helios__common__struct_fields_after_2(self_90))
    };
    __helios__common__struct_field_4 = (self_91) -> {
        __core__headList(__helios__common__struct_fields_after_3(self_91))
    };
    __helios__common__struct_field_3 = (self_92) -> {
        __core__headList(__helios__common__struct_fields_after_2(self_92))
    };
    __helios__common__struct_field_2 = (self_93) -> {
        __core__headList(__helios__common__struct_fields_after_1(self_93))
    };
    __helios__txoutput__is_valid_data = (data_25) -> {
        __core__chooseData(data_25, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__txinput__is_valid_data = (data_26) -> {
        __helios__common__test_constr_data_2(data_26, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)
    };
    __helios__txinput____to_data = __helios__common__identity;
    __helios__common__enum_field_7 = (self_94) -> {
        __core__headList(__helios__common__enum_fields_after_6(self_94))
    };
    __helios__common__enum_field_6 = (self_95) -> {
        __core__headList(__helios__common__enum_fields_after_5(self_95))
    };
    __helios__common__enum_field_5 = (self_96) -> {
        __core__headList(__helios__common__enum_fields_after_4(self_96))
    };
    __helios__common__enum_field_3 = (self_97) -> {
        __core__headList(__helios__common__enum_fields_after_2(self_97))
    };
    __helios__common__mStruct_field_internal = (map_15, name) -> {
        name_data = __core__bData(name);
        recurse_63 = (recurse_62, map_16) -> {
            __core__chooseList(map_16, () -> {
                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name))), ": field not found"))
            }, () -> {
                head_6 = __core__headList__safe(map_16);
                key_11 = __core__fstPair(head_6);
                value_3 = __core__sndPair(head_6);
                __core__ifThenElse(
                    __core__equalsData(key_11, name_data),
                    () -> {
                        value_3
                    },
                    () -> {
                        recurse_62(recurse_62, __core__tailList__safe(map_16))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, map_15)
    };
    __helios__common__mStruct_field = (self_98, name_1) -> {
        __helios__common__mStruct_field_internal(__core__unMapData(self_98), name_1)
    };
    __helios__common__test_mStruct_field = (self_99, name_2, inner_test) -> {
        __core__chooseData(self_99, () -> {
            false
        }, () -> {
            map_17 = __core__unMapData__safe(self_99);
            recurse_65 = (recurse_64, map_18) -> {
                __core__chooseList(map_18, () -> {
                    __core__trace(__core__appendString("Warning: field not found: ", __core__decodeUtf8__safe(__core__unBData__safe(name_2))), () -> {
                        false
                    })()
                }, () -> {
                    head_7 = __core__headList__safe(map_18);
                    key_12 = __core__fstPair(head_7);
                    value_4 = __core__sndPair(head_7);
                    __core__ifThenElse(
                        __core__equalsData(key_12, name_2),
                        () -> {
                            inner_test(value_4)
                        },
                        () -> {
                            recurse_64(recurse_64, __core__tailList__safe(map_18))
                        }
                    )()
                })()
            };
            recurse_65(recurse_65, map_17)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__mintingpolicyhash__is_valid_data = (data_27) -> {
        __core__chooseData(data_27, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            bytes_9 = __core__unBData__safe(data_27);
            n_4 = __core__lengthOfByteString(bytes_9);
            __core__ifThenElse(
                __core__equalsInteger(n_4, 0),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(n_4, 28),
                        true,
                        false
                    )
                }
            )()
        })()
    };
    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__spendingcredential__is_valid_data = (data_28) -> {
        __core__chooseData(data_28, () -> {
            pair_8 = __core__unConstrData__safe(data_28);
            index_4 = __core__fstPair(pair_8);
            fields_7 = __core__sndPair(pair_8);
            __core__ifThenElse(
                __core__equalsInteger(index_4, 0),
                () -> {
                    __core__chooseList(fields_7, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_7), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_7))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_4, 1),
                        () -> {
                            __core__chooseList(fields_7, () -> {
                                false
                            }, () -> {
                                __core__chooseList(__core__tailList__safe(fields_7), () -> {
                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_7))
                                }, () -> {
                                    false
                                })()
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__common__test_list_head_data = (test_head, test_tail) -> {
        (list_2) -> {
            __core__chooseList(list_2, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    test_head(__core__headList(list_2)),
                    () -> {
                        test_tail(__core__tailList(list_2))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;
    __helios__common__test_list_empty = (list_3) -> {
        __core__chooseList(list_3, true, false)
    };
    __helios__stakingcredential__is_valid_data = (data_29) -> {
        __core__chooseData(data_29, () -> {
            pair_9 = __core__unConstrData__safe(data_29);
            tag_4 = __core__fstPair(pair_9);
            fields_8 = __core__sndPair(pair_9);
            __core__ifThenElse(
                __core__equalsInteger(tag_4, 0),
                () -> {
                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_8)
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(tag_4, 1),
                        () -> {
                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_8)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__stakingcredential]__is_valid_data = (data_30) -> {
        __core__chooseData(data_30, () -> {
            pair_10 = __core__unConstrData__safe(data_30);
            index_5 = __core__fstPair(pair_10);
            fields_9 = __core__sndPair(pair_10);
            __core__ifThenElse(
                __core__equalsInteger(index_5, 0),
                () -> {
                    __core__chooseList(fields_9, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_9), () -> {
                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_9))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_5, 1),
                        () -> {
                            __core__chooseList(fields_9, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__address__is_valid_data = (data_31) -> {
        __helios__common__test_constr_data_2(data_31, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)
    };
    __helios__validatorhash__show = __helios__bytearray__show;
    __helios__spendingcredential____eq = __helios__common____eq;
    __helios__validatorhash____to_data = __helios__bytearray____to_data;
    __helios__spendingcredential__new_validator = (hash_1) -> {
        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))
    };
    __helios__bool____to_data = (b_13) -> {
        __core__constrData(__core__ifThenElse(
            b_13,
            1,
            0
        ), __helios__common__list_0)
    };
    __helios__bytearray__is_valid_data_max_length = (n_5) -> {
        (data_32) -> {
            __core__chooseData(data_32, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_10 = __core__unBData__safe(data_32);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_10), n_5),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__assetclass__is_valid_data = (data_33) -> {
        __helios__common__test_constr_data_2(data_33, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))
    };
    __helios__data__mapdata____is = (data_34) -> {
        __core__chooseData(data_34, () -> {
            false
        }, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__scriptpurpose__from_data = __helios__common__identity;
    __module__StellarHeliosHelpers__TODO = (task) -> {
        __helios__print(__helios__string____add(__helios__string____add("  \u{1F7E5}  \u{1F633}\u{1F4A6}  TODO: ", task), "
"))
    };
    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion) -> {
        assertion_1 = __core__ifThenElse(
            __useopt__assertion,
            () -> {
                assertion
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__helios__print(__helios__string____add("\u2757 ", reqt)), __helios__assert(assertion_1, __helios__string____add("  \u274C\u274C ^ failed: ", reqt)))
    };
    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2) -> {
        assertion_3 = __core__ifThenElse(
            __useopt__assertion_1,
            () -> {
                assertion_2
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3), true)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {
        tn_1 = __core__ifThenElse(
            __useopt__tn,
            () -> {
                tn
            },
            () -> {
                ""
            }
        )();
        tnBytes_1 = __core__ifThenElse(
            __useopt__tnBytes,
            () -> {
                tnBytes
            },
            () -> {
                __helios__string__encode_utf8(tn_1)()
            }
        )();
        count_1 = __core__ifThenElse(
            __useopt__count,
            () -> {
                count
            },
            () -> {
                1
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), "missing reqd tn or tnBytes"), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), count_1))
    };
    __helios__list[__helios__txoutput]__find = (self_100) -> {
        (fn_15) -> {
            recurse_67 = (recurse_66, lst_12) -> {
                __core__chooseList(lst_12, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_6 = __helios__txoutput__from_data(__core__headList__safe(lst_12));
                    __core__ifThenElse(
                        fn_15(item_6),
                        () -> {
                            item_6
                        },
                        () -> {
                            recurse_66(recurse_66, __core__tailList__safe(lst_12))
                        }
                    )()
                })()
            };
            recurse_67(recurse_67, self_100)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length = (self_101) -> {
        __helios__common__length(self_101)
    };
    __helios__map[__helios__bytearray@__helios__int]__length = (self_102) -> {
        __helios__common__length(self_102)
    };
    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_19) -> {
        recurse_69 = (recurse_68, map_20) -> {
            __core__chooseList(map_20, () -> {
                true
            }, () -> {
                head_8 = __core__headList__safe(map_20);
                __core__ifThenElse(
                    __helios__bytearray__is_valid_data(__core__fstPair(head_8)),
                    () -> {
                        __core__ifThenElse(
                            __helios__int__is_valid_data(__core__sndPair(head_8)),
                            () -> {
                                recurse_68(recurse_68, __core__tailList__safe(map_20))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_69(recurse_69, map_19)
    };
    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_35) -> {
        map_21 = __core__unMapData(data_35);
        _ = __core__ifThenElse(
            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_21),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_21
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_103) -> {
        (key_13) -> {
            __helios__common__map_get(self_103, __helios__scriptpurpose____to_data(key_13), (x_4) -> {
                __helios__data__from_data(x_4)
            }, () -> {
                __helios__error("key not found")
            })
        }
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_104) -> {
        (fn_16) -> {
            recurse_71 = (recurse_70, map_22) -> {
                __core__chooseList(map_22, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_7 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_22)));
                    __core__ifThenElse(
                        fn_16(item_7),
                        () -> {
                            item_7
                        },
                        () -> {
                            recurse_70(recurse_70, __core__tailList__safe(map_22))
                        }
                    )()
                })()
            };
            recurse_71(recurse_71, self_104)
        }
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __helios__txinput__output_id(txInput);
        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);
        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {
            __cond = purpose;
            __core__ifThenElse(
                __helios__scriptpurpose__spending____is(__cond),
                () -> {
                    (sp) -> {
                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)
                    }
                },
                () -> {
                    (__1) -> {
                        false
                    }
                }
            )()(__cond)
        });
        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)
    };
    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_36) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_36, __core__bData(#747065), __helios__string__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_36, __core__bData(#406964), __helios__bytearray__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid data in AnyData.@id", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in AnyData.tpe", () -> {
                    false
                })()
            }
        )()
    };
    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_37) -> {
        ignore = __core__ifThenElse(
            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_37),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", ())
            }
        )();
        data_37
    };
    __module__StellarHeliosHelpers__AnyData[]__id = (self_105) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_105, #406964))
    };
    __module__StellarHeliosHelpers__AnyData[]__type = (self_106) -> {
        __helios__string__from_data(__helios__common__mStruct_field(self_106, #747065))
    };
    __helios__list[__helios__data]__head = (self_107) -> {
        __helios__data__from_data(__core__headList(self_107))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {
        __cond_1 = value_5;
        __core__ifThenElse(
            __helios__data__constrdata____is(__cond_1),
            () -> {
                (__lhs_0) -> {
                    fields_10 = __helios__data__constrdata__fields(__lhs_0);
                    __cond_2 = __helios__list[__helios__data]__head(fields_10);
                    __core__ifThenElse(
                        __helios__data__mapdata____is(__cond_2),
                        () -> {
                            (__lhs_0_1) -> {
                                __helios__list[__helios__data]__head(fields_10)
                            }
                        },
                        () -> {
                            (__3) -> {
                                __helios__error("bad cast from ConstrData{_, ...fields} to mStruct: first field must be a map")
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    __helios__error("bad cast to mStruct from non-ConstrData")
                }
            }
        )()(__cond_1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {
        (data_38) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_38),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_38),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_38),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {
        (data_39) -> {
            ignore_1 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_39),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateLifecycleActivity data", ())
                }
            )();
            data_39
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_40) -> {
        __helios__common__enum_tag_equals(data_40, 0)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_41) -> {
        __core__chooseData(data_41, () -> {
            pair_11 = __core__unConstrData__safe(data_41);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_11), 0),
                () -> {
                    data_42 = __core__listData(__core__sndPair(pair_11));
                    __core__chooseData(data_42, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_11 = __core__unListData__safe(data_42);
                        __core__chooseList(fields_11, () -> {
                            false
                        }, () -> {
                            head_9 = __core__headList__safe(fields_11);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_9),
                                () -> {
                                    fields_12 = __core__tailList__safe(fields_11);
                                    __core__chooseList(fields_12, () -> {
                                        false
                                    }, () -> {
                                        head_10 = __core__headList__safe(fields_12);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_10),
                                            () -> {
                                                fields_13 = __core__tailList__safe(fields_12);
                                                __core__chooseList(fields_13, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed = (self_108) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_108))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose = (self_109) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_109))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_43) -> {
        __helios__common__enum_tag_equals(data_43, 1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_44) -> {
        __core__chooseData(data_44, () -> {
            pair_12 = __core__unConstrData__safe(data_44);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_12), 1),
                () -> {
                    data_45 = __core__listData(__core__sndPair(pair_12));
                    __core__chooseData(data_45, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_14 = __core__unListData__safe(data_45);
                        __core__chooseList(fields_14, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is = (data_46) -> {
        __helios__common__enum_tag_equals(data_46, 2)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_47) -> {
        __core__chooseData(data_47, () -> {
            pair_13 = __core__unConstrData__safe(data_47);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_13), 2),
                () -> {
                    data_48 = __core__listData(__core__sndPair(pair_13));
                    __core__chooseData(data_48, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_15 = __core__unListData__safe(data_48);
                        __core__chooseList(fields_15, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {
        (data_49) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_49),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_49),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_49),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_49),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_49),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_49),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_49),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_49),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__from_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1) -> {
        (data_50) -> {
            ignore_2 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(data_50),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateRole data", ())
                }
            )();
            data_50
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_51) -> {
        __helios__common__enum_tag_equals(data_51, 0)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2 = (data_52) -> {
        __core__chooseData(data_52, () -> {
            pair_14 = __core__unConstrData__safe(data_52);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_14), 0),
                () -> {
                    data_53 = __core__listData(__core__sndPair(pair_14));
                    __core__chooseData(data_53, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_16 = __core__unListData__safe(data_53);
                        __core__chooseList(fields_16, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_54) -> {
        __helios__common__enum_tag_equals(data_54, 1)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2 = (data_55) -> {
        __core__chooseData(data_55, () -> {
            pair_15 = __core__unConstrData__safe(data_55);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_15), 1),
                () -> {
                    data_56 = __core__listData(__core__sndPair(pair_15));
                    __core__chooseData(data_56, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_17 = __core__unListData__safe(data_56);
                        __core__chooseList(fields_17, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is = (data_57) -> {
        __helios__common__enum_tag_equals(data_57, 2)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2 = (data_58) -> {
        __core__chooseData(data_58, () -> {
            pair_16 = __core__unConstrData__safe(data_58);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_16), 2),
                () -> {
                    data_59 = __core__listData(__core__sndPair(pair_16));
                    __core__chooseData(data_59, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_18 = __core__unListData__safe(data_59);
                        __core__chooseList(fields_18, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is = (data_60) -> {
        __helios__common__enum_tag_equals(data_60, 3)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2 = (data_61) -> {
        __core__chooseData(data_61, () -> {
            pair_17 = __core__unConstrData__safe(data_61);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_17), 3),
                () -> {
                    data_62 = __core__listData(__core__sndPair(pair_17));
                    __core__chooseData(data_62, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_19 = __core__unListData__safe(data_62);
                        __core__chooseList(fields_19, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is = (data_63) -> {
        __helios__common__enum_tag_equals(data_63, 4)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2 = (data_64) -> {
        __core__chooseData(data_64, () -> {
            pair_18 = __core__unConstrData__safe(data_64);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_18), 4),
                () -> {
                    data_65 = __core__listData(__core__sndPair(pair_18));
                    __core__chooseData(data_65, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_20 = __core__unListData__safe(data_65);
                        __core__chooseList(fields_20, () -> {
                            false
                        }, () -> {
                            head_11 = __core__headList__safe(fields_20);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_11),
                                () -> {
                                    fields_21 = __core__tailList__safe(fields_20);
                                    __core__chooseList(fields_21, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_110) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_110))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new = (self_111) -> {
        __core__constrData(4, __helios__common__list_1(__helios__string____to_data(self_111)))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is = (data_66) -> {
        __helios__common__enum_tag_equals(data_66, 5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2 = (data_67) -> {
        __core__chooseData(data_67, () -> {
            pair_19 = __core__unConstrData__safe(data_67);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_19), 5),
                () -> {
                    data_68 = __core__listData(__core__sndPair(pair_19));
                    __core__chooseData(data_68, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_22 = __core__unListData__safe(data_68);
                        __core__chooseList(fields_22, () -> {
                            false
                        }, () -> {
                            head_12 = __core__headList__safe(fields_22);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_12),
                                () -> {
                                    fields_23 = __core__tailList__safe(fields_22);
                                    __core__chooseList(fields_23, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_69) -> {
        __helios__common__enum_tag_equals(data_69, 6)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2 = (data_70) -> {
        __core__chooseData(data_70, () -> {
            pair_20 = __core__unConstrData__safe(data_70);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_20), 6),
                () -> {
                    data_71 = __core__listData(__core__sndPair(pair_20));
                    __core__chooseData(data_71, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_24 = __core__unListData__safe(data_71);
                        __core__chooseList(fields_24, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {
        __core__constrData(6, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_72) -> {
        __helios__common__enum_tag_equals(data_72, 7)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2 = (data_73) -> {
        __core__chooseData(data_73, () -> {
            pair_21 = __core__unConstrData__safe(data_73);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_21), 7),
                () -> {
                    data_74 = __core__listData(__core__sndPair(pair_21));
                    __core__chooseData(data_74, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_25 = __core__unListData__safe(data_74);
                        __core__chooseList(fields_25, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {
        (data_75) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_75),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_75),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_75),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_75),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_75),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__from_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1) -> {
        (data_76) -> {
            ignore_3 = __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(data_76),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestActivity data", ())
                }
            )();
            data_76
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is = (data_77) -> {
        __helios__common__enum_tag_equals(data_77, 0)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2 = (data_78) -> {
        __core__chooseData(data_78, () -> {
            pair_22 = __core__unConstrData__safe(data_78);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_22), 0),
                () -> {
                    data_79 = __core__listData(__core__sndPair(pair_22));
                    __core__chooseData(data_79, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_26 = __core__unListData__safe(data_79);
                        __core__chooseList(fields_26, () -> {
                            false
                        }, () -> {
                            head_13 = __core__headList__safe(fields_26);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_13),
                                () -> {
                                    fields_27 = __core__tailList__safe(fields_26);
                                    __core__chooseList(fields_27, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is = (data_80) -> {
        __helios__common__enum_tag_equals(data_80, 1)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2 = (data_81) -> {
        __core__chooseData(data_81, () -> {
            pair_23 = __core__unConstrData__safe(data_81);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_23), 1),
                () -> {
                    data_82 = __core__listData(__core__sndPair(pair_23));
                    __core__chooseData(data_82, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_28 = __core__unListData__safe(data_82);
                        __core__chooseList(fields_28, () -> {
                            false
                        }, () -> {
                            head_14 = __core__headList__safe(fields_28);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_14),
                                () -> {
                                    fields_29 = __core__tailList__safe(fields_28);
                                    __core__chooseList(fields_29, () -> {
                                        false
                                    }, () -> {
                                        head_15 = __core__headList__safe(fields_29);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_15),
                                            () -> {
                                                fields_30 = __core__tailList__safe(fields_29);
                                                __core__chooseList(fields_30, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is = (data_83) -> {
        __helios__common__enum_tag_equals(data_83, 2)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2 = (data_84) -> {
        __core__chooseData(data_84, () -> {
            pair_24 = __core__unConstrData__safe(data_84);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_24), 2),
                () -> {
                    data_85 = __core__listData(__core__sndPair(pair_24));
                    __core__chooseData(data_85, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_31 = __core__unListData__safe(data_85);
                        __core__chooseList(fields_31, () -> {
                            false
                        }, () -> {
                            head_16 = __core__headList__safe(fields_31);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_16),
                                () -> {
                                    fields_32 = __core__tailList__safe(fields_31);
                                    __core__chooseList(fields_32, () -> {
                                        false
                                    }, () -> {
                                        head_17 = __core__headList__safe(fields_32);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_17),
                                            () -> {
                                                fields_33 = __core__tailList__safe(fields_32);
                                                __core__chooseList(fields_33, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key = (self_112) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_112))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName = (self_113) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_113))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is = (data_86) -> {
        __helios__common__enum_tag_equals(data_86, 3)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2 = (data_87) -> {
        __core__chooseData(data_87, () -> {
            pair_25 = __core__unConstrData__safe(data_87);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_25), 3),
                () -> {
                    data_88 = __core__listData(__core__sndPair(pair_25));
                    __core__chooseData(data_88, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_34 = __core__unListData__safe(data_88);
                        __core__chooseList(fields_34, () -> {
                            false
                        }, () -> {
                            head_18 = __core__headList__safe(fields_34);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_18),
                                () -> {
                                    fields_35 = __core__tailList__safe(fields_34);
                                    __core__chooseList(fields_35, () -> {
                                        false
                                    }, () -> {
                                        head_19 = __core__headList__safe(fields_35);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_19),
                                            () -> {
                                                fields_36 = __core__tailList__safe(fields_35);
                                                __core__chooseList(fields_36, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2 = (data_89) -> {
        __core__chooseData(data_89, () -> {
            pair_26 = __core__unConstrData__safe(data_89);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_26), 4),
                () -> {
                    data_90 = __core__listData(__core__sndPair(pair_26));
                    __core__chooseData(data_90, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_37 = __core__unListData__safe(data_90);
                        __core__chooseList(fields_37, () -> {
                            false
                        }, () -> {
                            head_20 = __core__headList__safe(fields_37);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_20),
                                () -> {
                                    fields_38 = __core__tailList__safe(fields_37);
                                    __core__chooseList(fields_38, () -> {
                                        false
                                    }, () -> {
                                        head_21 = __core__headList__safe(fields_38);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_21),
                                            () -> {
                                                fields_39 = __core__tailList__safe(fields_38);
                                                __core__chooseList(fields_39, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {
        (data_91) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_91),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_91),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_91),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1) -> {
        (data_92) -> {
            ignore_4 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(data_92),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingDelegateAction data", ())
                }
            )();
            data_92
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is = (data_93) -> {
        __helios__common__enum_tag_equals(data_93, 0)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2 = (data_94) -> {
        __core__chooseData(data_94, () -> {
            pair_27 = __core__unConstrData__safe(data_94);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_27), 0),
                () -> {
                    data_95 = __core__listData(__core__sndPair(pair_27));
                    __core__chooseData(data_95, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_40 = __core__unListData__safe(data_95);
                        __core__chooseList(fields_40, () -> {
                            false
                        }, () -> {
                            head_22 = __core__headList__safe(fields_40);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_22),
                                () -> {
                                    fields_41 = __core__tailList__safe(fields_40);
                                    __core__chooseList(fields_41, () -> {
                                        false
                                    }, () -> {
                                        head_23 = __core__headList__safe(fields_41);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_23),
                                            () -> {
                                                fields_42 = __core__tailList__safe(fields_41);
                                                __core__chooseList(fields_42, () -> {
                                                    false
                                                }, () -> {
                                                    head_24 = __core__headList__safe(fields_42);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_24),
                                                        () -> {
                                                            fields_43 = __core__tailList__safe(fields_42);
                                                            __core__chooseList(fields_43, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed = (self_114) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_114))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose = (self_115) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_115))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_116) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_116))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is = (data_96) -> {
        __helios__common__enum_tag_equals(data_96, 1)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2 = (data_97) -> {
        __core__chooseData(data_97, () -> {
            pair_28 = __core__unConstrData__safe(data_97);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_28), 1),
                () -> {
                    data_98 = __core__listData(__core__sndPair(pair_28));
                    __core__chooseData(data_98, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_44 = __core__unListData__safe(data_98);
                        __core__chooseList(fields_44, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is = (data_99) -> {
        __helios__common__enum_tag_equals(data_99, 2)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2 = (data_100) -> {
        __core__chooseData(data_100, () -> {
            pair_29 = __core__unConstrData__safe(data_100);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_29), 2),
                () -> {
                    data_101 = __core__listData(__core__sndPair(pair_29));
                    __core__chooseData(data_101, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_45 = __core__unListData__safe(data_101);
                        __core__chooseList(fields_45, () -> {
                            false
                        }, () -> {
                            head_25 = __core__headList__safe(fields_45);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_25),
                                () -> {
                                    fields_46 = __core__tailList__safe(fields_45);
                                    __core__chooseList(fields_46, () -> {
                                        false
                                    }, () -> {
                                        head_26 = __core__headList__safe(fields_46);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_26),
                                            () -> {
                                                fields_47 = __core__tailList__safe(fields_46);
                                                __core__chooseList(fields_47, () -> {
                                                    false
                                                }, () -> {
                                                    head_27 = __core__headList__safe(fields_47);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_27),
                                                        () -> {
                                                            fields_48 = __core__tailList__safe(fields_47);
                                                            __core__chooseList(fields_48, () -> {
                                                                false
                                                            }, () -> {
                                                                head_28 = __core__headList__safe(fields_48);
                                                                __core__ifThenElse(
                                                                    __helios__assetclass__is_valid_data(head_28),
                                                                    () -> {
                                                                        fields_49 = __core__tailList__safe(fields_48);
                                                                        __core__chooseList(fields_49, true, false)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed = (self_117) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_117))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose = (self_118) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_118))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_119) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_119))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt = (self_120) -> {
        __helios__assetclass__from_data(__helios__common__enum_field_3(self_120))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {
        (data_102) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_102),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_102),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_102),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_102),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_102),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_102),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_102),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {
        (data_103) -> {
            ignore_5 = __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_103),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoLifecycleActivity data", ())
                }
            )();
            data_103
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_104) -> {
        __helios__common__enum_tag_equals(data_104, 0)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_105) -> {
        __core__chooseData(data_105, () -> {
            pair_30 = __core__unConstrData__safe(data_105);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_30), 0),
                () -> {
                    data_106 = __core__listData(__core__sndPair(pair_30));
                    __core__chooseData(data_106, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_50 = __core__unListData__safe(data_106);
                        __core__chooseList(fields_50, () -> {
                            false
                        }, () -> {
                            head_29 = __core__headList__safe(fields_50);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_29),
                                () -> {
                                    fields_51 = __core__tailList__safe(fields_50);
                                    __core__chooseList(fields_51, () -> {
                                        false
                                    }, () -> {
                                        head_30 = __core__headList__safe(fields_51);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_30),
                                            () -> {
                                                fields_52 = __core__tailList__safe(fields_51);
                                                __core__chooseList(fields_52, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed = (self_121) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_121))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose = (self_122) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_122))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_107) -> {
        __helios__common__enum_tag_equals(data_107, 1)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_108) -> {
        __core__chooseData(data_108, () -> {
            pair_31 = __core__unConstrData__safe(data_108);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_31), 1),
                () -> {
                    data_109 = __core__listData(__core__sndPair(pair_31));
                    __core__chooseData(data_109, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_53 = __core__unListData__safe(data_109);
                        __core__chooseList(fields_53, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_110) -> {
        __helios__common__enum_tag_equals(data_110, 2)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_111) -> {
        __core__chooseData(data_111, () -> {
            pair_32 = __core__unConstrData__safe(data_111);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_32), 2),
                () -> {
                    data_112 = __core__listData(__core__sndPair(pair_32));
                    __core__chooseData(data_112, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_54 = __core__unListData__safe(data_112);
                        __core__chooseList(fields_54, () -> {
                            false
                        }, () -> {
                            head_31 = __core__headList__safe(fields_54);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_31),
                                () -> {
                                    fields_55 = __core__tailList__safe(fields_54);
                                    __core__chooseList(fields_55, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_113) -> {
        __helios__common__enum_tag_equals(data_113, 3)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_114) -> {
        __core__chooseData(data_114, () -> {
            pair_33 = __core__unConstrData__safe(data_114);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_33), 3),
                () -> {
                    data_115 = __core__listData(__core__sndPair(pair_33));
                    __core__chooseData(data_115, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_56 = __core__unListData__safe(data_115);
                        __core__chooseList(fields_56, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_116) -> {
        __helios__common__enum_tag_equals(data_116, 4)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_117) -> {
        __core__chooseData(data_117, () -> {
            pair_34 = __core__unConstrData__safe(data_117);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_34), 4),
                () -> {
                    data_118 = __core__listData(__core__sndPair(pair_34));
                    __core__chooseData(data_118, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_57 = __core__unListData__safe(data_118);
                        __core__chooseList(fields_57, () -> {
                            false
                        }, () -> {
                            head_32 = __core__headList__safe(fields_57);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_32),
                                () -> {
                                    fields_58 = __core__tailList__safe(fields_57);
                                    __core__chooseList(fields_58, () -> {
                                        false
                                    }, () -> {
                                        head_33 = __core__headList__safe(fields_58);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_33),
                                            () -> {
                                                fields_59 = __core__tailList__safe(fields_58);
                                                __core__chooseList(fields_59, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_119) -> {
        __helios__common__enum_tag_equals(data_119, 5)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_120) -> {
        __core__chooseData(data_120, () -> {
            pair_35 = __core__unConstrData__safe(data_120);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_35), 5),
                () -> {
                    data_121 = __core__listData(__core__sndPair(pair_35));
                    __core__chooseData(data_121, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_60 = __core__unListData__safe(data_121);
                        __core__chooseList(fields_60, () -> {
                            false
                        }, () -> {
                            head_34 = __core__headList__safe(fields_60);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_34),
                                () -> {
                                    fields_61 = __core__tailList__safe(fields_60);
                                    __core__chooseList(fields_61, () -> {
                                        false
                                    }, () -> {
                                        head_35 = __core__headList__safe(fields_61);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_35),
                                            () -> {
                                                fields_62 = __core__tailList__safe(fields_61);
                                                __core__chooseList(fields_62, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_122) -> {
        __helios__common__enum_tag_equals(data_122, 6)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_123) -> {
        __core__chooseData(data_123, () -> {
            pair_36 = __core__unConstrData__safe(data_123);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_36), 6),
                () -> {
                    data_124 = __core__listData(__core__sndPair(pair_36));
                    __core__chooseData(data_124, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_63 = __core__unListData__safe(data_124);
                        __core__chooseList(fields_63, () -> {
                            false
                        }, () -> {
                            head_36 = __core__headList__safe(fields_63);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_36),
                                () -> {
                                    fields_64 = __core__tailList__safe(fields_63);
                                    __core__chooseList(fields_64, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity = (self_123) -> {
        __module__CapoDelegateHelpers__ManifestActivity[]__from_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(__helios__common__enum_field_0(self_123))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_125) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_125),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_125),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_125),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_125),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_125),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_125),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_125),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_125),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_125),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_126) -> {
            ignore_6 = __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1)(data_126),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid AbstractDelegateActivitiesEnum data", ())
                }
            )();
            data_126
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_127) -> {
        __core__chooseData(data_127, () -> {
            pair_37 = __core__unConstrData__safe(data_127);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_37), 0),
                () -> {
                    data_128 = __core__listData(__core__sndPair(pair_37));
                    __core__chooseData(data_128, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_65 = __core__unListData__safe(data_128);
                        __core__chooseList(fields_65, () -> {
                            false
                        }, () -> {
                            head_37 = __core__headList__safe(fields_65);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_37),
                                () -> {
                                    fields_66 = __core__tailList__safe(fields_65);
                                    __core__chooseList(fields_66, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_129) -> {
        __helios__common__enum_tag_equals(data_129, 1)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_130) -> {
        __core__chooseData(data_130, () -> {
            pair_38 = __core__unConstrData__safe(data_130);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_38), 1),
                () -> {
                    data_131 = __core__listData(__core__sndPair(pair_38));
                    __core__chooseData(data_131, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_67 = __core__unListData__safe(data_131);
                        __core__chooseList(fields_67, () -> {
                            false
                        }, () -> {
                            head_38 = __core__headList__safe(fields_67);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_38),
                                () -> {
                                    fields_68 = __core__tailList__safe(fields_67);
                                    __core__chooseList(fields_68, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_124) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_124))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_132) -> {
        __helios__common__enum_tag_equals(data_132, 2)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_133) -> {
        __core__chooseData(data_133, () -> {
            pair_39 = __core__unConstrData__safe(data_133);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_39), 2),
                () -> {
                    data_134 = __core__listData(__core__sndPair(pair_39));
                    __core__chooseData(data_134, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_69 = __core__unListData__safe(data_134);
                        __core__chooseList(fields_69, () -> {
                            false
                        }, () -> {
                            head_39 = __core__headList__safe(fields_69);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_39),
                                () -> {
                                    fields_70 = __core__tailList__safe(fields_69);
                                    __core__chooseList(fields_70, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_125) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_125))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_135) -> {
        __helios__common__enum_tag_equals(data_135, 3)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_136) -> {
        __core__chooseData(data_136, () -> {
            pair_40 = __core__unConstrData__safe(data_136);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_40), 3),
                () -> {
                    data_137 = __core__listData(__core__sndPair(pair_40));
                    __core__chooseData(data_137, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_71 = __core__unListData__safe(data_137);
                        __core__chooseList(fields_71, () -> {
                            false
                        }, () -> {
                            head_40 = __core__headList__safe(fields_71);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_40),
                                () -> {
                                    fields_72 = __core__tailList__safe(fields_71);
                                    __core__chooseList(fields_72, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity = (self_126) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_126))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_138) -> {
        __core__chooseData(data_138, () -> {
            pair_41 = __core__unConstrData__safe(data_138);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_41), 4),
                () -> {
                    data_139 = __core__listData(__core__sndPair(pair_41));
                    __core__chooseData(data_139, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_73 = __core__unListData__safe(data_139);
                        __core__chooseList(fields_73, () -> {
                            false
                        }, () -> {
                            head_41 = __core__headList__safe(fields_73);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_41),
                                () -> {
                                    fields_74 = __core__tailList__safe(fields_73);
                                    __core__chooseList(fields_74, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_140) -> {
        __helios__common__enum_tag_equals(data_140, 5)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_141) -> {
        __core__chooseData(data_141, () -> {
            pair_42 = __core__unConstrData__safe(data_141);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_42), 5),
                () -> {
                    data_142 = __core__listData(__core__sndPair(pair_42));
                    __core__chooseData(data_142, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_75 = __core__unListData__safe(data_142);
                        __core__chooseList(fields_75, () -> {
                            false
                        }, () -> {
                            head_42 = __core__headList__safe(fields_75);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_42),
                                () -> {
                                    fields_76 = __core__tailList__safe(fields_75);
                                    __core__chooseList(fields_76, () -> {
                                        false
                                    }, () -> {
                                        head_43 = __core__headList__safe(fields_76);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_43),
                                            () -> {
                                                fields_77 = __core__tailList__safe(fields_76);
                                                __core__chooseList(fields_77, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_143) -> {
        __helios__common__enum_tag_equals(data_143, 6)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_144) -> {
        __core__chooseData(data_144, () -> {
            pair_43 = __core__unConstrData__safe(data_144);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_43), 6),
                () -> {
                    data_145 = __core__listData(__core__sndPair(pair_43));
                    __core__chooseData(data_145, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_78 = __core__unListData__safe(data_145);
                        __core__chooseList(fields_78, () -> {
                            false
                        }, () -> {
                            head_44 = __core__headList__safe(fields_78);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_44),
                                () -> {
                                    fields_79 = __core__tailList__safe(fields_78);
                                    __core__chooseList(fields_79, () -> {
                                        false
                                    }, () -> {
                                        head_45 = __core__headList__safe(fields_79);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_45),
                                            () -> {
                                                fields_80 = __core__tailList__safe(fields_79);
                                                __core__chooseList(fields_80, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_146) -> {
        __helios__common__enum_tag_equals(data_146, 7)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_147) -> {
        __core__chooseData(data_147, () -> {
            pair_44 = __core__unConstrData__safe(data_147);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_44), 7),
                () -> {
                    data_148 = __core__listData(__core__sndPair(pair_44));
                    __core__chooseData(data_148, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_81 = __core__unListData__safe(data_148);
                        __core__chooseList(fields_81, () -> {
                            false
                        }, () -> {
                            head_46 = __core__headList__safe(fields_81);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_46),
                                () -> {
                                    fields_82 = __core__tailList__safe(fields_81);
                                    __core__chooseList(fields_82, () -> {
                                        false
                                    }, () -> {
                                        head_47 = __core__headList__safe(fields_82);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_47),
                                            () -> {
                                                fields_83 = __core__tailList__safe(fields_82);
                                                __core__chooseList(fields_83, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_149) -> {
        __helios__common__enum_tag_equals(data_149, 8)
    };
    __helios__list[__helios__data]__is_valid_data_internal = (lst_13) -> {
        recurse_73 = (recurse_72, lst_14) -> {
            __core__chooseList(lst_14, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__data__is_valid_data(__core__headList__safe(lst_14)),
                    () -> {
                        recurse_72(recurse_72, __core__tailList__safe(lst_14))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_73(recurse_73, lst_13)
    };
    __helios__list[__helios__data]__is_valid_data = (data_150) -> {
        __core__chooseData(data_150, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_150))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_151) -> {
        __core__chooseData(data_151, () -> {
            pair_45 = __core__unConstrData__safe(data_151);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_45), 8),
                () -> {
                    data_152 = __core__listData(__core__sndPair(pair_45));
                    __core__chooseData(data_152, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_84 = __core__unListData__safe(data_152);
                        __core__chooseList(fields_84, () -> {
                            false
                        }, () -> {
                            head_48 = __core__headList__safe(fields_84);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_48),
                                () -> {
                                    fields_85 = __core__tailList__safe(fields_84);
                                    __core__chooseList(fields_85, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__data]__from_data = (data_153) -> {
        lst_15 = __core__unListData(data_153);
        __4 = __core__ifThenElse(
            __helios__list[__helios__data]__is_valid_data_internal(lst_15),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_15
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_127) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_127))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_154) -> {
        __helios__common__enum_tag_equals(data_154, 0)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_155) -> {
        __helios__common__enum_tag_equals(data_155, 1)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __helios__option[__helios__validatorhash]__is_valid_data = (data_156) -> {
        __core__chooseData(data_156, () -> {
            pair_46 = __core__unConstrData__safe(data_156);
            index_6 = __core__fstPair(pair_46);
            fields_86 = __core__sndPair(pair_46);
            __core__ifThenElse(
                __core__equalsInteger(index_6, 0),
                () -> {
                    __core__chooseList(fields_86, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_86), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_86))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_6, 1),
                        () -> {
                            __core__chooseList(fields_86, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_157) -> {
        __core__chooseData(data_157, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_87 = __core__unListData__safe(data_157);
            __core__chooseList(fields_87, () -> {
                false
            }, () -> {
                head_49 = __core__headList__safe(fields_87);
                __core__ifThenElse(
                    __helios__string__is_valid_data(head_49),
                    () -> {
                        fields_88 = __core__tailList__safe(fields_87);
                        __core__chooseList(fields_88, () -> {
                            false
                        }, () -> {
                            head_50 = __core__headList__safe(fields_88);
                            __core__ifThenElse(
                                __helios__option[__helios__validatorhash]__is_valid_data(head_50),
                                () -> {
                                    fields_89 = __core__tailList__safe(fields_88);
                                    __core__chooseList(fields_89, () -> {
                                        false
                                    }, () -> {
                                        head_51 = __core__headList__safe(fields_89);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_51),
                                            () -> {
                                                fields_90 = __core__tailList__safe(fields_89);
                                                __core__chooseList(fields_90, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_158) -> {
        ignore_7 = __core__ifThenElse(
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_158),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid RelativeDelegateLink data", ())
            }
        )();
        __core__unListData(data_158)
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_128) -> {
        __helios__string__from_data(__helios__common__struct_field_0(self_128))
    };
    __helios__option[__helios__validatorhash]__from_data = (data_159) -> {
        __5 = __core__ifThenElse(
            __helios__option[__helios__validatorhash]__is_valid_data(data_159),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_159
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_129) -> {
        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_129))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_130) -> {
        (mph_11) -> {
            __helios__assetclass__new(mph_11, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_130))())
        }
    };
    __helios__option[__helios__txinput]__none____is = (data_160) -> {
        __helios__common__enum_tag_equals(data_160, 1)
    };
    __helios__option[__helios__bool]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bool]__some____new = (some_1) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bool____to_data(some_1)))
    };
    __helios__option[__helios__txinput]__some__some = (self_131) -> {
        __helios__txinput__from_data(__helios__common__enum_field_0(self_131))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings = (__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput) -> {
        (self_132) -> {
            (inputs, mph_12, inputRequired) -> {
                __cond_3 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_132)(inputs, mph_12, true, inputRequired);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_3),
                    () -> {
                        (__lhs_0_5) -> {
                            __helios__option[__helios__bool]__none____new()
                        }
                    },
                    () -> {
                        (__lhs_0_2) -> {
                            spendDelegateInput = __helios__option[__helios__txinput]__some__some(__lhs_0_2);
                            (spendDelegateIsValid) -> {
                                __core__chooseUnit(__helios__assert(spendDelegateIsValid, "no way o"), __helios__option[__helios__bool]__some____new(spendDelegateIsValid))
                            }(__cond_4 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput));
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_4),
                                () -> {
                                    (__lhs_0_3) -> {
                                        a_13 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_3);
                                        __cond_5 = a_13;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is(__cond_5),
                                            () -> {
                                                (__lhs_0_4) -> {
                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_132)(mph_12, false, (), false, ())
                                                }
                                            },
                                            () -> {
                                                (__7) -> {
                                                    __helios__error(__helios__string____add("delegate not ValidatingSettings: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_132)))
                                                }
                                            }
                                        )()(__cond_5)
                                    }
                                },
                                () -> {
                                    (__6) -> {
                                        __helios__error("no way n")
                                    }
                                }
                            )()(__cond_4))
                        }
                    }
                )()(__cond_3)
            }
        }
    };
    __helios__option[__helios__validatorhash]__none____is = (data_161) -> {
        __helios__common__enum_tag_equals(data_161, 1)
    };
    __helios__option[__helios__txinput]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__txinput]__some____is = (data_162) -> {
        __helios__common__enum_tag_equals(data_162, 0)
    };
    __helios__list[__helios__txinput]__find_safe = (self_133) -> {
        (fn_17) -> {
            __helios__common__find_safe(self_133, (item_8) -> {
                fn_17(__helios__txinput__from_data(item_8))
            }, __helios__common__identity)
        }
    };
    __helios__option[__helios__validatorhash]__some__some = (self_134) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_134))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1 = (self_135) -> {
        (inputs_1, mph_13, __useopt__required, required) -> {
            required_1 = __core__ifThenElse(
                __useopt__required,
                () -> {
                    required
                },
                () -> {
                    true
                }
            )();
            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_135);
            __cond_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_135);
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__none____is(__cond_6),
                () -> {
                    (__lhs_0_8) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                __helios__error(__helios__string____add("\u274C\u274C \u27A1\uFE0F \u{1F481} missing required input with dgTkn ", uutName))
                            },
                            () -> {
                                () -> {
                                    __helios__option[__helios__txinput]__none____new()
                                }()
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0_6) -> {
                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_6);
                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);
                        ac = __helios__assetclass__new(mph_13, __helios__string__encode_utf8(uutName)());
                        __core__chooseUnit(__helios__print(__helios__string____add("  -- seeking input dgTkn: ", uutName)), __cond_7 = __helios__list[__helios__txinput]__find_safe(inputs_1)((i_7) -> {
                            __helios__bool__and(() -> {
                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_7)), needsAddrWithCred)
                            }, () -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_7))(ac), 0)
                            })
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txinput]__some____is(__cond_7),
                            () -> {
                                (foundGood) -> {
                                    __core__chooseUnit(__helios__print("  \u2705 \u27A1\uFE0F  \u{1F481} found ^ input dgTkn"), foundGood)
                                }
                            },
                            () -> {
                                (__lhs_0_7) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            __helios__error(__helios__string____add("_\u274C \u27A1\uFE0F  \u{1F481} missing req'd input dgTkn (at script addr) ", uutName))
                                        },
                                        () -> {
                                            () -> {
                                                __core__chooseUnit(__helios__print(" <- \u{1F6AB} \u27A1\uFE0F \u{1F481} no input with ^ dgTkn; not req'd; returning false
"), __helios__option[__helios__txinput]__none____new())
                                            }()
                                        }
                                    )()
                                }
                            }
                        )()(__cond_7))
                    }
                }
            )()(__cond_6)
        }
    };
    __helios__option[__helios__validatorhash]__some____is = (data_163) -> {
        __helios__common__enum_tag_equals(data_163, 0)
    };
    __helios__option[__helios__txoutput]__some____is = (data_164) -> {
        __helios__common__enum_tag_equals(data_164, 0)
    };
    __helios__list[__helios__txoutput]__find_safe = (self_136) -> {
        (fn_18) -> {
            __helios__common__find_safe(self_136, (item_9) -> {
                fn_18(__helios__txoutput__from_data(item_9))
            }, __helios__common__identity)
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_137) -> {
        (mph_14, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {
            required_3 = __core__ifThenElse(
                __useopt__required_1,
                () -> {
                    required_2
                },
                () -> {
                    true
                }
            )();
            createdOrReturned_1 = __core__ifThenElse(
                __useopt__createdOrReturned,
                () -> {
                    createdOrReturned
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __lhs_0_9 = self_137;
            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_9);
            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_9);
            ac_1 = __helios__assetclass__new(mph_14, __helios__string__encode_utf8(uut)());
            (cOrR) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u{1F50E} \u{1F481} expect dgTkn ", cOrR), ": "), uut)), (hasDelegate) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__and(() -> {
                            __helios__bool____not(hasDelegate)
                        }, () -> {
                            required_3
                        }),
                        () -> {
                            __cond_11 = createdOrReturned_1;
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_11),
                                () -> {
                                    (__lhs_0_18) -> {
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not created: ", uut))
                                    }
                                },
                                () -> {
                                    (__lhs_0_16) -> {
                                        __lhs_0_17 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(self_137)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_14, true, true);
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not returned: ", uut))
                                    }
                                }
                            )()(__cond_11)
                        },
                        () -> {
                            () -> {
                                __core__ifThenElse(
                                    hasDelegate,
                                    () -> {
                                        __helios__print(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u2705 \u{1F481} ok:  ^ dgTkn has ", cOrR), " a valid output
"))
                                    },
                                    () -> {
                                        () -> {
                                            __helios__print(" \u2B05\uFE0F \u{1F6AB} \u{1F481} no delegate but not req'd; false")
                                        }()
                                    }
                                )()
                            }()
                        }
                    )(), hasDelegate)
                }(__cond_9 = validatorHash;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_9),
                    () -> {
                        (__lhs_0_15) -> {
                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_15);
                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("  ... ^ sent to validator: ", __helios__validatorhash__show(vh_3)()), "
")), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))
                        }
                    },
                    () -> {
                        (__lhs_0_12) -> {
                            __core__chooseUnit(__helios__print("   (to anywhere)"), __cond_10 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_10),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10))
                        }
                    }
                )()(__cond_9)))
            }(__cond_8 = createdOrReturned_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_8),
                () -> {
                    (__lhs_0_11) -> {
                        "returned"
                    }
                },
                () -> {
                    (__lhs_0_10) -> {
                        "created"
                    }
                }
            )()(__cond_8))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_165) -> {
        __core__chooseData(data_165, () -> {
            pair_47 = __core__unConstrData__safe(data_165);
            index_7 = __core__fstPair(pair_47);
            fields_91 = __core__sndPair(pair_47);
            __core__ifThenElse(
                __core__equalsInteger(index_7, 0),
                () -> {
                    __core__chooseList(fields_91, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_91), () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_91))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_7, 1),
                        () -> {
                            __core__chooseList(fields_91, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_166) -> {
        __core__chooseData(data_166, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_92 = __core__unListData__safe(data_166);
            __core__chooseList(fields_92, () -> {
                false
            }, () -> {
                head_52 = __core__headList__safe(fields_92);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(head_52),
                    () -> {
                        fields_93 = __core__tailList__safe(fields_92);
                        __core__chooseList(fields_93, () -> {
                            false
                        }, () -> {
                            head_53 = __core__headList__safe(fields_93);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_53),
                                () -> {
                                    fields_94 = __core__tailList__safe(fields_93);
                                    __core__chooseList(fields_94, () -> {
                                        false
                                    }, () -> {
                                        head_54 = __core__headList__safe(fields_94);
                                        __core__ifThenElse(
                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_54),
                                            () -> {
                                                fields_95 = __core__tailList__safe(fields_94);
                                                __core__chooseList(fields_95, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data = (data_167) -> {
        ignore_8 = __core__ifThenElse(
            __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(data_167),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid PendingDelegateChange data", ())
            }
        )();
        __core__unListData(data_167)
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__action = (self_138) -> {
        __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(__helios__common__struct_field_0(self_138))
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__role = (self_139) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_139))
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_168) -> {
        __8 = __core__ifThenElse(
            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(data_168),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_168
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink = (self_140) -> {
        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__struct_field_2(self_140))
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {
        (data_169) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_169),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_169),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__from_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1) -> {
        (data_170) -> {
            ignore_9 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(data_170),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingCharterChange data", ())
                }
            )();
            data_170
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is = (data_171) -> {
        __helios__common__enum_tag_equals(data_171, 0)
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2 = (data_172) -> {
        __core__chooseData(data_172, () -> {
            pair_48 = __core__unConstrData__safe(data_172);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_48), 0),
                () -> {
                    data_173 = __core__listData(__core__sndPair(pair_48));
                    __core__chooseData(data_173, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_96 = __core__unListData__safe(data_173);
                        __core__chooseList(fields_96, () -> {
                            false
                        }, () -> {
                            head_55 = __core__headList__safe(fields_96);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_55),
                                () -> {
                                    fields_97 = __core__tailList__safe(fields_96);
                                    __core__chooseList(fields_97, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change = (self_141) -> {
        __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data(__helios__common__enum_field_0(self_141))
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_16) -> {
        recurse_75 = (recurse_74, lst_17) -> {
            __core__chooseList(lst_17, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__core__headList__safe(lst_17)),
                    () -> {
                        recurse_74(recurse_74, __core__tailList__safe(lst_17))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_75(recurse_75, lst_16)
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_174) -> {
        __core__chooseData(data_174, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_174))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2 = (data_175) -> {
        __core__chooseData(data_175, () -> {
            pair_49 = __core__unConstrData__safe(data_175);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_49), 1),
                () -> {
                    data_176 = __core__listData(__core__sndPair(pair_49));
                    __core__chooseData(data_176, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_98 = __core__unListData__safe(data_176);
                        __core__chooseList(fields_98, () -> {
                            false
                        }, () -> {
                            head_56 = __core__headList__safe(fields_98);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_56),
                                () -> {
                                    fields_99 = __core__tailList__safe(fields_98);
                                    __core__chooseList(fields_99, () -> {
                                        false
                                    }, () -> {
                                        head_57 = __core__headList__safe(fields_99);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_57),
                                            () -> {
                                                fields_100 = __core__tailList__safe(fields_99);
                                                __core__chooseList(fields_100, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data = (data_177) -> {
        __core__chooseData(data_177, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_101 = __core__unListData__safe(data_177);
            __core__chooseList(fields_101, () -> {
                false
            }, () -> {
                head_58 = __core__headList__safe(fields_101);
                __core__ifThenElse(
                    __helios__address__is_valid_data(head_58),
                    () -> {
                        fields_102 = __core__tailList__safe(fields_101);
                        __core__chooseList(fields_102, () -> {
                            false
                        }, () -> {
                            head_59 = __core__headList__safe(fields_102);
                            __core__ifThenElse(
                                __helios__mintingpolicyhash__is_valid_data(head_59),
                                () -> {
                                    fields_103 = __core__tailList__safe(fields_102);
                                    __core__chooseList(fields_103, () -> {
                                        false
                                    }, () -> {
                                        head_60 = __core__headList__safe(fields_103);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_60),
                                            () -> {
                                                fields_104 = __core__tailList__safe(fields_103);
                                                __core__chooseList(fields_104, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__from_data = (data_178) -> {
        ignore_10 = __core__ifThenElse(
            __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(data_178),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid DelegationDetail data", ())
            }
        )();
        __core__unListData(data_178)
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__mph = (self_142) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_1(self_142))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__tn = (self_143) -> {
        __helios__bytearray__from_data(__helios__common__struct_field_2(self_143))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken = (self_144) -> {
        () -> {
            __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(self_144), __module__CapoDelegateHelpers__DelegationDetail[]__tn(self_144))
        }
    };
    __helios__list[__helios__txinput]__any = (self_145) -> {
        (fn_19) -> {
            __helios__common__any(self_145, (item_10) -> {
                fn_19(__helios__txinput__from_data(item_10))
            })
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {
        (data_179) -> {
            __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_179),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_179),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_179),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_179),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_179),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__from_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1) -> {
        (data_180) -> {
            ignore_11 = __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)(data_180),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestEntryType data", ())
                }
            )();
            data_180
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is = (data_181) -> {
        __helios__common__enum_tag_equals(data_181, 0)
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2 = (data_182) -> {
        __core__chooseData(data_182, () -> {
            pair_50 = __core__unConstrData__safe(data_182);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_50), 0),
                () -> {
                    data_183 = __core__listData(__core__sndPair(pair_50));
                    __core__chooseData(data_183, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_105 = __core__unListData__safe(data_183);
                        __core__chooseList(fields_105, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is = (data_184) -> {
        __helios__common__enum_tag_equals(data_184, 1)
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2 = (data_185) -> {
        __core__chooseData(data_185, () -> {
            pair_51 = __core__unConstrData__safe(data_185);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_51), 1),
                () -> {
                    data_186 = __core__listData(__core__sndPair(pair_51));
                    __core__chooseData(data_186, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_106 = __core__unListData__safe(data_186);
                        __core__chooseList(fields_106, () -> {
                            false
                        }, () -> {
                            head_61 = __core__headList__safe(fields_106);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_61),
                                () -> {
                                    fields_107 = __core__tailList__safe(fields_106);
                                    __core__chooseList(fields_107, () -> {
                                        false
                                    }, () -> {
                                        head_62 = __core__headList__safe(fields_107);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_62),
                                            () -> {
                                                fields_108 = __core__tailList__safe(fields_107);
                                                __core__chooseList(fields_108, () -> {
                                                    false
                                                }, () -> {
                                                    head_63 = __core__headList__safe(fields_108);
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(head_63),
                                                        () -> {
                                                            fields_109 = __core__tailList__safe(fields_108);
                                                            __core__chooseList(fields_109, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink = (self_146) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_146))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix = (self_147) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_147))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount = (self_148) -> {
        __helios__int__from_data(__helios__common__enum_field_2(self_148))
    };
    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2 = (data_187) -> {
        __core__chooseData(data_187, () -> {
            pair_52 = __core__unConstrData__safe(data_187);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_52), 2),
                () -> {
                    data_188 = __core__listData(__core__sndPair(pair_52));
                    __core__chooseData(data_188, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_110 = __core__unListData__safe(data_188);
                        __core__chooseList(fields_110, () -> {
                            false
                        }, () -> {
                            head_64 = __core__headList__safe(fields_110);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_64),
                                () -> {
                                    fields_111 = __core__tailList__safe(fields_110);
                                    __core__chooseList(fields_111, () -> {
                                        false
                                    }, () -> {
                                        head_65 = __core__headList__safe(fields_111);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_65),
                                            () -> {
                                                fields_112 = __core__tailList__safe(fields_111);
                                                __core__chooseList(fields_112, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2 = (data_189) -> {
        __core__chooseData(data_189, () -> {
            pair_53 = __core__unConstrData__safe(data_189);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_53), 3),
                () -> {
                    data_190 = __core__listData(__core__sndPair(pair_53));
                    __core__chooseData(data_190, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_113 = __core__unListData__safe(data_190);
                        __core__chooseList(fields_113, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2 = (data_191) -> {
        __core__chooseData(data_191, () -> {
            pair_54 = __core__unConstrData__safe(data_191);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_54), 4),
                () -> {
                    data_192 = __core__listData(__core__sndPair(pair_54));
                    __core__chooseData(data_192, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_114 = __core__unListData__safe(data_192);
                        __core__chooseList(fields_114, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_193) -> {
        __core__chooseData(data_193, () -> {
            pair_55 = __core__unConstrData__safe(data_193);
            index_8 = __core__fstPair(pair_55);
            fields_115 = __core__sndPair(pair_55);
            __core__ifThenElse(
                __core__equalsInteger(index_8, 0),
                () -> {
                    __core__chooseList(fields_115, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_115), () -> {
                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_115))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_8, 1),
                        () -> {
                            __core__chooseList(fields_115, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_194) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_194, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_194, __core__bData(#746e), __helios__bytearray__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_194, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)),
                            () -> {
                                true
                            },
                            () -> {
                                __core__trace("Warning: invalid data in CapoManifestEntry.tpe", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in CapoManifestEntry.tn", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in CapoManifestEntry.mph", () -> {
                    false
                })()
            }
        )()
    };
    __module__CapoHelpers__CapoManifestEntry[]__from_data = (data_195) -> {
        ignore_12 = __core__ifThenElse(
            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(data_195),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", ())
            }
        )();
        data_195
    };
    __module__CapoHelpers__CapoManifestEntry[]__entryType = (self_149) -> {
        __module__CapoHelpers__ManifestEntryType[]__from_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)(__helios__common__mStruct_field(self_149, #747065))
    };
    __module__CapoHelpers__CapoManifestEntry[]__tokenName = (self_150) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_150, #746e))
    };
    __helios__option[__helios__mintingpolicyhash]__from_data = (data_196) -> {
        __9 = __core__ifThenElse(
            __helios__option[__helios__mintingpolicyhash]__is_valid_data(data_196),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_196
    };
    __module__CapoHelpers__CapoManifestEntry[]__mph = (self_151) -> {
        __helios__option[__helios__mintingpolicyhash]__from_data(__helios__common__mStruct_field(self_151, #6d7068))
    };
    __helios__option[__helios__mintingpolicyhash]__some____is = (data_197) -> {
        __helios__common__enum_tag_equals(data_197, 0)
    };
    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {
        (data_198) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_198),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_198),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_198),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {
        (data_199) -> {
            ignore_13 = __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_199),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoDatum data", ())
                }
            )();
            data_199
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_18) -> {
        recurse_77 = (recurse_76, lst_19) -> {
            __core__chooseList(lst_19, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_19)),
                    () -> {
                        recurse_76(recurse_76, __core__tailList__safe(lst_19))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_77(recurse_77, lst_18)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_200) -> {
        __core__chooseData(data_200, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_200))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_23) -> {
        recurse_79 = (recurse_78, map_24) -> {
            __core__chooseList(map_24, () -> {
                true
            }, () -> {
                head_66 = __core__headList__safe(map_24);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_66)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_66)),
                            () -> {
                                recurse_78(recurse_78, __core__tailList__safe(map_24))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_79(recurse_79, map_23)
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_201) -> {
        __core__chooseData(data_201, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_201))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_25) -> {
        recurse_81 = (recurse_80, map_26) -> {
            __core__chooseList(map_26, () -> {
                true
            }, () -> {
                head_67 = __core__headList__safe(map_26);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_67)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_67)),
                            () -> {
                                recurse_80(recurse_80, __core__tailList__safe(map_26))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_81(recurse_81, map_25)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_202) -> {
        __core__chooseData(data_202, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_202))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_20) -> {
        recurse_83 = (recurse_82, lst_21) -> {
            __core__chooseList(lst_21, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList__safe(lst_21)),
                    () -> {
                        recurse_82(recurse_82, __core__tailList__safe(lst_21))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_83(recurse_83, lst_20)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_203) -> {
        __core__chooseData(data_203, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_203))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_204) -> {
        __core__chooseData(data_204, () -> {
            pair_56 = __core__unConstrData__safe(data_204);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_56), 0),
                () -> {
                    data_205 = __core__listData(__core__sndPair(pair_56));
                    __core__chooseData(data_205, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_116 = __core__unListData__safe(data_205);
                        __core__chooseList(fields_116, () -> {
                            false
                        }, () -> {
                            head_68 = __core__headList__safe(fields_116);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_68),
                                () -> {
                                    fields_117 = __core__tailList__safe(fields_116);
                                    __core__chooseList(fields_117, () -> {
                                        false
                                    }, () -> {
                                        head_69 = __core__headList__safe(fields_117);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_69),
                                            () -> {
                                                fields_118 = __core__tailList__safe(fields_117);
                                                __core__chooseList(fields_118, () -> {
                                                    false
                                                }, () -> {
                                                    head_70 = __core__headList__safe(fields_118);
                                                    __core__ifThenElse(
                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_70),
                                                        () -> {
                                                            fields_119 = __core__tailList__safe(fields_118);
                                                            __core__chooseList(fields_119, () -> {
                                                                false
                                                            }, () -> {
                                                                head_71 = __core__headList__safe(fields_119);
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_71),
                                                                    () -> {
                                                                        fields_120 = __core__tailList__safe(fields_119);
                                                                        __core__chooseList(fields_120, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            head_72 = __core__headList__safe(fields_120);
                                                                            __core__ifThenElse(
                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_72),
                                                                                () -> {
                                                                                    fields_121 = __core__tailList__safe(fields_120);
                                                                                    __core__chooseList(fields_121, () -> {
                                                                                        false
                                                                                    }, () -> {
                                                                                        head_73 = __core__headList__safe(fields_121);
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_73),
                                                                                            () -> {
                                                                                                fields_122 = __core__tailList__safe(fields_121);
                                                                                                __core__chooseList(fields_122, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    head_74 = __core__headList__safe(fields_122);
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_74),
                                                                                                        () -> {
                                                                                                            fields_123 = __core__tailList__safe(fields_122);
                                                                                                            __core__chooseList(fields_123, () -> {
                                                                                                                false
                                                                                                            }, () -> {
                                                                                                                head_75 = __core__headList__safe(fields_123);
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_75),
                                                                                                                    () -> {
                                                                                                                        fields_124 = __core__tailList__safe(fields_123);
                                                                                                                        __core__chooseList(fields_124, true, false)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })()
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_206) -> {
        ignore_14 = __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_206),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CharterData data", ())
            }
        )();
        data_206
    };
    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;
    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_152) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_152))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_207) -> {
        lst_22 = __core__unListData(data_207);
        __10 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_22),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_22
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_153) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_153))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_208) -> {
        map_27 = __core__unMapData(data_208);
        __11 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_27),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_27
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_154) -> {
        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_154))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_155) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_155))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_156) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_156))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_157) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_157))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_209) -> {
        map_28 = __core__unMapData(data_209);
        __12 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_28),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_28
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_158) -> {
        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_158))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_210) -> {
        lst_23 = __core__unListData(data_210);
        __13 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_23
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_159) -> {
        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_159))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;
    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_211) -> {
        __core__chooseData(data_211, () -> {
            pair_57 = __core__unConstrData__safe(data_211);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_57), 1),
                () -> {
                    data_212 = __core__listData(__core__sndPair(pair_57));
                    __core__chooseData(data_212, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_125 = __core__unListData__safe(data_212);
                        __core__chooseList(fields_125, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_213) -> {
        __helios__common__enum_tag_equals(data_213, 2)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_29) -> {
        recurse_85 = (recurse_84, map_30) -> {
            __core__chooseList(map_30, () -> {
                true
            }, () -> {
                head_76 = __core__headList__safe(map_30);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_76)),
                    () -> {
                        __core__ifThenElse(
                            __helios__data__is_valid_data(__core__sndPair(head_76)),
                            () -> {
                                recurse_84(recurse_84, __core__tailList__safe(map_30))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_85(recurse_85, map_29)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_214) -> {
        __core__chooseData(data_214, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_214))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_215) -> {
        __core__chooseData(data_215, () -> {
            pair_58 = __core__unConstrData__safe(data_215);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_58), 2),
                () -> {
                    data_216 = __core__listData(__core__sndPair(pair_58));
                    __core__chooseData(data_216, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_126 = __core__unListData__safe(data_216);
                        __core__chooseList(fields_126, () -> {
                            false
                        }, () -> {
                            head_77 = __core__headList__safe(fields_126);
                            __core__ifThenElse(
                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_77),
                                () -> {
                                    fields_127 = __core__tailList__safe(fields_126);
                                    __core__chooseList(fields_127, () -> {
                                        false
                                    }, () -> {
                                        head_78 = __core__headList__safe(fields_127);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_78),
                                            () -> {
                                                fields_128 = __core__tailList__safe(fields_127);
                                                __core__chooseList(fields_128, () -> {
                                                    false
                                                }, () -> {
                                                    head_79 = __core__headList__safe(fields_128);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_79),
                                                        () -> {
                                                            fields_129 = __core__tailList__safe(fields_128);
                                                            __core__chooseList(fields_129, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;
    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {
        (data_217) -> {
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_217),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_217),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_217),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {
        (data_218) -> {
            ignore_15 = __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_218),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid cctx_CharterInputType data", ())
                }
            )();
            data_218
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_219) -> {
        __helios__common__enum_tag_equals(data_219, 0)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_220) -> {
        __core__chooseData(data_220, () -> {
            pair_59 = __core__unConstrData__safe(data_220);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_59), 0),
                () -> {
                    data_221 = __core__listData(__core__sndPair(pair_59));
                    __core__chooseData(data_221, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_130 = __core__unListData__safe(data_221);
                        __core__chooseList(fields_130, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_222) -> {
        __helios__common__enum_tag_equals(data_222, 1)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_223) -> {
        __core__chooseData(data_223, () -> {
            pair_60 = __core__unConstrData__safe(data_223);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_60), 1),
                () -> {
                    data_224 = __core__listData(__core__sndPair(pair_60));
                    __core__chooseData(data_224, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_131 = __core__unListData__safe(data_224);
                        __core__chooseList(fields_131, () -> {
                            false
                        }, () -> {
                            head_80 = __core__headList__safe(fields_131);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_80),
                                () -> {
                                    fields_132 = __core__tailList__safe(fields_131);
                                    __core__chooseList(fields_132, () -> {
                                        false
                                    }, () -> {
                                        head_81 = __core__headList__safe(fields_132);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_81),
                                            () -> {
                                                fields_133 = __core__tailList__safe(fields_132);
                                                __core__chooseList(fields_133, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_160) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_160))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_161) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_161))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo) -> {
        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo), __core__mkNilData(()))))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_225) -> {
        __helios__common__enum_tag_equals(data_225, 2)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_226) -> {
        __core__chooseData(data_226, () -> {
            pair_61 = __core__unConstrData__safe(data_226);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_61), 2),
                () -> {
                    data_227 = __core__listData(__core__sndPair(pair_61));
                    __core__chooseData(data_227, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_134 = __core__unListData__safe(data_227);
                        __core__chooseList(fields_134, () -> {
                            false
                        }, () -> {
                            head_82 = __core__headList__safe(fields_134);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_82),
                                () -> {
                                    fields_135 = __core__tailList__safe(fields_134);
                                    __core__chooseList(fields_135, () -> {
                                        false
                                    }, () -> {
                                        head_83 = __core__headList__safe(fields_135);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_83),
                                            () -> {
                                                fields_136 = __core__tailList__safe(fields_135);
                                                __core__chooseList(fields_136, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_162) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_162))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_163) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_163))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_1) -> {
        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))
    };
    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {
        (data_228) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_228),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_228),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_228),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_228),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_228),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_228),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {
        (data_229) -> {
            ignore_16 = __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_229),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoActivity data", ())
                }
            )();
            data_229
        }
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_230) -> {
        __helios__common__enum_tag_equals(data_230, 0)
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_231) -> {
        __core__chooseData(data_231, () -> {
            pair_62 = __core__unConstrData__safe(data_231);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_62), 0),
                () -> {
                    data_232 = __core__listData(__core__sndPair(pair_62));
                    __core__chooseData(data_232, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_137 = __core__unListData__safe(data_232);
                        __core__chooseList(fields_137, () -> {
                            false
                        }, () -> {
                            head_84 = __core__headList__safe(fields_137);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_84),
                                () -> {
                                    fields_138 = __core__tailList__safe(fields_137);
                                    __core__chooseList(fields_138, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_164) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_164))
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_233) -> {
        __helios__common__enum_tag_equals(data_233, 1)
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_234) -> {
        __core__chooseData(data_234, () -> {
            pair_63 = __core__unConstrData__safe(data_234);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_63), 1),
                () -> {
                    data_235 = __core__listData(__core__sndPair(pair_63));
                    __core__chooseData(data_235, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_139 = __core__unListData__safe(data_235);
                        __core__chooseList(fields_139, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_236) -> {
        __helios__common__enum_tag_equals(data_236, 2)
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_237) -> {
        __core__chooseData(data_237, () -> {
            pair_64 = __core__unConstrData__safe(data_237);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_64), 2),
                () -> {
                    data_238 = __core__listData(__core__sndPair(pair_64));
                    __core__chooseData(data_238, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_140 = __core__unListData__safe(data_238);
                        __core__chooseList(fields_140, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_239) -> {
        __helios__common__enum_tag_equals(data_239, 3)
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_240) -> {
        __core__chooseData(data_240, () -> {
            pair_65 = __core__unConstrData__safe(data_240);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_65), 3),
                () -> {
                    data_241 = __core__listData(__core__sndPair(pair_65));
                    __core__chooseData(data_241, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_141 = __core__unListData__safe(data_241);
                        __core__chooseList(fields_141, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_242) -> {
        __helios__common__enum_tag_equals(data_242, 4)
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_243) -> {
        __core__chooseData(data_243, () -> {
            pair_66 = __core__unConstrData__safe(data_243);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_66), 4),
                () -> {
                    data_244 = __core__listData(__core__sndPair(pair_66));
                    __core__chooseData(data_244, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_142 = __core__unListData__safe(data_244);
                        __core__chooseList(fields_142, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_245) -> {
        __helios__common__enum_tag_equals(data_245, 5)
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_246) -> {
        __core__chooseData(data_246, () -> {
            pair_67 = __core__unConstrData__safe(data_246);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_67), 5),
                () -> {
                    data_247 = __core__listData(__core__sndPair(pair_67));
                    __core__chooseData(data_247, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_143 = __core__unListData__safe(data_247);
                        __core__chooseList(fields_143, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__getRefCharterUtxo = (mph_15) -> {
        charterAc = __helios__assetclass__new(mph_15, __helios__string__encode_utf8("charter")());
        hasCharter = (txin) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)
        };
        __core__chooseUnit(__helios__print("getting ref_input for charter
"), (charterUtxo) -> {
            charterUtxo
        }(__cond_12 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_12),
            () -> {
                (__lhs_0_20) -> {
                    ch = __helios__option[__helios__txinput]__some__some(__lhs_0_20);
                    ch
                }
            },
            () -> {
                (__lhs_0_19) -> {
                    __helios__error("Missing charter in required ref_inputs (use tcxWithCharterRef(tcx) in txn building functions)")
                }
            }
        )()(__cond_12)))
    };
    __module__CapoHelpers__getTxCharterData = (mph_16, __useopt__refInputs, refInputs) -> {
        refInputs_1 = __core__ifThenElse(
            __useopt__refInputs,
            () -> {
                refInputs
            },
            () -> {
                __helios__tx__ref_inputs(__helios__scriptcontext__tx)
            }
        )();
        charterAc_1 = __helios__assetclass__new(mph_16, __helios__string__encode_utf8("charter")());
        hasCharter_1 = (txin_1) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)
        };
        (charterUtxo_1) -> {
            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);
            ctd
        }(__cond_13 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter_1);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_13),
            () -> {
                (__lhs_0_24) -> {
                    ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_24);
                    ch_2
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_1);
                    __core__ifThenElse(
                        __helios__option[__helios__txinput]__some____is(__cond_14),
                        () -> {
                            (__lhs_0_23) -> {
                                ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_23);
                                ch_1
                            }
                        },
                        () -> {
                            (__lhs_0_22) -> {
                                __helios__error("Missing charter inputs / ref_inputs")
                            }
                        }
                    )()(__cond_14)
                }
            }
        )()(__cond_13))
    };
    __helios__option[__helios__string]__is_valid_data = (data_248) -> {
        __core__chooseData(data_248, () -> {
            pair_68 = __core__unConstrData__safe(data_248);
            index_9 = __core__fstPair(pair_68);
            fields_144 = __core__sndPair(pair_68);
            __core__ifThenElse(
                __core__equalsInteger(index_9, 0),
                () -> {
                    __core__chooseList(fields_144, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_144), () -> {
                            __helios__string__is_valid_data(__core__headList__safe(fields_144))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_9, 1),
                        () -> {
                            __core__chooseList(fields_144, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__txinput]__is_valid_data = (data_249) -> {
        __core__chooseData(data_249, () -> {
            pair_69 = __core__unConstrData__safe(data_249);
            index_10 = __core__fstPair(pair_69);
            fields_145 = __core__sndPair(pair_69);
            __core__ifThenElse(
                __core__equalsInteger(index_10, 0),
                () -> {
                    __core__chooseList(fields_145, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_145), () -> {
                            __helios__txinput__is_valid_data(__core__headList__safe(fields_145))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_10, 1),
                        () -> {
                            __core__chooseList(fields_145, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__DelegateInput[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__DelegateInput[]__link = (self_165) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_165))
    };
    __module__CapoHelpers__DelegateInput[]__role = (self_166) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_166))
    };
    __helios__option[__helios__string]__from_data = (data_250) -> {
        __14 = __core__ifThenElse(
            __helios__option[__helios__string]__is_valid_data(data_250),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_250
    };
    __module__CapoHelpers__DelegateInput[]__idPrefix = (self_167) -> {
        __helios__option[__helios__string]__from_data(__helios__common__struct_field_2(self_167))
    };
    __helios__option[__helios__txinput]__from_data = (data_251) -> {
        __15 = __core__ifThenElse(
            __helios__option[__helios__txinput]__is_valid_data(data_251),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_251
    };
    __module__CapoHelpers__DelegateInput[]__input = (self_168) -> {
        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_168))
    };
    __module__CapoHelpers__DelegateInput[]__mph = (self_169) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_169))
    };
    __helios__option[__helios__string]____to_data = __helios__common__identity;
    __helios__option[__helios__txinput]____to_data = __helios__common__identity;
    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_17) -> {
        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_17), __core__mkNilData(()))))))
    };
    __helios__option[__helios__txinput]__unwrap = (self_170) -> {
        () -> {
            __helios__txinput__from_data(__helios__common__enum_field_0(self_170))
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_171) -> {
        () -> {
            i_8 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_171))();
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
            __core__chooseUnit(__cond_15 = inputData;
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_15),
                () -> {
                    (__lhs_0_25) -> {
                        index_11 = __helios__data__constrdata__tag(__lhs_0_25);
                        fields_146 = __helios__data__constrdata__fields(__lhs_0_25);
                        __core__chooseUnit(__helios__print(__helios__string____add("    --\u{1F41E} generic delegate activity at index ", __helios__int__show(index_11)())), __cond_16 = __helios__list[__helios__data]__head(fields_146);
                        __core__ifThenElse(
                            __helios__data__constrdata____is(__cond_16),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __helios__data__constrdata__tag(__lhs_0_26);
                                    __helios__print(__helios__string____add("    --\u{1F41E} nested activity at index ", __helios__int__show(index2)()))
                                }
                            },
                            () -> {
                                (__17) -> {
                                    ()
                                }
                            }
                        )()(__cond_16))
                    }
                },
                () -> {
                    (__16) -> {
                        ()
                    }
                }
            )()(__cond_15), inputData)
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {
        (self_172) -> {
            () -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_172)())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__assert = (__module__CapoHelpers__DelegateInput[]__error) -> {
        (self_173) -> {
            (assertionOk, msg_3) -> {
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    true
                }, () -> {
                    __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_173)(), __module__CapoHelpers__DelegateInput[]__serialize(self_173)())
                }), msg_3), __core__ifThenElse(
                    assertionOk,
                    () -> {
                        __helios__assert(true, "")
                    },
                    () -> {
                        () -> {
                            __module__CapoHelpers__DelegateInput[]__error(self_173)(msg_3)
                        }()
                    }
                )())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__error_1 = (self_174) -> {
        (msg_4) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_174)(), __module__CapoHelpers__DelegateInput[]__serialize(self_174)())
            }), msg_4), __core__chooseUnit(__helios__print(__helios__string____add("\u26A0\uFE0F \u26A0\uFE0F \u26A0\uFE0F error executing policy for dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__DelegateInput[]__link(self_174)))), __core__chooseUnit(__helios__print(__helios__string____add("     ---- with input value: ", __helios__value__show(__helios__txinput__value(__helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_174))()))(false, ()))), __core__chooseUnit(__helios__print("
"), __helios__assert(false, msg_4)))))
        }
    };
    __helios__list[__helios__data]__get = (self_175) -> {
        (index_12) -> {
            recurse_87 = (recurse_86, self_176, i_9) -> {
                __core__chooseList(self_176, () -> {
                    __helios__error("index out of range")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_12, i_9),
                        () -> {
                            __core__headList__safe(self_176)
                        },
                        () -> {
                            recurse_86(recurse_86, __core__tailList__safe(self_176), __core__addInteger(i_9, 1))
                        }
                    )()
                })()
            };
            recurse_87(recurse_87, self_175, 0)
        }
    };
    __helios__list[__helios__data]__length = __helios__common__length;
    __helios__list[__helios__data]__filter = (self_177) -> {
        (fn_20) -> {
            __helios__common__filter_list(self_177, (item_11) -> {
                fn_20(__helios__data__from_data(item_11))
            })
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged) -> {
        (self_178) -> {
            (seed) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqSeededMinting: ensures the delegate is unchanged, so callers needn't.", false, ()), __cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_178)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_17),
                    () -> {
                        (__lhs_0_30) -> {
                            ma_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_30);
                            __core__chooseUnit(__cond_20 = ma_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_20),
                                () -> {
                                    (__lhs_0_31) -> {
                                        fields_148 = __helios__data__constrdata__fields(__lhs_0_31);
                                        __helios__assert(__helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__get(fields_148)(0))), "seed mismatch")
                                    }
                                },
                                () -> {
                                    (__21) -> {
                                        __helios__error("no way")
                                    }
                                }
                            )()(__cond_20), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_178)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_17),
                            () -> {
                                (__lhs_0_27) -> {
                                    activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_27);
                                    __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__list[__helios__data]__length(activities), 0), "no minting activities found"), foundWithThisSeed = __helios__list[__helios__data]__filter(activities)((a_14) -> {
                                        __cond_18 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_14);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_18),
                                            () -> {
                                                (__lhs_0_28) -> {
                                                    ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_28);
                                                    __cond_19 = ma;
                                                    __core__ifThenElse(
                                                        __helios__data__constrdata____is(__cond_19),
                                                        () -> {
                                                            (__lhs_0_29) -> {
                                                                index_13 = __helios__data__constrdata__tag(__lhs_0_29);
                                                                fields_147 = __helios__data__constrdata__fields(__lhs_0_29);
                                                                __core__chooseUnit(__helios__assert(__helios__int____eq(index_13, index_13), "no way c"), __helios__bool__and(() -> {
                                                                    __helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__head(fields_147)))
                                                                }, () -> {
                                                                    true
                                                                }))
                                                            }
                                                        },
                                                        () -> {
                                                            (__20) -> {
                                                                __helios__error("no way d")
                                                            }
                                                        }
                                                    )()(__cond_19)
                                                }
                                            },
                                            () -> {
                                                (__19) -> {
                                                    false
                                                }
                                            }
                                        )()(__cond_18)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate multi-activities must be minting with this seed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_178)(__helios__int____gt(__helios__list[__helios__data]__length(foundWithThisSeed), 0), "no minting activity found for seed!"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given seed is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_178)(__helios__int____eq(__helios__list[__helios__data]__length(foundWithThisSeed), 1), "multiple minting activities found for seed"), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_178)())))))
                                }
                            },
                            () -> {
                                (__18) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_178)("non-mint activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_17))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1) -> {
        (self_179) -> {
            (recId) -> {
                __core__chooseUnit(__cond_25 = __module__CapoHelpers__DelegateInput[]__role(self_179);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_25),
                    () -> {
                        (__lhs_0_40) -> {
                            __helios__print("ok, checking spending activity for a DgData Policy")
                        }
                    },
                    () -> {
                        (__26) -> {
                            __helios__error("withUniqueDDSpendingActivity: only valid for DgDataPolicy")
                        }
                    }
                )()(__cond_25), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqueDDSpendingActivity: checks presence of delegated-data controller's spending activity for recId", false, ()), strId = __helios__bytearray__decode_utf8(recId)();
                __core__chooseUnit(__helios__print(__helios__string____add("    -- recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("TEST THIS v"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spendDgt must be acting on the matching record-id", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the delegate is unchanged, so callers needn't also check that", false, ()), __cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_179)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_21),
                    () -> {
                        (__lhs_0_38) -> {
                            sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_38);
                            __core__chooseUnit(__cond_24 = sa_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_24),
                                () -> {
                                    (__lhs_0_39) -> {
                                        index_15 = __helios__data__constrdata__tag(__lhs_0_39);
                                        fields_150 = __helios__data__constrdata__fields(__lhs_0_39);
                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_15, index_15), "no way e"), foundRecId_1 = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_150));
                                        __core__ifThenElse(
                                            __helios__bytearray____neq(recId, foundRecId_1),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending:", strId)), __core__chooseUnit(__helios__print(__helios__string____add("  -- actual: Spending:", __helios__bytearray__show(foundRecId_1)())), __module__CapoHelpers__DelegateInput[]__error_1(self_179)("recId mismatch")))
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__print(__helios__string____add("  -- ok: DD controller spending activity for ", strId))
                                                }()
                                            }
                                        )())
                                    }
                                },
                                () -> {
                                    (__25) -> {
                                        __helios__error("no way f")
                                    }
                                }
                            )()(__cond_24), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_179)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_21),
                            () -> {
                                (__lhs_0_32) -> {
                                    activities_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_32);
                                    __core__chooseUnit(__helios__print("    -- multiple activities found
"), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_179)(__helios__int____gt(__helios__list[__helios__data]__length(activities_1), 0), "no spending activities found"), actsOnThisRecord = __helios__list[__helios__data]__filter(activities_1)((a_15) -> {
                                        __cond_22 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_15);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_22),
                                            () -> {
                                                (__lhs_0_37) -> {
                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("dgInput: withSpendingActivity: CreatingDelegatedData invalid"), __helios__error(""))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_22),
                                                    () -> {
                                                        (__lhs_0_36) -> {
                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("dgInput: withSpendingActivity: UpdatingDgData invalid; use a Spending variant in the delegated-data policy"), __helios__error(""))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_22),
                                                            () -> {
                                                                (__lhs_0_35) -> {
                                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("dgInput: withSpendingActivity: DeletingDelegatedData invalid"), __helios__error(""))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_22),
                                                                    () -> {
                                                                        (__lhs_0_33) -> {
                                                                            sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_33);
                                                                            __cond_23 = sa;
                                                                            __core__ifThenElse(
                                                                                __helios__data__constrdata____is(__cond_23),
                                                                                () -> {
                                                                                    (__lhs_0_34) -> {
                                                                                        index_14 = __helios__data__constrdata__tag(__lhs_0_34);
                                                                                        fields_149 = __helios__data__constrdata__fields(__lhs_0_34);
                                                                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_14, index_14), "no way h"), foundRecId = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_149));
                                                                                        __core__ifThenElse(
                                                                                            __helios__bytearray____neq(recId, foundRecId),
                                                                                            () -> {
                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending: ", strId)), __core__chooseUnit(__helios__print(__helios__string____add("
  -- actual: Spending: ", __helios__bytearray__show(foundRecId)())), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("recId mismatch"), __helios__error(""))))
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    true
                                                                                                }()
                                                                                            }
                                                                                        )())
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__24) -> {
                                                                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("wrong structure for spending activity"), __helios__error(""))
                                                                                    }
                                                                                }
                                                                            )()(__cond_23)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__23) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(__cond_22)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate data-controller multi-activities must treat this recId", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_179)(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(actsOnThisRecord), 0))("dgt acting on this recId? "), __helios__string____add("no spending activity found for recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given recId is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_179)(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(actsOnThisRecord), 1))("exactly one activity? "), __helios__string____add("multiple spending activities found for recId: ", strId)), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_179)()))))))
                                }
                            },
                            () -> {
                                (__22) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("non-spend activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_21)))))))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_180) -> {
        () -> {
            __lhs_0_41 = self_180;
            link_1 = __module__CapoHelpers__DelegateInput[]__link(__lhs_0_41);
            input_1 = __module__CapoHelpers__DelegateInput[]__input(__lhs_0_41);
            mph_18 = __module__CapoHelpers__DelegateInput[]__mph(__lhs_0_41);
            __lhs_0_42 = link_1;
            uut_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_42);
            validatorHash_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_42);
            targetValue = __module__StellarHeliosHelpers__mkTv(mph_18, true, uut_1, false, (), false, ());
            (returnedUnchanged) -> {
                __core__chooseUnit(__helios__assert(returnedUnchanged, "no"), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1)(mph_18, false, (), false, ()), "no"), self_180))
            }(__cond_26 = validatorHash_1;
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__some____is(__cond_26),
                () -> {
                    (__lhs_0_44) -> {
                        vh_4 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_44);
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_180)(__helios__value__contains(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_4))(targetValue), __helios__string____add("dgTkn not returned: ", uut_1)), __cond_27 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o_1) -> {
                            __helios__bytearray____eq(__helios__txoutputdatum__serialize(__helios__txoutput__datum(o_1))(), __helios__txoutputdatum__serialize(__helios__txinput__datum(__helios__option[__helios__txinput]__unwrap(input_1)()))())
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txoutput]__some____is(__cond_27),
                            () -> {
                                (__lhs_0_46) -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add(" -- good, the dgTkn is unchanged: ", uut_1)), true)
                                }
                            },
                            () -> {
                                (__lhs_0_45) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_180)("dgt modified"), __helios__error(""))
                                }
                            }
                        )()(__cond_27))
                    }
                },
                () -> {
                    (__lhs_0_43) -> {
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_180)("unchOut - no vh"), __helios__error(""))
                    }
                }
            )()(__cond_26))
        }
    };
    __module__CapoHelpers__DelegateInput[]__orFail = (self_181) -> {
        () -> {
            __lhs_0_47 = self_181;
            true
        }
    };
    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;
    __module__CapoHelpers__CapoCtx[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__CapoCtx[]__mph = (self_182) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_182))
    };
    __module__CapoHelpers__CapoCtx[]__charter = (self_183) -> {
        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_183))
    };
    __module__CapoHelpers__CapoCtx[]____new = (mph_19, charter) -> {
        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_19), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_184) -> {
        () -> {
            e = "requires charter as input";
            __cond_28 = __module__CapoHelpers__CapoCtx[]__charter(self_184);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_28),
                () -> {
                    (__lhs_0_56) -> {
                        __helios__error(e)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_28),
                        () -> {
                            (__lhs_0_55) -> {
                                __helios__error(e)
                            }
                        },
                        () -> {
                            (__lhs_0_48) -> {
                                utxo_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_48);
                                activity = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2));
                                wrongActivity = () -> {
                                    __core__ifThenElse(
                                        true,
                                        () -> {
                                            __helios__error("non-CharterData activity")
                                        },
                                        () -> {
                                            () -> {
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()
                                            }()
                                        }
                                    )()
                                };
                                __cond_29 = activity;
                                __core__ifThenElse(
                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_29),
                                    () -> {
                                        (__lhs_0_54) -> {
                                            wrongActivity()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_29),
                                            () -> {
                                                (__lhs_0_53) -> {
                                                    wrongActivity()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_29),
                                                    () -> {
                                                        (__lhs_0_52) -> {
                                                            activity
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_29),
                                                            () -> {
                                                                (__lhs_0_51) -> {
                                                                    activity
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_29),
                                                                    () -> {
                                                                        (__lhs_0_50) -> {
                                                                            activity
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_49) -> {
                                                                            activity
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_29)
                            }
                        }
                    )()
                }
            )()(__cond_28)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_185) -> {
        (key_14) -> {
            __helios__common__map_get(self_185, __helios__string____to_data(key_14), (x_5) -> {
                __core__constrData(0, __helios__common__list_1(x_5))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__findManifestEntry = (__module__CapoHelpers__CapoCtx[]__getCharterData) -> {
        (self_186) -> {
            (key_15) -> {
                __core__chooseUnit(__helios__print(__helios__string____add("    -- looking for capo's manifest entry: ", key_15)), charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData(self_186)(), 0);
                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData))(key_15))
            }
        }
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is = (data_252) -> {
        __helios__common__enum_tag_equals(data_252, 0)
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some = (self_187) -> {
        __module__CapoHelpers__CapoManifestEntry[]__from_data(__helios__common__enum_field_0(self_187))
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is = (data_253) -> {
        __helios__common__enum_tag_equals(data_253, 1)
    };
    __helios__option[__helios__bytearray]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bytearray]__some____new = (some_2) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bytearray____to_data(some_2)))
    };
    __module__CapoHelpers__CapoCtx[]__findManifestTokenName = (__module__CapoHelpers__CapoCtx[]__getCharterData_1) -> {
        (self_188) -> {
            (key_16, __useopt__required_2, required_4) -> {
                required_5 = __core__ifThenElse(
                    __useopt__required_2,
                    () -> {
                        required_4
                    },
                    () -> {
                        true
                    }
                )();
                oe = __module__CapoHelpers__CapoCtx[]__findManifestEntry(__module__CapoHelpers__CapoCtx[]__getCharterData_1)(self_188)(key_16);
                __cond_30 = oe;
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_30),
                    () -> {
                        (__lhs_0_58) -> {
                            __core__chooseUnit(__helios__assert(__helios__bool____not(required_5), __helios__string____add("missing required manifest entry: ", key_16)), __helios__option[__helios__bytearray]__none____new())
                        }
                    },
                    () -> {
                        (__lhs_0_57) -> {
                            e_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_57);
                            __helios__option[__helios__bytearray]__some____new(__module__CapoHelpers__CapoManifestEntry[]__tokenName(e_1))
                        }
                    }
                )()(__cond_30)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getSettingsId = (__module__CapoHelpers__CapoCtx[]__getCharterData_2) -> {
        (self_189) -> {
            (__useopt__required_3, required_6) -> {
                required_7 = __core__ifThenElse(
                    __useopt__required_3,
                    () -> {
                        required_6
                    },
                    () -> {
                        true
                    }
                )();
                __module__CapoHelpers__CapoCtx[]__findManifestTokenName(__module__CapoHelpers__CapoCtx[]__getCharterData_2)(self_189)("currentSettings", true, required_7)
            }
        }
    };
    __helios__option[__helios__txoutput]__some__some = (self_190) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_190))
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3) -> {
        (self_191) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must have the Capo's govAuthority approval", false, ()), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData_3(self_191)()))(__module__CapoHelpers__CapoCtx[]__mph(self_191), false, (), false, ()), "no way m"), self_191))
            }
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_254) -> {
        __helios__common__enum_tag_equals(data_254, 1)
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_192) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_192))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_193) -> {
        (key_17) -> {
            __helios__common__map_get(self_193, __helios__string____to_data(key_17), (x_6) -> {
                __core__constrData(0, __helios__common__list_1(x_6))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__option[__helios__string]__some____new = (some_3) -> {
        __core__constrData(0, __helios__common__list_1(__helios__string____to_data(some_3)))
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput) -> {
        (self_194) -> {
            (typeName, __useopt__required_4, required_8) -> {
                required_9 = __core__ifThenElse(
                    __useopt__required_4,
                    () -> {
                        required_8
                    },
                    () -> {
                        true
                    }
                )();
                __cond_31 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_4(self_194)()))(typeName);
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_31),
                    () -> {
                        (__lhs_0_61) -> {
                            __helios__error(__helios__string____add("missing required data policy with type: ", typeName))
                        }
                    },
                    () -> {
                        (__lhs_0_59) -> {
                            entry = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_59);
                            __cond_32 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry);
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_32),
                                () -> {
                                    (__lhs_0_60) -> {
                                        policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_60);
                                        idPrefix_2 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_60);
                                        (callback_8) -> {
                                            callback_8(policyLink, idPrefix_2)
                                        }
                                    }
                                },
                                () -> {
                                    (__27) -> {
                                        __helios__error(__helios__string____add("manifest entry is not a data policy: ", typeName))
                                    }
                                }
                            )()(__cond_32)((dgtLink, idPrefix_1) -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(__helios__string____add("requires the delegated-data policy for type=", typeName), false, ()), __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_194)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new(typeName), true, required_9, true, __helios__option[__helios__string]__some____new(idPrefix_1)))
                            })
                        }
                    }
                )()(__cond_31)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5) -> {
        (self_195) -> {
            (__useopt__required_5, required_10) -> {
                required_11 = __core__ifThenElse(
                    __useopt__required_5,
                    () -> {
                        required_10
                    },
                    () -> {
                        true
                    }
                )();
                input_2 = __helios__scriptcontext__get_current_input();
                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_195)()))(__module__CapoHelpers__CapoCtx[]__mph(self_195));
                isUsingMintDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_2))(acMintDgt), 0))("    -- acting on mintDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingMintDgt
                }, () -> {
                    __helios__bool____not(required_11)
                }), "not acting as mint delegate!"), isUsingMintDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6) -> {
        (self_196) -> {
            (__useopt__required_6, required_12) -> {
                required_13 = __core__ifThenElse(
                    __useopt__required_6,
                    () -> {
                        required_12
                    },
                    () -> {
                        true
                    }
                )();
                input_3 = __helios__scriptcontext__get_current_input();
                acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_6(self_196)()))(__module__CapoHelpers__CapoCtx[]__mph(self_196));
                isUsingSpendDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_3))(acSpendDgt), 0))("    -- acting on spendDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingSpendDgt
                }, () -> {
                    __helios__bool____not(required_13)
                }), "not acting as spend delegate!"), isUsingSpendDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_197) -> {
        () -> {
            __cond_33 = __module__CapoHelpers__CapoCtx[]__charter(self_197);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_33),
                () -> {
                    (__lhs_0_63) -> {
                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_63);
                        datum_3
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_33),
                        () -> {
                            (__lhs_0_62) -> {
                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_62);
                                datum_2
                            }
                        },
                        () -> {
                            (__28) -> {
                                __helios__error("CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first")
                            }
                        }
                    )()
                }
            )()(__cond_33)
        }
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address) -> {
        (self_198) -> {
            () -> {
                charterAc_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_198), __helios__string__encode_utf8("charter")());
                capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_198)();
                __cond_34 = __module__CapoHelpers__CapoCtx[]__charter(self_198);
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_34),
                    () -> {
                        (__lhs_0_64) -> {
                            charterData_1 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo) -> {
                                __helios__bool__and(() -> {
                                    __helios__address____eq(__helios__txoutput__address(txo), capoAddr)
                                }, () -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo))(charterAc_2), 0)
                                })
                            })))), 0);
                            charterData_1
                        }
                    },
                    () -> {
                        (__29) -> {
                            __helios__error("CapoCtx.getNextCharterData(): invalid except with charter strategy Input")
                        }
                    }
                )()(__cond_34)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1 = (self_199) -> {
        () -> {
            __cond_35 = __module__CapoHelpers__CapoCtx[]__charter(self_199);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_35),
                () -> {
                    (__lhs_0_66) -> {
                        utxo_4 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_66);
                        utxo_4
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_35),
                        () -> {
                            (__lhs_0_65) -> {
                                utxo_3 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_65);
                                utxo_3
                            }
                        },
                        () -> {
                            (__30) -> {
                                __helios__error("CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first")
                            }
                        }
                    )()
                }
            )()(__cond_35)
        }
    };
    __helios__option[__helios__string]__none____new = () -> {
        __helios__option__NONE
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_200) -> {
        (dgtLink_1, role_1, __useopt__required_7, required_14, __useopt__idPrefix, idPrefix_3) -> {
            required_15 = __core__ifThenElse(
                __useopt__required_7,
                () -> {
                    required_14
                },
                () -> {
                    true
                }
            )();
            idPrefix_4 = __core__ifThenElse(
                __useopt__idPrefix,
                () -> {
                    idPrefix_3
                },
                () -> {
                    __helios__option[__helios__string]__none____new()
                }
            )();
            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_4, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_200), true, required_15), __module__CapoHelpers__CapoCtx[]__mph(self_200))
        }
    };
    __module__CapoHelpers__CapoCtx[]__address_1 = (self_201) -> {
        () -> {
            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_201)());
            addr
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataRef = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate) -> {
        (self_202) -> {
            (__useopt__recId, recId_1, __useopt__recIdBytes, recIdBytes) -> {
                recId_2 = __core__ifThenElse(
                    __useopt__recId,
                    () -> {
                        recId_1
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_1 = __core__ifThenElse(
                    __useopt__recIdBytes,
                    () -> {
                        recIdBytes
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_2)()
                    }
                )();
                hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate(self_202)(false, (), true, recIdBytes_1);
                recIdStr = __helios__bytearray__decode_utf8(recIdBytes_1)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting refDD ", recIdStr)), __cond_36 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasDD);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_36),
                    () -> {
                        (__lhs_0_68) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ refDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_67) -> {
                            txin_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_67);
                            __core__chooseUnit(__helios__print("\u2705 \u{1F4CE} ^ refDD: ok
"), txin_2)
                        }
                    }
                )()(__cond_36))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1) -> {
        (self_203) -> {
            (__useopt__recId_1, recId_3, __useopt__recIdBytes_1, recIdBytes_2) -> {
                recId_4 = __core__ifThenElse(
                    __useopt__recId_1,
                    () -> {
                        recId_3
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_3 = __core__ifThenElse(
                    __useopt__recIdBytes_1,
                    () -> {
                        recIdBytes_2
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_4)()
                    }
                )();
                hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1(self_203)(false, (), true, recIdBytes_3);
                recIdStr_1 = __helios__bytearray__decode_utf8(recIdBytes_3)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting inDD ", recIdStr_1)), __cond_37 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_1);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_37),
                    () -> {
                        (__lhs_0_70) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ inDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_69) -> {
                            txin_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_69);
                            __core__chooseUnit(__helios__print("    \u2705 \u{1F4CE} ^ inDD: ok
"), txin_3)
                        }
                    }
                )()(__cond_37))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_204) -> {
        (__useopt__typeName, typeName_1, __useopt__id, id_1) -> {
            typeName_2 = __core__ifThenElse(
                __useopt__typeName,
                () -> {
                    typeName_1
                },
                () -> {
                    ""
                }
            )();
            id_2 = __core__ifThenElse(
                __useopt__id,
                () -> {
                    id_1
                },
                () -> {
                    #
                }
            )();
            capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_1(self_204)();
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                __helios__int____gt(__helios__bytearray__length(id_2), 0)
            }, () -> {
                __helios__int____gt(__helios__bytearray__length(__helios__string__serialize(typeName_2)()), 0)
            }), "data predicate must have id or typeName"), (txin_4) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txinput__address(txin_4), capoAddr_1),
                    () -> {
                        data_255 = __helios__txoutputdatum__inline(__helios__txinput__datum(txin_4));
                        __cond_38 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_255);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_38),
                            () -> {
                                (__lhs_0_71) -> {
                                    x_7 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_255));
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            true
                                        }, () -> {
                                            __helios__bool__or(() -> {
                                                __helios__string____eq(typeName_2, "")
                                            }, () -> {
                                                __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_7), typeName_2)
                                            })
                                        })
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_2, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_7), id_2)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__31) -> {
                                    false
                                }
                            }
                        )()(__cond_38)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput) -> {
        (self_205) -> {
            (newDataId, dataTypePurpose) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record is stored in the Capo address", false, ()), dgData = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_205)(newDataId)));
                dgDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(dgData);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record matches the type-name indicated in the dgDataPolicy manifest", false, ()), __cond_39 = dgDatum;
                __core__ifThenElse(
                    __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_39),
                    () -> {
                        (__lhs_0_72) -> {
                            data_256 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(dgData));
                            recIdStr_2 = __helios__bytearray__decode_utf8(newDataId)();
                            __core__ifThenElse(
                                __helios__bytearray____neq(__module__StellarHeliosHelpers__AnyData[]__id(data_256), newDataId),
                                () -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- expected id: ", recIdStr_2)), actualIdStr = __helios__bytearray__decode_utf8(__module__StellarHeliosHelpers__AnyData[]__id(data_256))();
                                    __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: wrong id: ", actualIdStr)))
                                },
                                () -> {
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__string____neq(__module__StellarHeliosHelpers__AnyData[]__type(data_256), dataTypePurpose),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected type: ", dataTypePurpose)), __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: bad type: ", __module__StellarHeliosHelpers__AnyData[]__type(data_256))))
                                            },
                                            () -> {
                                                () -> {
                                                    __core__chooseUnit(__helios__print(__helios__string____add("\u2705 \u{1F4CE} outDD: ok: ^ outDD to Capo: ", recIdStr_2)), true)
                                                }()
                                            }
                                        )()
                                    }()
                                }
                            )()
                        }
                    },
                    () -> {
                        (__32) -> {
                            __helios__error("output not delegated data")
                        }
                    }
                )()(__cond_39)))
            }
        }
    };
    __helios__option[__helios__txoutput]__none____is = (data_257) -> {
        __helios__common__enum_tag_equals(data_257, 1)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1 = (self_206) -> {
        (recId_5) -> {
            recIdStr_3 = __helios__bytearray__decode_utf8(recId_5)();
            ac_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_206), recId_5);
            capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_1(self_206)();
            __cond_40 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((txout) -> {
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        true
                    }, () -> {
                        __helios__bool__trace(__helios__int____eq(__helios__value__get_safe(__helios__txoutput__value(txout))(ac_2), 1))("  -- output has value? ")
                    })
                }, () -> {
                    __helios__bool__trace(__helios__address____eq(__helios__txoutput__address(txout), capoAddr_2))("     -- found output... is it at the right capoAddr? ")
                })
            });
            __core__ifThenElse(
                __helios__option[__helios__txoutput]__none____is(__cond_40),
                () -> {
                    (__lhs_0_74) -> {
                        __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} ^ outDD: not found: ", recIdStr_3))
                    }
                },
                () -> {
                    (__lhs_0_73) -> {
                        txout_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_73);
                        __core__chooseUnit(__helios__print(__helios__string____add("     \u2705 \u{1F4CE} ^ outDD: found ", recIdStr_3)), txout_1)
                    }
                }
            )()(__cond_40)
        }
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {
        (self_207) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be available in the transaction (input or ref)", false, ()), charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_207);
                __cond_41 = charter_1;
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_41),
                    () -> {
                        (__lhs_0_80) -> {
                            self_207
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_41),
                            () -> {
                                (__lhs_0_79) -> {
                                    self_207
                                }
                            },
                            () -> {
                                (__lhs_0_75) -> {
                                    __lhs_0_76 = self_207;
                                    mph_20 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_76);
                                    charterAc_3 = __helios__assetclass__new(mph_20, __helios__string__encode_utf8("charter")());
                                    hasCharter_2 = (txin_5) -> {
                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_5))(charterAc_3), 0)
                                    };
                                    __cond_42 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_2);
                                    __core__ifThenElse(
                                        __helios__option[__helios__txinput]__none____is(__cond_42),
                                        () -> {
                                            (__lhs_0_78) -> {
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): no charter ref; must be in inputs...
"), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_207)())
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_77) -> {
                                                charterUtxo_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_77);
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): found charter ref
"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);
                                                __module__CapoHelpers__CapoCtx[]____new(mph_20, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_2)))
                                            }
                                        }
                                    )()(__cond_42)
                                }
                            }
                        )()
                    }
                )()(__cond_41))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_208) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be spent in the inputs", false, ()), charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_208);
            __cond_43 = charter_2;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_43),
                () -> {
                    (__lhs_0_86) -> {
                        self_208
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_43),
                        () -> {
                            (__lhs_0_85) -> {
                                __helios__error("CapoCtx.withCharterInput(): charter is from ref!")
                            }
                        },
                        () -> {
                            (__lhs_0_81) -> {
                                __lhs_0_82 = self_208;
                                mph_21 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_82);
                                charterAc_4 = __helios__assetclass__new(mph_21, __helios__string__encode_utf8("charter")());
                                hasCharter_3 = (txin_6) -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_6))(charterAc_4), 0)
                                };
                                __core__chooseUnit(__helios__print("    -- CapoCtx finding charter in inputs
"), (charterUtxo_3) -> {
                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_3))), 0);
                                    __module__CapoHelpers__CapoCtx[]____new(mph_21, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_3))
                                }(__cond_44 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_3);
                                __core__ifThenElse(
                                    __helios__option[__helios__txinput]__some____is(__cond_44),
                                    () -> {
                                        (__lhs_0_84) -> {
                                            ch_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_84);
                                            ch_3
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_83) -> {
                                            __helios__error("Missing required charter input")
                                        }
                                    }
                                )()(__cond_44)))
                            }
                        }
                    )()
                }
            )()(__cond_43))
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_209) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be referenced in the txn, but unspent", false, ()), charter_3 = __module__CapoHelpers__CapoCtx[]__charter(self_209);
            __cond_45 = charter_3;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_45),
                () -> {
                    (__lhs_0_90) -> {
                        self_209
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_45),
                        () -> {
                            (__lhs_0_89) -> {
                                __helios__error("CapoCtx.withCharterRef(): charter is from inputs!")
                            }
                        },
                        () -> {
                            (__lhs_0_87) -> {
                                __lhs_0_88 = self_209;
                                mph_22 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_88);
                                utxo_5 = __module__CapoHelpers__getRefCharterUtxo(mph_22);
                                datum_6 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_5))), 0);
                                __module__CapoHelpers__CapoCtx[]____new(mph_22, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_6, utxo_5))
                            }
                        }
                    )()
                }
            )()(__cond_45))
        }
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_210) -> {
        (fn_21, z_2) -> {
            __helios__common__fold(self_210, (z_3, pair_70) -> {
                fn_21(z_3, __helios__string__from_data(__core__fstPair(pair_70)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_70)))
            }, z_2)
        }
    };
    __helios__option[__helios__bool]__unwrap = (self_211) -> {
        () -> {
            __helios__bool__from_data(__helios__common__enum_field_0(self_211))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all = (self_212) -> {
        (fn_22) -> {
            fn_23 = (pair_71) -> {
                fn_22(__helios__string__from_data(__core__fstPair(pair_71)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(pair_71)))
            };
            __helios__common__all(self_212, fn_23)
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all = (self_213) -> {
        (fn_24) -> {
            __helios__common__all(self_213, (item_12) -> {
                fn_24(__module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(item_12))
            })
        }
    };
    __helios__option[__helios__bool]__some____is = (data_258) -> {
        __helios__common__enum_tag_equals(data_258, 0)
    };
    __module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings = (self_214) -> {
        () -> {
            charterData_2 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_214)();
            mph_23 = __module__CapoHelpers__CapoCtx[]__mph(self_214);
            __lhs_0_91 = __helios__common__assert_constr_index(charterData_2, 0);
            spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_91);
            otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_91);
            mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_91);
            govDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_91);
            manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_91);
            inputs_2 = __helios__tx__inputs(__helios__scriptcontext__tx);
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- only the spend delegate calls this function", false, ()), spendDelegateIsValidating = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(self_214)(false, ());
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- spend delegate requires the other delegates validate (except mint delegate == same as spend delegate)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("govDelegate MAY contribute to settings validation", false, ()), (govDelegateMaybeValidating) -> {
                checkOneInvariant = (oneDgt) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariant must validate settings", false, ()), __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(oneDgt)(inputs_2, mph_23, true))())
                };
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spend invariants must validate settings", false, ()), spendInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(spendInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("mint invariants must validate settings", false, ()), mintInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(mintInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("dgDataControllers must validate settings", false, ()), dgDataPoliciesAreValidating = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all(manifest)((key_18, entry_1) -> {
                    __cond_47 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry_1);
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_47),
                        () -> {
                            (__lhs_0_94) -> {
                                policyLink_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_94);
                                __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(policyLink_1)(inputs_2, mph_23, true))()
                            }
                        },
                        () -> {
                            (__33) -> {
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ignoring manifest entry (not a data policy): ", key_18)), true)
                            }
                        }
                    )()(__cond_47)
                });
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("named delegates must validate settings", false, ()), namedDelegatesAreValidating = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)(__core__chooseUnit(__module__StellarHeliosHelpers__REQT("  - each other-named-delegate must validate settings", false, ()), (ok, key_19, dgt) -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("  - other-named-delegate: ", key_19)), __core__chooseUnit(__helios__print("
"), __helios__bool__and(() -> {
                        ok
                    }, () -> {
                        __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(dgt)(inputs_2, mph_23, true))()
                    })))
                }), true);
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        __helios__bool__and(() -> {
                            __helios__bool__and(() -> {
                                __helios__bool__and(() -> {
                                    dgDataPoliciesAreValidating
                                }, () -> {
                                    spendDelegateIsValidating
                                })
                            }, () -> {
                                govDelegateMaybeValidating
                            })
                        }, () -> {
                            spendInvariantsAreValidating
                        })
                    }, () -> {
                        mintInvariantsAreValidating
                    })
                }, () -> {
                    namedDelegatesAreValidating
                })))))
            }(__cond_46 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(govDelegate)(inputs_2, mph_23, false);
            __core__ifThenElse(
                __helios__option[__helios__bool]__some____is(__cond_46),
                () -> {
                    (__lhs_0_93) -> {
                        true
                    }
                },
                () -> {
                    (__lhs_0_92) -> {
                        __core__chooseUnit(__helios__print("  -- govAuthority isn't a script-based validator; doesn't validate new settings
"), true)
                    }
                }
            )()(__cond_46)))))
        }
    };
    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_215) -> {
        (activity_1) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__CapoHelpers__CapoCtx[]____eq(self_215, self_215)
            }), "prevent unused var"), __cond_48 = activity_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_48),
                () -> {
                    (__lhs_0_101) -> {
                        __helios__error("the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_48),
                        () -> {
                            (__lhs_0_100) -> {
                                __helios__error("the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo")
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_48),
                                () -> {
                                    (__lhs_0_99) -> {
                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for updating the Capo manifest...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_48),
                                        () -> {
                                            (__lhs_0_98) -> {
                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for queuing a pending dgt-change...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_48),
                                                () -> {
                                                    (__lhs_0_97) -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for removing a pending dgt-change entry...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_48),
                                                        () -> {
                                                            (__lhs_0_96) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for committing pending dgt-changes...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_95) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for creating a new delegate (deprecated path)...", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("deprecate use of CLA::CreatingDelegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()(__cond_48))
        }
    };
    __module__CapoHelpers__CapoCtx[]__orFail = (self_216) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__CapoCtx[]__serialize(self_216)(), __module__CapoHelpers__CapoCtx[]__serialize(self_216)())
            }), "crazy talk"), true)
        }
    };
    __module__CapoHelpers__mkCapoCtx = (mph_24) -> {
        __module__CapoHelpers__CapoCtx[]____new(mph_24, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())
    };
    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo) -> {
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It must spend the indicated seed UTXO", false, ()), __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_4) -> {
                __helios__txoutputid____eq(__helios__txinput__output_id(input_4), seedUtxo)
            })),
            () -> {
                __core__chooseUnit(__helios__print(" - expected seedUtxo: "), __core__chooseUnit(__helios__print(__helios__txoutputid__show(seedUtxo)()), __core__chooseUnit(__helios__print("
"), __helios__assert(false, "missing expected seed input for minting"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__helios__print("  -- has seed -> ok
"), true)))
    };
    __module__CapoMintHelpers__noOtherActivitiesSupported = (__34) -> {
        __core__chooseUnit(__helios__print("yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...
"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("   -- note: for other cases, a context-specific check via validateUutMinting's (
", "  ...
  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)
"), ") option can be used to steer around this failure.
")), __core__chooseUnit(__helios__assert(false, "unexpected delegate activity"), false)))
    };
    __helios__option[__helios__data]__none____is = (data_259) -> {
        __helios__common__enum_tag_equals(data_259, 1)
    };
    __helios__option[__helios__data]__some__some = (self_217) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_217))
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_218) -> {
        (key_20) -> {
            __helios__common__map_get(self_218, __helios__scriptpurpose____to_data(key_20), (x_8) -> {
                __core__constrData(0, __helios__common__list_1(x_8))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_25, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {
        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck,
            () -> {
                extraMintDelegateRedeemerCheck
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_1 = __core__ifThenElse(
            __useopt__checkMintDgtActivity,
            () -> {
                checkMintDgtActivity
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_25);
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter's mint-delegate to authorize this mint activity", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- finding input dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {
            __core__chooseUnit(__helios__print("    -- \u2705 \u27A1\uFE0F  \u{1F481}found dgTkn ^"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {
                __cond_50 = purpose_1;
                __core__ifThenElse(
                    __helios__scriptpurpose__spending____is(__cond_50),
                    () -> {
                        (sp_1) -> {
                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)
                        }
                    },
                    () -> {
                        (__35) -> {
                            false
                        }
                    }
                )()(__cond_50)
            });
            err = __helios__string____add(__helios__string____add("dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), " not being spent as expected");
            (maybeCheckedMintDelegateAuthority) -> {
                delegateDidAuthorize = true;
                __helios__bool__and(() -> {
                    delegateDidAuthorize
                }, () -> {
                    maybeCheckedMintDelegateAuthority
                })
            }(__cond_51 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);
            __core__ifThenElse(
                __helios__option[__helios__data]__none____is(__cond_51),
                () -> {
                    (__lhs_0_109) -> {
                        __helios__error(err)
                    }
                },
                () -> {
                    (__lhs_0_104) -> {
                        x_10 = __helios__option[__helios__data]__some__some(__lhs_0_104);
                        activity_2 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(x_10);
                        __cond_52 = activity_2;
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_52),
                            () -> {
                                (__lhs_0_105) -> {
                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_105);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY we ---------------- don't need the funny redeemer-check skipping"), __core__chooseUnit(__core__ifThenElse(
                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),
                                        () -> {
                                            __core__chooseUnit(__helios__print(" vvv wherever it is, probably best it uses the checkMintDgtActivity option"), __helios__error("where is extraMintDelegateRedeemerCheck=false really needed?"))
                                        },
                                        () -> {
                                            () -> {
                                                ()
                                            }()
                                        }
                                    )(), __cond_53 = DLA;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_53),
                                        () -> {
                                            (__lhs_0_108) -> {
                                                __core__chooseUnit(__helios__print("  -- ok, dgTkn spent
"), true)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_53),
                                                () -> {
                                                    (__lhs_0_107) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_106) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_53)))
                                }
                            },
                            () -> {
                                (__36) -> {
                                    checkMintDgtActivity_1(activity_2)
                                }
                            }
                        )()(__cond_52)
                    }
                }
            )()(__cond_51)))
        }(__cond_49 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_10) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(authzAc), 0)
        });
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_49),
            () -> {
                (__lhs_0_103) -> {
                    x_9 = __helios__option[__helios__txinput]__some__some(__lhs_0_103);
                    __helios__txinput__output_id(x_9)
                }
            },
            () -> {
                (__lhs_0_102) -> {
                    __helios__error(__helios__string____add("  \u274C\u274C missing dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))
                }
            }
        )()(__cond_49))))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __helios__txoutputid__tx_id(seed_1);
        seedIdx = __helios__txoutputid__index(seed_1);
        idxBytes = __helios__int__serialize(seedIdx)();
        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);
        txoInfo = __core__ifThenElse(
            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),
            () -> {
                __core__chooseUnit(__helios__assert(false, "cbor(txoId) len > 9 !!"), idxBytes)
            },
            () -> {
                () -> {
                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8("@")()), idxBytes)
                }()
            }
        )();
        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);
        mhs = __helios__bytearray__show(miniHash)();
        (p) -> {
            __helios__string____add(__helios__string____add(p, "-"), mhs)
        }
    };
    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {
        __helios__bytearray____lt(k1, k2)
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_219) -> {
        (fn_25) -> {
            recurse_89 = (recurse_88, map_31) -> {
                __core__chooseList(map_31, () -> {
                    ()
                }, () -> {
                    head_85 = __core__headList__safe(map_31);
                    __core__chooseUnit(fn_25(__helios__bytearray__from_data(__core__fstPair(head_85)), __helios__int__from_data(__core__sndPair(head_85))), recurse_88(recurse_88, __core__tailList__safe(map_31)))
                })()
            };
            recurse_89(recurse_89, self_219)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_220) -> {
        (fn_26) -> {
            __helios__common__filter_map(self_220, (pair_72) -> {
                fn_26(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_72)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_72)))
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_221) -> {
        (fn_27) -> {
            recurse_91 = (recurse_90, map_32) -> {
                __core__chooseList(map_32, () -> {
                    ()
                }, () -> {
                    head_86 = __core__headList__safe(map_32);
                    __core__chooseUnit(fn_27(__helios__mintingpolicyhash__from_data(__core__fstPair(head_86)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_86))), recurse_90(recurse_90, __core__tailList__safe(map_32)))
                })()
            };
            recurse_91(recurse_91, self_221)
        }
    };
    __helios__option[__helios__int]__none____is = (data_260) -> {
        __helios__common__enum_tag_equals(data_260, 1)
    };
    __helios__option[__helios__int]__some__some = (self_222) -> {
        __helios__int__from_data(__helios__common__enum_field_0(self_222))
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_223) -> {
        (key_21) -> {
            __helios__common__map_get(self_223, __helios__bytearray____to_data(key_21), (x_11) -> {
                __core__constrData(0, __helios__common__list_1(x_11))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_224) -> {
        (key_22) -> {
            key_23 = __helios__mintingpolicyhash____to_data(key_22);
            recurse_93 = (recurse_92, self_225) -> {
                __core__chooseList(self_225, () -> {
                    self_225
                }, () -> {
                    head_87 = __core__headList__safe(self_225);
                    tail_4 = __core__tailList__safe(self_225);
                    __core__ifThenElse(
                        __core__equalsData(key_23, __core__fstPair(head_87)),
                        () -> {
                            recurse_92(recurse_92, tail_4)
                        },
                        () -> {
                            __core__mkCons(head_87, recurse_92(recurse_92, tail_4))
                        }
                    )()
                })()
            };
            recurse_93(recurse_93, self_224)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;
    __helios__map[__helios__bytearray@__helios__int]____eq = (self_226, other_4) -> {
        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_226), __helios__map[__helios__bytearray@__helios__int]____to_data(other_4))
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_227) -> {
        (comp_4) -> {
            __helios__common__sort(self_227, (a_16, b_14) -> {
                comp_4(__helios__bytearray__from_data(__core__fstPair(a_16)), __helios__int__from_data(__core__sndPair(a_16)), __helios__bytearray__from_data(__core__fstPair(b_14)), __helios__int__from_data(__core__sndPair(b_14)))
            })
        }
    };
    __helios__value__sum[__helios__value] = (self_228) -> {
        recurse_95 = (recurse_94, lst_24) -> {
            __core__chooseList(lst_24, () -> {
                __helios__value__ZERO
            }, () -> {
                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_24))), recurse_94(recurse_94, __core__tailList__safe(lst_24)))
            })()
        };
        recurse_95(recurse_95, self_228)
    };
    __helios__list[__helios__string]__map[__helios__value] = (self_229) -> {
        (fn_28) -> {
            __helios__common__map(self_229, (item_13) -> {
                __helios__value____to_data(fn_28(__helios__string__from_data(item_13)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_26, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        bootstrapCharter_1 = __core__ifThenElse(
            __useopt__bootstrapCharter,
            () -> {
                bootstrapCharter
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        needsMintDelegateApproval_1 = __core__ifThenElse(
            __useopt__needsMintDelegateApproval,
            () -> {
                needsMintDelegateApproval
            },
            () -> {
                true
            }
        )();
        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck_1,
            () -> {
                extraMintDelegateRedeemerCheck_2
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_3 = __core__ifThenElse(
            __useopt__checkMintDgtActivity_1,
            () -> {
                checkMintDgtActivity_2
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());
        delegateApproval = __core__ifThenElse(
            isBootstrapping,
            () -> {
                true
            },
            () -> {
                () -> {
                    __lhs_0_110 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_26, false, ()), 0);
                    mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_110);
                    __core__ifThenElse(
                        needsMintDelegateApproval_1,
                        () -> {
                            __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_26, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3)
                        },
                        () -> {
                            () -> {
                                true
                            }()
                        }
                    )()
                }()
            }
        )();
        valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
        expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](purposes)((purpose_2) -> {
            __module__StellarHeliosHelpers__mkTv(mph_26, true, mkTokenName_1(purpose_2), false, (), false, ())
        })));
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_26)),
            () -> {
                mphStr = __helios__mintingpolicyhash__show(mph_26)();
                valStr = __helios__value__show(valueMinted)(false, ());
                __core__chooseUnit(__helios__print(__helios__string____add("  -- no mint from our policy ", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print("^^  value minted"), __helios__error("\u274C\u274C validateUutMinting(): no mint from our policy"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_26))(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_3, i_12) -> {
            tnStr_1 = __helios__bytearray__decode_utf8_safe(tn_3)();
            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E} expected: ", __helios__int__show(i_12)()), "x "), tnStr_1))
        }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_26);
        actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__core__ifThenElse(
            true,
            () -> {
                __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_2, i_11) -> {
                    tnStr = __helios__bytearray__decode_utf8_safe(tn_2)();
                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E}   actual: ", __helios__int__show(i_11)()), "x "), tnStr))
                }), __core__chooseUnit(__helios__print("other policy values minted: 
"), __helios__print(__helios__value__show(__helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_15, __37) -> {
                    __helios__mintingpolicyhash____neq(b_15, mph_26)
                })))(false, ()))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the mint for this policy-id is exactly the expected value", false, ()), thisPolicyMintOK = __helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted);
        __core__chooseUnit(__helios__assert(thisPolicyMintOK, "mismatch in UUT mint"), __core__chooseUnit(__helios__print("  -- this-policy mint ok"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_2), "no seed"), __core__chooseUnit(__helios__print("  -- ok: has seed and expected this-policy mint value"), otherPoliciesMintOk = __core__ifThenElse(
            __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),
            () -> {
                true
            },
            () -> {
                () -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with an additional mint-value indicated", false, ()), remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue)(mph_26),
                        () -> {
                            __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_26))
                        },
                        () -> {
                            () -> {
                                expectedValue
                            }()
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint)(),
                        () -> {
                            true
                        },
                        () -> {
                            () -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...with other-policy values expected: ", false, ()), __core__chooseUnit(__helios__print(__helios__string____add(__helios__value__show(remainingExpectedMint)(false, ()), "^ other-mint value expected")), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It should mint exactly the indicated token names", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Doesn't constrain any mentioned policy's minting of any other tokens", false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {
                                    mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);
                                    __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_3, expectedCount) -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__cond_54 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_3);
                                            __core__ifThenElse(
                                                __helios__option[__helios__int]__none____is(__cond_54),
                                                () -> {
                                                    (__lhs_0_112) -> {
                                                        false
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_111) -> {
                                                        actualCount = __helios__option[__helios__int]__some__some(__lhs_0_111);
                                                        __helios__int____eq(actualCount, expectedCount)
                                                    }
                                                }
                                            )()(__cond_54)),
                                            () -> {
                                                tnString = __helios__bytearray__decode_utf8_safe(tokenName_3)();
                                                __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C validateUutMinting(): wrong mint for ", __helios__mintingpolicyhash__show(otherMph)()), ":"), tnString))
                                            },
                                            () -> {
                                                () -> {
                                                    ()
                                                }()
                                            }
                                        )()
                                    })
                                }), true)))))
                            }()
                        }
                    )())
                }()
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)("  -- other-expected-mints ok? "), "unreachable exception: otherPoliciesMintOk"), __core__chooseUnit(__helios__print(" \u2705 validateUutMinting:  ok!
"), __helios__bool__and(() -> {
            __helios__bool__and(() -> {
                delegateApproval
            }, () -> {
                thisPolicyMintOK
            })
        }, () -> {
            otherPoliciesMintOk
        })))))))))))
    };
    __module__UnspecializedDelegate__DelegateDatum[]__is_valid_data = (__module__UnspecializedDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data, __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__is_valid_data, __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData__is_valid_data) -> {
        (data_261) -> {
            __core__ifThenElse(
                __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData__is_valid_data(data_261),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__is_valid_data(data_261),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data(data_261),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__UnspecializedDelegate__DelegateDatum[]__from_data = (__module__UnspecializedDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData__is_valid_data_1) -> {
        (data_262) -> {
            ignore_17 = __core__ifThenElse(
                __module__UnspecializedDelegate__DelegateDatum[]__is_valid_data(__module__UnspecializedDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData__is_valid_data_1)(data_262),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateDatum data", ())
                }
            )();
            data_262
        }
    };
    __module__UnspecializedDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_2 = (data_263) -> {
        __core__chooseData(data_263, () -> {
            pair_73 = __core__unConstrData__safe(data_263);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_73), 0),
                () -> {
                    data_264 = __core__listData(__core__sndPair(pair_73));
                    __core__chooseData(data_264, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_151 = __core__unListData__safe(data_264);
                        __core__chooseList(fields_151, () -> {
                            false
                        }, () -> {
                            head_88 = __core__headList__safe(fields_151);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_88),
                                () -> {
                                    fields_152 = __core__tailList__safe(fields_151);
                                    __core__chooseList(fields_152, () -> {
                                        false
                                    }, () -> {
                                        head_89 = __core__headList__safe(fields_152);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_89),
                                            () -> {
                                                fields_153 = __core__tailList__safe(fields_152);
                                                __core__chooseList(fields_153, () -> {
                                                    false
                                                }, () -> {
                                                    head_90 = __core__headList__safe(fields_153);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_90),
                                                        () -> {
                                                            fields_154 = __core__tailList__safe(fields_153);
                                                            __core__chooseList(fields_154, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__serialize = __helios__common__serialize;
    __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation____is = (data_265) -> {
        __helios__common__enum_tag_equals(data_265, 1)
    };
    __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__is_valid_data_2 = (data_266) -> {
        __core__chooseData(data_266, () -> {
            pair_74 = __core__unConstrData__safe(data_266);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_74), 1),
                () -> {
                    data_267 = __core__listData(__core__sndPair(pair_74));
                    __core__chooseData(data_267, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_155 = __core__unListData__safe(data_267);
                        __core__chooseList(fields_155, () -> {
                            false
                        }, () -> {
                            head_91 = __core__headList__safe(fields_155);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(head_91),
                                () -> {
                                    fields_156 = __core__tailList__safe(fields_155);
                                    __core__chooseList(fields_156, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__dd = (self_230) -> {
        __module__CapoDelegateHelpers__DelegationDetail[]__from_data(__helios__common__enum_field_0(self_230))
    };
    __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData____is = (data_268) -> {
        __helios__common__enum_tag_equals(data_268, 2)
    };
    __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData__is_valid_data_2 = (data_269) -> {
        __core__chooseData(data_269, () -> {
            pair_75 = __core__unConstrData__safe(data_269);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_75), 2),
                () -> {
                    data_270 = __core__listData(__core__sndPair(pair_75));
                    __core__chooseData(data_270, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_157 = __core__unListData__safe(data_270);
                        __core__chooseList(fields_157, () -> {
                            false
                        }, () -> {
                            head_92 = __core__headList__safe(fields_157);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_92),
                                () -> {
                                    fields_158 = __core__tailList__safe(fields_157);
                                    __core__chooseList(fields_158, () -> {
                                        false
                                    }, () -> {
                                        head_93 = __core__headList__safe(fields_158);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_93),
                                            () -> {
                                                fields_159 = __core__tailList__safe(fields_158);
                                                __core__chooseList(fields_159, () -> {
                                                    false
                                                }, () -> {
                                                    head_94 = __core__headList__safe(fields_159);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_94),
                                                        () -> {
                                                            fields_160 = __core__tailList__safe(fields_159);
                                                            __core__chooseList(fields_160, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__MintingActivity[]__is_valid_data = (__module__UnspecializedDelegate__MintingActivity[]___placeholder1MA__is_valid_data) -> {
        (data_271) -> {
            __core__ifThenElse(
                __module__UnspecializedDelegate__MintingActivity[]___placeholder1MA__is_valid_data(data_271),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__UnspecializedDelegate__MintingActivity[]___placeholder1MA__is_valid_data_1 = (data_272) -> {
        __core__chooseData(data_272, () -> {
            pair_76 = __core__unConstrData__safe(data_272);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_76), 0),
                () -> {
                    data_273 = __core__listData(__core__sndPair(pair_76));
                    __core__chooseData(data_273, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_161 = __core__unListData__safe(data_273);
                        __core__chooseList(fields_161, () -> {
                            false
                        }, () -> {
                            head_95 = __core__headList__safe(fields_161);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_95),
                                () -> {
                                    fields_162 = __core__tailList__safe(fields_161);
                                    __core__chooseList(fields_162, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__SpendingActivity[]__is_valid_data = (__module__UnspecializedDelegate__SpendingActivity[]___placeholder1SA__is_valid_data) -> {
        (data_274) -> {
            __core__ifThenElse(
                __module__UnspecializedDelegate__SpendingActivity[]___placeholder1SA__is_valid_data(data_274),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__UnspecializedDelegate__SpendingActivity[]___placeholder1SA__is_valid_data_1 = (data_275) -> {
        __core__chooseData(data_275, () -> {
            pair_77 = __core__unConstrData__safe(data_275);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_77), 0),
                () -> {
                    data_276 = __core__listData(__core__sndPair(pair_77));
                    __core__chooseData(data_276, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_163 = __core__unListData__safe(data_276);
                        __core__chooseList(fields_163, () -> {
                            false
                        }, () -> {
                            head_96 = __core__headList__safe(fields_163);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_96),
                                () -> {
                                    fields_164 = __core__tailList__safe(fields_163);
                                    __core__chooseList(fields_164, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__BurningActivity[]__is_valid_data = (__module__UnspecializedDelegate__BurningActivity[]___placeholder1BA__is_valid_data) -> {
        (data_277) -> {
            __core__ifThenElse(
                __module__UnspecializedDelegate__BurningActivity[]___placeholder1BA__is_valid_data(data_277),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__UnspecializedDelegate__BurningActivity[]___placeholder1BA__is_valid_data_1 = (data_278) -> {
        __core__chooseData(data_278, () -> {
            pair_78 = __core__unConstrData__safe(data_278);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_78), 0),
                () -> {
                    data_279 = __core__listData(__core__sndPair(pair_78));
                    __core__chooseData(data_279, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_165 = __core__unListData__safe(data_279);
                        __core__chooseList(fields_165, () -> {
                            false
                        }, () -> {
                            head_97 = __core__headList__safe(fields_165);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_97),
                                () -> {
                                    fields_166 = __core__tailList__safe(fields_165);
                                    __core__chooseList(fields_166, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]____eq = __helios__common____eq;
    __module__UnspecializedDelegate__DelegateActivity[]__is_valid_data = (__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_280) -> {
            __core__ifThenElse(
                __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data(data_280),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data(data_280),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data(data_280),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data(data_280),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data(data_280),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data(data_280),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data(data_280),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data(data_280),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data(data_280),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__UnspecializedDelegate__DelegateActivity[]__from_data = (__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_281) -> {
            ignore_18 = __core__ifThenElse(
                __module__UnspecializedDelegate__DelegateActivity[]__is_valid_data(__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1)(data_281),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateActivity data", ())
                }
            )();
            data_281
        }
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is = (data_282) -> {
        __helios__common__enum_tag_equals(data_282, 0)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2 = (data_283) -> {
        __core__chooseData(data_283, () -> {
            pair_79 = __core__unConstrData__safe(data_283);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_79), 0),
                () -> {
                    data_284 = __core__listData(__core__sndPair(pair_79));
                    __core__chooseData(data_284, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_167 = __core__unListData__safe(data_284);
                        __core__chooseList(fields_167, () -> {
                            false
                        }, () -> {
                            head_98 = __core__headList__safe(fields_167);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_98),
                                () -> {
                                    fields_168 = __core__tailList__safe(fields_167);
                                    __core__chooseList(fields_168, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__activity = (self_231) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_231))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is = (data_285) -> {
        __helios__common__enum_tag_equals(data_285, 1)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2 = (data_286) -> {
        __core__chooseData(data_286, () -> {
            pair_80 = __core__unConstrData__safe(data_286);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_80), 1),
                () -> {
                    data_287 = __core__listData(__core__sndPair(pair_80));
                    __core__chooseData(data_287, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_169 = __core__unListData__safe(data_287);
                        __core__chooseList(fields_169, () -> {
                            false
                        }, () -> {
                            head_99 = __core__headList__safe(fields_169);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_99),
                                () -> {
                                    fields_170 = __core__tailList__safe(fields_169);
                                    __core__chooseList(fields_170, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__activity = (self_232) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_232))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities____is = (data_288) -> {
        __helios__common__enum_tag_equals(data_288, 2)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2 = (data_289) -> {
        __core__chooseData(data_289, () -> {
            pair_81 = __core__unConstrData__safe(data_289);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_81), 2),
                () -> {
                    data_290 = __core__listData(__core__sndPair(pair_81));
                    __core__chooseData(data_290, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_171 = __core__unListData__safe(data_290);
                        __core__chooseList(fields_171, () -> {
                            false
                        }, () -> {
                            head_100 = __core__headList__safe(fields_171);
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__SpendingActivity[]__is_valid_data(__module__UnspecializedDelegate__SpendingActivity[]___placeholder1SA__is_valid_data_1)(head_100),
                                () -> {
                                    fields_172 = __core__tailList__safe(fields_171);
                                    __core__chooseList(fields_172, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities____is = (data_291) -> {
        __helios__common__enum_tag_equals(data_291, 3)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2 = (data_292) -> {
        __core__chooseData(data_292, () -> {
            pair_82 = __core__unConstrData__safe(data_292);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_82), 3),
                () -> {
                    data_293 = __core__listData(__core__sndPair(pair_82));
                    __core__chooseData(data_293, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_173 = __core__unListData__safe(data_293);
                        __core__chooseList(fields_173, () -> {
                            false
                        }, () -> {
                            head_101 = __core__headList__safe(fields_173);
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__MintingActivity[]__is_valid_data(__module__UnspecializedDelegate__MintingActivity[]___placeholder1MA__is_valid_data_1)(head_101),
                                () -> {
                                    fields_174 = __core__tailList__safe(fields_173);
                                    __core__chooseList(fields_174, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities____is = (data_294) -> {
        __helios__common__enum_tag_equals(data_294, 4)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2 = (data_295) -> {
        __core__chooseData(data_295, () -> {
            pair_83 = __core__unConstrData__safe(data_295);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_83), 4),
                () -> {
                    data_296 = __core__listData(__core__sndPair(pair_83));
                    __core__chooseData(data_296, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_175 = __core__unListData__safe(data_296);
                        __core__chooseList(fields_175, () -> {
                            false
                        }, () -> {
                            head_102 = __core__headList__safe(fields_175);
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__BurningActivity[]__is_valid_data(__module__UnspecializedDelegate__BurningActivity[]___placeholder1BA__is_valid_data_1)(head_102),
                                () -> {
                                    fields_176 = __core__tailList__safe(fields_175);
                                    __core__chooseList(fields_176, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData____is = (data_297) -> {
        __helios__common__enum_tag_equals(data_297, 5)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2 = (data_298) -> {
        __core__chooseData(data_298, () -> {
            pair_84 = __core__unConstrData__safe(data_298);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_84), 5),
                () -> {
                    data_299 = __core__listData(__core__sndPair(pair_84));
                    __core__chooseData(data_299, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_177 = __core__unListData__safe(data_299);
                        __core__chooseList(fields_177, () -> {
                            false
                        }, () -> {
                            head_103 = __core__headList__safe(fields_177);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_103),
                                () -> {
                                    fields_178 = __core__tailList__safe(fields_177);
                                    __core__chooseList(fields_178, () -> {
                                        false
                                    }, () -> {
                                        head_104 = __core__headList__safe(fields_178);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_104),
                                            () -> {
                                                fields_179 = __core__tailList__safe(fields_178);
                                                __core__chooseList(fields_179, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__seed = (self_233) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_233))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__dataType = (self_234) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_234))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData____is = (data_300) -> {
        __helios__common__enum_tag_equals(data_300, 6)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2 = (data_301) -> {
        __core__chooseData(data_301, () -> {
            pair_85 = __core__unConstrData__safe(data_301);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_85), 6),
                () -> {
                    data_302 = __core__listData(__core__sndPair(pair_85));
                    __core__chooseData(data_302, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_180 = __core__unListData__safe(data_302);
                        __core__chooseList(fields_180, () -> {
                            false
                        }, () -> {
                            head_105 = __core__headList__safe(fields_180);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_105),
                                () -> {
                                    fields_181 = __core__tailList__safe(fields_180);
                                    __core__chooseList(fields_181, () -> {
                                        false
                                    }, () -> {
                                        head_106 = __core__headList__safe(fields_181);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_106),
                                            () -> {
                                                fields_182 = __core__tailList__safe(fields_181);
                                                __core__chooseList(fields_182, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_235) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_235))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__recId = (self_236) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_236))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData____is = (data_303) -> {
        __helios__common__enum_tag_equals(data_303, 7)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2 = (data_304) -> {
        __core__chooseData(data_304, () -> {
            pair_86 = __core__unConstrData__safe(data_304);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_86), 7),
                () -> {
                    data_305 = __core__listData(__core__sndPair(pair_86));
                    __core__chooseData(data_305, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_183 = __core__unListData__safe(data_305);
                        __core__chooseList(fields_183, () -> {
                            false
                        }, () -> {
                            head_107 = __core__headList__safe(fields_183);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_107),
                                () -> {
                                    fields_184 = __core__tailList__safe(fields_183);
                                    __core__chooseList(fields_184, () -> {
                                        false
                                    }, () -> {
                                        head_108 = __core__headList__safe(fields_184);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_108),
                                            () -> {
                                                fields_185 = __core__tailList__safe(fields_184);
                                                __core__chooseList(fields_185, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__recId = (self_237) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_237))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities____is = (data_306) -> {
        __helios__common__enum_tag_equals(data_306, 8)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2 = (data_307) -> {
        __core__chooseData(data_307, () -> {
            pair_87 = __core__unConstrData__safe(data_307);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_87), 8),
                () -> {
                    data_308 = __core__listData(__core__sndPair(pair_87));
                    __core__chooseData(data_308, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_186 = __core__unListData__safe(data_308);
                        __core__chooseList(fields_186, () -> {
                            false
                        }, () -> {
                            head_109 = __core__headList__safe(fields_186);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_109),
                                () -> {
                                    fields_187 = __core__tailList__safe(fields_186);
                                    __core__chooseList(fields_187, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__activities = (self_238) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_238))
    };
    __helios__option[__helios__string]__none____is = (data_309) -> {
        __helios__common__enum_tag_equals(data_309, 1)
    };
    __helios__list[__helios__string]__length = __helios__common__length;
    __helios__list[__helios__string]__find_safe = (self_239) -> {
        (fn_29) -> {
            __helios__common__find_safe(self_239, (item_14) -> {
                fn_29(__helios__string__from_data(item_14))
            }, __helios__common__identity)
        }
    };
    __module__UnspecializedDelegate__DelegateActivity[]__additionalDelegateValidation = (__module__UnspecializedDelegate__DelegateActivity[]__supportedCapoDelegatePurposes) -> {
        (self_240) -> {
            (priorMddd, cctx) -> {
                mph_27 = __module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__dd(priorMddd));
                __helios__bool__or(() -> {
                    __cond_55 = self_240;
                    __core__ifThenElse(
                        __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_55),
                        () -> {
                            (__lhs_0_121) -> {
                                true
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_55),
                                () -> {
                                    (__lhs_0_117) -> {
                                        CLA = __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_117);
                                        __cond_56 = CLA;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_56),
                                            () -> {
                                                (__lhs_0_118) -> {
                                                    seed_3 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_118);
                                                    purpose_3 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_118);
                                                    __cond_57 = __helios__list[__helios__string]__find_safe(__module__UnspecializedDelegate__DelegateActivity[]__supportedCapoDelegatePurposes(self_240)())((p_1) -> {
                                                        __helios__string____eq(p_1, purpose_3)
                                                    });
                                                    __core__ifThenElse(
                                                        __helios__option[__helios__string]__none____is(__cond_57),
                                                        () -> {
                                                            (__lhs_0_120) -> {
                                                                __core__chooseUnit(__core__ifThenElse(
                                                                    __helios__int____eq(__helios__list[__helios__string]__length(__module__UnspecializedDelegate__DelegateActivity[]__supportedCapoDelegatePurposes(self_240)()), 0),
                                                                    () -> {
                                                                        __helios__print("note: unspecialized delegate has no supported purposes")
                                                                    },
                                                                    () -> {
                                                                        () -> {
                                                                            ()
                                                                        }()
                                                                    }
                                                                )(), __helios__error("can't mint delegate with unsupported purpose"))
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_119) -> {
                                                                __module__CapoMintHelpers__validateUutMinting(mph_27, seed_3, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_3), false, (), false, (), true, false, false, (), false, ())
                                                            }
                                                        }
                                                    )()(__cond_57)
                                                }
                                            },
                                            () -> {
                                                (__39) -> {
                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- to customize: mint/spend delegates have an option to validate additional lifecycle constraints here", false, ()), true)
                                                }
                                            }
                                        )()(__cond_56)
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities____is(__cond_55),
                                        () -> {
                                            (__lhs_0_116) -> {
                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "can't"), __helios__error("unspecialized mint delegate doesn't have any MintingActivities"))
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_55),
                                                () -> {
                                                    (__lhs_0_115) -> {
                                                        __core__chooseUnit(__helios__print(" \u2139\uFE0F  mint delegate allowing CreatingDelegatedData on the say-so of its policy delegate"), true)
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_55),
                                                        () -> {
                                                            (__lhs_0_114) -> {
                                                                __core__chooseUnit(__helios__print(" \u2139\uFE0F  spend delegate allowing UpdatingDelegatedData on the say-so of its policy delegate"), true)
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_55),
                                                                () -> {
                                                                    (__lhs_0_113) -> {
                                                                        __core__chooseUnit(__helios__print(" \u2139\uFE0F  mint delegate allowing DeletingDelegatedData on the say-so of its policy delegate"), true)
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__38) -> {
                                                                        __core__chooseUnit(__helios__assert(false, "mint/spend delegate rejecting other activity"), false)
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()(__cond_55)
                }, () -> {
                    __helios__bytearray____eq(__helios__tx__serialize(__helios__scriptcontext__tx)(), __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__serialize(priorMddd)())
                })
            }
        }
    };
    __module__UnspecializedDelegate__DelegateActivity[]__supportedCapoDelegatePurposes_1 = (self_241) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__UnspecializedDelegate__DelegateActivity[]____eq(self_241, self_241)
            }), "no way, man"), __core__mkNilData(()))
        }
    };
    __module__UnspecializedDelegate__DelegateActivity[]__otherDatumValidation = (self_242) -> {
        (_priorMdd) -> {
            neverTriggered = () -> {
                __helios__error("never called")
            };
            __cond_58 = self_242;
            __core__ifThenElse(
                __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_58),
                () -> {
                    (__lhs_0_123) -> {
                        neverTriggered()
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_58),
                        () -> {
                            (__lhs_0_122) -> {
                                neverTriggered()
                            }
                        },
                        () -> {
                            (__40) -> {
                                false
                            }
                        }
                    )()
                }
            )()(__cond_58)
        }
    };
    __module__BasicDelegate__rev = __helios__int__from_data(__core__iData(1));
    __module__BasicDelegate__instance = #67656e6572616c;
    __module__BasicDelegate__delegateName = __helios__string__from_data(__core__bData(#556e7370656369616c697a656444656c6567617465));
    __module__BasicDelegate__isMintDelegate = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__isSpendDelegate = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__isDgDataPolicy = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__requiresGovAuthority = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __helios__list[__helios__data]__all = (self_243) -> {
        (fn_30) -> {
            __helios__common__all(self_243, (item_15) -> {
                fn_30(__helios__data__from_data(item_15))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq = (self_244, other_5) -> {
        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_244), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(other_5))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail = __core__tailList;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;
    __helios__option[__helios__assetclass]__unwrap = (self_245) -> {
        () -> {
            __helios__assetclass__from_data(__helios__common__enum_field_0(self_245))
        }
    };
    __helios__option[__helios__assetclass]__some____new = (some_4) -> {
        __core__constrData(0, __helios__common__list_1(__helios__assetclass____to_data(some_4)))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all = (self_246) -> {
        (fn_31) -> {
            __helios__common__all(self_246, (item_16) -> {
                fn_31(__module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_16))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head = (self_247) -> {
        __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList(self_247))
    };
    __helios__map[__helios__bytearray@__helios__int]__show = (self_248) -> {
        () -> {
            recurse_97 = (recurse_96, self_249, first) -> {
                __core__chooseList(self_249, () -> {
                    ""
                }, () -> {
                    __core__appendString(__core__ifThenElse(
                        first,
                        "",
                        ","
                    ), head_110 = __core__headList__safe(self_249);
                    key_data = __core__fstPair(head_110);
                    key_24 = __helios__bytearray__from_data_safe(key_data);
                    value_data = __core__sndPair(head_110);
                    value_6 = __helios__int__from_data_safe(value_data);
                    __core__appendString(__core__appendString(__core__appendString(key_24((valid_7, key_25) -> {
                        __core__ifThenElse(
                            valid_7,
                            () -> {
                                __helios__bytearray__show(key_25)()
                            },
                            () -> {
                                __helios__data__show(key_data)()
                            }
                        )()
                    }), ":"), value_6((valid_6, value_7) -> {
                        __core__ifThenElse(
                            valid_6,
                            () -> {
                                __helios__int__show(value_7)()
                            },
                            () -> {
                                __helios__data__show(value_data)()
                            }
                        )()
                    })), recurse_96(recurse_96, __core__tailList__safe(self_249), false)))
                })()
            };
            __core__appendString("{", __core__appendString(recurse_97(recurse_97, self_248, true), "}"))
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]] = (self_250) -> {
        (fn_32, a0) -> {
            __helios__common__fold(self_250, (prev_4, item_17) -> {
                fn_32(prev_4, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_17))
            }, a0)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__delete = (self_251) -> {
        (key_26) -> {
            key_27 = __helios__bytearray____to_data(key_26);
            recurse_99 = (recurse_98, self_252) -> {
                __core__chooseList(self_252, () -> {
                    self_252
                }, () -> {
                    head_111 = __core__headList__safe(self_252);
                    tail_5 = __core__tailList__safe(self_252);
                    __core__ifThenElse(
                        __core__equalsData(key_27, __core__fstPair(head_111)),
                        () -> {
                            recurse_98(recurse_98, tail_5)
                        },
                        () -> {
                            __core__mkCons(head_111, recurse_98(recurse_98, tail_5))
                        }
                    )()
                })()
            };
            recurse_99(recurse_99, self_251)
        }
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is = (data_310) -> {
        __helios__common__enum_tag_equals(data_310, 0)
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some = (self_253) -> {
        __helios__map[__helios__bytearray@__helios__int]__from_data(__helios__common__enum_field_0(self_253))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe = (self_254) -> {
        (key_28) -> {
            __helios__common__map_get(self_254, __helios__mintingpolicyhash____to_data(key_28), (x_12) -> {
                __core__constrData(0, __helios__common__list_1(x_12))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]] = (self_255) -> {
        (fn_33, a0_1, b0_1) -> {
            __helios__common__fold(self_255, (prev_5, item_18) -> {
                prev_5((a_17, b_16) -> {
                    fn_33(a_17, b_16, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_18))
                })
            }, (callback_9) -> {
                callback_9(a0_1, b0_1)
            })
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_256) -> {
        __helios__common__length(self_256)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head = (self_257) -> {
        head_112 = __core__headList(self_257);
        (callback_10) -> {
            callback_10(__helios__string__from_data(__core__fstPair(head_112)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(head_112)))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail = __core__tailList;
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap = (self_258) -> {
        () -> {
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_258))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_259) -> {
        (key_29) -> {
            key_30 = __helios__string____to_data(key_29);
            recurse_101 = (recurse_100, self_260) -> {
                __core__chooseList(self_260, () -> {
                    self_260
                }, () -> {
                    head_113 = __core__headList__safe(self_260);
                    tail_6 = __core__tailList__safe(self_260);
                    __core__ifThenElse(
                        __core__equalsData(key_30, __core__fstPair(head_113)),
                        () -> {
                            recurse_100(recurse_100, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_113, recurse_100(recurse_100, tail_6))
                        }
                    )()
                })()
            };
            recurse_101(recurse_101, self_259)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq = (self_261, other_6) -> {
        __core__equalsData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_261), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(other_6))
    };
    __helios__option[__helios__string]__unwrap = (self_262) -> {
        () -> {
            __helios__string__from_data(__helios__common__enum_field_0(self_262))
        }
    };
    __helios__option[__helios__bytearray]__unwrap = (self_263) -> {
        () -> {
            __helios__bytearray__from_data(__helios__common__enum_field_0(self_263))
        }
    };
    __module__BasicDelegate__main_1 = (__module__BasicDelegate__main) -> {
        (mdd, activity_3) -> {
            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(" \u{1F6A5}\u2753delegate: ", __module__BasicDelegate__delegateName), "
")), (result_2) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("\u{1F6A5}\u{1F7E2} delegate: ", __module__BasicDelegate__delegateName), ": ok!
")), result_2)
            }(__cond_59 = mdd;
            __core__ifThenElse(
                __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData____is(__cond_59),
                () -> {
                    (__lhs_0_261) -> {
                        __helios__error("Data Delegates must never store the capoStoredData variant in the script; used only for data-structuring capo-stored utxo datum")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation____is(__cond_59),
                        () -> {
                            (isD) -> {
                                dd = __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__dd(isD);
                                __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __helios__int__serialize(__module__BasicDelegate__rev)()), "uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __module__BasicDelegate__instance), "uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __helios__string__encode_utf8(__module__BasicDelegate__delegateName)()), "uniqueness"), myDgTkn = __helios__value__show(__helios__txinput__value(__helios__scriptcontext__get_current_input()))(false, ());
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- is spending dgTkn ", myDgTkn)), (checkNonDelegatedActivities) -> {
                                    __core__chooseUnit(__helios__assert(checkNonDelegatedActivities, "checkNonDelegatedActivities failed"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... final checks:", false, ()), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__dd(isD))))();
                                    __helios__bool__and(() -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__isDgDataPolicy),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__BasicDelegate__requiresGovAuthority),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_7)())()
                                                            }()
                                                        }
                                                    )()
                                                }()
                                            }
                                        )()
                                    }, () -> {
                                        __core__ifThenElse(
                                            __helios__bool__and(() -> {
                                                __module__StellarHeliosHelpers__bREQT("... additionalDelegateValidation", false, ())
                                            }, () -> {
                                                __module__UnspecializedDelegate__DelegateActivity[]__additionalDelegateValidation(__module__UnspecializedDelegate__DelegateActivity[]__supportedCapoDelegatePurposes_1)(activity_3)(isD, cctx_7)
                                            }),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation ok!
")), true)
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__error(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation returned false (without any thrown error)"))
                                                }()
                                            }
                                        )()
                                    })))
                                }(__cond_61 = activity_3;
                                __core__ifThenElse(
                                    __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities____is(__cond_61),
                                    () -> {
                                        (__lhs_0_239) -> {
                                            activities_2 = __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__activities(__lhs_0_239);
                                            cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                            mintDgtCheck_1 = __core__ifThenElse(
                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __helios__list[__helios__data]__all(activities_2)((rawActivity) -> {
                                                                    a_18 = __module__UnspecializedDelegate__DelegateActivity[]__from_data(__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity);
                                                                    __core__chooseUnit(__helios__print("  -- mintDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the mint delegate, only {Create,Delete}DelegatedData activities are valid in multi-activities", false, ()), __cond_110 = a_18;
                                                                    __core__ifThenElse(
                                                                        __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_110),
                                                                        () -> {
                                                                            (__lhs_0_245) -> {
                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_18)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_110),
                                                                                () -> {
                                                                                    (__lhs_0_244) -> {
                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_18)
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_110),
                                                                                        () -> {
                                                                                            (__lhs_0_243) -> {
                                                                                                __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_110),
                                                                                                () -> {
                                                                                                    (__lhs_0_242) -> {
                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_110),
                                                                                                        () -> {
                                                                                                            (__lhs_0_241) -> {
                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities____is(__cond_110),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_240) -> {
                                                                                                                        __helios__error("multi:multi: nesting not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__76) -> {
                                                                                                                        __helios__error("multi:non-minting activities are invalid for mintDgt")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_110)))
                                                                })
                                                            }()
                                                        }
                                                    )()
                                                }
                                            )();
                                            spendDgtCheck_1 = __core__ifThenElse(
                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __helios__list[__helios__data]__all(activities_2)((rawActivity_1) -> {
                                                                    a_19 = __module__UnspecializedDelegate__DelegateActivity[]__from_data(__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_1);
                                                                    __core__chooseUnit(__helios__print("  -- spendDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities", false, ()), __cond_111 = a_19;
                                                                    __core__ifThenElse(
                                                                        __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_111),
                                                                        () -> {
                                                                            (__lhs_0_251) -> {
                                                                                __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                    __module__BasicDelegate__isSpendDelegate
                                                                                }, () -> {
                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(false, ())
                                                                                }), "UpdatingDelegatedData only ok at level-1 spendDgt"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_19))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_111),
                                                                                () -> {
                                                                                    (__lhs_0_250) -> {
                                                                                        __helios__error("CreatingDelegatedData only ok in mintDgt")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_111),
                                                                                        () -> {
                                                                                            (__lhs_0_249) -> {
                                                                                                __helios__error("TODO: validate spending the datum for burn")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_111),
                                                                                                () -> {
                                                                                                    (__lhs_0_248) -> {
                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_111),
                                                                                                        () -> {
                                                                                                            (__lhs_0_247) -> {
                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities____is(__cond_111),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_246) -> {
                                                                                                                        __helios__error("multi:multi: nesting not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__77) -> {
                                                                                                                        __helios__error("multi: non-spending activities are invalid for spendDgt")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_111)))
                                                                })
                                                            }()
                                                        }
                                                    )()
                                                }
                                            )();
                                            dgDataPolicyCheck = __core__ifThenElse(
                                                __helios__bool__or(() -> {
                                                    __module__BasicDelegate__isMintDelegate
                                                }, () -> {
                                                    __module__BasicDelegate__isSpendDelegate
                                                }),
                                                () -> {
                                                    __core__chooseUnit(__helios__assert(__module__BasicDelegate__isDgDataPolicy, "ack! delegated-data policy can't be a mint/spend delegate"), true)
                                                },
                                                () -> {
                                                    () -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("assert isDgDataPolicy"), __helios__list[__helios__data]__all(activities_2)((rawActivity_2) -> {
                                                            a_20 = __module__UnspecializedDelegate__DelegateActivity[]__from_data(__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_2);
                                                            __core__chooseUnit(__helios__print("  -- dgDataPolicy checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in DgDataPolicy, only Minting/Burning/Spending activities are valid", false, ()), __cond_112 = a_20;
                                                            __core__ifThenElse(
                                                                __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_112),
                                                                () -> {
                                                                    (__lhs_0_260) -> {
                                                                        __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt (use a SpendingActivity in dgDataPolicy)")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_112),
                                                                        () -> {
                                                                            (__lhs_0_259) -> {
                                                                                __helios__error("CreatingDelegatedData only ok in mintDgt (use a MintingActivity in dgDataPolicy)")
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_112),
                                                                                () -> {
                                                                                    (__lhs_0_258) -> {
                                                                                        __helios__error("DeletingDelegatedData only ok at mint/spend dgt (use BurningActivity in dgDataPolicy)")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities____is(__cond_112),
                                                                                        () -> {
                                                                                            (__lhs_0_257) -> {
                                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_20)
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities____is(__cond_112),
                                                                                                () -> {
                                                                                                    (__lhs_0_256) -> {
                                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_20)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities____is(__cond_112),
                                                                                                        () -> {
                                                                                                            (__lhs_0_255) -> {
                                                                                                                __core__chooseUnit(__helios__assert(false, "TODO: support multi:BurningActivities for dgDataPolicy or other delegate"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_20))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_112),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_254) -> {
                                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_112),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_253) -> {
                                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_252) -> {
                                                                                                                                __helios__error("multi:multi: nesting not ok")
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_112)))
                                                        }))
                                                    }()
                                                }
                                            )();
                                            __helios__bool__and(() -> {
                                                __helios__bool__and(() -> {
                                                    mintDgtCheck_1
                                                }, () -> {
                                                    spendDgtCheck_1
                                                })
                                            }, () -> {
                                                dgDataPolicyCheck
                                            })
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_61),
                                            () -> {
                                                (__lhs_0_233) -> {
                                                    innerActivity = __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__activity(__lhs_0_233);
                                                    __cond_108 = innerActivity;
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_108),
                                                        () -> {
                                                            (__lhs_0_237) -> {
                                                                seed_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed(__lhs_0_237);
                                                                purpose_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose(__lhs_0_237);
                                                                BURNED = __helios__int____neg(1);
                                                                otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), __module__CapoDelegateHelpers__DelegationDetail[]__tn(dd)), BURNED);
                                                                tnStr_3 = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd))();
                                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("checking ReplacingMe on ", purpose_9), ": "), tnStr_3)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("needs the charter to be approving the the new mint-delegate", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("  ^^^ should queue the new delegate in pendingChanges"), cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                (isUpdatingCharter) -> {
                                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_9, __core__mkCons(__helios__string____to_data(purpose_9), __core__mkNilData(())), false, (), false, (), true, otherMintedValue_2, true, false, true, false, false, ());
                                                                    __helios__bool__and(() -> {
                                                                        isMintingOk
                                                                    }, () -> {
                                                                        isUpdatingCharter
                                                                    })
                                                                }(__cond_109 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5)();
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_109),
                                                                    () -> {
                                                                        (__lhs_0_238) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__75) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()(__cond_109)))))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_108),
                                                                () -> {
                                                                    (__lhs_0_236) -> {
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... Retiring delegate authority token", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- must burn the indicated authority token", false, ()), __helios__int____eq(__helios__value__get(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken(dd)()), __helios__int____neg(1))))
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_234) -> {
                                                                        __lhs_0_235 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), false, ()), 0);
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("import settings from delegate and validate them"), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                            false
                                                                        }, () -> {
                                                                            true
                                                                        }), "ValidateSettings temporarily disabled"), false))
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()(__cond_108)
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_61),
                                                    () -> {
                                                        (__lhs_0_133) -> {
                                                            dCLA = __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_133);
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with any CapoLifecycle activity: ", false, ()), cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))())();
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the Capo's CharterData activity to match this delegate's activity", false, ()), __core__chooseUnit(__cond_106 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4)();
                                                            __core__ifThenElse(
                                                                __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_106),
                                                                () -> {
                                                                    (__lhs_0_232) -> {
                                                                        cCLA = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_232);
                                                                        __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cCLA, dCLA), "activity mismatch with Capo's CharterData activity"), __helios__print("  -- ok, CharterData capoLifecycleActivity matches ours
"))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_106),
                                                                        () -> {
                                                                            (__lhs_0_230) -> {
                                                                                __cond_107 = dCLA;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_107),
                                                                                    () -> {
                                                                                        (__lhs_0_231) -> {
                                                                                            __helios__print("ok, Capo:updatingCharter works for now with CreatingDelegate
")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__74) -> {
                                                                                            __helios__error("when Capo is UpdatingCharter, the mintDelegate must be CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_107)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__73) -> {
                                                                                __helios__error("this activity must match the capo's own CharterData activity")
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_106), neededRole = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx_4)(dCLA);
                                                            (myCurrentRole) -> {
                                                                __helios__bool__and(() -> {
                                                                    __cond_63 = dCLA;
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_63),
                                                                        () -> {
                                                                            (__lhs_0_226) -> {
                                                                                seed_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_226);
                                                                                purpose_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_226);
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("XXX it should output the new delegate token to the Capo as a PendingDelegate datum"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... here in the MintDgt: validates creation of UUT for the new delegate, aligned to the purpose indicated", false, ()), mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                                __cond_104 = myCurrentRole;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_104),
                                                                                    () -> {
                                                                                        (__lhs_0_227) -> {
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates the new delegate's UUT is minted", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_8, __core__mkCons(__helios__string____to_data(purpose_8), __core__mkNilData(())), true, mkTn, false, (), false, (), true, false, false, (), false, ()),
                                                                                                () -> {
                                                                                                    __helios__print("  -- ok, minted the new delegate's UUT
")
                                                                                                },
                                                                                                () -> {
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    }()
                                                                                                }
                                                                                            )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the UUT must have the right disposition (is it checked somewhere else?!?)", false, ()), __cond_105 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)()))(purpose_8);
                                                                                            __core__ifThenElse(
                                                                                                __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_105),
                                                                                                () -> {
                                                                                                    (__lhs_0_229) -> {
                                                                                                        __helios__error("the new delegate is not present in the Capo's named-delegates list")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_228) -> {
                                                                                                        dgtLink_3 = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_228);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_3), mkTn(purpose_8)), "uutName mismatch"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_105))))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__72) -> {
                                                                                            __helios__error("unreachable wrong role for CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_104)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_63),
                                                                                () -> {
                                                                                    (__lhs_0_174) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for the addingPendingDgt activity:", false, ()), charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new pending-delegate action is found at the head of the new change-list", false, ()), oldPendingChanges = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4);
                                                                                        nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                        nextChangeList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_2);
                                                                                        newChange = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head(nextChangeList);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support otherManifestChange here"), __lhs_0_175 = __helios__common__assert_constr_index(newChange, 0);
                                                                                        __lhs_0_0_2 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_175);
                                                                                        action = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(__lhs_0_0_2);
                                                                                        role_2 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_2);
                                                                                        OdgtLink = __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(__lhs_0_0_2);
                                                                                        (newDgtRoleName) -> {
                                                                                            __core__chooseUnit(__cond_102 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_102),
                                                                                                () -> {
                                                                                                    (__lhs_0_224) -> {
                                                                                                        __core__chooseUnit(__helios__print("   -- another delegate-role check would be redundant."), __cond_103 = myCurrentRole;
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_103),
                                                                                                            () -> {
                                                                                                                (__lhs_0_225) -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that the delegate queued for removal is present in the Capo's charterData", false, ()), __helios__error("implement me"))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__71) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_103))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__70) -> {
                                                                                                        __helios__assert(true, "no way l")
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_102), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the change-list should be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail(nextChangeList), oldPendingChanges), "invalid update of pendingChanges; the new action must be prepended to the existing list."), __cond_101 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_101),
                                                                                                () -> {
                                                                                                    (__lhs_0_223) -> {
                                                                                                        __helios__error("unreachable")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_101),
                                                                                                        () -> {
                                                                                                            (__lhs_0_222) -> {
                                                                                                                seed_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed(__lhs_0_222);
                                                                                                                purpose_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose(__lhs_0_222);
                                                                                                                idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_222);
                                                                                                                (callback_14) -> {
                                                                                                                    callback_14(seed_7, purpose_7, idPrefix_9)
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_221) -> {
                                                                                                                seed_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed(__lhs_0_221);
                                                                                                                purpose_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose(__lhs_0_221);
                                                                                                                idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_221);
                                                                                                                (callback_13) -> {
                                                                                                                    callback_13(seed_6, purpose_6, idPrefix_8)
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(__cond_101)((seed_5, purpose_5, pendingActionIdPrefix) -> {
                                                                                                (possibleMintDgtVerifications) -> {
                                                                                                    (otherPossibleVerifications) -> {
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("TEMPORARY: only one pending change is allowed", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(oldPendingChanges), 0), "only one pending change is allowed for now (avoids resource-exhaustion)"), __helios__bool__and(() -> {
                                                                                                            __helios__bool__and(() -> {
                                                                                                                true
                                                                                                            }, () -> {
                                                                                                                possibleMintDgtVerifications
                                                                                                            })
                                                                                                        }, () -> {
                                                                                                            otherPossibleVerifications
                                                                                                        })))
                                                                                                    }(__cond_90 = myCurrentRole;
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_90),
                                                                                                        () -> {
                                                                                                            (__lhs_0_220) -> {
                                                                                                                __helios__error(__helios__string____add(__helios__string____add("this block had been run by spendDgt, but
", "... it's much cheaper to let the MintDgt do it ...
"), "... since it's already involved anyway"))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_90),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_194) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a queued change to duplicate any other pending entry for the same delegate name", false, ()), isNotADuplicate = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4))((pdChange_2) -> {
                                                                                                                            __cond_91 = pdChange_2;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_91),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_195) -> {
                                                                                                                                        __lhs_0_0_3 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_195);
                                                                                                                                        pendingRole = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_3);
                                                                                                                                        __cond_92 = pendingRole;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_92),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_196) -> {
                                                                                                                                                    changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_196);
                                                                                                                                                    __helios__string____neq(changingDgtName, newDgtRoleName)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__64) -> {
                                                                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_92)
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__63) -> {
                                                                                                                                        __helios__error("otherManifestChange not yet supported")
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_91)
                                                                                                                        });
                                                                                                                        __core__chooseUnit(__helios__assert(isNotADuplicate, __helios__string____add("already has a pending change for this delegate: ", newDgtRoleName)), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                        (possibleReplacementIsCorrect) -> {
                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                    true
                                                                                                                                }, () -> {
                                                                                                                                    isNotADuplicate
                                                                                                                                })
                                                                                                                            }, () -> {
                                                                                                                                possibleReplacementIsCorrect
                                                                                                                            })
                                                                                                                        }(__cond_93 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_93),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_218) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow an Add for an existing policy name", false, ()), __core__chooseUnit(__cond_100 = existingRoleEntryMaybe;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_100),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_219) -> {
                                                                                                                                                __helios__error(__helios__string____add("queuing Add failed: already has a delegate for policy name: ", newDgtRoleName))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__69) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_100), true))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_93),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_199) -> {
                                                                                                                                            replacesDgt = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt(__lhs_0_199);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("For Replace on an existing delegate... ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: invariants cannot be replaced", false, ()), __core__chooseUnit(__cond_99 = role_2;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_99),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_217) -> {
                                                                                                                                                        __helios__error("cannot Replace role: MintInvariant")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_99),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_216) -> {
                                                                                                                                                                __helios__error("cannot Replace role: SpendInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_99),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_215) -> {
                                                                                                                                                                        __helios__error("HandledByCapoOnly role is not applicable in delegate context")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__68) -> {
                                                                                                                                                                        __helios__print("  -- ok (not trying to replace an invariant)")
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_99), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- doesn't allow a Replace if the policy-name doesn't already exist", false, ()), (existingDgtLink_1) -> {
                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: the PendingDelegateAction's role + replacesDgt must match the existing delegate's authority token", false, ()), (existingDgTkn) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__helios__assetclass____eq(replacesDgt, __helios__option[__helios__assetclass]__unwrap(existingDgTkn)()), __helios__string____add(__helios__string____add(__helios__string____add("the current ", __cond_98 = role_2;
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_98),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_214) -> {
                                                                                                                                                                "mint"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_98),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_213) -> {
                                                                                                                                                                        "spend"
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_98),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_212) -> {
                                                                                                                                                                                "dgDataPolicy"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_98),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_211) -> {
                                                                                                                                                                                        "named"
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__67) -> {
                                                                                                                                                                                        "\u2039incontheeiieivable\u203A"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_98)), " delegate's authority token doesn't match the queued action's token name "), __helios__assetclass__show(replacesDgt)())), true)
                                                                                                                                                }(__cond_97 = role_2;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_97),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_210) -> {
                                                                                                                                                            __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_97),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_209) -> {
                                                                                                                                                                    __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_97),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_208) -> {
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: dgDataPolicy: the named policy must be present in the Capo manifest", false, ()), __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_97),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_207) -> {
                                                                                                                                                                                    __helios__error("unreachable: OtherNamedDgt deprecated")
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_97),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_206) -> {
                                                                                                                                                                                            __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_97),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_205) -> {
                                                                                                                                                                                                    __helios__error("unreachable")
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_97),
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_204) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    },
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_203) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                )()
                                                                                                                                                                                            }
                                                                                                                                                                                        )()
                                                                                                                                                                                    }
                                                                                                                                                                                )()
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()(__cond_97)))
                                                                                                                                            }(__cond_95 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_95),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_202) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Replace failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_200) -> {
                                                                                                                                                        __lhs_0_0_4 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_200);
                                                                                                                                                        entryType_2 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_4);
                                                                                                                                                        __cond_96 = entryType_2;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_96),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_201) -> {
                                                                                                                                                                    existingDgtLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_201);
                                                                                                                                                                    existingDgtLink
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__66) -> {
                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_96)
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_95))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_197) -> {
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove if the policy-name doesn't already exist", false, ()), __core__chooseUnit(__cond_94 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_94),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_198) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Remove failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__65) -> {
                                                                                                                                                        ()
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_94), __helios__error("unreachable: Remove not yet supported")))
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()(__cond_93))))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__62) -> {
                                                                                                                        __helios__error("unreachable")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()(__cond_90))
                                                                                                }(__cond_83 = myCurrentRole;
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_83),
                                                                                                    () -> {
                                                                                                        (__lhs_0_193) -> {
                                                                                                            true
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_83),
                                                                                                            () -> {
                                                                                                                (__lhs_0_177) -> {
                                                                                                                    __helios__bool__and(() -> {
                                                                                                                        __module__StellarHeliosHelpers__bREQT("(general) the mintDgt checks everything about the mint", false, ())
                                                                                                                    }, () -> {
                                                                                                                        __cond_84 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_84),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_185) -> {
                                                                                                                                    __core__chooseUnit(__cond_89 = role_2;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_89),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_192) -> {
                                                                                                                                                __helios__error("cannot Remove role: MintDgt")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_89),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_191) -> {
                                                                                                                                                        __helios__error("cannot Remove role: SpendDgt")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_89),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_190) -> {
                                                                                                                                                                __helios__error("cannot Remove role: MintInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_89),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_189) -> {
                                                                                                                                                                        __helios__error("cannot Remove role: SpendInvariant")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_89),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_188) -> {
                                                                                                                                                                                __helios__assert(false, "todo")
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_89),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_187) -> {
                                                                                                                                                                                        __helios__assert(false, "todo")
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_89),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_186) -> {
                                                                                                                                                                                                __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__61) -> {
                                                                                                                                                                                                ()
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(__cond_89), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove to duplicate an Add or Replace or Remove entry", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("^^^"), __core__chooseUnit(__helios__assert(false, "what else should be checked here?"), false))))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__58) -> {
                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                        false,
                                                                                                                                        () -> {
                                                                                                                                            __helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't")
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            () -> {
                                                                                                                                                ()
                                                                                                                                            }()
                                                                                                                                        }
                                                                                                                                    )(), mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                                    dgTknName = mkTokenName_2(purpose_5);
                                                                                                                                    mintedDgTkn = __helios__bool__and(() -> {
                                                                                                                                        __module__StellarHeliosHelpers__bREQT("the new delegate is created with the indicated authority token", false, ())
                                                                                                                                    }, () -> {
                                                                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_5, __core__mkCons(__helios__string____to_data(purpose_5), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, (), false, (), true, false, false, (), false, ())
                                                                                                                                    });
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new policy-token must match the seed", false, ()), (dgtLink_2) -> {
                                                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2), dgTknName), __helios__string____add(__helios__string____add(__helios__string____add("uutName mismatch; expected ", dgTknName), " but found "), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2))), delegateTakesOwnership = __module__StellarHeliosHelpers__bREQT("the new policy-delegate-script must take ownership of the dgTkn", true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()));
                                                                                                                                        (possibleExtraReplacementCheck) -> {
                                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                                    mintedDgTkn
                                                                                                                                                }, () -> {
                                                                                                                                                    delegateTakesOwnership
                                                                                                                                                })
                                                                                                                                            }, () -> {
                                                                                                                                                possibleExtraReplacementCheck
                                                                                                                                            })
                                                                                                                                        }(__cond_86 = action;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_86),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_180) -> {
                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Replace: the queued change must match the idPrefix of the current delegate ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VALIDATE this through a unit-test ^"), __core__chooseUnit(__cond_87 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_87),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_182) -> {
                                                                                                                                                                dde = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_182);
                                                                                                                                                                __lhs_0_183 = dde;
                                                                                                                                                                entryType_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_183);
                                                                                                                                                                __cond_88 = entryType_1;
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_88),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_184) -> {
                                                                                                                                                                            idPrefix_7 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_184);
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("expects the queued idPrefix to match the existing policy's idPrefix", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("   -- expected: ", idPrefix_7)), __core__chooseUnit(__helios__print(__helios__string____add("   --   actual: ", pendingActionIdPrefix)), __helios__assert(__helios__string____eq(idPrefix_7, pendingActionIdPrefix), "idPrefix mismatch"))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__60) -> {
                                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_88)
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_181) -> {
                                                                                                                                                                __helios__error(__helios__string____add("no existing dgDataPolicy found with key: ", newDgtRoleName))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_87), true)))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__59) -> {
                                                                                                                                                    true
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_86)))
                                                                                                                                    }(__cond_85 = OdgtLink;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_85),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_179) -> {
                                                                                                                                                __helios__error("missing required delegate link in pending dgt change")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_178) -> {
                                                                                                                                                dl = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_178);
                                                                                                                                                dl
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_85))))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_84)
                                                                                                                    })
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__57) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()(__cond_83))
                                                                                            }))))
                                                                                        }(__cond_82 = role_2;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_82),
                                                                                            () -> {
                                                                                                (__lhs_0_176) -> {
                                                                                                    dgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_176);
                                                                                                    dgtName
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__56) -> {
                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_82)))))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_63),
                                                                                        () -> {
                                                                                            (__lhs_0_173) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement removePendDgt"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("allows the removal of a queued pending-delegate-change that can't be completed", false, ()), __core__chooseUnit(__helios__assert(false, "not yet implemented"), false)))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_63),
                                                                                                () -> {
                                                                                                    (__lhs_0_150) -> {
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... To commit pending changes:", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariants cannot be replaced", false, ()), pendingChangesList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        previousManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                        nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData_1);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                                            __module__StellarHeliosHelpers__bREQT("the next-changes list must be empty", false, ())
                                                                                                        }, () -> {
                                                                                                            __helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_1)), 0)
                                                                                                        }), "pendingChanges must be emptied"), spendDgtCheck = __core__ifThenElse(
                                                                                                            __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                        () -> {
                                                                                                                            true
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            () -> {
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...spendDgt: validates that all the pending delegates are installed", false, ()), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]](pendingChangesList)((prevManifestRemainder_1, nextCMEs, pcChange) -> {
                                                                                                                                    (pdChange) -> {
                                                                                                                                        (pendingTypeName) -> {
                                                                                                                                            __core__chooseUnit(__cond_71 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_71),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_159) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Remove: verifies that the delegate queued for removal is now removed from the Capo manifest", false, ()), __cond_74 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(nextCMEs)(pendingTypeName);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_74),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_160) -> {
                                                                                                                                                                    __helios__error(__helios__string____add("queued Remove failed: name still present in next-manifest item: ", pendingTypeName))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__52) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_74))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__49) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- verifies that added & replaced entries are present in the updated map (at its next position)", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                            __helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(nextCMEs), 0),
                                                                                                                                                            () -> {
                                                                                                                                                                __helios__error("queued Add/Replace failed: no more items in next-manifest map")
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                () -> {
                                                                                                                                                                    ()
                                                                                                                                                                }()
                                                                                                                                                            }
                                                                                                                                                        )(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head(nextCMEs)((CME_key, __lhs_1) -> {
                                                                                                                                                            ME_type = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_1);
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("vv @CME entry: ", CME_key)), __lhs_0_155 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                            ME_policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_155);
                                                                                                                                                            ME_idPrefix = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_155);
                                                                                                                                                            refCount = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_155);
                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support minting multiple threads of a dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__int____eq(refCount, 1), "refCount must be 1 when adding a new dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__string____eq(pendingTypeName, CME_key), "queued change: name mismatch with next-manifest item"), ME_name = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(ME_policyLink))();
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("    -- ME policy link ", ME_name)), pendingLink = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange))();
                                                                                                                                                            pendingName = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(pendingLink))();
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("    -- pdChange policy link ", pendingName)), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(ME_policyLink, pendingLink), "queued change: policyLink mismatch with next-manifest item"), (nextIdPrefix) -> {
                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- @each manifest entry: next-manifest's idPrefix must match the queued change", false, ()), __helios__assert(__helios__string____eq(nextIdPrefix, ME_idPrefix), "idPrefix mismatch with next-manifest's dgDataPolicy"))
                                                                                                                                                            }(__cond_72 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_72),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_157) -> {
                                                                                                                                                                        idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_157);
                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- Replace: verifies that the next-manifest no longer has the replaced entry", false, ()), __core__chooseUnit(__cond_73 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))(pendingTypeName);
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_73),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_158) -> {
                                                                                                                                                                                    __helios__error(__helios__string____add("queued Replace failed: duplicate name remaining in next-manifest map: ", pendingTypeName))
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__51) -> {
                                                                                                                                                                                    ()
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()(__cond_73), idPrefix_6))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_72),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_156) -> {
                                                                                                                                                                                idPrefix_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_156);
                                                                                                                                                                                idPrefix_5
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__50) -> {
                                                                                                                                                                                __helios__error("unreachable")
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_72)))))))))
                                                                                                                                                        })))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_71), __cond_70 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_70),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_154) -> {
                                                                                                                                                        (callback_12) -> {
                                                                                                                                                            callback_12(prevManifestRemainder_1, __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__48) -> {
                                                                                                                                                        (callback_11) -> {
                                                                                                                                                            callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(prevManifestRemainder_1)(pendingTypeName), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_70))
                                                                                                                                        }(__cond_69 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_69),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_153) -> {
                                                                                                                                                    typeName_3 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_153);
                                                                                                                                                    __core__chooseUnit(__helios__print("  -- ok: DgDataPolicy in commitPendingChanges"), typeName_3)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__47) -> {
                                                                                                                                                    __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_69))
                                                                                                                                    }(__cond_68 = pcChange;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_68),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_152) -> {
                                                                                                                                                dgtChange = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_152);
                                                                                                                                                dgtChange
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_151) -> {
                                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_68))
                                                                                                                                }, previousManifest, nextManifest)((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                                    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(nextManifestRemainder, prevManifestRemainder)
                                                                                                                                }))
                                                                                                                            }()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }()
                                                                                                            }
                                                                                                        )();
                                                                                                        mintDgtCheck = __core__ifThenElse(
                                                                                                            __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                    () -> {
                                                                                                                        true
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        () -> {
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... mintDgt: validates that all the removed dgTkns are burned", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the txn must have all the expected burns", false, ()), mint = __helios__value__to_map(__helios__tx__minted(__helios__scriptcontext__tx))();
                                                                                                                            mintThisPolicy = __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe(mint)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd));
                                                                                                                            len = __helios__int____sub(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(mint), 1);
                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                __helios__int____gt(len, 1),
                                                                                                                                () -> {
                                                                                                                                    __core__chooseUnit(__helios__print(__helios__value__show(__helios__tx__minted(__helios__scriptcontext__tx))(false, ())), __helios__error(__helios__string____add("currently supporting only one minting policy being burned in the tx ", __helios__int__show(len)())))
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    }()
                                                                                                                                }
                                                                                                                            )(), (observedTokenBurn) -> {
                                                                                                                                remainingMint = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]](pendingChangesList)((foldingBurn, pcChange_1) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS the spendDgt to check details of Replace activities", false, ()), (pdChange_1) -> {
                                                                                                                                        __cond_77 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange_1);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_77),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_165) -> {
                                                                                                                                                    typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_165);
                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- ok: DgDataPolicy in commitPendingChanges: ", typeName_4)), __cond_78 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_78),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_172) -> {
                                                                                                                                                                foldingBurn
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__54) -> {
                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that a delegate queued for removal or replacement is burned", false, ()), __cond_79 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest)(typeName_4);
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_79),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_171) -> {
                                                                                                                                                                            __helios__error(__helios__string____add("queued Remove failed: not present in previous-manifest map: ", typeName_4))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_166) -> {
                                                                                                                                                                            __lhs_0_0_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_166);
                                                                                                                                                                            ME_type_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_1);
                                                                                                                                                                            tn_5 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0_1);
                                                                                                                                                                            mph_29 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0_1);
                                                                                                                                                                            __cond_80 = mph_29;
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __helios__option[__helios__mintingpolicyhash]__some____is(__cond_80),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_170) -> {
                                                                                                                                                                                        __core__chooseUnit(__helios__print("    -- TODO: manifest entry with other-mph: allow optional burn"), foldingBurn)
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__55) -> {
                                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("each pending change must have a name recognized by the manifest", false, ()), __lhs_0_167 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                                                        refCount_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_167);
                                                                                                                                                                                        tnStr_2 = __helios__bytearray__decode_utf8_safe(tn_5)();
                                                                                                                                                                                        __cond_81 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn)(tn_5);
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __helios__option[__helios__int]__none____is(__cond_81),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_169) -> {
                                                                                                                                                                                                    __helios__error(__helios__string____add("queued Remove/Replace failed: no burn, or double-burn: ", tnStr_2))
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_168) -> {
                                                                                                                                                                                                    burningCount = __helios__option[__helios__int]__some__some(__lhs_0_168);
                                                                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    -- ok: BURN \u{1F525}", __helios__int__show(burningCount)()), "\xD7\u{1F4B4} "), tnStr_2)), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                                        __helios__int____neq(__helios__int____sub(0, refCount_1), burningCount),
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("queued Remove/Replace failed: expected burn of ", __helios__int__show(refCount_1)()), "\xD7\u{1F4B4} "), tnStr_2))
                                                                                                                                                                                                        },
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            () -> {
                                                                                                                                                                                                                ()
                                                                                                                                                                                                            }()
                                                                                                                                                                                                        }
                                                                                                                                                                                                    )(), __helios__map[__helios__bytearray@__helios__int]__delete(foldingBurn)(tn_5)))
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        )()(__cond_81))
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()(__cond_80)
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_79))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_78))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__53) -> {
                                                                                                                                                    __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_77)
                                                                                                                                    }(__cond_76 = pcChange_1;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_76),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_164) -> {
                                                                                                                                                dgtChange_1 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_164);
                                                                                                                                                dgtChange_1
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_163) -> {
                                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_76)))
                                                                                                                                }, observedTokenBurn);
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires all the burns of our policy-id to be accounted for", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(remainingMint), 0), __helios__string____add("extra burns found in the transaction: 
", __helios__map[__helios__bytearray@__helios__int]__show(remainingMint)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... -- end of commitPendingChanges", false, ()), true)))
                                                                                                                            }(__cond_75 = mintThisPolicy;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is(__cond_75),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_162) -> {
                                                                                                                                        minted = __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some(__lhs_0_162);
                                                                                                                                        minted
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_161) -> {
                                                                                                                                        __core__mkNilPairData(())
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_75)))))
                                                                                                                        }()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )();
                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                            __helios__bool__and(() -> {
                                                                                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate)
                                                                                                            }, () -> {
                                                                                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate)
                                                                                                            }),
                                                                                                            () -> {
                                                                                                                __helios__error("unreachable? not mintDgt or spendDgt")
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                }()
                                                                                                            }
                                                                                                        )(), __helios__bool__and(() -> {
                                                                                                            mintDgtCheck
                                                                                                        }, () -> {
                                                                                                            spendDgtCheck
                                                                                                        })))))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_63),
                                                                                                        () -> {
                                                                                                            (__lhs_0_140) -> {
                                                                                                                manifestActivity = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity(__lhs_0_140);
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow updating anything except the manifest", false, ()), __core__chooseUnit(__cond_64 = manifestActivity;
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is(__cond_64),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_149) -> {
                                                                                                                            __core__chooseUnit(__helios__assert(false, "TODO: support retirement activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't remove a dgDataPolicy entry from the manifest (use queuePendingChange instead)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("removes the indicated key from the manifest", false, ()), __module__StellarHeliosHelpers__REQT("delegates MUST be allowed to validate that this doesn't drop something they need", false, ()))))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is(__cond_64),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_148) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("if delegates need a hook to validate that the updte is acceptable, that might be enforced here"), __core__chooseUnit(__helios__assert(false, "TODO: support updatingEntry activity"), __module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ())))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is(__cond_64),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_142) -> {
                                                                                                                                            key_31 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key(__lhs_0_142);
                                                                                                                                            tokenName_4 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName(__lhs_0_142);
                                                                                                                                            charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                                                                            nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __lhs_0_143 = __module__CapoHelpers__CapoCtx[]__delegatedDataRef(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_4)(false, (), true, tokenName_4);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry MUST be found in the new manifest", false, ()), __core__chooseUnit(__cond_65 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_65),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_147) -> {
                                                                                                                                                        __helios__error(__helios__string____add("the new manifest entry is missing: ", key_31))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_144) -> {
                                                                                                                                                        __lhs_0_0 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_144);
                                                                                                                                                        entryType = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0);
                                                                                                                                                        tn_4 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0);
                                                                                                                                                        mph_28 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0);
                                                                                                                                                        __core__chooseUnit(__helios__print(__helios__string____add("   -- ok, found the manifest entry for ", key_31)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry must have the right token-name", false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(tn_4, tokenName_4), "token-name mismatch"), __core__chooseUnit(__cond_67 = mph_28;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__helios__mintingpolicyhash]__some____is(__cond_67),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_146) -> {
                                                                                                                                                                    __helios__error("other-mph not yet supported")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__46) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_67), __cond_66 = entryType;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is(__cond_66),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_145) -> {
                                                                                                                                                                    __helios__print("   -- ok: matching name, with NamedTokenRef added in updatingManifest")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__45) -> {
                                                                                                                                                                    __helios__error("addingEntry: the new manifest entry must be a NamedTokenRef for now")
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_66)))))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_65), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the manifest must be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_3), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31)), "manifest modified in an unexpected way"), __helios__print("  -- ok! new manifest as expected"))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is(__cond_64),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_141) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__assert(false, "TODO: support forkingThreadToken activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates that another copy of the token name is minted", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("when the key is a DgDataPolicy, the existing manifest entry is updated", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("for mint/spend delegates and otherNamedDelegates, a new manifest entry is created with refCount=1+newThreadCount, if it doesn't exist", false, ()), __module__StellarHeliosHelpers__REQT("when the manifest already has the entry, the refCount is incremented by newThreadCount", false, ())))))))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__44) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(__cond_64), true))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_63),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_139) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the minter is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__lhs_0_138) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the spender is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_63)
                                                                }, () -> {
                                                                    __core__ifThenElse(
                                                                        true,
                                                                        () -> {
                                                                            __core__chooseUnit(__helios__print("BasicDelegate harness deferring to specialization for CapoLifecycleActivities
"), true)
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                false
                                                                            }()
                                                                        }
                                                                    )()
                                                                })
                                                            }(__cond_62 = neededRole;
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_62),
                                                                () -> {
                                                                    (__lhs_0_137) -> {
                                                                        __helios__error("delegate invoked with invalid escape-hatch activity (always handled directly by the Capo)")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_62),
                                                                        () -> {
                                                                            (__lhs_0_136) -> {
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on spend delegate", true, __module__BasicDelegate__isSpendDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: spendDgt checking CapoLifecycleActivity"), neededRole)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_62),
                                                                                () -> {
                                                                                    (__lhs_0_135) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on mint delegate", true, __module__BasicDelegate__isMintDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: mintDgt checking CapoLifecycleActivity"), neededRole)))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_62),
                                                                                        () -> {
                                                                                            (__lhs_0_134) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It EXPECTS the Capo to enforce the presence of the mintDgt (to check the right mint) and spendDgt (to validate the charter-update logic)", false, ()), __core__ifThenElse(
                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                    () -> {
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                            () -> {
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __helios__error(__helios__string____add("this Capo lifecycle activity is only valid on mint/spend delegate, not ", __module__BasicDelegate__delegateName))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )())
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__43) -> {
                                                                                                __helios__error("no way k")
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_62)))))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_61),
                                                            () -> {
                                                                (__lhs_0_132) -> {
                                                                    seed_4 = __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__seed(__lhs_0_132);
                                                                    dataTypePurpose_1 = __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_132);
                                                                    __core__ifThenElse(
                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                        () -> {
                                                                            __helios__error("CreatingDelegatedData activity is only allowed in the mint delegate")
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_3)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("context: CreatingDelegatedData", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- ensures the data-controller is invoked with its minting activity for the indicated recId", false, ()), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_3)(dataTypePurpose_1, false, ());
                                                                                tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);
                                                                                purpose_4 = __helios__option[__helios__string]__unwrap(__module__CapoHelpers__DelegateInput[]__idPrefix(policyDelegateInput))();
                                                                                newDataId_1 = __helios__string__encode_utf8(tnFactory(purpose_4))();
                                                                                __helios__bool__and(() -> {
                                                                                    __helios__bool__and(() -> {
                                                                                        __helios__bool__and(() -> {
                                                                                            __helios__bool__and(() -> {
                                                                                                __helios__bool__and(() -> {
                                                                                                    true
                                                                                                }, () -> {
                                                                                                    __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_4, __core__mkCons(__helios__string____to_data(purpose_4), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())
                                                                                                })
                                                                                            }, () -> {
                                                                                                __module__StellarHeliosHelpers__bREQT("it outputs the new delegated-data record to the Capo address", false, ())
                                                                                            })
                                                                                        }, () -> {
                                                                                            __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_3)(newDataId_1, dataTypePurpose_1)
                                                                                        })
                                                                                    }, () -> {
                                                                                        __module__StellarHeliosHelpers__bREQT("ensures the data-controller is invoked with ONE minting activity for the indicated recId", false, ())
                                                                                    })
                                                                                }, () -> {
                                                                                    __module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(policyDelegateInput)(seed_4))()
                                                                                }))))
                                                                            }()
                                                                        }
                                                                    )()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_61),
                                                                    () -> {
                                                                        (__lhs_0_131) -> {
                                                                            dDataType = __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_131);
                                                                            recId_7 = __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__recId(__lhs_0_131);
                                                                            __core__ifThenElse(
                                                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                () -> {
                                                                                    __helios__error("UpdatingDelegatedData activity is only allowed in the spend delegate")
                                                                                },
                                                                                () -> {
                                                                                    () -> {
                                                                                        cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedData activity", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("implements a generic data-controller re-delegation convention based on the capo's manifest (those with type= DgDataPolicy)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the data-controller is invoked with ONE spending activity for the indicated recId", false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_2)(dDataType, false, ()))(recId_7))(), "^^^ those can fail, this assert won't."), inputDD = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_2)(false, (), true, recId_7);
                                                                                        __core__chooseUnit(__helios__assert(__helios__txinput____eq(inputDD, inputDD), "no way m"), __core__chooseUnit(__core__ifThenElse(
                                                                                            __helios__string____eq("settings", dDataType),
                                                                                            () -> {
                                                                                                curSettingsId = __helios__option[__helios__bytearray]__unwrap(__module__CapoHelpers__CapoCtx[]__getSettingsId(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(true, true))();
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO(__helios__string____add("when updating the current Capo settings, the delegates must all ", "have a chance to ensure the settings are valid for their needs")), __core__ifThenElse(
                                                                                                    false,
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __helios__bytearray____eq(curSettingsId, recId_7),
                                                                                                            () -> {
                                                                                                                __core__chooseUnit(__helios__print(" -> "), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings(cctx_2)(), "no way jose"), __helios__print(" <- ")))
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    recIdStr_4 = __helios__bytearray__decode_utf8_safe(recId_7)();
                                                                                                                    curSettingsIdStr = __helios__bytearray__decode_utf8_safe(curSettingsId)();
                                                                                                                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  -- NOTE: updating ", recIdStr_4), ", which isn't currentSettings="), curSettingsIdStr))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        }()
                                                                                                    }
                                                                                                )())
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    ()
                                                                                                }()
                                                                                            }
                                                                                        )(), __helios__bool__and(() -> {
                                                                                            __helios__bool__trace(__module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_2)(recId_7, dDataType))("  -- did output delegated data? ")
                                                                                        }, () -> {
                                                                                            true
                                                                                        }))))))))
                                                                                    }()
                                                                                }
                                                                            )()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_61),
                                                                            () -> {
                                                                                (__lhs_0_129) -> {
                                                                                    recId_6 = __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__recId(__lhs_0_129);
                                                                                    __core__ifThenElse(
                                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                        () -> {
                                                                                            __helios__error("DeletingDelegatedData activity is only allowed in the mint delegate")
                                                                                        },
                                                                                        () -> {
                                                                                            () -> {
                                                                                                cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_1)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("this code is triggered by both the mintDgt and spendDgt, with each doing their parts of the job", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the spendDgt allows the spending of the utxo", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the mintDgt requires the burning of its UUT", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must not delete a record that's still referenced by the Capo manifest", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a matching manifest entry has to be changed or removed prior to deletion", false, ()), __lhs_0_130 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_1)(false, (), true, recId_6);
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("verify the input was found ^"), __core__chooseUnit(__helios__assert(false, "Delete not supported yet"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement the generic data-controller re-delegation convention here"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("ensure that the right delegate is consulted with its BurningActivities.*"), false))))))))))
                                                                                            }()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities____is(__cond_61),
                                                                                    () -> {
                                                                                        (__lhs_0_128) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities____is(__cond_61),
                                                                                            () -> {
                                                                                                (__lhs_0_127) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_126) -> {
                                                                                                    true
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_61))))))
                            }
                        },
                        () -> {
                            (__41) -> {
                                kaboomInvalidRedeemer = () -> {
                                    __helios__error("wrong Actvy/dtm")
                                };
                                __cond_60 = activity_3;
                                __core__ifThenElse(
                                    __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_60),
                                    () -> {
                                        (__lhs_0_125) -> {
                                            kaboomInvalidRedeemer()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_60),
                                            () -> {
                                                (__lhs_0_124) -> {
                                                    kaboomInvalidRedeemer()
                                                }
                                            },
                                            () -> {
                                                (__42) -> {
                                                    __module__UnspecializedDelegate__DelegateActivity[]__otherDatumValidation(activity_3)(mdd)
                                                }
                                            }
                                        )()
                                    }
                                )()(__cond_60)
                            }
                        }
                    )()
                }
            )()(__cond_59)))
        }
    };
    __core__ifThenElse(
        __module__BasicDelegate__main_1(__module__BasicDelegate__main_1)(__module__UnspecializedDelegate__DelegateDatum[]__from_data(__module__UnspecializedDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData__is_valid_data_2)(__DATUM), __module__UnspecializedDelegate__DelegateActivity[]__from_data(__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(__REDEEMER)),
        () -> {
            ()
        },
        () -> {
            __helios__error("validation returned false")
        }
    )()
}`, "optimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/CapoMintHelpers.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f1859001902fd0b18630019051b081867001905340818830119057204188401190572041901be00190698081901ef001906a118331904e1011902311824190b72011904041820190d510119038b1829190d570119038b1825190fab0119037f1832190fbd0119037e1852190fd00119037d184e1910df00190560182019113001190464183a19113801190463184f1911c10119020318271911c70119020318231911e80119020c18271911ee0119020c182319120401190214182419120a01190214182019121401190216182b19121a011902161827191288011901f9182119128b001904b8091912b3011901cb18271912c1011901f918211912dd011904a418261912e1011904a7141912f3011904a8181f1912f9011904a8181b191321011904cc181f191324011904cd181e191325011904cd181e191335011904d7181b191349011904dc183819136000190231111913cb00190236184c1913eb0019024718601913f3001901df184e1913f4001901df184e19140500190249186819140d001901df184e19140e001901df184e19145b0019023c18441914af0019024e18301914dd011904ac182e1914e5011904ac182a1914e6011904a71831191519011904f11419152b011904f2181f191531011904f2181b19153e001902580919156d00190262182719156e001902621827191578001902711119159d0019026618381915c50019026918431915fb001902761852191603001901df184e191604001901df184e191618001902781019161b001902aa11191623001901df184e191624001901df184e191635001902af1119163d001901df184e19163e001901df184e1916680019027d181d19167d00190283181d1916920019028b181d1916ca0019029318441916f200190296185019170b0019029d185719172a001902b31831191736011904f8182019173e011904f8181c1917670119050a184519177c001904460b19177d001904460b19178b00190448184c1917d00119052d18181917d70119052d1419181b011904f118311919b5021901bb182e1919b6021901bb182e1919c5021901c018391919c6021901c01839191a1d02182216191a60021901d81837191c940019018a184b191cb60019018a184d191cd4021901601834191dd20219012a181b191e1e001906e108191e97001906e914191ed500190168184b191f0600190168184d191f19001906b808191f95001906c31846191f96001906c318251920960019062918331921270019058b181f1921810019058c182219225b0319011316192390001905250c1923ff0019050209192482001904ef0919256203182b041925bd00190418151925be001904181519266a001902f51827192679001902f6182e1926a6001902e1111926b0001901df184e1926b1001901df184e19276e001902e61847192771001902ea18321927dc001902f0182d19281d001901d10819281f001901d0091928d90319014d0c19290b0319013e183f19290e0319013f183419296103190145181b192979031901350b1929e70418a20a192ae60418360eff", "variableNames": "b9048900675f5f444154554d016a5f5f52454445454d455202695f5f434f4e54455854046a5f5f636f6d6d6f6e3133066a5f5f636f6d6d6f6e31340878265f5f68656c696f735f5f737472696e675f5f70617273655f757466385f636f6e745f627974650a78195f5f68656c696f735f5f6279746561727261795f5f73686f770c745f5f68656c696f735f5f76616c75655f5f6e65770e78195f5f68656c696f735f5f6173736574636c6173735f5f6e657710745f5f68656c696f735f5f74785f5f6d696e74656412781b5f5f68656c696f735f5f736372697074636f6e746578745f5f74781478255f5f68656c696f735f5f636f6d6d6f6e5f5f6173736572745f636f6e7374725f696e64657816765f5f68656c696f735f5f636f6d6d6f6e5f5f666f6c641818735f5f68656c696f735f5f696e745f5f73686f77181a781f5f5f68656c696f735f5f636f6d6d6f6e5f5f756e42446174615f5f73616665181c755f5f68656c696f735f5f76616c75655f5f73686f77181e78205f5f68656c696f735f5f736372697074636f6e746578745f5f707572706f73651820782a5f5f68656c696f735f5f736372697074636f6e746578745f5f6765745f63757272656e745f696e707574182278185f5f68656c696f735f5f636f6d6d6f6e5f5f6c656e677468182478195f5f68656c696f735f5f636f6d6d6f6e5f5f6d61705f6765741826781b5f5f68656c696f735f5f636f6d6d6f6e5f5f66696e645f73616665182878205f5f68656c696f735f5f76616c75655f5f636f6e7461696e735f706f6c696379182a78185f5f68656c696f735f5f76616c75655f5f69735f7a65726f182c781b5f5f68656c696f735f5f76616c75655f5f6765745f706f6c696379182e78225f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d61705f696e741830755f5f68656c696f735f5f636f6d6d6f6e5f5f616e791832781f5f5f68656c696f735f5f76616c75655f5f6d657267655f6d61705f6b6579731834781e5f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d61701836765f5f68656c696f735f5f76616c75655f5f5f5f616464183878185f5f68656c696f735f5f636f6d6d6f6e5f5f66696c746572183a78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f34183c78195f5f68656c696f735f5f76616c75655f5f6765745f73616665183e781f5f5f68656c696f735f5f74786f7574707574646174756d5f5f696e6c696e651840781a5f5f68656c696f735f5f7478696e7075745f5f616464726573731842781d5f5f68656c696f735f5f74785f5f76616c75655f6c6f636b65645f62791844781f5f5f68656c696f735f5f636f6d6d6f6e5f5f6d5374727563745f6669656c641846646d6b54761848756d75737446696e64496e70757452656465656d6572184a7066726f6d436970363857726170706572184c78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f6e616d65184e78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f6964507265666978185078495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69645072656669781852782652656c617469766544656c65676174654c696e6b3a3a6163417574686f72697479546f6b656e1854782452656c617469766544656c65676174654c696e6b3a3a68617356616c69644f7574707574185678415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d696e7444656c65676174654c696e6b1858782644656c6567617465496e7075743a3a67656e6572696344656c65676174654163746976697479185a782044656c6567617465496e7075743a3a64656c6567617465556e6368616e676564185c781b4361706f4374783a3a6765744368617274657252656465656d6572185e78545f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6765745f73616665186078224361706f4374783a3a7265717569726573446744617461506f6c696379496e7075741862781b4361706f4374783a3a6e6f77416374696e6741734d696e744467741864781c4361706f4374783a3a6e6f77416374696e6741735370656e644467741866774361706f4374783a3a67657443686172746572446174611868781b4361706f4374783a3a6765744e6578744368617274657244617461186a781e4361706f4374783a3a726571756972657344656c6567617465496e707574186c704361706f4374783a3a61646472657373186e78214361706f4374783a3a6d6b44656c65676174656444617461507265646963617465187078204361706f4374783a3a6d7573744f757470757444656c656761746564446174611872781a4361706f4374783a3a64656c65676174656454784f7574707574187478194361706f4374783a3a7769746843686172746572496e7075741876774361706f4374783a3a776974684368617274657252656618786e6d6b557574546e466163746f7279187a783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f666f725f65616368187c783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f6765745f73616665187e78365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f736f727418807276616c69646174655575744d696e74696e67188278525f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f64656c657465188a695f5f636f6d6d6f6e3718986b5f5f6c68735f305f32363118a86a5f5f636f6d6d6f6e313718aa6a5f5f636f6d6d6f6e313918ab6369734418ad6a5f5f636f6d6d6f6e323118af6a5f5f636f6d6d6f6e323218b16a5f5f636f6d6d6f6e323318b36a5f5f636f6d6d6f6e353518b56a5f5f636f6d6d6f6e353618b76a5f5f636f6d6d6f6e353718b96a5f5f636f6d6d6f6e353818bb6a5f5f636f6d6d6f6e353018bd6a5f5f636f6d6d6f6e353118bf6a5f5f636f6d6d6f6e353219010f676d794467546b6e190111781b636865636b4e6f6e44656c6567617465644163746976697469657319012266636374785f371901386b5f5f6c68735f305f3132311901476b5f5f6c68735f305f31313719014963434c4119015d6b5f5f6c68735f305f313138190160645f5f333919017a6b5f5f6c68735f305f3131361901896b5f5f6c68735f305f3131351901986b5f5f6c68735f305f3131341901a76b5f5f6c68735f305f3131331901aa645f5f33381901be69636861727465725f311901d26a5f5f6c68735f305f38301901e76a5f5f6c68735f305f37391901ea6a5f5f6c68735f305f37351901ec666d70685f32301901ee6b6368617274657241635f331901f0695f5f636f6e645f34321902046a5f5f6c68735f305f37381902096a5f5f6c68735f305f373719020b6d636861727465725574786f5f3219020d67646174756d5f3419022d68646174615f3133371902366773656c665f37301902616873656c665f313333190266667478696e5f3519026863615f331902796773656c665f33351902c66b5f5f6c68735f305f3233391902d16b5f5f6c68735f305f3233331902d36d696e6e657241637469766974791902d5695f5f636f6d6d6f6e391902e36b5f5f6c68735f305f3233371902e56a5f5f636f6d6d6f6e32381902e766736565645f391902e969707572706f73655f391902eb726f746865724d696e74656456616c75655f321902ed66636374785f351902ef7169735570646174696e67436861727465721902f16b69734d696e74696e674f6b1903166a5f5f636f6e645f31303919032a6b5f5f6c68735f305f32333819032d645f5f373519034061641903656b5f5f6c68735f305f32333619036a6773656c665f313319036c6a5f5f636f6d6d6f6e353319036e6a5f5f636f6d6d6f6e3534190370656d70685f321903726b746f6b656e4e616d655f31190374676f757465725f3119037a67696e6e65725f3119037b656d61705f311903ae656f757465721903af65696e6e65721903b0636d61701904046b5f5f6c68735f305f3233341904256b5f5f6c68735f305f3133331904276464434c411904296a5f5f636f6d6d6f6e333119042b6a5f5f636f6d6d6f6e333419042d66636374785f341904336a5f5f636f6e645f3130361904356a5f5f636f6d6d6f6e34391904436b5f5f6c68735f305f3233321904456463434c4119046c6b5f5f6c68735f305f3233301904766b5f5f6c68735f305f323331190479645f5f373419047d645f5f373319048b6a6e6565646564526f6c6519048d6a5f5f636f6d6d6f6e333219048f6a5f5f636f6d6d6f6e33331904916d6d7943757272656e74526f6c651904a16b5f5f6c68735f305f3232361904a36a5f5f636f6d6d6f6e32391904a566736565645f381904a769707572706f73655f381904a9646d6b546e1904be6a5f5f636f6d6d6f6e31321904bf6b5f5f6c68735f305f3232371904e36a5f5f636f6e645f3130351904f76b5f5f6c68735f305f3232391904fa6b5f5f6c68735f305f3232381904fc696467744c696e6b5f3319050264636f6e6419051261641905326873656c665f31393319053a63785f361905486873656c665f313534190566645f5f373219056d61641905926b5f5f6c68735f305f3137341905946d63686172746572446174615f341905966a5f5f636f6d6d6f6e3430190598695f5f636f6d6d6f6e3019059a716e65787443686172746572446174615f3219059c6e6e6578744368616e67654c69737419059e696e65774368616e67651905a06b5f5f6c68735f305f3137351905a26b5f5f6c68735f305f305f321905a46a5f5f636f6d6d6f6e34321905a666616374696f6e1905a86a5f5f636f6d6d6f6e34311905aa695f5f636f6d6d6f6e351905ac66726f6c655f321905ae6a5f5f636f6d6d6f6e34331905b06a5f5f636f6d6d6f6e34341905b2695f5f636f6d6d6f6e341905b4684f6467744c696e6b1905b66e6e6577446774526f6c654e616d651905c46b5f5f6c68735f305f3232341905c7645f5f37301905cf64636f6e641905dc6873656c665f3234341905f46b5f5f6c68735f305f3232331906036b5f5f6c68735f305f3232321906056a5f5f636f6d6d6f6e343519060766736565645f3719060969707572706f73655f3719060b6a69645072656669785f3919060c6b63616c6c6261636b5f313419061861641906316b5f5f6c68735f305f32323119063366736565645f3619063569707572706f73655f361906376a69645072656669785f381906386b63616c6c6261636b5f3133190644616419066266736565645f3519066369707572706f73655f351906647570656e64696e67416374696f6e4964507265666978190666781c706f737369626c654d696e74446774566572696669636174696f6e73190668781a6f74686572506f737369626c65566572696669636174696f6e7319069c6b5f5f6c68735f305f3232301906b16b5f5f6c68735f305f3139341906b36f69734e6f74414475706c69636174651906c4766578697374696e67526f6c65456e7472794d617962651906c6781c706f737369626c655265706c6163656d656e744973436f72726563741906df6b5f5f6c68735f305f3231381906f76b5f5f6c68735f305f3231391906fa645f5f363919070c6a5f5f636f6d6d6f6e343619070d6b5f5f6c68735f305f31393919070f6b7265706c6163657344677419071d6b5f5f6c68735f305f32313719072c6b5f5f6c68735f305f32313619073b6b5f5f6c68735f305f32313519073e645f5f3638190742716578697374696e674467744c696e6b5f311907446d6578697374696e674467546b6e19074a64636f6e641907726b5f5f6c68735f305f32313019077466736f6d655f341907936b5f5f6c68735f305f32303919079566736f6d655f341907b96b5f5f6c68735f305f3230381907bb66736f6d655f341907d86b5f5f6c68735f305f3230371907e76b5f5f6c68735f305f3230361907f26b5f5f6c68735f305f3230351908016b5f5f6c68735f305f3230341908046b5f5f6c68735f305f32303319081a6b5f5f6c68735f305f32303219081d6b5f5f6c68735f305f32303019081f6b5f5f6c68735f305f305f341908216b656e747279547970655f321908356873656c665f313436190843645f5f363619086f6b5f5f6c68735f305f31393719087d6a726563757273655f32331908846a70644368616e67655f321908986b5f5f6c68735f305f31393519089a6b5f5f6c68735f305f305f3319089c6b70656e64696e67526f6c651908b06b5f5f6c68735f305f3139361908b26f6368616e67696e674467744e616d651908c3645f5f36341908da645f5f36331908dd6a726563757273655f32321908de6773656c665f34311908df64666e5f32190905645f5f363219091b6b5f5f6c68735f305f3139331909306b5f5f6c68735f305f31373719093a6b5f5f6c68735f305f31383519093d645f5f353819093f6d6d6b546f6b656e4e616d655f321909416b6d696e7465644467546b6e190943696467744c696e6b5f32190945695f5f636f6d6d6f6e3119095c7664656c656761746554616b65734f776e65727368697019095e781d706f737369626c6545787472615265706c6163656d656e74436865636b1909816b5f5f6c68735f305f313830190987695f5f636f6e645f383719099b6b5f5f6c68735f305f31383219099d6364646519099f6b656e747279547970655f311909b36b5f5f6c68735f305f3138341909b56a69645072656669785f371909c661641909da645f5f36301909ed6b5f5f6c68735f305f3138311909fc645f5f3539190a006b617373657274696f6e5f32190a176164190a346b5f5f6c68735f305f313739190a376873656c665f313932190a64645f5f3537190a72645f5f3536190aec6b5f5f6c68735f305f313733190afb6b5f5f6c68735f305f313530190afd7270656e64696e674368616e6765734c697374190aff7070726576696f75734d616e6966657374190b01716e65787443686172746572446174615f31190b036a5f5f636f6d6d6f6e3336190b056c6e6578744d616e6966657374190b0b64636f6e64190b276d7370656e64446774436865636b190b296c6d696e74446774436865636b190b3c6162190b50646d696e74190b526e6d696e7454686973506f6c696379190b74716f62736572766564546f6b656e4275726e190b766d72656d61696e696e674d696e74190b926b666f6c64696e674275726e190b936a70634368616e67655f31190b956a70644368616e67655f31190b97695f5f636f6e645f3737190bab6b5f5f6c68735f305f313635190bad6a747970654e616d655f34190baf695f5f636f6e645f3738190bc36b5f5f6c68735f305f313732190bc6645f5f3534190bc8695f5f636f6e645f3739190bdc6b5f5f6c68735f305f313731190bdf6b5f5f6c68735f305f313636190be16b5f5f6c68735f305f305f31190be3694d455f747970655f31190be564746e5f35190be7666d70685f3239190bfb6b5f5f6c68735f305f313730190bfe645f5f3535190c006b5f5f6c68735f305f313637190c026a726566436f756e745f31190c04695f5f636f6e645f3831190c186b5f5f6c68735f305f313639190c1b6b5f5f6c68735f305f313638190c1d6c6275726e696e67436f756e74190c3d666b65795f3237190c3f6a726563757273655f3937190c456a726563757273655f3936190c466873656c665f323532190c5367686561645f3437190c55667461696c5f35190cd5645f5f3533190cf26873656c665f313431190d006b5f5f6c68735f305f313633190d176873656c665f323533190d256b5f5f6c68735f305f313631190d3164785f3132190d486162190d6166707265765f35190d62676974656d5f3138190d6564615f3137190d6664625f3136190d686870644368616e6765190d6a6f70656e64696e67547970654e616d65190d70695f5f636f6e645f3731190d846b5f5f6c68735f305f313539190d86695f5f636f6e645f3734190d9a6b5f5f6c68735f305f313630190d9d645f5f3532190da6645f5f3439190dbd67686561645f3438190dc067434d455f6b6579190dc1675f5f6c68735f31190dc3674d455f74797065190dc56b5f5f6c68735f305f313535190dc76d4d455f706f6c6963794c696e6b190dc96b4d455f6964507265666978190dcb68726566436f756e74190df3674d455f6e616d65190df56b70656e64696e674c696e6b190df76b70656e64696e674e616d65190e106c6e6578744964507265666978190e21695f5f636f6e645f3732190e356b5f5f6c68735f305f313537190e376a69645072656669785f36190e3d695f5f636f6e645f3733190e516b5f5f6c68735f305f313538190e54645f5f3531190e78645f5f3530190e806773656c665f3332190e8b6164190e966873656c665f323538190eae6773656c665f3332190eb96164190ed66164190f17695f5f636f6e645f3730190f2b6b5f5f6c68735f305f313534190f2c6b63616c6c6261636b5f3132190f36645f5f3438190f376b63616c6c6261636b5f3131190f4a695f5f636f6e645f3639190f60645f5f3437190f7d6873656c665f313431190f8b6b5f5f6c68735f305f313531190f8e6a63616c6c6261636b5f39190f9475707265764d616e696665737452656d61696e646572190f95756e6578744d616e696665737452656d61696e646572190fb16873656c665f313538190fc16873656c665f313539190fe06b5f5f6c68735f305f313430190fe2706d616e69666573744163746976697479190fe46a5f5f636f6d6d6f6e3130190ff66b5f5f6c68735f305f3134391910056b5f5f6c68735f305f3134381910146b5f5f6c68735f305f3134321910166a5f5f636f6d6d6f6e3335191018666b65795f333119101a6b746f6b656e4e616d655f3419101c6d63686172746572446174615f3319101e6f6e65787443686172746572446174611910206a5f5f636f6d6d6f6e33371910226a5f5f636f6d6d6f6e33381910246a5f5f636f6d6d6f6e33391910266b5f5f6c68735f305f31343319102c695f5f636f6e645f36351910406b5f5f6c68735f305f3134371910436b5f5f6c68735f305f313434191045695f5f6c68735f305f3019104769656e7472795479706519104964746e5f3419104b666d70685f32381910766b5f5f6c68735f305f313436191079645f5f343619108f6b5f5f6c68735f305f313435191092645f5f34351910b764636f6e641910c46873656c665f3236311910de6568617344441910e06872656349645374721910e2695f5f636f6e645f33361910f66a5f5f6c68735f305f36381910f96a5f5f6c68735f305f36371911066873656c665f31333319114661641911646b5f5f6c68735f305f313431191167645f5f34341911896b5f5f6c68735f305f31333919118c6b5f5f6c68735f305f3133381911a06b5f5f6c68735f305f3133371911af6b5f5f6c68735f305f3133361911b564636f6e641911d66b5f5f6c68735f305f3133351911dc64636f6e641911fd6b5f5f6c68735f305f313334191220645f5f34331912386b5f5f6c68735f305f3130311912476b5f5f6c68735f305f3130301912566a5f5f6c68735f305f39391912656a5f5f6c68735f305f39381912746a5f5f6c68735f305f39371912836a5f5f6c68735f305f39361912866a5f5f6c68735f305f393519128a6873656c665f31393119129064636f6e641912a06873656c665f3135371912d96b5f5f6c68735f305f3133321912db6a5f5f636f6d6d6f6e32341912dd66736565645f341912df716461746154797065507572706f73655f311912e166636374785f331912e764636f6e641912fb73706f6c69637944656c6567617465496e7075741912fd69746e466163746f72791912ff69707572706f73655f3419134a6873656c665f31383119134d695f5f636f6e645f313719134f6a5f5f636f6d6d6f6e333019135d6a5f5f6c68735f305f333019135f646d615f311913806a5f5f6c68735f305f3331191382696669656c64735f373219138464636f6e641913ab645f5f32311913c86a5f5f6c68735f305f32371913ca6a616374697669746965731913e871666f756e645769746854686973536565641913ea695f5f636f6d6d6f6e3319142364615f31341914376a5f5f6c68735f305f3238191439626d611914566a5f5f6c68735f305f323919145868696e6465785f313119145a696669656c64735f373119148f645f5f323019149d645f5f31391914ae645f5f31381914be6873656c665f3236321914c061641914ea616419150f6b5f5f6c68735f305f3133311915116a5f5f636f6d6d6f6e3235191513696444617461547970651915156772656349645f371915176a5f5f636f6d6d6f6e323619151966636374785f3219151f64636f6e6419153764636f6e6419153a6873656c665f31383119153d6873656c665f313739191543695f5f636f6e645f32351915576a5f5f6c68735f305f343019155a645f5f3236191565695f5f636f6e645f32311915676a5f5f636f6d6d6f6e32371915756a5f5f6c68735f305f33381915776473615f311915986a5f5f6c68735f305f333919159a695f5f636f6d6d6f6e3819159c68696e6465785f31331915b16c666f756e6452656349645f311915db645f5f32351915f86a5f5f6c68735f305f33321915fa6c616374697669746965735f3119161870616374734f6e546869735265636f726419161a695f5f636f6d6d6f6e3219165364615f31351916676a5f5f6c68735f305f333719167c6a5f5f6c68735f305f33361916916a5f5f6c68735f305f33351916a66a5f5f6c68735f305f33331916a86273611916c56a5f5f6c68735f305f33341916c768696e6465785f31321916c9696669656c64735f37331916de6a666f756e64526563496419170a645f5f3234191718645f5f3233191729645f5f323219174067696e70757444441917656d63757253657474696e677349641917686873656c665f323633191776626f6519178a6a5f5f6c68735f305f353819178d6a5f5f6c68735f305f353719178f63655f3119179166736f6d655f321917b16b63686172746572446174611917de6768617344445f311917e0695f5f636f6e645f33371917f46a5f5f6c68735f305f37301917f76a5f5f6c68735f305f36391918046873656c665f31333319182b61641918496b5f5f6c68735f305f3132391918586b5f5f6c68735f305f3132381918676b5f5f6c68735f305f31323719186a6b5f5f6c68735f305f3132361918706773656c665f33361918726773656c665f33351918cb6a5f5f636f6d6d6f6e31351918cd6a5f5f636f6d6d6f6e31361918cf6a5f5f636f6d6d6f6e31381918d0645f5f34311918da6b5f5f6c68735f305f3132351918de6a5f5f636f6d6d6f6e32301918e76b5f5f6c68735f305f3132341918ea645f5f34321918f46b5f5f6c68735f305f3132331918ff6b5f5f6c68735f305f313232191902645f5f34301919246873656c665f323539191925666b65795f3239191927666b65795f33301919296a726563757273655f393919192f6a726563757273655f39381919306873656c665f32363019193d67686561645f343919193f667461696c5f3619196d666d70685f323619196e66736565645f3219196f6473656564191970755f5f7573656f70745f5f6d6b546f6b656e4e616d651919716b6d6b546f6b656e4e616d65191972781a5f5f7573656f70745f5f6f746865724d696e74656456616c7565191973706f746865724d696e74656456616c75651919756d6d6b546f6b656e4e616d655f31191977726f746865724d696e74656456616c75655f311919797064656c6567617465417070726f76616c19197b6b76616c75654d696e74656419197d6d657870656374656456616c756519199974657870656374656456616c756573536f727465641919a264746e5f331919a364695f31321919a67461637475616c54686973506f6c6963794d696e741919a8781a61637475616c54686973506f6c6963794d696e74536f727465641919b564746e5f321919b664695f31311919b9656d73675f311919c267706169725f33381919c564625f31351919c6645f5f33371919e37074686973506f6c6963794d696e744f4b1919f864636f6e64191a056162191a1d67696e7075745f34191a32736f74686572506f6c69636965734d696e744f6b191a546162191a647572656d61696e696e6745787065637465644d696e74191a766a726563757273655f3839191a7c6a726563757273655f3838191a7d666d61705f3330191a8a67686561645f3434191a91686f746865724d7068191a9278186578706563746564546f6b656e7354686973506f6c696379191a94706d696e74656454686973506f6c696379191a996b746f6b656e4e616d655f33191a9a6d6578706563746564436f756e74191aa26162191aac695f5f636f6e645f3534191ac06b5f5f6c68735f305f313132191ac36b5f5f6c68735f305f313131191ac56b61637475616c436f756e74191b0e666b65795f3233191b106a726563757273655f3931191b166a726563757273655f3930191b176873656c665f323235191b2467686561645f3435191b26667461696c5f34191b61626b31191b62635f7631191b63626b32191b64635f7632191b77626b31191b78635f7631191b79626b32191b7a635f7632191b896873656c665f323238191b8b6a726563757273655f3933191b916a726563757273655f3932191b92666c73745f3234191bb06a726563757273655f3531191bb66a726563757273655f3530191bb76572656d5f31191bca69707572706f73655f32191be66b5f5f6c68735f305f313130191be8676d696e74446774191bf16b726566496e707574735f31191bf36b6368617274657241635f31191bf56c686173436861727465725f31191bf76d636861727465725574786f5f31191bfc68646174615f313337191c056773656c665f3730191c25695f5f636f6e645f3133191c396673656c665f39191c456a5f5f6c68735f305f3231191c47695f5f636f6e645f3134191c5b6673656c665f39191c676a5f5f6c68735f305f3232191c6b6873656c665f313333191c83667478696e5f31191c8563615f33191c966773656c665f3335191ce16873656c665f323237191ce266636f6d705f34191ce46a726563757273655f3535191cea6a726563757273655f3534191ceb666c73745f3131191cf8667461696c5f32191cfa63785f33191cfc6a726563757273655f3533191d026a726563757273655f3532191d03656c73745f39191d1566686561645f33191d626873656c665f323233191d63666b65795f3231191d6d64785f3131191d7a6873656c665f323139191d7b65666e5f3235191d7d6a726563757273655f3837191d836a726563757273655f3836191d84666d61705f3239191d9167686561645f3433191db366736565645f31191db5687365656454784964191db76773656564496478191db9686964784279746573191dbb6772617754784964191dbd6774786f496e666f191dbf636d6873191dc06170191e1c6873656c665f323039191e1e69636861727465725f33191e326a5f5f6c68735f305f3930191e476a5f5f6c68735f305f3839191e4a6a5f5f6c68735f305f3837191e4c666d70685f3232191e4e667574786f5f35191e5067646174756d5f36191e7068646174615f313337191e796773656c665f3730191e9969636861727465724163191e9b695f5f636f6e645f3132191eaf6673656c665f39191ebb6a5f5f6c68735f305f3139191ebf6873656c665f313333191ec4647478696e191ec663615f33191ed76773656c665f3335191f176873656c665f323038191f1969636861727465725f32191f2d6a5f5f6c68735f305f3836191f426a5f5f6c68735f305f3835191f456a5f5f6c68735f305f3831191f47666d70685f3231191f496b6368617274657241635f34191f4b6d636861727465725574786f5f33191f4d67646174756d5f35191f6d68646174615f313337191f766773656c665f3730191f96695f5f636f6e645f3434191faa6673656c665f39191fb66a5f5f6c68735f305f3833191fba6873656c665f313333191fbf667478696e5f36191fc163615f33191fd26773656c665f333519200f6873656c665f3230361920106772656349645f351920126a72656349645374725f331920146461635f321920166a6361706f416464725f32192018695f5f636f6e645f343019202c6a5f5f6c68735f305f373419202f6a5f5f6c68735f305f373319203c6873656c665f3133361920416574786f757419209278335f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f64656c65676174656454784f75747075741920936873656c665f323035192094696e6577446174614964192095696e6577446174614964192097666467446174611920ab6a5f5f6c68735f305f37321920ad68646174615f3136301920af6a72656349645374725f321920b76473656c661920d56773656c665f32341920e361641920f9645f5f33321920ff6773656c665f37301921156873656c665f3230341921166469645f311921186a6361706f416464725f31192119667478696e5f3419212968646174615f31353919213d6a5f5f6c68735f305f373119213f63785f3719215d645f5f33311921636773656c665f37301921866873656c665f32303119218a695f5f636f6e645f333519219e6773656c665f31311921bf6773656c665f31311921ce645f5f33301921d86873656c665f3230301921d9696467744c696e6b5f311921da66726f6c655f311921db6a69645072656669785f331921de65696e7075741921df666d70685f313719220068696e707574735f31192201666d70685f3133192203677575744e616d65192205685f5f636f6e645f36192219695f5f6c68735f305f3819221c695f5f6c68735f305f3619221e6476685f32192220716e65656473416464725769746843726564192222626163192224685f5f636f6e645f3719223869666f756e64476f6f6419223b695f5f6c68735f305f3719224263695f3719224d6673656c665f3919225e63615f3319226f6773656c665f33351922b761641922d978295f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f616464726573731922da6873656c665f3139381922dc6b6368617274657241635f321922de686361706f416464721922e0683c61737369676e3e1922f46a5f5f6c68735f305f36341922fb6773656c665f373019230d6873656c665f31303019230f6a726563757273655f36371923156a726563757273655f3636192316666c73745f3132192323666974656d5f3619234063615f33192385645f5f323919239c6873656c665f31393719239e695f5f636f6e645f33331923b26873656c665f3136301923b468646174615f3133371923d76873656c665f3136321923d968646174615f3133371923ea645f5f32381923f478325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f361923f56873656c665f3139361923f6745f5f7573656f70745f5f72657175697265645f361923f86b72657175697265645f31331923fa67696e7075745f331923fc6a61635370656e644467741923fe683c61737369676e3e19242163615f331924326773656c665f33351924546873656c665f31353219247778325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f351924786873656c665f313935192479745f5f7573656f70745f5f72657175697265645f3519247b6b72657175697265645f313119247d67696e7075745f3219247f6961634d696e74446774192481683c61737369676e3e1924a463615f331924b56773656c665f33351924ee78325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f341924ef78375f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f726571756972657344656c6567617465496e7075741924f06873656c665f3139341924f168747970654e616d651924f3695f5f636f6e645f33311925076a5f5f6c68735f305f363119250a6a5f5f6c68735f305f353919250c65656e74727919250f695f5f636f6e645f33321925236a5f5f6c68735f305f36301925256a706f6c6963794c696e6b1925276a69645072656669785f321925286a63616c6c6261636b5f3819252f616419254f645f5f3237192557676467744c696e6b1925586a69645072656669785f3119258b6873656c665f31353819259b6873656c665f31383519259c666b65795f31341925a863785f351925b56873656c665f3138341925b7695f5f636f6e645f32381925cb6a5f5f6c68735f305f35361925e06a5f5f6c68735f305f35351925e36a5f5f6c68735f305f34381925e5667574786f5f321925e76861637469766974791925e96a5f5f636f6d6d6f6e34371925eb6a5f5f636f6d6d6f6e34381925f96a5f5f6c68735f305f35341926086a5f5f6c68735f305f35331926176a5f5f6c68735f305f35321926266a5f5f6c68735f305f35311926356a5f5f6c68735f305f35301926386a5f5f6c68735f305f343919265b6873656c665f31383019265d666c696e6b5f3119265f6a3c64657374727563743e1926616a3c64657374727563743e192663683c61737369676e3e1926656f76616c696461746f72486173685f311926676b74617267657456616c75651926697172657475726e6564556e6368616e67656419267e64636f6e641926a36a5f5f6c68735f305f34341926a56476685f341926ab6b617373657274696f6e4f6b1926b864615f31321926ba6a726563757273655f36311926c46a726563757273655f36301926c5666b6579735f341926d2666b65795f31301926da61621926e564615f31301926e664625f31301926e86a726563757273655f35391926f26a726563757273655f35381926f3666b6579735f33192700656b65795f39192708616219271365615f71747919271465625f717479192759695f5f636f6e645f323719276d6a5f5f6c68735f305f34361927706a5f5f6c68735f305f34351927746873656c665f313336192779636f5f311927926773656c665f37311927946773656c665f37301927db6a5f5f6c68735f305f34331927eb616419281a6873656c665f31373119281c63695f3819281e69696e7075744461746119283f6a5f5f6c68735f305f323519284167696e6465785f39192843696669656c64735f3730192845695f5f636f6e645f31361928626a5f5f6c68735f305f323619286466696e6465783219286e645f5f3137192884645f5f313619288c6673656c665f391928a46873656c665f3135351928ba6873656c665f3133371928bb666d70685f31341928bd637575741928bf6d76616c696461746f72486173681928c16461635f311928c36b68617344656c65676174651928f86a5f5f6c68735f305f31351928fa6476685f331928fc63615f3319291f6a5f5f6c68735f305f3132192921695f5f636f6e645f31301929356a5f5f6c68735f305f31341929386a5f5f6c68735f305f313319293c6873656c665f313336192941616f19294363615f33192985616419298f6873656c665f313330192990666d70685f313119299861641929a26873656c665f3131391929a461641929ba6873656c665f3131361929bc61641929d26873656c665f3131301929d461641929e46776616c75655f35192a01675f5f6c68735f30192a03686669656c64735f37192a05685f5f636f6e645f32192a22695f5f6c68735f305f31192a28635f5f33192a37635f5f32192a3a677478496e707574192a3c687461726765744964192a3e6972656465656d657273192a40737370656e64734578706563746564496e707574192a4863785f34192a4d6a726563757273655f3731192a536a726563757273655f3730192a54666d61705f3232192a61666974656d5f37192a7b627370192a8b635f5f31192abf666d70685f3130192ac062746e192ac269746e42797465735f31192aeb6773656c665f3938192aec666e616d655f31192aee666d61705f3135192af0696e616d655f64617461192af26a726563757273655f3633192af86a726563757273655f3632192af9666d61705f3136192b0666686561645f36192b08666b65795f3131192b0a6776616c75655f33192b356773656c665f3837192b366476685f31192b38676f757470757473192b3e66707265765f33192b3f6874784f7574707574192b556773656c665f3831192b5b666f7574707574192b5d6a63726564656e7469616c192b756773656c665f3834192b8a6673656c665f39192bb26773656c665f3736192bb46673656c665f39192bcc6773656c665f3639192bce66706169725f35192bd067696e6465785f31192bd2686669656c64735f34192bf26773656c665f3636192bf36c6173736574436c6173735f32192bf5716d696e74696e67506f6c69637948617368192bf76b746f6b656e4e616d655f32192bf9676f757465725f33192bff67696e6e65725f34192c00666d61705f3134192c33676f757465725f32192c3467696e6e65725f33192c35666d61705f3133192c846773656c665f3539192c9b6773656c665f3532192c9c64666e5f38192c9d636e696c192c9f6a726563757273655f3537192ca76a726563757273655f3536192ca86773656c665f3533192ca964666e5f39192cb666686561645f35192cdf63615f38192ce063625f38192ce26a726563757273655f3439192cec6a726563757273655f3438192ced666b6579735f32192cfa656b65795f38192cfc667461696c5f31192cfe666974656d5f35192d1863615f36192d1963625f36192d1b6a726563757273655f3435192d256a726563757273655f3434192d26666b6579735f31192d33656b65795f37192d35647461696c192d376373756d192d81666d61705f3131192d82656d70685f39192d846a726563757273655f3437192d8a6a726563757273655f3436192d8b666d61705f3132192dbd63615f35192dbe63625f35192dc065614b657973192dc26a726563757273655f3433192dc463625f34192dc66a726563757273655f3431192dce6a726563757273655f3430192dcf656c73745f36192dd06372656d192df56a726563757273655f3432192df6646b657973192df7666d61705f3130192e04656b65795f36192e0f666974656d5f34192e396a726563757273655f3337192e3f6a726563757273655f3336192e40656d61705f39192e606773656c665f3439192e6164666e5f35192e636a726563757273655f3339192e6b6a726563757273655f3338192e6c6773656c665f3530192e6d64666e5f36192e92656d61705f36192e93656b65795f33192e956a726563757273655f3335192e9d6a726563757273655f3334192e9e656d61705f37192e9f656b65795f34192ed36773656c665f3438192ed4656d70685f37192ed6656d70685f38192ed86a726563757273655f3333192ede6a726563757273655f3332192edf656d61705f35192f146773656c665f3437192f166a726563757273655f3331192f1c6a726563757273655f3330192f1d656d61705f34192f3068746f6b656e735f31192f326a726563757273655f3239192f386a726563757273655f3238192f3968746f6b656e735f32192f796773656c665f3436192f7a656d70685f35192f7c656d70685f36192f7e6a726563757273655f3237192f846a726563757273655f3236192f85656d61705f33192fb16773656c665f3434192fb264666e5f33192fb46a726563757273655f3235192fbc6a726563757273655f3234192fbd6773656c665f3435192fbe64666e5f34192fcb66686561645f32192fef6773656c665f3338192ff0656b65795f31192ff167666e466f756e64192ff26a666e4e6f74466f756e64192ff46a726563757273655f3231192ffc6a726563757273655f3230192ffd6773656c665f3339192ffe656b65795f3219300a66686561645f31193031656c73745f331930336a726563757273655f31391930396a726563757273655f313819303a656c73745f341930546269641930566a726563757273655f31371930676a726563757273655f3136193068656c73745f32193075666974656d5f331930aa6773656c665f32391930b066707265765f311930b166706169725f331930b3686d70685f646174611930b56b746f6b656e735f646174611930bf656d70685f341930ec66707265765f321930ed66706169725f341930ef6f746f6b656e5f6e616d655f646174611930f1687174795f646174611930f76c746f6b656e5f6e616d655f3219310a63717479193131616e19313369726563757273655f31193139677265637572736519313a616919314a62623019317267696e6578745f3219318b6776616c69645f3519318c6463315f3219319663635f321931e067696e6578745f311931f96776616c69645f331931fa6463315f3119320f6776616c69645f341932106463325f3119321a63635f3119326e65696e6578741932876576616c696419328862633119329d6776616c69645f3119329e6263321932b36776616c69645f321932b46263331932be616319334c66646174615f3519334d6b63616c6c6261636b5f6f6b19334e6e63616c6c6261636b5f6e6f6b5f321933636773656c665f323119336769726563757273655f3919338b69726563757273655f3819338c63695f3319338d6762797465735f3319338f6762797465735f341933b66773656c665f31391933b762666e1933b8617a1933ba69726563757273655f371933c269726563757273655f361933c36773656c665f32301933c4637a5f311933e164646174611933e263695f321933fc6773656c665f3138193415656d70685f311934166a746f6b656e5f6e616d6519342a6a6173736574436c61737319342b63695f3119342d636d706819342f69746f6b656e4e616d6519345e6673656c665f3519346069726563757273655f3519346669726563757273655f341934676673656c665f36193469636e5f3119347c696865785f62797465731934926673656c665f3319349469726563757273655f331934ba69726563757273655f321934bb6673656c665f341934bc6762797465735f311934be6564696769741934c06762797465735f3219350c646279746519350d6863616c6c6261636b", "termDescriptions": "ae1901be67636861727465721912e16463637478191519646363747819156d683c7377697463683e19156e683c7377697463683e19161870616374734f6e546869735265636f726419177c683c7377697463683e19177d683c7377697463683e1919b562746e1919b662746e191e1e6763686172746572191f1967636861727465721925bd683c7377697463683e1925be683c7377697463683e" }, "unoptimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/delegation/UnspecializedDelegate.hl", "src/CapoMintHelpers.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f1903dd00190167183219040d0019025b182a19040f001902cf183a190411001902fd0b1904430019051b081904470019053408190541011905720419054201190572041905710118bf183a1905720118bf183a1905750118c0182e1905760118c0182e1905770118c0091905780118c0041905790118c0182719057b0118c0182719057c0118c0181919057e0118c0181919057f0118c00a19058c011905700a19058f01190570182919059001190570181a19061b0119055a101906290119055b183619062b0119055b182d1906c80119014c181c1907ae01190128181c19087c0118f5181c190a02011901a41826190b31011902311824191051011902ac18281912810119044d181c1912ab0119040118371912f301190404182019140d01190433186519148f0119040218351914940119040218311914b20119038b18291914b90119038b18251916ad0119037f18321916b70119037e18521916bd0119037d184e19181001190466183419181901190466183019181d01190464183a19182801190463184f1918460119047f182f19184d0119047f182b1918d301190496181d19190501190203182719190c0119020318231919350119020c182719193c0119020c182319196401190214182419196b01190214182019197701190216182b19197e011902161827191994011901f91825191998011901f9182119199e011901cb18271919b6011904a418261919ca011904a7141919d2011904a8181f1919d9011904a8181b191a23011904cc181f191a26011904cd181e191a27011904cd181e191a43011904d7181b191a4a011904d717191a55011904dc1838191a6e011904ac182e191a78011904ac182a191a7b011904a71831191aaa011904f114191ab2011904f2181f191ab9011904f2181b191aec011904f81820191af6011904f8181c191b49011905201828191b6b01190526182b191b730119050a1845191b760119050a182c191b7d0119050a1828191b8a0119052d1818191b910119052d14191b96011904ff182c191b9f011904ff1828191ba3011904f11831191bd00119053514191bd801190536181f191bdf01190536181b191c3a0119053e182d191c430119053e1829191c47011905351831191eba02190153181f191ee5021901461827191ef8021901471835191efe0218f41827191eff0218f608191f000218f608191f33021901121825191f53021901171828191f760219011d1832191f790219011f182a191f7a0219011f182a191f9302190113181c191fcc02190130181b192a88031901b31826192a89031901b31831192aa6031901bb182e192aa7031901bb182e192aa9031901bc0c192aba031901bd182c192ad6031901c01839192ad7031901c01839192ade031901c210192b43031901d81837192b7e031901e3182d192cc0031901601834192e5c0319012a181b192e780319011e0e192e9303190114181b192eda03185d05192edb03185b182d192ef103186314192f2403186d17192f8b03184d09192f8c03184d182e192fa603184706192fa7031844181919301d031830184419301e031830184419303f03181f0219304003181f0219305a031822161930610318230d1930700318260e19308f0019079f18271930ab00190799182c1930c4001907761019322700190760183219322a00190747182c19323000190749181f19324e0019074b183b193288001907341219328900190734182b19328b0019072a0d19328c00190725182a1932b0001907261830193339001906e10819333a001906e20f193375001906e914193390001906b808193391001906b90f1933d8001906c318461933d9001906c318251934250019069808193426001906990f19344c001906a1183319350a00190657182519352f0019062918331935f5001905870f1936050019058b181f19365c0019058c18221936ac0019057c101936dc0019056e18231936dd0019056e18231936ef0019056018201936f90019055f0819370c00190562101937310019055a18281937320019055a184119374d001905501119379700190533181c1937ca00190522181c19380c0019052a1818193819001905250c1938260019051a1818193862001905020919386900190500181d193882001904f718201938a8001904ef091938af001904ed181b193931001904d5184d19393f001904d5184419399d001904b0181e19399e001904b1183d1939a9001904b8091939c2001904b5101939f8001904460b1939f9001904460b1939ff00190448184c193a5100190438183f193a53001904371821193a54001904371821193a8700190416181c193a910019041815193a920019041815193b4e001902fb10193b54001902ce181b193b67001902f51827193b70001902f6182e193b81001902f60f193b96001902e111193bbd001902e61847193bcb001902ea1832193bd5001902ea1822193bf6001902f0182d193c270019025809193c450019025a1878193c500019026208193c520019025c1826193c5c0019025c0e193c5d0019025e181b193c640019025f1841193c6f001902601855193c81001902621827193c82001902621827193c8a0019027111193ca0001902661838193cbb001902691843193cc60019026a184d193cd60019026a1845193d0a00190275183d193d11001902761852193d23001902761826193d250019027810193d26001902a61862193d31001902aa11193d4c001902ab1851193d57001902af11193d890019027d181d193da100190283181d193db90019028b181d193de5001902931844193e00001902961850193e0b00190297185c193e19001902981844193e1b001902971854193e1c001902971854193e360019029d1857193e65001902b31831193e7f00190225185d193e9a0019023111193edc00190236184c193eea001902361821193eed00190246185b193ef8001902471860193f0b001902481850193f16001902491868193f540019023c1844193f9e0019024e1830193ffa001901e91856193ffc001901e815193ffd001901e815194001001901e914194006001901e90f194012001901e91844194013001901eb184f194015001901e9184e194016001901e9184e194022001901ec184f194039001901ec182e19403a001901f113194048001901de17194049001901de1719404a001901df185619404c001901de182b19404d001901de182b194051001901df14194056001901df0f194062001901df1844194067001901df184e194068001901df184e19407a001901d41821194094001901bf1827194097001901d108194099001901d0091940af001901c518531940ba001901c5184b1940d6001901c8184a1942a50019018e131942b50019018a184b1942ba0019018a18301942bd0019018a184d19430600190168184b19430b00190168183019430e00190168184d19556d0419014d0c19558c0419015418371955a0041901500c1955ad0419015a151955b00419015a18361955b20419015a18361955b30419015a18311955e40419013e183f1955e70419013f183419561904190145182919561a04190145181b195636041901350b195648041901320a1956f604190113161957090419010e1319570f04190109185a19574f0418e40a196ac504182b04196f150518a20a196f3c0518a5121970df0518360e1971000518321819197109051829181919711a05182a0819711b05182a0819712505182418181971340518260eff", "variableNames": "", "termDescriptions": "b834190571646d61696e190572646d61696e1906c861611907ae616119087c61611919ca6463637478191aaa6463637478191bd06463637478191eba6473656c66191ee56473656c66191efe6473656c66191eff6463637478191f006463637478192aa662746e192aa762746e192aa965746e537472192f8b67707572706f736519301d781a6e6f4f7468657241637469766974696573537570706f7274656419301e781a6e6f4f7468657241637469766974696573537570706f7274656419303f6b686173536565645574786f1930406b686173536565645574786f19308f696d6b4361706f43747819333967636861727465721933906763686172746572193425676368617274657219374d6473656c661937976473656c661937ca6473656c661938266473656c6619399d6473656c661939f8683c7377697463683e1939f9683c7377697463683e193a53636b6579193a54636b6579193a876473656c66193a91683c7377697463683e193a92683c7377697463683e193b4e6473656c66193b546473656c66193c81683c7377697463683e193c82683c7377697463683e193d2570616374734f6e546869735265636f7264193ffc636d7367193ffd636d73671940486b617373657274696f6e4f6b1940496b617373657274696f6e4f6b19404c636d736719404d636d736719407a6473656c661940946473656c6619710969617373657274696f6e19712569617373657274696f6e" } },
      scriptHash: "7692030d510785a1f9697e512b38b6677cb497a11d253033c883f50c",
      config: { "rev": "1", "delegateName": "UnspecializedDelegate", "isMintDelegate": true, "isSpendDelegate": true, "isDgDataPolicy": false, "requiresGovAuthority": true }
    }
  };
  specializedDelegateModule = UnspecializedDelegate_hl;
  requiresGovAuthority = true;
  get rev() {
    return 1n;
  }
  get params() {
    return {
      rev: this.rev,
      delegateName: this.moduleName,
      isMintDelegate: true,
      isSpendDelegate: true,
      isDgDataPolicy: false,
      requiresGovAuthority: this.requiresGovAuthority
    };
  }
  get moduleName() {
    return "UnspecializedDelegate";
  }
  get bridgeClassName() {
    return "UnspecializedDelegateBridge";
  }
}

export { UnspecializedDgtBundle, UnspecializedDgtBundle as default };
//# sourceMappingURL=UnspecializedDelegate.hlb.mjs.map
