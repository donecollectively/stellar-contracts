import { U as UnspecializedDelegate_hl } from '../UnspecializedDelegate.mjs';
import { CapoDelegateBundle } from '../CapoDelegateHeliosBundle.mjs';
import { C as CapoHeliosBundle } from '../CapoHeliosBundle2.mjs';
import '@helios-lang/compiler-utils';
import '../HeliosBundle.mjs';
import '@helios-lang/uplc';
import '@donecollectively/stellar-contracts/HeliosProgramWithCacheAPI';
import '@helios-lang/compiler';
import '@helios-lang/codec-utils';
import '@helios-lang/crypto';
import '@helios-lang/contract-utils';
import '@helios-lang/ledger';
import '../environment.mjs';
import '../DefaultCapo.mjs';
import '../BasicDelegate.mjs';

class UnspecializedDgtBundle extends CapoDelegateBundle.usingCapoBundleClass(CapoHeliosBundle) {
  preCompiled = {
    singleton: {
      programBundle: { "programElements": { "src/delegation/BasicDelegate.hl": "c1c08070fec3cd0c35f0095277755d972353c4873df785f31aa3a17a2c751a8c", "src/CapoMintHelpers.hl": "8f780e9a5523a44dbbcaab8ccf4b94716aac9e29cfa7c98f52f3d71ae70038d4", "src/delegation/CapoDelegateHelpers.hl": "51761f4364905846422a194f77ba875c0b9f694dd6cedf65da502fcd3823a81d", "src/StellarHeliosHelpers.hl": "8494efc84f3ef859470648af3cc4b08ab12572c193d5702c69c1470300c0ff70", "src/CapoHelpers.hl": "81ca077606b3bfa65052c1011d7bb0e5f4d048a511cf8e8b9c41657e3bf27463", "generatedSpecializedDelegateModule": "fee9343bddb8db8f9f5d9d189f5111230fc239eb9de4c8827a58bd5b38e9a72b", "src/delegation/UnspecializedDelegate.hl": "a87c86450dba4c73c26e89b798b5b7ac3131c812485139b2dd155cf44a70f026", "params": { "BasicDelegate::rev": "const rev: Int = ##01;", "BasicDelegate::instance": "const instance: ByteArray = #67656e6572616c;", "BasicDelegate::delegateName": "const delegateName: String = ##55556e7370656369616c697a656444656c6567617465;", "BasicDelegate::isMintDelegate": "const isMintDelegate: Bool = ##d87a80;", "BasicDelegate::isSpendDelegate": "const isSpendDelegate: Bool = ##d87a80;", "BasicDelegate::isDgDataPolicy": "const isDgDataPolicy: Bool = ##d87980;", "BasicDelegate::requiresGovAuthority": "const requiresGovAuthority: Bool = ##d87a80;" } }, "version": "PlutusV2", "optimized": "593166593163010000222323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232533357346a666ae68cdc3821a400824c2a666ae68cdc3821a4004246466ae6cc94ccd5cd0008a4c2c64666ae68cdc7800a4410101004a0944dd71aba1357446ae88004cd5cd992999ab9a001149858c8ccd5cd19b8f0014890767656e6572616c004a0944dd71aba1357446ae88004cd5cd992999ab9a001149858c8ccd5cd19b8f00148915556e7370656369616c697a656444656c6567617465004a0944dd71aba1357446ae88004c8c8ccccc01401401012c00c004cc034030c8cd5d01ba90014bd70903d87980001bae357426ae88008c0f8c8c8dd59aba1357446aae78dd50009aba1357446aae78dd5000a81d9bac357426aae78dd5000899191911a999ab9a0021261325333573400224c246a666ae6801049854ccd5cd0010930925004d3370e006900002599b8700148008d55ce8009baa04704814985888888c8cd5cda999ab9a0011498594ccd5cd1991192999ab9a35333573466e1cd55ce9baa0074800849288a999ab9a3370e6aae74dd5003a400024646a666ae68cdc39aab9d3754002900009309251001357426aae78dd50008a999ab9a3370e6aae74dd5003a400c24c2a666ae68cdc39aab9d375400e90050925115333573466e1cd55ce9baa0074803049288a999ab9a3370e6aae74dd5003a401c2494449801c528899b8f37660846ecc020c8dd71aba1357440026eb0d5d09aab9e375400e93198078070010a511635333573466e1cd55ce9baa0034804048c8c8c8c94ccd5cd2999ab9a002100114a029445282999ab9a3233357340029412899980d00c80125114a226607400646a666ae68cdc39aab9d375400290060919ab9b32533357340022930b19980e00d8022503333300b00b00a00200800415333573466e1cd55ce9baa0014802849854ccd5cd19b8735573a6ea8005200e12615333573466e1cd55ce9baa0014800849854ccd5cd19b8735573a6ea8005200012615333573466e1cd55ce9baa001480404984980054ccd5cd19199ab9a0014a0944ccc068060005288a51133039002235333573466e1cd55ce9baa0014802848ccccc02802802400801c00c54ccd5cd19b8735573a6ea8005200e123333300a00a00900200700315333573466e1cd55ce9baa0014803049854ccd5cd19b8735573a6ea8005200212615333573466e1cd55ce9baa0014800049854ccd5cd19b8735573a6ea80052010126126001300e00337586ae84d55cf1baa00115333573466e1cd55ce9baa0034800848c8d4ccd5cd19b8735573a6ea8005200012323232323232325333573400220042940ccccccc040dd71aba13574401600c66ae80dd49b980054bd7025049928802191a999ab9a3370e6aae74dd5000a40142494449280009811000980a004192999ab9a304800113732002260960026eb8d5d09aba23574401066082660806eb8d5d09aba2007375c6ae84d5d11aba200748004c8dcc9bae001357426ae88d55cf1baa002357426aae78dd50008a999ab9a3370e6aae74dd5000a40042466e1ccc88c8c8c8c8c8ccc004004894ccd55cf8008b0a999ab9a3375e6aae74d5d080080209bad35573c6ae840044cc008008d5d10008039112999aab9f0011615333573466ebcd55ce9aba100100513300200237566aae78d5d080089998018018011aba2001357426ae88008d5d08009aab9e0013754002607a0826607c6eb8d5d09aba2005375c6ae84d5d11aba200548004498004d5d09aab9e37540022a666ae68cdc39aab9d3754006900009191919ab9b323235333573466e1c005200012325333573466ebc00401852616357426aae78dd50008a999ab9a3370e0029005091a999ab9a3370e6aae74dd5002a400024930930028930011aab9d3754002603a0026464a666ae68d4ccd5cd19b8735573a6ea801120001232323235333573466e1cd55ce9baa0054800048cd5cda999ab9a3333333011375c6ae84d5d100600219aba037526e6000d2f5c09440092824c2930a4c646a666ae68cdc39aab9d37540029001093091919ab9b32533357340022930b19b973237326eb8004d5d08009802803198158009bae357426ae8803cdd61aba135573c6ea8004004c8cccc108004dd49b9800423374a900019aba00014bd700a6103d87a80003237566ae84d5d11aba235573c6ea8004cc078070020498014c04c008c8dcc9bae001357426ae88d55cf1baa002357426aae78dd50008a999ab9a3370e6aae74dd50022400424646464646464646464646464646466ae6cd4ccd5cd0028930924c00c66ae6cc94ccd5cd0008a4c2c6466ebcdd38009ba700e3574401666a666ae6801449854ccd5cd19b8735573a6ea801920001232323232233300100400300230390043237326eb8004d5d09aba2002357420026aae78dd5000891919191199800802001801181b801991b99375c0026ae84d5d11aab9e37540046ae84d55cf1baa0010062223232335736a666ae68cdc39828809240002930b2999ab9a002100114a06a666ae68cdc39aab9d375402890010930a999ab9a3370e6aae74dd500a24000246466ae6d4ccd5cd0008a4c2c6464a666ae6800c40045281a999ab9a3370e6aae74dd5006a40002466ae6cd4ccd5cd19b8735573a6ea8009200012612498009288a999ab9a3370e6aae74dd5006a4008264646446466ae6cd4ccd5cd0018930a999ab9a3370e00890030930a999ab9a3370e00890070930924c020646466ae6cc94ccd5cd0008a4c2c66ebc00cd5d09aab9e3754002944d4ccd5cd19b870054800048c8cdd2a400066ae800052f5c066082607e0386eb8d5d09aba202415333573466e1c015200212323374a900019aba00014bd70198209bac357426aae78dd500e1bae357426ae8809054ccd5cd008091919ba548000cd5d0000a5eb80cc104008dd71aba1357440482a666ae68cdc3802a401424c2a666ae68cdc3802a401824c2a666ae6801049854ccd5cd19b8700548018498498044d4ccd5cd19b8735573a6ea8019200212612323235333573466e1cd55ce9baa0014800848dd61aba135573c6ea8004498004cc1200052210374706500357426aae78dd50008031aba1357446ae88d5d11aab9e375400266e1c005200435573a0026ea802c498034cc0ccdd59aba135744608a02800e6609e02446a666ae68cdc39aab9d375400290000919191a999ab9a3370e6aae74dd5000a40102464666ae68cdcb8008062504a2608000224c0026ae84d5d10009bac357426aae78dd500089300089300a1a999ab9a3370e6aae74dd5009a40042494454ccd5cd19b8735573a6ea804d20001235333573401224c246464646466ae6d4ccd5cd19b970013004008149858c8c94ccd5cd2999ab9a00514a2294040045281a999ab9a3370e6aae74dd5008240082466ae6cc8d4ccd5cd19b8735573a6ea8005200012323235333573466e1cd55ce9baa0014800848c94ccd5cd19b9700100f149858c8dcc9bae001357426ae88d55cf1baa001126001330480014890374706500357426aae78dd50008930009981c1bab357426ae88c128064031288925101032335736a666ae68004526164a2660760046eb8d5d09aba201f3237326eb8004d5d08009a999ab9a3370e6aae74dd5004a400424c246eb0d5d09aab9e375400201266666660426eb8d5d09aba201c0063357406ea4dcc002a5eb81289812803250498c09001402849804cd4ccd5cd001081a8930019aba13574400a66e1cd55ce9baa00148020d5d080199b8735573a6ea80052002357420046ae88004dd61aba135573c6ea8004cc1100052000357420026eb0d5d09aba23574460680026603803400c6eb0d5d09aba23574460640026607e603600890000a999ab9a3370e6aae74dd50022400824c2a666ae68cdc39aab9d3754008900309191919191919ab9b32533357340022930b19b87304337586ae84d5d1001240006464a666ae6800440085282999ab9a3233357340029412899981181080525114a22646466ae6d4ccd5cd199ab9a3371266e04c11800920024800928251161498c8c8cd5cda999ab9a3370e609000290000a4c2c944ccc15402488c8c8d4ccd5cd19b8735573a6ea8005200812323235333573466e1cd55ce9baa001480004802048c8d4ccd5cd19b8735573a6ea80052002126123232323235333573466e1cd55ce9baa001480004803c48c8c8c8d4ccd5cd19b8735573a6ea800520021261232335736a666ae68ccd5cd19b87337029000002000a504a22c29319191980080080b112999aab9f0011001132325333573466ebc014d55ce801099802002000899aba000233004004001357440046ae84004dd48041bad357426aae78dd5000800998148088029bad357426ae88d5d11aab9e3754002660ae008900100099821001a441036d706800375c66082004910102746e003304000148810374706500357426aae78dd5000800998180080018009aba10043036001126001357426ae88004d4ccd5cd19b8735573a6ea800520001237586ae84d55cf1baa00112600100135333573466e1cd55ce9baa0014800048dd59aba135573c6ea8004492f5bded8c000264666608a0046ea40048cdd2a400066ae800052f5c0298103d87a8000375c6ae84d5d100798230252999ab9a32333573400294128999810810004a5114a2266660a200a44600444646466ae6cc8d4ccd5cd19b8735573a6ea80052002123235333573466e1cd55ce9baa0014800049849260013302c00500312335736a666ae68cdc39825802a40002c293191991191919191919ab9b5333573466e1c0052002149858cd5cda999ab9a3372e01600e2930b19191919ab9b5333573466ebcdd38031ba7002149858c94ccd5cd19b97001006149858c8d4ccd5cd19b8735573a6ea800520041232335736646a666ae68cdc39aab9d375400290000930924c002660746ae8804c044004c10000454ccd5cd19b8735573a6ea8005200010401260013574201e6466e5924010127003372c00292010127003237326eb8004d5d0800991bac357426aae78dd50009aba1357446ae88034c8cdcb2490127003372c00292010127003237326eb8004d5d08019bad357426ae88d5d11aab9e3754006646e64dd70009aba1357446aae78dd50011bac357426aae78dd500099828000a400466078002911037470650037326eb8d55ce8009aab9e0013574200a0026ae84008c8d4ccd5cd19b8735573a6ea80052000122330010073574400c244660026603400e0086ae88018004d5d0801191a999ab9a3370e6aae74dd5000a4010206624c0026ae84d5d10009a999ab9a3370e6aae74dd5001a4000246eb0d5d09aab9e375400224c00646600200a0044466ebcdd30009ba600237566ae84004d5d1181a0009980e00d003191bab357426ae88c0cc004c070014c8dd61aba1357446ae88c0c8004c06c01054ccd5cd19b8735573a6ea8011200c12323357366a666ae68cdc39aab9d375400290000930a999ab9a3370e6aae74dd5000a400424c2a666ae68cdc39aab9d3754002900209191919191919191919ab9b5333573466ebc00400452616335736646a666ae68cdc39aab9d37540029001093091919191919ab9b5333573466e3c008034526163357366a666ae68cdc39aab9d375400290000930924c0026a666ae68cdc39aab9d375400690000924c24c00666076006911036d706800375c66074004910102746e003303900148810374706500357426aae78dd500080099814801004192999ab9a001149858c8cdd79ba6001374c6602e0060126eacd5d09aba2303b00632323235333573466e1cd55ce9baa0014800849848d5d09aab9e3754002002646608e0020066eb0d5d09aba235573c6ea813cdcc803998100068031bab001357420026ae88c0dc004cc07c074024cc10cc07c0212000375c6ae84d5d11aab9e3754004646e64dd70009aba135573c6ea800454ccd5cd19b8735573a6ea8005200612612498005289aba135573c6ea800454ccd5cd19b8735573a6ea8011200a12612600414a22940d4ccd5cd19b8735573a6ea8005200e12615333573466e1cd55ce9baa0014800848cd5cd992999ab9a001149858ccc06c06800d280010a999ab9a3370e6aae74dd5000a40002466ae6cc94ccd5cd0008a4c2c66603803400694000854ccd5cd19b8735573a6ea8005200c12533357346660380340069445300103d8798000153335734666036034006944530103d87a80001612600135333573466e1cd55ce9baa0024802049854ccd5cd19b8735573a6ea8009200a12615333573466e1cd55ce9baa0024803049300103d87a800015333573466e1cd55ce9baa002480084930103d879800015333573466e1cd55ce9baa002480104930103d87a800015333573466e1cd55ce9baa002480184930103d87f8000124c0103d87980000023233573664a666ae6800452616330213237586ae84c0bc004c060004dd71aba1001001300f323357406ea40052f5c2103d87980001bae357426ae88010d5d09aab9e37540022a666ae68cdc39aab9d375400690050919191919ab9b32533357340022930b19980d80c800a503232323253335734a666ae694ccd5cd2999ab9a333333300f375c6ae84d5d100500399aba037526e600092f5c094400d2824c29445280999980c00b8028008030a5014a229404c928991a999ab9a3370e6aae74dd5000a400c246466ae6cd4ccd5cd2999999aba400114a229405280a5014a0246464a666ae68004526163375e018a666aae7c004584d5d08009aab9e375400224c002604c00e6ae84d55cf1baa00115333573466e1cd55ce9baa0014804048c8cd5cda999ab9a333573466e24c10c00520004a09445261632335736a666ae68ccd5cd19b8930440014800128251149858cd5cda999ab9a3370e608800290010a4c2c604e01066606e00246a666ae68cdc39aab9d3754002900309191a999ab9a5333333574800229445280a5014a0294048c8c8cd5cda999ab9a3370e0040042930b2999ab9a3375e0206ae840045288a5035573c6ea8008d55ce9baa001126001357426aae78dd5000892500014bd701bac357426aae78dd500089300098120020a503730600400264646e64dd70009aba135573c6ea8004d5d09aba2357440046020008666603803202e002004601e008646e64dd70009aba1357446aae78dd50011aba135573c6ea800454ccd5cd19b8735573a6ea800d200c1232323233573664a666ae680045261633301a0190014a066ae6cc926324a26466ae6cc8d4ccd5cd19b8735573a6ea8005200812498498004d5d09aba2001323235333573466e1cd55ce9baa0014801048c8cd5cd9a999ab9a5333333574800229445280a5014a0294048c8c8cd5cda999ab9a3370e0040042930b192999ab9a333573466e3c02c00528251161498dd71aba100135573c6ea8008d55ce9baa0011260013024005357426aae78dd50008a999ab9a3370e6aae74dd5000a4020246466ae6d4ccd5cd199ab9a33712608200290002504a22930b1919ab9b53335734666ae68cdc49821000a4000941288a4c2c66ae6d4ccd5cd19b87304200148008526163025006333035001235333573466e1cd55ce9baa0014802849854ccd5cd19b8735573a6ea8005200c12615333573466e1cd55ce9baa0014803849854ccd5cd19b8735573a6ea800520041232353335734a666666ae900045288a5014a0294052809191919ab9b5333573466e1c008008526163253335734666ae68cdc7807000a504a22c2944dd71aba100135573c6ea8008d55ce9baa001126001357426aae78dd5000892500014bd701bac357426aae78dd500089300098110011b99003333301c01901700100332335736a666ae68cdd78008008a4c2c66ae6d4ccd5cd19b974910873657474696e677300004132498c8dd71aba135573c6ea8004c8d4ccd5cd19b8735573a6ea800520021261232323374a900019aba0375200297ae0375c6605c002910102746e00357426aae78dd5000800991980f9bab357426ae88c0c400524010f63757272656e7453657474696e6773003303e301a0024800052653335734666602a02800400600829445281919191a999ab9a3370e6aae74dd5000a400424c246ae84d55cf1baa001001323303c00100337586ae84d55cf1baa04437320066602a002004601e0086eb8d5d09aba235573c6ea8008c8dcc9bae001357426aae78dd50008a999ab9a3370e6aae74dd5001a401c24c2a666ae68cdc39aab9d375400690020925115333573466e1cd55ce9baa00348018492889251003223232330010010042253335573e002200226464a666ae68cdd78029aab9d0021330040040011335740004660080080026ae88008d5d08009ba937300024444444646464646466ae6d4ccd5cd199ab9a3303900200c4a09445852632335736660200024493191919ab9b3357366602400244931924c609066606800a46644666ae68cdc78010092504a26eb8d55ce8009bab35573c00297adef6c6032335736a666ae6800452616335736649319ab9b5333573464666ae68005282513303937586ae84d55cf1baa04723375e6ae84d55cf1baa001010161499289919ab9b533357340022930b2999ab9a002100114a0a666ae68c8ccd5cd000a504a2607801029444c94ccd5cd181e8008a511335736646600200200444a666aae7c0045261323357366644646603400444a666ae68c8ccd5cd000a504a2646a666ae68cdc39aab9d375400290010925012323370e0020086eb4d5d09aab9e3754002002660360060042c293198208060011bae35573a0026eacd55cf000998018019aba2002357420029454ccd5cd1981e8028080991919800800803912999aab9f0011001132325333573466ebc014d55ce801099802002000899aba000233004004001357440046ae84004dd4808080299baf374c0026e9800ccc03c0048888cdc80020011981c001806998069981b800806111119b9000400233031330314bd6f7b630001991919800800801112999aab9f00114bd6f7b63009981a1bab35742002660040046ae88004c8cc004004028894ccd55cf8008a5eb804cd5d01ba6323302c00e300700137326eb8d5d0800998010011aba2001303d04132324a2604000266076646464646607e646608000290001817991aba1357446ae88d55cf1baa001357426ae88d55cf1baa00148000c8d4ccd5cd19b8735573a6ea8005200012357426aae78dd500089191a999ab9a3370e6aae74dd5000a4000246ae84d55cf1baa001126001323303d00100437586ae84d55cf1baa0450013303a003001232333573466e2400520004a0944cc0bcc8dd59aba1357446aae78dd50009aba1357446aae78dd50008011981f005244107636861727465720037586ae84d5d11aab9e375408090002999ab9a003100214bd6f7b6302999ab9a00410031300b0062232330010010032253335573e002200226464646600200200644a666aae7c0044cd5d00018008992999ab9a3333008375c6aae74010dd69aab9e004375c6aae74004dd69aab9e0011335740008004266ae80004cc00c00cd5d10011aba100135742004660040046ae8800488cccc0c0008dd4800919ba548000cd5d0000a5eb805300103d87a80002232330010010032253335573e00229309919ab9b33004375c6aae74004dd69aab9e00133003003357440046ae840048c8c8c8c8c8c88cdcb19b96001491012d00002303f3337189000240186e500054ccd5cd199ab9a337126e3400920124a0944584cdc519b8a00148810140000023337189005240806ecc00cdd99ba8001375a6ae84d5d11aab9e37540046ae84d55cf1baa00123235333573466e1cd55ce9baa001480084800c54ccd5cd19b8735573a6ea80052004126123232323357406ea400ccd5d019ba548008cd5d000099aba00024bd7025eb80cc0c8c8cc0cc0052000302232357426ae88d5d11aab9e37540026ae84d5d11aab9e3754002900019191a999ab9a3370e6aae74dd5000a4000246ae84d55cf1baa001126001323302f001232333573466e2400520004a0944cc094c8dd59aba1357446aae78dd50009aba1357446aae78dd50008019bac357426ae88d55cf1baa03733033001489076368617274657200375c6ae8400c004d5d09aba200123235333573466e1cd55ce9baa001480104800c54ccd5cd19b8735573a6ea8005200212612323232323357406ea4010cd5d019ba548010cd5d000099aba00024bd7025eb80cc0c8c8cc0cc0052000302232357426ae88d5d11aab9e37540026ae84d5d11aab9e37540029000191a999ab9a3370e6aae74dd5000a4000246ae84d55cf1baa001126001323302e001232333573466e2400520004a0944cc090c8dd59aba1357446aae78dd50009aba1357446aae78dd50008019bac357426aae78dd501b19819000a45076368617274657200375c6ae8400c004d5d09aba2001223235333573466e1cd55ce9baa001480084800c54ccd5cd19b8735573a6ea80052004120031232323235333573466e1cd55ce9baa0014800848c02001c48c8c8cd5d01ba900633574066e95200233574000266ae800092f5c097ae033034323303500148000c090c8d5d09aba2357446aae78dd50009aba1357446aae78dd5000a40006ae84d55cf1baa001001323302e001232333573466e2400520004a0944cc090c8dd59aba1357446aae78dd50009aba1357446aae78dd50008019bac357426ae88d55cf1baa03633032001489076368617274657200375c6ae8400c004d5d09aba2001223232323235333573466e1cd55ce9baa0014800849848d5d09aab9e375400200264660580024a666ae68cdc3998111bab357426ae88d55cf1baa001004480084cdd79aba135573c6ea800400c5281bac357426ae88d5d11aab9e3754068600e0086605e6eb8d5d08018011b9900122223235333573466e1cd55ce9baa0014801048c8c94ccd5cd19199ab9a3371e00200e941289bae3301e00248903406964001615333573464666ae68cdcb8008032504a2646e64dd70009980f001244103747065001614a26e64014c064008498004c074c8d5d09aba2357446aae78dd500099802001801111912999ab9a3375e60360020042646a666ae68cdc39aab9d3754002900209192999ab9a3371e00c91010014a2266e3cdd71980e000a4503406964000063018002124a00026038646ae84d5d11aba235573c6ea8004d5d09aba235573c6ea800452818018011180b991a999ab9a3370e6aae74dd5000a4004246ae84d5d11aab9e37540022a666ae68cdc39aab9d37540029002091aba1357446aae78dd50008930009aba1357440024444664466ae80dd380299aba000433574000666ae80008cd5d01ba90014bd70199119191a999ab9a3370e6aae74dd5000a400424c24646464646a666ae68cdc39aab9d37540029000090008930009981700412999ab9a3375e646ae84d55cf1baa0013022001003132333573466e2400520004a0944cc090c8dd59aba1357446aae78dd50009aba1357446aae78dd50008010a5033033006373000a66e9520023357406ea40052f5c06eb8d5d09aab9e37540020026ae84d5d1003191b99375c0026ae84014dd61aba135573c6ea80bcdd71aba1004375c6ae8401088c8c8c8d4ccd5cd19b8735573a6ea80052004123302b301b32357426ae88d5d11aab9e375400264646600200200444a666aae7c004584c94ccd5cd2999ab9a3375e6ae84d55cf1baa001007132333573466e2400520004a0944cc080dd59aba1357446aae78dd50008040a501001133003003357440046ae84004dd61aba1357446ae88d55cf1baa03048000498004d5d09aba2003300300233029375c6ae8400522107636861727465720023235333573466e1cd55ce9baa0014800848c8cc0a00052000357426aae78dd50008a999ab9a3370e6aae74dd5000a400824646605000290001aba135573c6ea8004498004d5d09aba200122232323232335736a666ae694ccd5cd0008a5113335734008941288a4c2c00264666ae68cdc4800a4000941289980d191bab357426ae88d55cf1baa001357426ae88d55cf1baa0020013300e3237586ae84d55cf1baa0013005004375c6ae8401140ad4ccd5cd0008a5014a24446464646466ae6d4ccd5cd2999ab9a00114a22666ae6801128251149858004c8ccd5cd19b890014800128251330193237566ae84d5d11aab9e37540026ae84d5d11aab9e37540040026601a6016600a0086eb8d5d080228152999ab9a00114a029448888c8d4ccd5cd19b8735573a6ea80052002126123233235333573466e1cd55ce9baa0014800848c8c88cc00400c008c8dcc9bae001357426ae88d55cf1baa00237586ae84d55cf1baa0011260013301500148903747065002233330080070023374a900419aba037526e600192f5c066e9520003357406ea4dcc000a5eb80d5d09aab9e37540020026600a646eacd5d09aba23018001300400200122333302000237526e600048cdd2a400066ae800052f5c02980103d87a800023235333573466e1cd55ce9baa0014800049854ccd5cd19b8735573a6ea8005200212612323235333573466e1cd55ce9baa0014801049854ccd5cd19b8735573a6ea8005200812615333573466e1cd55ce9baa001480084800854ccd5cd19b8735573a6ea8005200a1200215333573466e1cd55ce9baa001480184800848008004c038004d5d09aba235573c6ea8004004d5d09aba2001232323232323232335736a666ae680045261633573664a666ae68004526163300b00700500835333573466e1cd55ce9baa0024800048c8cd5cd992999ab9a001149858c8c8cc004004cc07c008014894ccd55cf8008a511325333573464666ae680052825133223233001001330240030022253335573e00229444c94ccd5cd19199ab9a0014a0944cc88ccd5cd19b880020014a0944cc0a0014004cc0a00100045280998018019aba200235742002660400080026604000e00229404cc00c00cd5d10011aba10013301502c0013235333573466e1cd55ce9baa0014800049288930009919812000919b8f37666ae84d5d11aba235573c6ea8004dd999191aba1357446ae88d55cf1baa001357426ae88d55cf1baa001357426aae78dd50049bac357426ae88d5d11aab9e37540586eb8d5d09aab9e375400224c00466020006646e64dd70009aba1005357426ae88010c8dcc9bae001357420066eb8d5d09aba2357446ae88d5d10019aba1357446ae88d5d10011bac357420024646466ae6cd4ccd5cd2999999aba400114a229405280a5014a0246464646a666ae694cccccd5d20008a5114a029405280a501232498d55ce9baa00112498004d5d08009aab9e37540046aae74dd50008924c0020026014002646ae84d55cf1baa001357426ae88d5d11aba2001237586ae84d5d11aba2357446aae78dd5000911919191919ab9b53335734a666ae68ccd5cd000a504a229445280b0a4c0026a666ae68cdc39aab9d37540049000091919199ab9a3371200290002504a2660266602004e0020066eb8d5d09aab9e375400224646a666ae68cdc39aab9d3754002900009251124a0002646603c002464666ae68cdc4800a4000941289980a1bab357426ae88d55cf1baa00100437586ae84d5d11aba235573c6ea8098008cc08400cdcc0011aba135744006646e64dd70009aba1002223301e0013730646e64dd70009aba100223237326eb8004d5d09aba2357446aae78dd50009191b99375c0026ae84d5d11aba235573c6ea80048c8dcc9bae001357426aae78dd500091a999ab9a5333333574800229445280a5014a0294048c8c8d4ccd5cd2999999aba400114a029445280a5014a0246ae8400c498004d5d08009aab9e375400224c0024646464666602e00400240022c646600200200444a666aae7c004584c94ccd5cd1a999ab9a3370e6aae74dd5000a40042466ebcd5d09aab9e375400200c2494000440044cc00c00cd5d10011aab9d357420026eacd5d09aba2357446ae88d5d1180480e1aba135573c6ea800488c8cd5cda999ab9a333573466e24dc6800a4000941288a4c2c660346603200600290011b9800122323232330010010032253335573e0022c2646464a666ae68cdd780100308008998028029aba200435573c0046aae74004d5d08009ba90023756004446466604400244660160046eacd5d09aba235573c6ea80052f5bded8c064666010002464a666ae68cdc39aab9d37540029001099b8f00432375c6ae84d55cf1baa0013301700148008528191aba135573c6ea8004d5d09aab9e375400297ae037586ae84d5d11aba235573c6ea80088c8d5d09aab9e37540026ae84d5d11aab9e37540024646464a666ae68cdc38012400826ae8400458d55cf0011aab9d00137540024464646466600200244a666aae7c0045200015333573466ebcd55ce9aba10010041375a6aae78d5d08008998010011aba200100522253335573e002290000a999ab9a3375e6aae74d5d08008028998010011bab35573c6ae840044ccc00c00c008d5d10009aba1357446aae78dd50011aba135573c6ea80048d5d11aba2357446ae88d5d11aab9e375400244464666002002008006444a666aae7c00840104c94ccd5cd1801000899aba00013330040043574400600426660080086ae8800c008d5d080111191980080099802801801112999aab9f00114bd6f7b63009919192999aab9f0011002133574066ec000cdd30008011991191980080099805801801112999aab9f00114bd6f7b63009919192999ab9a3370e00290000801099aba0337600066ea0004008cdc01980800300119808002801198018019aba2002357420026600e00c0046600e00a004660060066ae88008d5d0800911919800800801912999aab9f00114bd6f7b6300a999ab9a3375e6aae74d5d080080189bab35573c6ae840044cc008008d5d100091191919191998008008010021112999aab9f001100213357406ae84004ccc00c00c008d5d10009998008008010019112999aab9f00114bd700992999ab9a3300800523375e00200426660080080066ae880084cd5d00009998020020019aba200235573a6ae84004c8cc00400400c894ccd55cf8008a5eb804cd5d01aab9d35742002660040046ae8800488c8ccc00400400c0088894ccd55cf8010a5015333573460026ae8400852889998018019aba2002001223233300100100300222253335573e004290000a999ab9a3375e6aae74d5d080100089bad35573c6ae840084ccc00c00cd5d100100091191919800800802112999aab9f0011615333573466ebcd55ce9aba1001003137566aae78d5d08008998010011aba200137520024646600200200444a666aae7c0045288a999ab9a3232330010010022253335573e002294454ccd5cd19b87375a6aae78d5d0800a40002660040046ae880045281bab35573c6ae840044cc008008d5d10008a50223232330010010042253335573e002294054ccd5cd19baf35573a6ae8400400c5288998010011aba200137520024464666002002006004444a666aae7c008530103d87a8000132533357346004002266e95200033574000297ae01333004004357440060046ae8400888c8ccc00400400c0088894ccd55cf8010a5115333573460026ae840084ccc00c00cd5d10010008a5022223233300100100500422253335573e004008264a666ae68cdd78011aab9d0011300635573c00226660080086ae8800c008d5d080111919800800801112999aab9f0011480004cdc0198010011aba200148008894ccd5cd19b8735573a6ea80080044008588dd59aba1357446ae88d5d11aba235573c6ea800488cdd2a400066ae80dd480119aba0375200297ae022323233574066ec0008dd319aba0337600026ea000d2f5bded8c097adef6c60357426ae88d55cf1baa003357426aae78dd500109919198008009bac357426aae78dd5001912999aab9f001161325333573466ebcd5d09aab9e375400200820022660060066ae88008d5d08009aba135573c6ea8008d5d08051aba135744012466600e00244646466e58010ccc0280088cdcb2999ab9a3371e00291010014910013372c6014002921010a0053333335748004292100133300c375600444646466601e0044a666666ae900085241001491001491001325333573466e3c01d2210013372c9201096c6f76656c61636520003372c601e0029201010a0013372c92010320202e003372ca666ae68c0340084dcc8010980800119b9649010120003372c601e0029201010a00375a004292010014910035573c0046aae74004014524010014910014910014910035573c0046aae74005240100232323300100148000894ccd5cd19b8700100314a2264a666ae68cdc4800a41fc0226600600666e00009200215333573466e1ccdc1800a408090060992999ab9a3371200200a26600e66e38018cdc0001a400444a666ae680084c94ccd5cd2999ab9a33712904001000899b89001483f87c5280998038038020a503370066e08cdc3002240809040008008a5014a066e00009200415333573466e1ccdc1800a4040900e0992999ab9a3371200200a26600e66e38018cdc0001a400444a666ae680084cc024cdc700419b8000548010894ccd5cd0010992999ab9a5333573466e25208020001133712002907f7f838a5013300900900614a066e00cdc119b86006480812080403370066e0800d20800100114a0294052819b800024801854ccd5cd19b8733706002900824078264a666ae68cdc480080289980399b8e006337000069001112999ab9a0021330093371c01066e000152004225333573400426601666e38028cdc0003a400c44a666ae680084c94ccd5cd2999ab9a3371290404004000899b89001483fbfffc045280998058058040a503370066e08cdc3004240209040401019b803370400a90402019b80337040069040008008a5014a0294052819b800024802052819b8e004001371a00244a666ae68cdc399b83002482000520041330014a266e180092080011330014a0900011b99325333573466e200092000133716902d19980080099b820024800522100133300100100248900222325333573466e2000d20141001133300400433706006900a00099b8b3370066e180092014481800048c8cc00400400888c94ccd5cd19b88480000044cdcb1b9932333573466e1cdc6800a400466e2d2060001001373064646e654ccd5cd19b88002480004cdc5a40b466600200266e08009200148810013330010010024890022232325333573466e2001120201001133300500533706008901000099b8b333573466e20005201433700002903019b80001482b804008cdc30012404066e3800920003300300333371890010008010a4900371a002444a666666ae9000c0040040040044c008dd7001911191998008008020011112999aab9f00210011333003003357440046600a0026ae84008d55ce9baa00535573c0026ea8005", "unoptimized": "", "optimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __common6 = __core__unConstrData(__CONTEXT);
    __common7 = __core__sndPair(__common6);
    __common5 = __core__fstPair(__core__unConstrData(__DATUM));
    __helios__common__fold = (self_3, fn, z) -> {
        recurse_1 = (recurse, self_4, z_1) -> {
            __core__chooseList(self_4, () -> {
                z_1
            }, () -> {
                recurse(recurse, __core__tailList__safe(self_4), fn(z_1, __core__headList__safe(self_4)))
            })()
        };
        recurse_1(recurse_1, self_3, z)
    };
    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {
        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {
            callback_ok(__core__unBData__safe(data))
        })()
    };
    __helios__bytearray__show = (self_7) -> {
        recurse_5 = (recurse_4, self_8) -> {
            n = __core__lengthOfByteString(self_8);
            __core__ifThenElse(
                __core__lessThanInteger(0, n),
                () -> {
                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_5 = __core__indexByteString__safe(self_8, 0);
                    recurse_3 = (recurse_2, self_6, bytes) -> {
                        digit = __core__modInteger(self_6, 16);
                        bytes_1 = __core__consByteString(__core__ifThenElse(
                            __core__lessThanInteger(digit, 10),
                            __core__addInteger(digit, 48),
                            __core__addInteger(digit, 87)
                        ), bytes);
                        __core__ifThenElse(
                            __core__lessThanInteger(self_6, 16),
                            () -> {
                                bytes_1
                            },
                            () -> {
                                recurse_2(recurse_2, __core__divideInteger(self_6, 16), bytes_1)
                            }
                        )()
                    };
                    __core__decodeUtf8__safe(__core__ifThenElse(
                        __core__lessThanInteger(self_5, 0),
                        () -> {
                            __core__consByteString(45, recurse_3(recurse_3, __core__multiplyInteger(self_5, -1), #))
                        },
                        () -> {
                            recurse_3(recurse_3, self_5, #)
                        }
                    )()));
                    __core__ifThenElse(
                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                        __core__consByteString(48, hex_bytes),
                        hex_bytes
                    )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_8)))
                },
                () -> {
                    ""
                }
            )()
        };
        recurse_5(recurse_5, self_7)
    };
    __helios__int__show = (self_9) -> {
        __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {
            bytes_3 = __core__consByteString(__core__addInteger(__core__modInteger(i, 10), 48), bytes_2);
            __core__ifThenElse(
                __core__lessThanInteger(i, 10),
                () -> {
                    bytes_3
                },
                () -> {
                    recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)
                }
            )()
        };
        __core__ifThenElse(
            __core__lessThanInteger(self_9, 0),
            () -> {
                __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_9, -1), #))
            },
            () -> {
                recurse_7(recurse_7, self_9, #)
            }
        )())
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes_5) -> {
        n_2 = __core__lengthOfByteString(bytes_5);
        recurse_11 = (recurse_10, i_1) -> {
            __core__ifThenElse(
                __core__equalsInteger(i_1, n_2),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes_5, i_1);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse_10(recurse_10, __core__addInteger(i_1, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i_1, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n_2),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __core__ifThenElse(
                                                                __core__lessThanEqualsInteger(128, c_2),
                                                                () -> {
                                                                    __core__lessThanEqualsInteger(c_2, 2047)
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )(),
                                                            () -> {
                                                                recurse_10(recurse_10, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i_1, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n_2),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __core__ifThenElse(
                                                                                    __core__lessThanEqualsInteger(2048, c_1),
                                                                                    () -> {
                                                                                        __core__lessThanEqualsInteger(c_1, 65535)
                                                                                    },
                                                                                    () -> {
                                                                                        false
                                                                                    }
                                                                                )(),
                                                                                () -> {
                                                                                    recurse_10(recurse_10, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i_1, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n_2),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __core__ifThenElse(
                                                                                                        __core__lessThanEqualsInteger(65536, c),
                                                                                                        () -> {
                                                                                                            __core__lessThanEqualsInteger(c, 2097151)
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )(),
                                                                                                    () -> {
                                                                                                        recurse_10(recurse_10, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_11(recurse_11, 0)
    };
    __helios__value__show = (self_15) -> {
        __helios__common__fold(self_15, (prev, pair) -> {
            mph_data = __core__fstPair(pair);
            tokens_data = __core__sndPair(pair);
            __core__appendString(prev, __helios__common__unBData__safe(mph_data, (mph) -> {
                __core__appendString(__core__ifThenElse(
                    __core__equalsByteString(mph, #),
                    () -> {
                        ""
                    },
                    () -> {
                        __core__appendString(__helios__bytearray__show(mph), "
")
                    }
                )(), __core__chooseData(tokens_data, () -> {
                    ""
                }, () -> {
                    __helios__common__fold(__core__unMapData__safe(tokens_data), (prev_1, pair_1) -> {
                        token_name_data = __core__fstPair(pair_1);
                        qty_data = __core__sndPair(pair_1);
                        __helios__common__unBData__safe(token_name_data, (token_name) -> {
                            __core__chooseData(qty_data, () -> {
                                ""
                            }, () -> {
                                ""
                            }, () -> {
                                ""
                            }, () -> {
                                qty = __core__unIData__safe(qty_data);
                                __core__ifThenElse(
                                    __core__equalsByteString(mph, #),
                                    () -> {
                                        __core__appendString("lovelace ", __core__appendString(__helios__int__show(qty), "
"))
                                    },
                                    () -> {
                                        __core__appendString("  .", __core__appendString(__core__ifThenElse(
                                            __helios__string__is_valid_utf8(token_name),
                                            () -> {
                                                __core__decodeUtf8__safe(token_name)
                                            },
                                            () -> {
                                                __helios__bytearray__show(token_name)
                                            }
                                        )(), __core__appendString(" ", __core__appendString(__helios__int__show(qty), "
"))))
                                    }
                                )()
                            }, () -> {
                                ""
                            })()
                        }, () -> {
                            ""
                        })
                    }, prev)
                }, () -> {
                    ""
                }, () -> {
                    ""
                }, () -> {
                    ""
                })())
            }, () -> {
                ""
            }))
        }, "")
    };
    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common7));
    __helios__scriptcontext__tx = __core__headList(__common7);
    __helios__scriptcontext__get_current_input = () -> {
        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));
        recurse_13 = (recurse_12, lst) -> {
            __core__chooseList(lst, () -> {
                error()
            }, () -> {
                item = __core__headList__safe(lst);
                __core__ifThenElse(
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item))), id),
                    () -> {
                        item
                    },
                    () -> {
                        recurse_12(recurse_12, __core__tailList__safe(lst))
                    }
                )()
            })()
        };
        recurse_13(recurse_13, __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))
    };
    __helios__value__new = (assetClass, i_2) -> {
        mph_1 = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));
        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));
        __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i_2)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
    };
    __helios__assetclass__new = (mph_2, token_name_1) -> {
        __core__constrData(0, __core__mkCons(__core__bData(mph_2), __core__mkCons(__core__bData(token_name_1), __core__mkNilData(()))))
    };
    __helios__tx__minted = (self_29) -> {
        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))))))
    };
    __helios__common__assert_constr_index = (data_3, i_3) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_3)), i_3),
            () -> {
                data_3
            },
            () -> {
                error()
            }
        )()
    };
    __helios__common__length = (lst_3) -> {
        recurse_19 = (recurse_18, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_19(recurse_19, lst_3)
    };
    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {
        recurse_21 = (recurse_20, self_39, key_2) -> {
            __core__chooseList(self_39, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_39);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_38, key_1)
    };
    __helios__common__all = (self_40, fn_1) -> {
        recurse_23 = (recurse_22, self_41, fn_2) -> {
            __core__chooseList(self_41, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_41)),
                    () -> {
                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_23(recurse_23, self_40, fn_1)
    };
    __helios__common__find_safe = (self_44, fn_3) -> {
        recurse_25 = (recurse_24, self_45, fn_4) -> {
            __core__chooseList(self_45, () -> {
                __core__constrData(1, __core__mkNilData(()))
            }, () -> {
                head_2 = __core__headList__safe(self_45);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__constrData(0, __core__mkCons(head_2, __core__mkNilData(())))
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(self_45), fn_4)
                    }
                )()
            })()
        };
        recurse_25(recurse_25, self_44, fn_3)
    };
    __helios__value__contains_policy = (self_46, mph_5) -> {
        mph_6 = __core__bData(mph_5);
        recurse_27 = (recurse_26, map_3) -> {
            __core__chooseList(map_3, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mph_6),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_26(recurse_26, __core__tailList__safe(map_3))
                    }
                )()
            })()
        };
        recurse_27(recurse_27, self_46)
    };
    __helios__value__is_zero = (self_47) -> {
        recurse_31 = (recurse_30, map_4) -> {
            __core__chooseList(map_4, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_4)));
                    recurse_29 = (recurse_28, tokens_2) -> {
                        __core__chooseList(tokens_2, () -> {
                            true
                        }, () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),
                                () -> {
                                    recurse_28(recurse_28, __core__tailList__safe(tokens_2))
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    };
                    recurse_29(recurse_29, tokens_1),
                    () -> {
                        recurse_30(recurse_30, __core__tailList__safe(map_4))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_31(recurse_31, self_47)
    };
    __helios__value__get_policy = (self_48, mph_7) -> {
        mph_8 = __core__bData(mph_7);
        recurse_33 = (recurse_32, map_5) -> {
            __core__chooseList(map_5, () -> {
                error()
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_5)), mph_8),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_5)))
                    },
                    () -> {
                        recurse_32(recurse_32, __core__tailList__safe(map_5))
                    }
                )()
            })()
        };
        recurse_33(recurse_33, self_48)
    };
    __helios__value__get_inner_map_int = (map_6, key_3) -> {
        recurse_35 = (recurse_34, map_7, key_4) -> {
            __core__chooseList(map_7, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), key_4),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_7)))
                    },
                    () -> {
                        recurse_34(recurse_34, __core__tailList__safe(map_7), key_4)
                    }
                )()
            })()
        };
        recurse_35(recurse_35, map_6, key_3)
    };
    __helios__common__any = (self_49, fn_5) -> {
        recurse_39 = (recurse_38, self_50, fn_6) -> {
            __core__chooseList(self_50, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_6(__core__headList__safe(self_50)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_38(recurse_38, __core__tailList__safe(self_50), fn_6)
                    }
                )()
            })()
        };
        recurse_39(recurse_39, self_49, fn_5)
    };
    __helios__value__merge_map_keys = (a_5, b_5) -> {
        (aKeys) -> {
            recurse_43 = (recurse_42, keys, map_10) -> {
                __core__chooseList(map_10, () -> {
                    __core__mkNilData(())
                }, () -> {
                    key_6 = __core__fstPair(__core__headList__safe(map_10));
                    __core__ifThenElse(
                        __helios__common__any(aKeys, (item_4) -> {
                            __core__equalsData(item_4, key_6)
                        }),
                        () -> {
                            recurse_42(recurse_42, keys, __core__tailList__safe(map_10))
                        },
                        () -> {
                            __core__mkCons(key_6, recurse_42(recurse_42, keys, __core__tailList__safe(map_10)))
                        }
                    )()
                })()
            };
            b_4 = recurse_43(recurse_43, aKeys, b_5);
            recurse_41 = (recurse_40, lst_6, rem) -> {
                __core__chooseList(rem, () -> {
                    lst_6
                }, () -> {
                    __core__mkCons(__core__headList__safe(rem), recurse_40(recurse_40, lst_6, __core__tailList__safe(rem)))
                })()
            };
            recurse_41(recurse_41, b_4, aKeys)
        }(recurse_37 = (recurse_36, map_9) -> {
            __core__chooseList(map_9, () -> {
                __core__mkNilData(())
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_9)), recurse_36(recurse_36, __core__tailList__safe(map_9)))
            })()
        };
        recurse_37(recurse_37, a_5))
    };
    __helios__value__get_inner_map = (map_11, mph_9) -> {
        recurse_47 = (recurse_46, map_12) -> {
            __core__chooseList(map_12, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_12)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_12)))
                    },
                    () -> {
                        recurse_46(recurse_46, __core__tailList__safe(map_12))
                    }
                )()
            })()
        };
        recurse_47(recurse_47, map_11)
    };
    __helios__value____add = (a_8, b_8) -> {
        recurse_49 = (recurse_48, keys_2) -> {
            __core__chooseList(keys_2, () -> {
                __core__mkNilPairData(())
            }, () -> {
                key_8 = __core__headList__safe(keys_2);
                tail_1 = recurse_48(recurse_48, __core__tailList__safe(keys_2));
                item_5 = (a_6, b_6) -> {
                    recurse_45 = (recurse_44, keys_1) -> {
                        __core__chooseList(keys_1, () -> {
                            __core__mkNilPairData(())
                        }, () -> {
                            key_7 = __core__headList__safe(keys_1);
                            tail = recurse_44(recurse_44, __core__tailList__safe(keys_1));
                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_6, key_7), __helios__value__get_inner_map_int(b_6, key_7));
                            __core__ifThenElse(
                                __core__equalsInteger(sum, 0),
                                () -> {
                                    tail
                                },
                                () -> {
                                    __core__mkCons(__core__mkPairData(key_7, __core__iData(sum)), tail)
                                }
                            )()
                        })()
                    };
                    recurse_45(recurse_45, __helios__value__merge_map_keys(a_6, b_6))
                }(__helios__value__get_inner_map(a_8, key_8), __helios__value__get_inner_map(b_8, key_8));
                __core__chooseList(item_5, () -> {
                    tail_1
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_8, __core__mapData(item_5)), tail_1)
                })()
            })()
        };
        recurse_49(recurse_49, __helios__value__merge_map_keys(a_8, b_8))
    };
    __helios__common__filter = (self_52, fn_8, nil) -> {
        recurse_57 = (recurse_56, self_53, fn_9) -> {
            __core__chooseList(self_53, () -> {
                nil
            }, () -> {
                head_5 = __core__headList__safe(self_53);
                __core__ifThenElse(
                    fn_9(head_5),
                    () -> {
                        __core__mkCons(head_5, recurse_56(recurse_56, __core__tailList__safe(self_53), fn_9))
                    },
                    () -> {
                        recurse_56(recurse_56, __core__tailList__safe(self_53), fn_9)
                    }
                )()
            })()
        };
        recurse_57(recurse_57, self_52, fn_8)
    };
    __helios__common__enum_fields_after_4 = (self_59) -> {
        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_59)))))))
    };
    __helios__value__get_safe = (self_66, assetClass_2) -> {
        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_2)));
        tokenName_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_2))));
        outer_3 = (outer_2, inner_3, map_13) -> {
            __core__chooseList(map_13, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), mintingPolicyHash),
                    () -> {
                        inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_13))))
                    },
                    () -> {
                        outer_2(outer_2, inner_3, __core__tailList__safe(map_13))
                    }
                )()
            })()
        };
        outer_3(outer_3, (inner_4, map_14) -> {
            __core__chooseList(map_14, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_14)), tokenName_2),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_14)))
                    },
                    () -> {
                        inner_4(inner_4, __core__tailList__safe(map_14))
                    }
                )()
            })()
        }, self_66)
    };
    __helios__txoutputdatum__inline = (self_69) -> {
        pair_5 = __core__unConstrData(self_69);
        index_1 = __core__fstPair(pair_5);
        fields_4 = __core__sndPair(pair_5);
        __core__ifThenElse(
            __core__equalsInteger(index_1, 2),
            () -> {
                __core__headList(fields_4)
            },
            () -> {
                error()
            }
        )()
    };
    __helios__txinput__address = (self_76) -> {
        self_21 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_76))));
        __core__headList(__core__sndPair(__core__unConstrData(self_21)))
    };
    __helios__tx__value_locked_by = (self_86, vh_1) -> {
        (outputs) -> {
            __helios__common__fold(outputs, (prev_3, txOutput) -> {
                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))
            }, __core__mkNilPairData(()))
        }(self_80 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_86))))));
        __helios__common__filter(self_80, (output) -> {
            (credential) -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),
                    () -> {
                        __core__equalsByteString(vh_1, self_83 = __helios__common__assert_constr_index(credential, 1);
                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_83)))))
                    },
                    () -> {
                        false
                    }
                )()
            }(self_21 = __core__headList(__core__sndPair(__core__unConstrData(output)));
            __core__headList(__core__sndPair(__core__unConstrData(self_21))))
        }, __core__mkNilData(())))
    };
    __helios__common__mStruct_field = (self_98, name_1) -> {
        map_15 = __core__unMapData(self_98);
        name_data = __core__bData(name_1);
        recurse_63 = (recurse_62, map_16) -> {
            __core__chooseList(map_16, () -> {
                error()
            }, () -> {
                head_6 = __core__headList__safe(map_16);
                key_11 = __core__fstPair(head_6);
                value_3 = __core__sndPair(head_6);
                __core__ifThenElse(
                    __core__equalsData(key_11, name_data),
                    () -> {
                        value_3
                    },
                    () -> {
                        recurse_62(recurse_62, __core__tailList__safe(map_16))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, map_15)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, tn) -> {
        tnBytes_1 = __core__encodeUtf8(tn);
        __core__chooseUnit(__core__ifThenElse(
            __core__ifThenElse(
                __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),
                false,
                true
            ),
            () -> {
                ()
            },
            () -> {
                error()
            }
        )(), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), 1))
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __core__headList(__core__sndPair(__core__unConstrData(txInput)));
        redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));
        (spendsExpectedInput) -> {
            __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {
                x_4
            }, () -> {
                error()
            })
        }(recurse_71 = (recurse_70, map_22) -> {
            __core__chooseList(map_22, () -> {
                error()
            }, () -> {
                item_7 = __core__fstPair(__core__headList__safe(map_22));
                __core__ifThenElse(
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(item_7)), 1),
                        () -> {
                            (sp) -> {
                                __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)
                            }
                        },
                        () -> {
                            (__1) -> {
                                false
                            }
                        }
                    )()(item_7),
                    () -> {
                        item_7
                    },
                    () -> {
                        recurse_70(recurse_70, __core__tailList__safe(map_22))
                    }
                )()
            })()
        };
        recurse_71(recurse_71, redeemers))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {
        __core__ifThenElse(
            __core__chooseData(value_5, () -> {
                true
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            })(),
            () -> {
                (__lhs_0) -> {
                    fields_7 = __core__sndPair(__core__unConstrData(__lhs_0));
                    __cond_2 = __core__headList(fields_7);
                    __core__ifThenElse(
                        __core__chooseData(__cond_2, () -> {
                            false
                        }, () -> {
                            true
                        }, () -> {
                            false
                        }, () -> {
                            false
                        }, () -> {
                            false
                        })(),
                        () -> {
                            (__lhs_0_1) -> {
                                __core__headList(fields_7)
                            }
                        },
                        () -> {
                            (__3) -> {
                                error()
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    error()
                }
            }
        )()(value_5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_110) -> {
        d = __core__headList(__core__sndPair(__core__unConstrData(self_110)));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_116) -> {
        d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_116)))));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_119) -> {
        d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_119)))));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_131, mph_12) -> {
        __helios__assetclass__new(mph_12, __core__encodeUtf8(d = __core__headList(self_131);
        __core__decodeUtf8(__core__unBData(d))))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_138, mph_15) -> {
        (uut) -> {
            validatorHash = __core__headList(__core__tailList(self_138));
            ac_1 = __helios__assetclass__new(mph_15, __core__encodeUtf8(uut));
            hasDelegate = __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),
                () -> {
                    (__lhs_0_15) -> {
                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_15))));
                        a_3 = __helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx, vh_3), ac_1);
                        __core__ifThenElse(
                            __core__lessThanEqualsInteger(a_3, 0),
                            false,
                            true
                        )
                    }
                },
                () -> {
                    (__lhs_0_12) -> {
                        (__cond_10) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_10)), 0),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10)
                        }(self_137 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                        __helios__common__find_safe(self_137, (o) -> {
                            a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);
                            __core__ifThenElse(
                                __core__lessThanEqualsInteger(a_3, 0),
                                false,
                                true
                            )
                        }))
                    }
                }
            )()(validatorHash);
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    __core__ifThenElse(
                        hasDelegate,
                        false,
                        true
                    ),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )(),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), hasDelegate)
        }(d = __core__headList(self_138);
        __core__decodeUtf8(__core__unBData(d)))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_156) -> {
        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_156)))))))
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (self_172) -> {
        (i_8) -> {
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
            __core__chooseUnit(__core__ifThenElse(
                __core__chooseData(inputData, () -> {
                    true
                }, () -> {
                    false
                }, () -> {
                    false
                }, () -> {
                    false
                }, () -> {
                    false
                })(),
                () -> {
                    (__lhs_0_25) -> {
                        index_9 = __core__fstPair(__core__unConstrData(__lhs_0_25));
                        fields_70 = __core__sndPair(__core__unConstrData(__lhs_0_25));
                        __cond_16 = __core__headList(fields_70);
                        __core__ifThenElse(
                            __core__chooseData(__cond_16, () -> {
                                true
                            }, () -> {
                                false
                            }, () -> {
                                false
                            }, () -> {
                                false
                            }, () -> {
                                false
                            })(),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __core__fstPair(__core__unConstrData(__lhs_0_26));
                                    ()
                                }
                            },
                            () -> {
                                (__17) -> {
                                    ()
                                }
                            }
                        )()(__cond_16)
                    }
                },
                () -> {
                    (__16) -> {
                        ()
                    }
                }
            )()(inputData), inputData)
        }(self_21 = __core__headList(__core__tailList(__core__tailList(__core__tailList(self_172))));
        __core__headList(__core__sndPair(__core__unConstrData(self_21))))
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_181) -> {
        link_1 = __core__unListData(__core__headList(self_181));
        input_1 = __core__headList(__core__tailList(__core__tailList(__core__tailList(self_181))));
        mph_19 = __core__unBData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_181))))));
        (uut_1) -> {
            validatorHash_1 = __core__headList(__core__tailList(link_1));
            targetValue = __module__StellarHeliosHelpers__mkTv(mph_19, d = __core__headList(link_1);
            __core__decodeUtf8(__core__unBData(d)));
            returnedUnchanged = __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash_1)), 0),
                () -> {
                    (__lhs_0_44) -> {
                        vh_4 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_44))));
                        __core__chooseUnit((assertionOk) -> {
                            __core__ifThenElse(
                                assertionOk,
                                () -> {
                                    ()
                                },
                                () -> {
                                    error()
                                }
                            )()
                        }(a_12 = __helios__tx__value_locked_by(__helios__scriptcontext__tx, vh_4);
                        recurse_61 = (recurse_60, keys_4) -> {
                            __core__chooseList(keys_4, () -> {
                                true
                            }, () -> {
                                key_10 = __core__headList__safe(keys_4);
                                __core__ifThenElse(
                                    b = (a_10, b_10) -> {
                                        recurse_59 = (recurse_58, keys_3) -> {
                                            __core__chooseList(keys_3, () -> {
                                                true
                                            }, () -> {
                                                key_9 = __core__headList__safe(keys_3);
                                                __core__ifThenElse(
                                                    b = (a_qty, b_qty) -> {
                                                        __core__ifThenElse(
                                                            __core__lessThanInteger(a_qty, b_qty),
                                                            false,
                                                            true
                                                        )
                                                    }(__helios__value__get_inner_map_int(a_10, key_9), __helios__value__get_inner_map_int(b_10, key_9));
                                                    __core__ifThenElse(
                                                        b,
                                                        false,
                                                        true
                                                    ),
                                                    () -> {
                                                        false
                                                    },
                                                    () -> {
                                                        recurse_58(recurse_58, __core__tailList__safe(keys_3))
                                                    }
                                                )()
                                            })()
                                        };
                                        recurse_59(recurse_59, __helios__value__merge_map_keys(a_10, b_10))
                                    }(__helios__value__get_inner_map(a_12, key_10), __helios__value__get_inner_map(targetValue, key_10));
                                    __core__ifThenElse(
                                        b,
                                        false,
                                        true
                                    ),
                                    () -> {
                                        false
                                    },
                                    () -> {
                                        recurse_60(recurse_60, __core__tailList__safe(keys_4))
                                    }
                                )()
                            })()
                        };
                        recurse_61(recurse_61, __helios__value__merge_map_keys(a_12, targetValue))), (__cond_27) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_27)), 0),
                                () -> {
                                    (__lhs_0_46) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_45) -> {
                                        error()
                                    }
                                }
                            )()(__cond_27)
                        }(self_137 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                        __helios__common__find_safe(self_137, (o_1) -> {
                            __core__equalsByteString(__core__serialiseData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(o_1)))))), __core__serialiseData(self_71 = __core__headList(__core__sndPair(__core__unConstrData(input_1)));
                            self_70 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_71))));
                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70)))))))
                        })))
                    }
                },
                () -> {
                    (__lhs_0_43) -> {
                        error()
                    }
                }
            )()(validatorHash_1);
            __core__chooseUnit(__core__ifThenElse(
                returnedUnchanged,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1, mph_19);
            __core__ifThenElse(
                cond,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), self_181))
        }(d = __core__headList(link_1);
        __core__decodeUtf8(__core__unBData(d)))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_185) -> {
        __cond_28 = __core__headList(__core__tailList(self_185));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 0),
            () -> {
                (__lhs_0_56) -> {
                    error()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 1),
                    () -> {
                        (__lhs_0_55) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_48) -> {
                            utxo_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_48))));
                            activity = __module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2);
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 2),
                                () -> {
                                    (__lhs_0_54) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 4),
                                        () -> {
                                            (__lhs_0_53) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 1),
                                                () -> {
                                                    (__lhs_0_52) -> {
                                                        activity
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 5),
                                                        () -> {
                                                            (__lhs_0_51) -> {
                                                                activity
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 3),
                                                                () -> {
                                                                    (__lhs_0_50) -> {
                                                                        activity
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_49) -> {
                                                                        activity
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()(activity)
                        }
                    }
                )()
            }
        )()(__cond_28)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_186, key_14) -> {
        __helios__common__map_get(self_186, __core__bData(__core__encodeUtf8(key_14)), (x_5) -> {
            __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))
        }, () -> {
            __core__constrData(1, __core__mkNilData(()))
        })
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput, self_195, typeName) -> {
        __cond_31 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(self_159 = __module__CapoHelpers__CapoCtx[]__getCharterData_4(self_195);
        __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(self_159)))), typeName);
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_31)), 1),
            () -> {
                (__lhs_0_61) -> {
                    error()
                }
            },
            () -> {
                (__lhs_0_59) -> {
                    entry = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_59)));
                    __cond_32 = __helios__common__mStruct_field(entry, #747065);
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_32)), 1),
                        () -> {
                            (__lhs_0_60) -> {
                                policyLink = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_60))));
                                (idPrefix_2) -> {
                                    (callback_8) -> {
                                        callback_8(policyLink, idPrefix_2)
                                    }
                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_60))));
                                __core__decodeUtf8(__core__unBData(d)))
                            }
                        },
                        () -> {
                            (__27) -> {
                                error()
                            }
                        }
                    )()(__cond_32)((dgtLink, idPrefix_1) -> {
                        __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_195, dgtLink, __core__constrData(4, __core__mkCons(__core__bData(__core__encodeUtf8(typeName)), __core__mkNilData(()))), __core__constrData(0, __core__mkCons(__core__bData(__core__encodeUtf8(idPrefix_1)), __core__mkNilData(()))))
                    })
                }
            }
        )()(__cond_31)
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5, self_196, __useopt__required_5) -> {
        required_11 = __core__ifThenElse(
            __useopt__required_5,
            () -> {
                false
            },
            () -> {
                true
            }
        )();
        input_2 = __helios__scriptcontext__get_current_input();
        acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_196)), __core__unBData(__core__headList(self_196)));
        (isUsingMintDgt) -> {
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    isUsingMintDgt,
                    () -> {
                        true
                    },
                    () -> {
                        __core__ifThenElse(
                            required_11,
                            false,
                            true
                        )
                    }
                )(),
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), isUsingMintDgt)
        }(a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_2))));
        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), acMintDgt);
        __core__ifThenElse(
            __core__lessThanEqualsInteger(a_3, 0),
            false,
            true
        ))
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6, self_197, __useopt__required_6) -> {
        required_13 = __core__ifThenElse(
            __useopt__required_6,
            () -> {
                false
            },
            () -> {
                true
            }
        )();
        input_3 = __helios__scriptcontext__get_current_input();
        acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(self_153 = __module__CapoHelpers__CapoCtx[]__getCharterData_6(self_197);
        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_153)))), __core__unBData(__core__headList(self_197)));
        (isUsingSpendDgt) -> {
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    isUsingSpendDgt,
                    () -> {
                        true
                    },
                    () -> {
                        __core__ifThenElse(
                            required_13,
                            false,
                            true
                        )
                    }
                )(),
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), isUsingSpendDgt)
        }(a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_3))));
        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), acSpendDgt);
        __core__ifThenElse(
            __core__lessThanEqualsInteger(a_3, 0),
            false,
            true
        ))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_198) -> {
        __cond_33 = __core__headList(__core__tailList(self_198));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 1),
            () -> {
                (self_161) -> {
                    data_137 = __core__headList(__core__sndPair(__core__unConstrData(self_161)));
                    __helios__common__assert_constr_index(data_137, 0)
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 2),
                    () -> {
                        (self_163) -> {
                            data_137 = __core__headList(__core__sndPair(__core__unConstrData(self_163)));
                            __helios__common__assert_constr_index(data_137, 0)
                        }
                    },
                    () -> {
                        (__28) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_33)
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__address, self_199) -> {
        charterAc_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_199)), #63686172746572);
        capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_199);
        __cond_34 = __core__headList(__core__tailList(self_199));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_34)), 2),
            () -> {
                (__lhs_0_64) -> {
                    __helios__common__assert_constr_index(__helios__txoutputdatum__inline((self_70) -> {
                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70)))))
                    }(self_100 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                    recurse_67 = (recurse_66, lst_12) -> {
                        __core__chooseList(lst_12, () -> {
                            error()
                        }, () -> {
                            item_6 = __core__headList__safe(lst_12);
                            __core__ifThenElse(
                                __core__ifThenElse(
                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item_6))), capoAddr),
                                    () -> {
                                        a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(item_6))))), charterAc_2);
                                        __core__ifThenElse(
                                            __core__lessThanEqualsInteger(a_3, 0),
                                            false,
                                            true
                                        )
                                    },
                                    () -> {
                                        false
                                    }
                                )(),
                                () -> {
                                    item_6
                                },
                                () -> {
                                    recurse_66(recurse_66, __core__tailList__safe(lst_12))
                                }
                            )()
                        })()
                    };
                    recurse_67(recurse_67, self_100))), 0)
                }
            },
            () -> {
                (__29) -> {
                    error()
                }
            }
        )()(__cond_34)
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_201, dgtLink_1, role_1, idPrefix_3) -> {
        (input, mph_18) -> {
            __core__mkCons(__core__listData(dgtLink_1), __core__mkCons(role_1, __core__mkCons(idPrefix_3, __core__mkCons(input, __core__mkCons(__core__bData(mph_18), __core__mkNilData(()))))))
        }((inputs_1, mph_14) -> {
            (uutName) -> {
                __cond_6 = __core__headList(__core__tailList(dgtLink_1));
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_6)), 1),
                    () -> {
                        (__lhs_0_8) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_6) -> {
                            vh_2 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_6))));
                            needsAddrWithCred = __core__constrData(1, __core__mkCons(__core__bData(vh_2), __core__mkNilData(())));
                            ac = __helios__assetclass__new(mph_14, __core__encodeUtf8(uutName));
                            __cond_7 = __helios__common__find_safe(inputs_1, (i_7) -> {
                                __core__ifThenElse(
                                    __core__equalsData(self_21 = __helios__txinput__address(i_7);
                                    __core__headList(__core__sndPair(__core__unConstrData(self_21))), needsAddrWithCred),
                                    () -> {
                                        a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_7))));
                                        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), ac);
                                        __core__ifThenElse(
                                            __core__lessThanEqualsInteger(a_3, 0),
                                            false,
                                            true
                                        )
                                    },
                                    () -> {
                                        false
                                    }
                                )()
                            });
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_7)), 0),
                                () -> {
                                    (foundGood) -> {
                                        foundGood
                                    }
                                },
                                () -> {
                                    (__lhs_0_7) -> {
                                        error()
                                    }
                                }
                            )()(__cond_7)
                        }
                    }
                )()(__cond_6)
            }(d = __core__headList(dgtLink_1);
            __core__decodeUtf8(__core__unBData(d)))
        }(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), __core__unBData(__core__headList(self_201))), __core__unBData(__core__headList(self_201)))
    };
    __module__CapoHelpers__CapoCtx[]__address_1 = (self_202) -> {
        __helios__txinput__address(__cond_35 = __core__headList(__core__tailList(self_202));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 1),
            () -> {
                (self_18) -> {
                    __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 2),
                    () -> {
                        (self_18) -> {
                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))
                        }
                    },
                    () -> {
                        (__30) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_35))
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_205, id_1) -> {
        capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_1(self_205);
        (txin_4) -> {
            __core__ifThenElse(
                __core__equalsData(__helios__txinput__address(txin_4), capoAddr_1),
                () -> {
                    data_159 = __helios__txoutputdatum__inline(self_70 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_4))));
                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70))))));
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_159)), 2),
                        () -> {
                            (__lhs_0_71) -> {
                                x_7 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_159);
                                __core__ifThenElse(
                                    __core__equalsByteString(id_1, #),
                                    () -> {
                                        true
                                    },
                                    () -> {
                                        __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_7, #406964)), id_1)
                                    }
                                )()
                            }
                        },
                        () -> {
                            (__31) -> {
                                false
                            }
                        }
                    )()(data_159)
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput, self_206, newDataId, dataTypePurpose) -> {
        dgData = __helios__txoutputdatum__inline(self_70 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_206, newDataId);
        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70))))));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(dgData)), 2),
            () -> {
                (__lhs_0_72) -> {
                    data_160 = __module__StellarHeliosHelpers__fromCip68Wrapper(dgData);
                    recIdStr_2 = __core__decodeUtf8(newDataId);
                    __core__ifThenElse(
                        self = __core__unBData(__helios__common__mStruct_field(data_160, #406964));
                        __core__ifThenElse(
                            __core__equalsByteString(self, newDataId),
                            false,
                            true
                        ),
                        () -> {
                            error()
                        },
                        () -> {
                            __core__ifThenElse(
                                (self_32) -> {
                                    __core__ifThenElse(
                                        __core__equalsString(self_32, dataTypePurpose),
                                        false,
                                        true
                                    )
                                }(d = __helios__common__mStruct_field(data_160, #747065);
                                __core__decodeUtf8(__core__unBData(d))),
                                () -> {
                                    error()
                                },
                                () -> {
                                    true
                                }
                            )()
                        }
                    )()
                }
            },
            () -> {
                (__32) -> {
                    error()
                }
            }
        )()(dgData)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1 = (self_207, recId_5) -> {
        recIdStr_3 = __core__decodeUtf8(recId_5);
        ac_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_207)), recId_5);
        capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_1(self_207);
        (__cond_40) -> {
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_40)), 1),
                () -> {
                    (__lhs_0_74) -> {
                        error()
                    }
                },
                () -> {
                    (__lhs_0_73) -> {
                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_73)))
                    }
                }
            )()(__cond_40)
        }(self_137 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
        __helios__common__find_safe(self_137, (txout) -> {
            __core__ifThenElse(
                __core__equalsInteger(__helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txout))))), ac_2), 1),
                () -> {
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txout))), capoAddr_2)
                },
                () -> {
                    false
                }
            )()
        }))
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput, self_208) -> {
        charter_1 = __core__headList(__core__tailList(self_208));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 1),
            () -> {
                (__lhs_0_80) -> {
                    self_208
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 2),
                    () -> {
                        (__lhs_0_79) -> {
                            self_208
                        }
                    },
                    () -> {
                        (__lhs_0_75) -> {
                            mph_21 = __core__unBData(__core__headList(self_208));
                            charterAc_3 = __helios__assetclass__new(mph_21, #63686172746572);
                            (__cond_42) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_42)), 1),
                                    () -> {
                                        (__lhs_0_78) -> {
                                            __module__CapoHelpers__CapoCtx[]__withCharterInput(self_208)
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_77) -> {
                                            charterUtxo_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_77)));
                                            datum_4 = __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_70 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));
                                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70))))));
                                            __helios__common__assert_constr_index(data_137, 0), 0);
                                            __core__mkCons(__core__bData(mph_21), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))
                                        }
                                    }
                                )()(__cond_42)
                            }(self_134 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                            __helios__common__find_safe(self_134, (txin_5) -> {
                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_5))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_3);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            }))
                        }
                    }
                )()
            }
        )()(charter_1)
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_209) -> {
        charter_2 = __core__headList(__core__tailList(self_209));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),
            () -> {
                (__lhs_0_86) -> {
                    self_209
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),
                    () -> {
                        (__lhs_0_85) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_81) -> {
                            mph_22 = __core__unBData(__core__headList(self_209));
                            charterAc_4 = __helios__assetclass__new(mph_22, #63686172746572);
                            (charterUtxo_3) -> {
                                datum_5 = __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_70 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_3))));
                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70))))));
                                __helios__common__assert_constr_index(data_137, 0), 0);
                                __core__mkCons(__core__bData(mph_22), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_3, __core__mkNilData(())))), __core__mkNilData(())))
                            }((__cond_44) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_44)), 0),
                                    () -> {
                                        (self_21) -> {
                                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_83) -> {
                                            error()
                                        }
                                    }
                                )()(__cond_44)
                            }(self_134 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                            __helios__common__find_safe(self_134, (txin_6) -> {
                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_6))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_4);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            })))
                        }
                    }
                )()
            }
        )()(charter_2)
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_210) -> {
        charter_3 = __core__headList(__core__tailList(self_210));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 1),
            () -> {
                (__lhs_0_90) -> {
                    self_210
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 2),
                    () -> {
                        (__lhs_0_89) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_87) -> {
                            mph_23 = __core__unBData(__core__headList(self_210));
                            (utxo_5) -> {
                                datum_6 = __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_70 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_5))));
                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70))))));
                                __helios__common__assert_constr_index(data_137, 0), 0);
                                __core__mkCons(__core__bData(mph_23), __core__mkCons(__core__constrData(1, __core__mkCons(datum_6, __core__mkCons(utxo_5, __core__mkNilData(())))), __core__mkNilData(())))
                            }(charterAc = __helios__assetclass__new(mph_23, #63686172746572);
                            (__cond_12) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 0),
                                    () -> {
                                        (self_21) -> {
                                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_19) -> {
                                            error()
                                        }
                                    }
                                )()(__cond_12)
                            }(self_134 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                            __helios__common__find_safe(self_134, (txin) -> {
                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            })))
                        }
                    }
                )()
            }
        )()(charter_3)
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed_1)));
        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed_1)))));
        idxBytes = __core__serialiseData(__core__iData(seedIdx));
        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));
        txoInfo = __core__ifThenElse(
            __core__ifThenElse(
                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),
                false,
                true
            ),
            () -> {
                error()
            },
            () -> {
                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)
            }
        )();
        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));
        (p) -> {
            __core__appendString(__core__appendString(p, "-"), mhs)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_220, fn_25) -> {
        recurse_87 = (recurse_86, map_29) -> {
            __core__chooseList(map_29, () -> {
                ()
            }, () -> {
                head_43 = __core__headList__safe(map_29);
                __core__chooseUnit(fn_25(__core__unBData(__core__fstPair(head_43)), __core__unIData(__core__sndPair(head_43))), recurse_86(recurse_86, __core__tailList__safe(map_29)))
            })()
        };
        recurse_87(recurse_87, self_220)
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_224, key_21) -> {
        __helios__common__map_get(self_224, __core__bData(key_21), (x_11) -> {
            __core__constrData(0, __core__mkCons(x_11, __core__mkNilData(())))
        }, () -> {
            __core__constrData(1, __core__mkNilData(()))
        })
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_228, comp_4) -> {
        recurse_55 = (recurse_54, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                tail_2 = recurse_54(recurse_54, __core__tailList__safe(lst_11));
                x_3 = __core__headList__safe(lst_11);
                recurse_53 = (recurse_52, lst_9) -> {
                    __core__chooseList(lst_9, () -> {
                        __core__mkCons(x_3, lst_9)
                    }, () -> {
                        head_3 = __core__headList__safe(lst_9);
                        __core__ifThenElse(
                            comp_4(__core__unBData(__core__fstPair(x_3)), __core__unIData(__core__sndPair(x_3)), __core__unBData(__core__fstPair(head_3)), __core__unIData(__core__sndPair(head_3))),
                            () -> {
                                __core__mkCons(x_3, lst_9)
                            },
                            () -> {
                                __core__mkCons(head_3, recurse_52(recurse_52, __core__tailList__safe(lst_9)))
                            }
                        )()
                    })()
                };
                recurse_53(recurse_53, tail_2)
            })()
        };
        recurse_55(recurse_55, self_228)
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_27, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__otherMintedValue, otherMintedValue) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __core__mkNilPairData(())
            }
        )();
        (delegateApproval) -> {
            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
            expectedValue = __helios__value____add(__helios__value____add(__core__mkNilPairData(()), otherMintedValue_1), (self_229) -> {
                recurse_93 = (recurse_92, lst_24) -> {
                    __core__chooseList(lst_24, () -> {
                        __core__mkNilPairData(())
                    }, () -> {
                        __helios__value____add(__core__unMapData(__core__headList__safe(lst_24)), recurse_92(recurse_92, __core__tailList__safe(lst_24)))
                    })()
                };
                recurse_93(recurse_93, self_229)
            }(recurse_51 = (recurse_50, rem_1) -> {
                __core__chooseList(rem_1, () -> {
                    __core__mkNilData(())
                }, () -> {
                    __core__mkCons(__core__mapData(purpose_2 = __core__decodeUtf8(__core__unBData(__core__headList__safe(rem_1)));
                    __module__StellarHeliosHelpers__mkTv(mph_27, mkTokenName_1(purpose_2))), recurse_50(recurse_50, __core__tailList__safe(rem_1)))
                })()
            };
            recurse_51(recurse_51, purposes)));
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    __helios__value__contains_policy(valueMinted, mph_27),
                    false,
                    true
                ),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_27), (k1, _v1, k2, _v2) -> {
                __core__lessThanByteString(k1, k2)
            });
            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_3, i_12) -> {
                ()
            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, mph_27);
            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {
                __core__lessThanByteString(k1, k2)
            });
            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_2, i_11) -> {
                ()
            }), msg_1 = __helios__value__show(__helios__common__filter(valueMinted, (pair_38) -> {
                (b_15, __37) -> {
                    __core__ifThenElse(
                        __core__equalsByteString(b_15, mph_27),
                        false,
                        true
                    )
                }(__core__unBData(__core__fstPair(pair_38)), __core__unMapData(__core__sndPair(pair_38)))
            }, __core__mkNilPairData(())));
            ()), thisPolicyMintOK = __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted));
            __core__chooseUnit(__core__ifThenElse(
                thisPolicyMintOK,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__chooseUnit(cond = __core__chooseUnit(__core__ifThenElse(
                b = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), (input_4) -> {
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_4))), seed_2)
                });
                __core__ifThenElse(
                    b,
                    false,
                    true
                ),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), true);
            (), otherPoliciesMintOk = __core__ifThenElse(
                b = __helios__value__is_zero(otherMintedValue_1);
                __core__ifThenElse(
                    b,
                    false,
                    true
                ),
                () -> {
                    true
                },
                () -> {
                    remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue, mph_27),
                        () -> {
                            key_23 = __core__bData(mph_27);
                            recurse_91 = (recurse_90, self_226) -> {
                                __core__chooseList(self_226, () -> {
                                    self_226
                                }, () -> {
                                    head_45 = __core__headList__safe(self_226);
                                    tail_4 = __core__tailList__safe(self_226);
                                    __core__ifThenElse(
                                        __core__equalsData(key_23, __core__fstPair(head_45)),
                                        () -> {
                                            recurse_90(recurse_90, tail_4)
                                        },
                                        () -> {
                                            __core__mkCons(head_45, recurse_90(recurse_90, tail_4))
                                        }
                                    )()
                                })()
                            };
                            recurse_91(recurse_91, expectedValue)
                        },
                        () -> {
                            expectedValue
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint),
                        () -> {
                            true
                        },
                        () -> {
                            __core__chooseUnit(recurse_89 = (recurse_88, map_30) -> {
                                __core__chooseList(map_30, () -> {
                                    ()
                                }, () -> {
                                    head_44 = __core__headList__safe(map_30);
                                    __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {
                                        mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);
                                        __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_3, expectedCount) -> {
                                            __core__ifThenElse(
                                                (b) -> {
                                                    __core__ifThenElse(
                                                        b,
                                                        false,
                                                        true
                                                    )
                                                }(__cond_54 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy, tokenName_3);
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_54)), 1),
                                                    () -> {
                                                        (__lhs_0_113) -> {
                                                            false
                                                        }
                                                    },
                                                    () -> {
                                                        (__lhs_0_112) -> {
                                                            actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_112))));
                                                            __core__equalsInteger(actualCount, expectedCount)
                                                        }
                                                    }
                                                )()(__cond_54)),
                                                () -> {
                                                    error()
                                                },
                                                () -> {
                                                    ()
                                                }
                                            )()
                                        })
                                    }(__core__unBData(__core__fstPair(head_44)), __core__unMapData(__core__sndPair(head_44))), recurse_88(recurse_88, __core__tailList__safe(map_30)))
                                })()
                            };
                            recurse_89(recurse_89, remainingExpectedMint), true)
                        }
                    )()
                }
            )();
            __core__chooseUnit(__core__ifThenElse(
                otherPoliciesMintOk,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), __core__ifThenElse(
                thisPolicyMintOK,
                () -> {
                    otherPoliciesMintOk
                },
                () -> {
                    false
                }
            )()))))))
        }(__lhs_0_111 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
        charterAc_1 = __helios__assetclass__new(mph_27, #63686172746572);
        hasCharter_1 = (txin_1) -> {
            a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));
            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_1);
            __core__ifThenElse(
                __core__lessThanEqualsInteger(a_3, 0),
                false,
                true
            )
        };
        (charterUtxo_1) -> {
            __helios__common__assert_constr_index(data_137 = __helios__txoutputdatum__inline(self_70 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));
            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_70))))));
            __helios__common__assert_constr_index(data_137, 0), 0)
        }(__cond_13 = __helios__common__find_safe(refInputs_1, hasCharter_1);
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_13)), 0),
            () -> {
                (self_21) -> {
                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    (__cond_14) -> {
                        __core__ifThenElse(
                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 0),
                            () -> {
                                (self_21) -> {
                                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))
                                }
                            },
                            () -> {
                                (__lhs_0_22) -> {
                                    error()
                                }
                            }
                        )()(__cond_14)
                    }(self_134 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                    __helios__common__find_safe(self_134, hasCharter_1))
                }
            }
        )()(__cond_13)), 0);
        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_111);
        true)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_260) -> {
        (key_29) -> {
            key_30 = __core__bData(__core__encodeUtf8(key_29));
            recurse_99 = (recurse_98, self_261) -> {
                __core__chooseList(self_261, () -> {
                    self_261
                }, () -> {
                    head_49 = __core__headList__safe(self_261);
                    tail_6 = __core__tailList__safe(self_261);
                    __core__ifThenElse(
                        __core__equalsData(key_30, __core__fstPair(head_49)),
                        () -> {
                            recurse_98(recurse_98, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_49, recurse_98(recurse_98, tail_6))
                        }
                    )()
                })()
            };
            recurse_99(recurse_99, self_260)
        }
    };
    __module__BasicDelegate__checkOneActivity_1 = (__module__BasicDelegate__checkOneActivity, dgtionDatum, activity_3, dd, baseCctx) -> {
        checkNonDelegatedActivities = __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 8),
            () -> {
                (__lhs_0_237) -> {
                    activities_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_237))));
                    cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx);
                    mintDgtCheck_1 = __core__ifThenElse(
                        b = __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_6, true);
                        __core__ifThenElse(
                            b,
                            false,
                            true
                        ),
                        () -> {
                            true
                        },
                        () -> {
                            __helios__common__all(activities_2, (rawActivity) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 5),
                                    () -> {
                                        (__lhs_0_243) -> {
                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity, dd, cctx_6)
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 7),
                                            () -> {
                                                (__lhs_0_242) -> {
                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity, dd, cctx_6)
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 6),
                                                    () -> {
                                                        (__lhs_0_241) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 1),
                                                            () -> {
                                                                (__lhs_0_240) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 0),
                                                                    () -> {
                                                                        (__lhs_0_239) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 8),
                                                                            () -> {
                                                                                (__lhs_0_238) -> {
                                                                                    error()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__74) -> {
                                                                                    error()
                                                                                }
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(rawActivity)
                            })
                        }
                    )();
                    spendDgtCheck_1 = __core__ifThenElse(
                        b = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_6, true);
                        __core__ifThenElse(
                            b,
                            false,
                            true
                        ),
                        () -> {
                            true
                        },
                        () -> {
                            __helios__common__all(activities_2, (rawActivity_1) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_1)), 6),
                                    () -> {
                                        (__lhs_0_249) -> {
                                            __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_6, false);
                                            __core__ifThenElse(
                                                cond,
                                                () -> {
                                                    ()
                                                },
                                                () -> {
                                                    error()
                                                }
                                            )(), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity_1, dd, cctx_6))
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_1)), 5),
                                            () -> {
                                                (__lhs_0_248) -> {
                                                    error()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_1)), 7),
                                                    () -> {
                                                        (__lhs_0_247) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_1)), 1),
                                                            () -> {
                                                                (__lhs_0_246) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_1)), 0),
                                                                    () -> {
                                                                        (__lhs_0_245) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_1)), 8),
                                                                            () -> {
                                                                                (__lhs_0_244) -> {
                                                                                    error()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__75) -> {
                                                                                    error()
                                                                                }
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(rawActivity_1)
                            })
                        }
                    )();
                    __core__ifThenElse(
                        __core__ifThenElse(
                            mintDgtCheck_1,
                            () -> {
                                spendDgtCheck_1
                            },
                            () -> {
                                false
                            }
                        )(),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),
                    () -> {
                        (__lhs_0_231) -> {
                            innerActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_231)));
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 0),
                                () -> {
                                    (__lhs_0_235) -> {
                                        seed_9 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_235)));
                                        (purpose_9) -> {
                                            otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__core__unBData(__core__headList(__core__tailList(dd))), __core__unBData(__core__headList(__core__tailList(__core__tailList(dd))))), -1);
                                            (tnStr_3) -> {
                                                cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(baseCctx);
                                                (isUpdatingCharter) -> {
                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_9, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_9)), __core__mkNilData(())), false, (), true, otherMintedValue_2);
                                                    __core__ifThenElse(
                                                        isMintingOk,
                                                        () -> {
                                                            isUpdatingCharter
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }(__cond_107 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5);
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_107)), 5),
                                                    () -> {
                                                        (__lhs_0_236) -> {
                                                            true
                                                        }
                                                    },
                                                    () -> {
                                                        (__73) -> {
                                                            false
                                                        }
                                                    }
                                                )()(__cond_107))
                                            }(self_14 = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd))));
                                            __core__ifThenElse(
                                                __helios__string__is_valid_utf8(self_14),
                                                () -> {
                                                    __core__decodeUtf8__safe(self_14)
                                                },
                                                () -> {
                                                    __helios__bytearray__show(self_14)
                                                }
                                            )())
                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_235))));
                                        __core__decodeUtf8(__core__unBData(d)))
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 1),
                                        () -> {
                                            (__lhs_0_234) -> {
                                                __core__equalsInteger((self_24, assetClass_1) -> {
                                                    __common22 = __core__unConstrData(assetClass_1);
                                                    __common23 = __core__sndPair(__common22);
                                                    mph_3 = __core__headList(__common23);
                                                    tokenName_1 = __core__headList(__core__tailList(__common23));
                                                    outer_1 = (outer, inner, map) -> {
                                                        __core__chooseList(map, () -> {
                                                            error()
                                                        }, () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_3),
                                                                () -> {
                                                                    inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                                                                },
                                                                () -> {
                                                                    outer(outer, inner, __core__tailList__safe(map))
                                                                }
                                                            )()
                                                        })()
                                                    };
                                                    outer_1(outer_1, (inner_1, map_1) -> {
                                                        __core__chooseList(map_1, () -> {
                                                            error()
                                                        }, () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                                                                () -> {
                                                                    __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                                                                },
                                                                () -> {
                                                                    inner_1(inner_1, __core__tailList__safe(map_1))
                                                                }
                                                            )()
                                                        })()
                                                    }, self_24)
                                                }(__helios__tx__minted(__helios__scriptcontext__tx), __helios__assetclass__new(__core__unBData(__core__headList(__core__tailList(dd))), __core__unBData(__core__headList(__core__tailList(__core__tailList(dd)))))), -1)
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_232) -> {
                                                error()
                                            }
                                        }
                                    )()
                                }
                            )()(innerActivity)
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),
                            () -> {
                                (__lhs_0_132) -> {
                                    dCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_132)));
                                    (cctx_4) -> {
                                        __core__chooseUnit(__cond_104 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4);
                                        __common21 = __core__fstPair(__core__unConstrData(__cond_104));
                                        __core__ifThenElse(
                                            __core__equalsInteger(__common21, 0),
                                            () -> {
                                                (__lhs_0_230) -> {
                                                    cCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_230)));
                                                    __core__ifThenElse(
                                                        __core__equalsData(cCLA, dCLA),
                                                        () -> {
                                                            ()
                                                        },
                                                        () -> {
                                                            error()
                                                        }
                                                    )()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__common21, 5),
                                                    () -> {
                                                        (__lhs_0_228) -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),
                                                                () -> {
                                                                    (__lhs_0_229) -> {
                                                                        ()
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__72) -> {
                                                                        error()
                                                                    }
                                                                }
                                                            )()(dCLA)
                                                        }
                                                    },
                                                    () -> {
                                                        (__71) -> {
                                                            error()
                                                        }
                                                    }
                                                )()
                                            }
                                        )()(__cond_104), neededRole = __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 4),
                                            () -> {
                                                (__lhs_0_101) -> {
                                                    error()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),
                                                    () -> {
                                                        (__lhs_0_100) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),
                                                            () -> {
                                                                (__lhs_0_99) -> {
                                                                    __core__constrData(1, __core__mkNilData(()))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),
                                                                    () -> {
                                                                        (__lhs_0_98) -> {
                                                                            __core__constrData(0, __core__mkNilData(()))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),
                                                                            () -> {
                                                                                (__lhs_0_97) -> {
                                                                                    __core__constrData(1, __core__mkNilData(()))
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),
                                                                                    () -> {
                                                                                        (__lhs_0_96) -> {
                                                                                            __core__constrData(6, __core__mkNilData(()))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__lhs_0_95) -> {
                                                                                            __core__constrData(0, __core__mkNilData(()))
                                                                                        }
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(dCLA);
                                        myCurrentRole = __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 7),
                                            () -> {
                                                (__lhs_0_136) -> {
                                                    error()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 1),
                                                    () -> {
                                                        (__lhs_0_135) -> {
                                                            __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, false);
                                                            __core__ifThenElse(
                                                                cond,
                                                                () -> {
                                                                    ()
                                                                },
                                                                () -> {
                                                                    error()
                                                                }
                                                            )(), neededRole)
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 0),
                                                            () -> {
                                                                (__lhs_0_134) -> {
                                                                    __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, false);
                                                                    __core__ifThenElse(
                                                                        cond,
                                                                        () -> {
                                                                            ()
                                                                        },
                                                                        () -> {
                                                                            error()
                                                                        }
                                                                    )(), neededRole)
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 6),
                                                                    () -> {
                                                                        (__lhs_0_133) -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true),
                                                                                () -> {
                                                                                    __core__constrData(0, __core__mkNilData(()))
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true),
                                                                                        () -> {
                                                                                            __core__constrData(1, __core__mkNilData(()))
                                                                                        },
                                                                                        () -> {
                                                                                            error()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__41) -> {
                                                                            error()
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(neededRole);
                                        __core__ifThenElse(
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),
                                                () -> {
                                                    (__lhs_0_224) -> {
                                                        seed_8 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_224)));
                                                        (purpose_8) -> {
                                                            mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                () -> {
                                                                    (__lhs_0_225) -> {
                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                            __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_8, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_8)), __core__mkNilData(())), true, mkTn, false, ()),
                                                                            () -> {
                                                                                ()
                                                                            },
                                                                            () -> {
                                                                                ()
                                                                            }
                                                                        )(), (__cond_103) -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_103)), 1),
                                                                                () -> {
                                                                                    (__lhs_0_227) -> {
                                                                                        error()
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__lhs_0_226) -> {
                                                                                        dgtLink_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_226))));
                                                                                        __core__chooseUnit(cond = __core__equalsString(d = __core__headList(dgtLink_3);
                                                                                        __core__decodeUtf8(__core__unBData(d)), mkTn(purpose_8));
                                                                                        __core__ifThenElse(
                                                                                            cond,
                                                                                            () -> {
                                                                                                ()
                                                                                            },
                                                                                            () -> {
                                                                                                error()
                                                                                            }
                                                                                        )(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3, __core__unBData(__core__headList(__core__tailList(dd)))))
                                                                                    }
                                                                                }
                                                                            )()(__cond_103)
                                                                        }((self_194) -> {
                                                                            __helios__common__map_get(self_194, __core__bData(__core__encodeUtf8(purpose_8)), (x_6) -> {
                                                                                __core__constrData(0, __core__mkCons(x_6, __core__mkNilData(())))
                                                                            }, () -> {
                                                                                __core__constrData(1, __core__mkNilData(()))
                                                                            })
                                                                        }(self_155 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_155)))))))))
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__70) -> {
                                                                        error()
                                                                    }
                                                                }
                                                            )()(myCurrentRole)
                                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_224))));
                                                        __core__decodeUtf8(__core__unBData(d)))
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),
                                                        () -> {
                                                            (__lhs_0_172) -> {
                                                                charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4), 0);
                                                                __common0 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))));
                                                                nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                nextChangeList = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData_2)))));
                                                                newChange = __core__headList(nextChangeList);
                                                                __lhs_0_173 = __helios__common__assert_constr_index(newChange, 0);
                                                                __lhs_0_0_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_173))));
                                                                __common16 = __core__tailList(__lhs_0_0_2);
                                                                action = __core__headList(__lhs_0_0_2);
                                                                __common3 = __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 1);
                                                                role_2 = __core__headList(__common16);
                                                                __common2 = __core__equalsInteger(__core__fstPair(__core__unConstrData(role_2)), 4);
                                                                OdgtLink = __core__headList(__core__tailList(__common16));
                                                                newDgtRoleName = __core__ifThenElse(
                                                                    __common2,
                                                                    () -> {
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name
                                                                    },
                                                                    () -> {
                                                                        (__54) -> {
                                                                            error()
                                                                        }
                                                                    }
                                                                )()(role_2);
                                                                __core__chooseUnit(__core__ifThenElse(
                                                                    __common3,
                                                                    () -> {
                                                                        (__lhs_0_222) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__68) -> {
                                                                            ()
                                                                        }
                                                                    }
                                                                )()(action), __core__chooseUnit((cond) -> {
                                                                    __core__ifThenElse(
                                                                        cond,
                                                                        () -> {
                                                                            ()
                                                                        },
                                                                        () -> {
                                                                            error()
                                                                        }
                                                                    )()
                                                                }(self_245 = __core__tailList(nextChangeList);
                                                                __core__equalsData(__core__listData(self_245), __core__listData(__common0))), __core__ifThenElse(
                                                                    __common3,
                                                                    () -> {
                                                                        (__lhs_0_221) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),
                                                                            () -> {
                                                                                (__lhs_0_220) -> {
                                                                                    __common19 = __core__sndPair(__core__unConstrData(__lhs_0_220));
                                                                                    seed_7 = __core__headList(__common19);
                                                                                    (purpose_7) -> {
                                                                                        idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_220);
                                                                                        (callback_14) -> {
                                                                                            callback_14(seed_7, purpose_7, idPrefix_9)
                                                                                        }
                                                                                    }(d = __core__headList(__core__tailList(__common19));
                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__lhs_0_219) -> {
                                                                                    seed_6 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_219)));
                                                                                    (purpose_6) -> {
                                                                                        idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_219);
                                                                                        (callback_13) -> {
                                                                                            callback_13(seed_6, purpose_6, idPrefix_8)
                                                                                        }
                                                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_219))));
                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                }
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(action)((seed_5, purpose_5, pendingActionIdPrefix) -> {
                                                                    possibleMintDgtVerifications = __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),
                                                                        () -> {
                                                                            (__lhs_0_191) -> {
                                                                                true
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                () -> {
                                                                                    (__lhs_0_175) -> {
                                                                                        __core__ifThenElse(
                                                                                            __common3,
                                                                                            () -> {
                                                                                                (__lhs_0_183) -> {
                                                                                                    error()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__56) -> {
                                                                                                    mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                    mintedDgTkn = __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_5, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_5)), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, ());
                                                                                                    dgtLink_2 = __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(OdgtLink)), 1),
                                                                                                        () -> {
                                                                                                            (__lhs_0_177) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (self_193) -> {
                                                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_193))))
                                                                                                            }
                                                                                                        }
                                                                                                    )()(OdgtLink);
                                                                                                    (__common1) -> {
                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                            __core__equalsString(__common1, mkTokenName_2(purpose_5)),
                                                                                                            () -> {
                                                                                                                ()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        )(), (delegateTakesOwnership) -> {
                                                                                                            possibleExtraReplacementCheck = __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_178) -> {
                                                                                                                        __core__chooseUnit(__cond_85 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_85)), 0),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_180) -> {
                                                                                                                                    dde = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_180)));
                                                                                                                                    entryType_1 = __helios__common__mStruct_field(dde, #747065);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_1)), 1),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_182) -> {
                                                                                                                                                (idPrefix_7) -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__equalsString(idPrefix_7, pendingActionIdPrefix),
                                                                                                                                                        () -> {
                                                                                                                                                            ()
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_182))));
                                                                                                                                                __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__58) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(entryType_1)
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_179) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_85), true)
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__57) -> {
                                                                                                                        true
                                                                                                                    }
                                                                                                                }
                                                                                                            )()(action);
                                                                                                            __core__ifThenElse(
                                                                                                                __core__ifThenElse(
                                                                                                                    mintedDgTkn,
                                                                                                                    () -> {
                                                                                                                        true
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )(),
                                                                                                                () -> {
                                                                                                                    possibleExtraReplacementCheck
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    false
                                                                                                                }
                                                                                                            )()
                                                                                                        }(assertion_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2, __core__unBData(__core__headList(__core__tailList(dd))));
                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                            assertion_2,
                                                                                                            () -> {
                                                                                                                ()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        )(), true)))
                                                                                                    }(d = __core__headList(dgtLink_2);
                                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                                }
                                                                                            }
                                                                                        )()(action)
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__55) -> {
                                                                                        error()
                                                                                    }
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(myCurrentRole);
                                                                    otherPossibleVerifications = __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),
                                                                        () -> {
                                                                            (__lhs_0_218) -> {
                                                                                error()
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                                () -> {
                                                                                    (__lhs_0_192) -> {
                                                                                        isNotADuplicate = __helios__common__all(__common0, (pdChange_2) -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(pdChange_2)), 0),
                                                                                                () -> {
                                                                                                    (__lhs_0_193) -> {
                                                                                                        __lhs_0_0_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_193))));
                                                                                                        pendingRole = __core__headList(__core__tailList(__lhs_0_0_3));
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(pendingRole)), 4),
                                                                                                            () -> {
                                                                                                                (__lhs_0_194) -> {
                                                                                                                    changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_194);
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsString(changingDgtName, newDgtRoleName),
                                                                                                                        false,
                                                                                                                        true
                                                                                                                    )
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__62) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            }
                                                                                                        )()(pendingRole)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__61) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                }
                                                                                            )()(pdChange_2)
                                                                                        });
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            isNotADuplicate,
                                                                                            () -> {
                                                                                                ()
                                                                                            },
                                                                                            () -> {
                                                                                                error()
                                                                                            }
                                                                                        )(), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);
                                                                                        possibleReplacementIsCorrect = __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),
                                                                                            () -> {
                                                                                                (__lhs_0_216) -> {
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 0),
                                                                                                        () -> {
                                                                                                            (__lhs_0_217) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__67) -> {
                                                                                                                ()
                                                                                                            }
                                                                                                        }
                                                                                                    )()(existingRoleEntryMaybe), true)
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),
                                                                                                    () -> {
                                                                                                        __common17 = __core__unConstrData(role_2);
                                                                                                        __common18 = __core__fstPair(__common17);
                                                                                                        __common20 = __core__equalsInteger(__common18, 2);
                                                                                                        (__lhs_0_197) -> {
                                                                                                            replacesDgt = __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_197))))));
                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                __common20,
                                                                                                                () -> {
                                                                                                                    (__lhs_0_215) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__common18, 3),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_214) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __core__equalsInteger(__common18, 7),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_213) -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__66) -> {
                                                                                                                                        ()
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()(role_2), existingDgtLink_1 = __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 1),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_200) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__lhs_0_198) -> {
                                                                                                                        __lhs_0_0_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_198)));
                                                                                                                        entryType_2 = __helios__common__mStruct_field(__lhs_0_0_4, #747065);
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_2)), 1),
                                                                                                                            () -> {
                                                                                                                                (self_147) -> {
                                                                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_147))))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__64) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(entryType_2)
                                                                                                                    }
                                                                                                                }
                                                                                                            )()(existingRoleEntryMaybe);
                                                                                                            existingDgTkn = __core__ifThenElse(
                                                                                                                __core__equalsInteger(__common18, 0),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_208) -> {
                                                                                                                        some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4), __core__unBData(__core__headList(__core__tailList(dd))));
                                                                                                                        __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__common18, 1),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_207) -> {
                                                                                                                                some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_4)))), __core__unBData(__core__headList(__core__tailList(dd))));
                                                                                                                                __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __common2,
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_206) -> {
                                                                                                                                        some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1, __core__unBData(__core__headList(__core__tailList(dd))));
                                                                                                                                        __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__common18, 5),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_205) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__common18, 6),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_204) -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __common20,
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_203) -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__common18, 3),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_202) -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_201) -> {
                                                                                                                                                                        error()
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()(role_2);
                                                                                                            __core__chooseUnit(cond = __core__equalsData(replacesDgt, __core__headList(__core__sndPair(__core__unConstrData(existingDgTkn))));
                                                                                                            __core__ifThenElse(
                                                                                                                cond,
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            )(), true))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__lhs_0_195) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()(action);
                                                                                        __core__ifThenElse(
                                                                                            isNotADuplicate,
                                                                                            () -> {
                                                                                                possibleReplacementIsCorrect
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )())
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__60) -> {
                                                                                        error()
                                                                                    }
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(myCurrentRole);
                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                        __core__equalsInteger(__helios__common__length(__common0), 0),
                                                                        () -> {
                                                                            ()
                                                                        },
                                                                        () -> {
                                                                            error()
                                                                        }
                                                                    )(), __core__ifThenElse(
                                                                        possibleMintDgtVerifications,
                                                                        () -> {
                                                                            otherPossibleVerifications
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )())
                                                                })))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),
                                                                () -> {
                                                                    (__lhs_0_171) -> {
                                                                        error()
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),
                                                                        () -> {
                                                                            (__lhs_0_148) -> {
                                                                                (pendingChangesList) -> {
                                                                                    (previousManifest) -> {
                                                                                        nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                                        __common12 = __core__tailList(__helios__common__enum_fields_after_4(nextCharterData_1));
                                                                                        nextManifest = __core__unMapData(__core__headList(__common12));
                                                                                        __core__chooseUnit(cond = __core__equalsInteger(__helios__common__length(__core__unListData(__core__headList(__core__tailList(__common12)))), 0);
                                                                                        __core__ifThenElse(
                                                                                            cond,
                                                                                            () -> {
                                                                                                ()
                                                                                            },
                                                                                            () -> {
                                                                                                error()
                                                                                            }
                                                                                        )(), spendDgtCheck = __core__ifThenElse(
                                                                                            b = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true);
                                                                                            __core__ifThenElse(
                                                                                                b,
                                                                                                false,
                                                                                                true
                                                                                            ),
                                                                                            () -> {
                                                                                                true
                                                                                            },
                                                                                            () -> {
                                                                                                __helios__common__fold(pendingChangesList, (prev_5, item_18) -> {
                                                                                                    prev_5((a_17, b_16) -> {
                                                                                                        pdChange = __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(item_18)), 0),
                                                                                                            () -> {
                                                                                                                (self_142) -> {
                                                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_142))))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__lhs_0_149) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            }
                                                                                                        )()(item_18);
                                                                                                        (pendingTypeName) -> {
                                                                                                            __core__chooseUnit(__cond_69 = __core__headList(pdChange);
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_69)), 1),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_157) -> {
                                                                                                                        __cond_72 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(b_16, pendingTypeName);
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_72)), 0),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_158) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__50) -> {
                                                                                                                                    ()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_72)
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__47) -> {
                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                            __core__equalsInteger(__helios__common__length(b_16), 0),
                                                                                                                            () -> {
                                                                                                                                error()
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                ()
                                                                                                                            }
                                                                                                                        )(), head_48 = __core__headList(b_16);
                                                                                                                        (CME_key, __lhs_1) -> {
                                                                                                                            ME_type = __helios__common__mStruct_field(__lhs_1, #747065);
                                                                                                                            __lhs_0_153 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                            ME_policyLink = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_153))));
                                                                                                                            (ME_idPrefix) -> {
                                                                                                                                refCount = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_153))))));
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __core__equalsInteger(refCount, 1),
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __core__equalsString(pendingTypeName, CME_key),
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )(), (ME_name) -> {
                                                                                                                                    (pendingLink) -> {
                                                                                                                                        (pendingName) -> {
                                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                __core__equalsData(__core__listData(ME_policyLink), __core__listData(pendingLink)),
                                                                                                                                                () -> {
                                                                                                                                                    ()
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    error()
                                                                                                                                                }
                                                                                                                                            )(), (nextIdPrefix) -> {
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsString(nextIdPrefix, ME_idPrefix),
                                                                                                                                                    () -> {
                                                                                                                                                        ()
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                )()
                                                                                                                                            }(__cond_70 = __core__headList(pdChange);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_70)), 2),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_155) -> {
                                                                                                                                                        idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_155);
                                                                                                                                                        __core__chooseUnit(__cond_71 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__tailList(b_16), pendingTypeName);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_71)), 0),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_156) -> {
                                                                                                                                                                    error()
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__49) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_71), idPrefix_6)
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_70)), 0),
                                                                                                                                                        () -> {
                                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__48) -> {
                                                                                                                                                                error()
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_70)))
                                                                                                                                        }((self_35) -> {
                                                                                                                                            __core__appendString("'", __core__appendString(self_35, "'"))
                                                                                                                                        }(d = __core__headList(pendingLink);
                                                                                                                                        __core__decodeUtf8(__core__unBData(d))))
                                                                                                                                    }(self_259 = __core__headList(__core__tailList(__core__tailList(pdChange)));
                                                                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_259)))))
                                                                                                                                }((self_35) -> {
                                                                                                                                    __core__appendString("'", __core__appendString(self_35, "'"))
                                                                                                                                }(d = __core__headList(ME_policyLink);
                                                                                                                                __core__decodeUtf8(__core__unBData(d))))))
                                                                                                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_153))));
                                                                                                                            __core__decodeUtf8(__core__unBData(d)))
                                                                                                                        }(__core__decodeUtf8(__core__unBData(__core__fstPair(head_48))), __core__sndPair(head_48)))
                                                                                                                    }
                                                                                                                }
                                                                                                            )()(__cond_69), __cond_68 = __core__headList(pdChange);
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_68)), 0),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_152) -> {
                                                                                                                        (callback_12) -> {
                                                                                                                            callback_12(a_17, __core__tailList(b_16))
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__46) -> {
                                                                                                                        (callback_11) -> {
                                                                                                                            callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(a_17)(pendingTypeName), __core__tailList(b_16))
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            )()(__cond_68))
                                                                                                        }(__cond_67 = __core__headList(__core__tailList(pdChange));
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_67)), 4),
                                                                                                            () -> {
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__45) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_67))
                                                                                                    })
                                                                                                }, (callback_9) -> {
                                                                                                    callback_9(previousManifest, nextManifest)
                                                                                                })((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                    __core__equalsData(__core__mapData(nextManifestRemainder), __core__mapData(prevManifestRemainder))
                                                                                                })
                                                                                            }
                                                                                        )();
                                                                                        mintDgtCheck = __core__ifThenElse(
                                                                                            b = __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true);
                                                                                            __core__ifThenElse(
                                                                                                b,
                                                                                                false,
                                                                                                true
                                                                                            ),
                                                                                            () -> {
                                                                                                true
                                                                                            },
                                                                                            () -> {
                                                                                                mint = __helios__tx__minted(__helios__scriptcontext__tx);
                                                                                                (mintThisPolicy) -> {
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__ifThenElse(
                                                                                                            __core__lessThanEqualsInteger(__core__subtractInteger(__helios__common__length(mint), 1), 1),
                                                                                                            false,
                                                                                                            true
                                                                                                        ),
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        }
                                                                                                    )(), observedTokenBurn = __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(mintThisPolicy)), 0),
                                                                                                        () -> {
                                                                                                            (self_254) -> {
                                                                                                                __core__unMapData(__core__headList(__core__sndPair(__core__unConstrData(self_254))))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_159) -> {
                                                                                                                __core__mkNilPairData(())
                                                                                                            }
                                                                                                        }
                                                                                                    )()(mintThisPolicy);
                                                                                                    remainingMint = __helios__common__fold(pendingChangesList, (foldingBurn, pcChange_1) -> {
                                                                                                        pdChange_1 = __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(pcChange_1)), 0),
                                                                                                            () -> {
                                                                                                                (self_142) -> {
                                                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_142))))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__lhs_0_161) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            }
                                                                                                        )()(pcChange_1);
                                                                                                        __cond_75 = __core__headList(__core__tailList(pdChange_1));
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_75)), 4),
                                                                                                            () -> {
                                                                                                                (__lhs_0_163) -> {
                                                                                                                    typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_163);
                                                                                                                    __cond_76 = __core__headList(pdChange_1);
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_76)), 0),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_170) -> {
                                                                                                                                foldingBurn
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__52) -> {
                                                                                                                                __cond_77 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest, typeName_4);
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_77)), 1),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_169) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_164) -> {
                                                                                                                                            __lhs_0_0_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_164)));
                                                                                                                                            ME_type_1 = __helios__common__mStruct_field(__lhs_0_0_1, #747065);
                                                                                                                                            tn_5 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0_1, #746e));
                                                                                                                                            mph_30 = __helios__common__mStruct_field(__lhs_0_0_1, #6d7068);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_30)), 0),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_168) -> {
                                                                                                                                                        foldingBurn
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__53) -> {
                                                                                                                                                        __lhs_0_165 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                        refCount_1 = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_165))))));
                                                                                                                                                        __cond_79 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn, tn_5);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_79)), 1),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_167) -> {
                                                                                                                                                                    error()
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_166) -> {
                                                                                                                                                                    burningCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_166))));
                                                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __core__equalsInteger(__core__subtractInteger(0, refCount_1), burningCount),
                                                                                                                                                                            false,
                                                                                                                                                                            true
                                                                                                                                                                        ),
                                                                                                                                                                        () -> {
                                                                                                                                                                            error()
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            ()
                                                                                                                                                                        }
                                                                                                                                                                    )(), key_27 = __core__bData(tn_5);
                                                                                                                                                                    recurse_97 = (recurse_96, self_253) -> {
                                                                                                                                                                        __core__chooseList(self_253, () -> {
                                                                                                                                                                            self_253
                                                                                                                                                                        }, () -> {
                                                                                                                                                                            head_47 = __core__headList__safe(self_253);
                                                                                                                                                                            tail_5 = __core__tailList__safe(self_253);
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __core__equalsData(key_27, __core__fstPair(head_47)),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    recurse_96(recurse_96, tail_5)
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    __core__mkCons(head_47, recurse_96(recurse_96, tail_5))
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        })()
                                                                                                                                                                    };
                                                                                                                                                                    recurse_97(recurse_97, foldingBurn))
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_79)
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(mph_30)
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_77)
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(__cond_76)
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__51) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_75)
                                                                                                    }, observedTokenBurn);
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__equalsInteger(__helios__common__length(remainingMint), 0),
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    )(), true))
                                                                                                }(key_28 = __core__unBData(__core__headList(__core__tailList(dd)));
                                                                                                __helios__common__map_get(mint, __core__bData(key_28), (x_12) -> {
                                                                                                    __core__constrData(0, __core__mkCons(x_12, __core__mkNilData(())))
                                                                                                }, () -> {
                                                                                                    __core__constrData(1, __core__mkNilData(()))
                                                                                                }))
                                                                                            }
                                                                                        )();
                                                                                        __core__ifThenElse(
                                                                                            mintDgtCheck,
                                                                                            () -> {
                                                                                                spendDgtCheck
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )())
                                                                                    }(self_159 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);
                                                                                    __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(self_159)))))
                                                                                }(self_160 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);
                                                                                __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(self_160))))))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),
                                                                                () -> {
                                                                                    (__lhs_0_139) -> {
                                                                                        manifestActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_139)));
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 0),
                                                                                            () -> {
                                                                                                (__lhs_0_147) -> {
                                                                                                    error()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 1),
                                                                                                    () -> {
                                                                                                        (__lhs_0_146) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 2),
                                                                                                            () -> {
                                                                                                                (__lhs_0_141) -> {
                                                                                                                    (key_31) -> {
                                                                                                                        tokenName_4 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_141)))));
                                                                                                                        charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4), 0);
                                                                                                                        nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                                                                        __common13 = __core__tailList(__helios__common__enum_fields_after_4(nextCharterData));
                                                                                                                        __common14 = __core__headList(__common13);
                                                                                                                        __common15 = __core__unMapData(__common14);
                                                                                                                        (refInput) -> {
                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                __core__equalsData(refInput, refInput),
                                                                                                                                () -> {
                                                                                                                                    ()
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            )(), __core__chooseUnit(__cond_63 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__common15, key_31);
                                                                                                                            __core__ifThenElse(
                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_63)), 1),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_145) -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_142) -> {
                                                                                                                                        __lhs_0_0 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_142)));
                                                                                                                                        entryType = __helios__common__mStruct_field(__lhs_0_0, #747065);
                                                                                                                                        tn_4 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0, #746e));
                                                                                                                                        mph_29 = __helios__common__mStruct_field(__lhs_0_0, #6d7068);
                                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                                            __core__equalsByteString(tn_4, tokenName_4),
                                                                                                                                            () -> {
                                                                                                                                                ()
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_29)), 0),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_144) -> {
                                                                                                                                                    error()
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__44) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(mph_29), __core__ifThenElse(
                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType)), 0),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_143) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__43) -> {
                                                                                                                                                    error()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(entryType)))
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_63), (cond) -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    cond,
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }(self_262 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_3))));
                                                                                                                            __core__equalsData(__core__mapData(self_262), __core__mapData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__common15)(key_31))))))
                                                                                                                        }(hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_4, tokenName_4);
                                                                                                                        recIdStr = __core__decodeUtf8(tokenName_4);
                                                                                                                        (__cond_36) -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 1),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_68) -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_67) -> {
                                                                                                                                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_67)))
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_36)
                                                                                                                        }(self_134 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                                                                                                                        __helios__common__find_safe(self_134, hasDD)))
                                                                                                                    }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_141)));
                                                                                                                    __core__decodeUtf8(__core__unBData(d)))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 3),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_140) -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        (__42) -> {
                                                                                                                            ()
                                                                                                                        }
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()(manifestActivity), true)
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),
                                                                                        () -> {
                                                                                            (__lhs_0_138) -> {
                                                                                                error()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__lhs_0_137) -> {
                                                                                                error()
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()(dCLA),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                false
                                            }
                                        )())
                                    }(self_192 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(mph_25 = __core__unBData(__core__headList(__core__tailList(dd)));
                                    __core__mkCons(__core__bData(mph_25), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));
                                    __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(self_158 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_192);
                                    __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_158))), __core__unBData(__core__headList(self_192)));
                                    __core__ifThenElse(
                                        cond,
                                        () -> {
                                            ()
                                        },
                                        () -> {
                                            error()
                                        }
                                    )(), self_192))
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 5),
                                    () -> {
                                        (__lhs_0_131) -> {
                                            seed_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_131)));
                                            (dDataTypeName_1) -> {
                                                cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx);
                                                __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_3, false);
                                                __core__ifThenElse(
                                                    cond,
                                                    () -> {
                                                        ()
                                                    },
                                                    () -> {
                                                        error()
                                                    }
                                                )(), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1, cctx_3, dDataTypeName_1);
                                                tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);
                                                (purpose_4) -> {
                                                    newDataId_1 = __core__encodeUtf8(tnFactory(purpose_4));
                                                    __core__ifThenElse(
                                                        __core__ifThenElse(
                                                            __core__ifThenElse(
                                                                __core__ifThenElse(
                                                                    __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_4, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_4)), __core__mkNilData(())), true, tnFactory, false, ()),
                                                                    () -> {
                                                                        true
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )(),
                                                                () -> {
                                                                    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1, cctx_3, newDataId_1, dDataTypeName_1)
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )(),
                                                            () -> {
                                                                true
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )(),
                                                        () -> {
                                                            (self_182) -> {
                                                                true
                                                            }(__cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(policyDelegateInput);
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_17)), 3),
                                                                () -> {
                                                                    (__lhs_0_30) -> {
                                                                        ma_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_30)));
                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                            __core__chooseData(ma_1, () -> {
                                                                                true
                                                                            }, () -> {
                                                                                false
                                                                            }, () -> {
                                                                                false
                                                                            }, () -> {
                                                                                false
                                                                            }, () -> {
                                                                                false
                                                                            })(),
                                                                            () -> {
                                                                                (__lhs_0_31) -> {
                                                                                    fields_72 = __core__sndPair(__core__unConstrData(__lhs_0_31));
                                                                                    cond = __core__equalsData(seed_4, __core__chooseList(fields_72, () -> {
                                                                                        error()
                                                                                    }, () -> {
                                                                                        __core__headList__safe(fields_72)
                                                                                    })());
                                                                                    __core__ifThenElse(
                                                                                        cond,
                                                                                        () -> {
                                                                                            ()
                                                                                        },
                                                                                        () -> {
                                                                                            error()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__21) -> {
                                                                                    error()
                                                                                }
                                                                            }
                                                                        )()(ma_1), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(policyDelegateInput))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_17)), 8),
                                                                        () -> {
                                                                            (__lhs_0_27) -> {
                                                                                activities = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_27))));
                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__ifThenElse(
                                                                                        __core__lessThanEqualsInteger(__helios__common__length(activities), 0),
                                                                                        false,
                                                                                        true
                                                                                    ),
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), foundWithThisSeed = __helios__common__filter(activities, (a_14) -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(a_14)), 3),
                                                                                        () -> {
                                                                                            (__lhs_0_28) -> {
                                                                                                ma = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_28)));
                                                                                                __core__ifThenElse(
                                                                                                    __core__chooseData(ma, () -> {
                                                                                                        true
                                                                                                    }, () -> {
                                                                                                        false
                                                                                                    }, () -> {
                                                                                                        false
                                                                                                    }, () -> {
                                                                                                        false
                                                                                                    }, () -> {
                                                                                                        false
                                                                                                    })(),
                                                                                                    () -> {
                                                                                                        (__lhs_0_29) -> {
                                                                                                            index_11 = __core__fstPair(__core__unConstrData(__lhs_0_29));
                                                                                                            fields_71 = __core__sndPair(__core__unConstrData(__lhs_0_29));
                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                __core__equalsInteger(index_11, index_11),
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            )(), __core__ifThenElse(
                                                                                                                __core__equalsData(seed_4, __core__headList(fields_71)),
                                                                                                                () -> {
                                                                                                                    true
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    false
                                                                                                                }
                                                                                                            )())
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__20) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    }
                                                                                                )()(ma)
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__19) -> {
                                                                                                false
                                                                                            }
                                                                                        }
                                                                                    )()(a_14)
                                                                                }, __core__mkNilData(()));
                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__ifThenElse(
                                                                                        __core__lessThanEqualsInteger(__helios__common__length(foundWithThisSeed), 0),
                                                                                        false,
                                                                                        true
                                                                                    ),
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__equalsInteger(__helios__common__length(foundWithThisSeed), 1),
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(policyDelegateInput))))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__18) -> {
                                                                                error()
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_17))
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }(self_263 = __core__headList(__core__tailList(__core__tailList(policyDelegateInput)));
                                                d = __core__headList(__core__sndPair(__core__unConstrData(self_263)));
                                                __core__decodeUtf8(__core__unBData(d))))
                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_131))));
                                            __core__decodeUtf8(__core__unBData(d)))
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 6),
                                            () -> {
                                                (__lhs_0_130) -> {
                                                    (dDataTypeName) -> {
                                                        recId_7 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_130)))));
                                                        cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx);
                                                        __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_2, false);
                                                        __core__ifThenElse(
                                                            cond,
                                                            () -> {
                                                                ()
                                                            },
                                                            () -> {
                                                                error()
                                                            }
                                                        )(), __core__chooseUnit((cond) -> {
                                                            ()
                                                        }((self_182) -> {
                                                            true
                                                        }(self_180 = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1, cctx_2, dDataTypeName);
                                                        __core__chooseUnit(__cond_25 = __core__headList(__core__tailList(self_180));
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_25)), 4),
                                                            () -> {
                                                                (__lhs_0_40) -> {
                                                                    ()
                                                                }
                                                            },
                                                            () -> {
                                                                (__26) -> {
                                                                    error()
                                                                }
                                                            }
                                                        )()(__cond_25), strId = __core__decodeUtf8(recId_7);
                                                        __cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(self_180);
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_21)), 2),
                                                            () -> {
                                                                (__lhs_0_38) -> {
                                                                    sa_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_38)));
                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                        __core__chooseData(sa_1, () -> {
                                                                            true
                                                                        }, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            false
                                                                        })(),
                                                                        () -> {
                                                                            (__lhs_0_39) -> {
                                                                                index_13 = __core__fstPair(__core__unConstrData(__lhs_0_39));
                                                                                fields_74 = __core__sndPair(__core__unConstrData(__lhs_0_39));
                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__equalsInteger(index_13, index_13),
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), foundRecId_1 = __core__unBData(__core__headList(fields_74));
                                                                                __core__ifThenElse(
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsByteString(recId_7, foundRecId_1),
                                                                                        false,
                                                                                        true
                                                                                    ),
                                                                                    () -> {
                                                                                        error()
                                                                                    },
                                                                                    () -> {
                                                                                        ()
                                                                                    }
                                                                                )())
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__25) -> {
                                                                                error()
                                                                            }
                                                                        }
                                                                    )()(sa_1), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(self_180))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_21)), 8),
                                                                    () -> {
                                                                        (__lhs_0_32) -> {
                                                                            activities_1 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_32))));
                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                __core__ifThenElse(
                                                                                    __core__lessThanEqualsInteger(__helios__common__length(activities_1), 0),
                                                                                    false,
                                                                                    true
                                                                                ),
                                                                                () -> {
                                                                                    ()
                                                                                },
                                                                                () -> {
                                                                                    error()
                                                                                }
                                                                            )(), actsOnThisRecord = __helios__common__filter(activities_1, (a_15) -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 5),
                                                                                    () -> {
                                                                                        (__lhs_0_37) -> {
                                                                                            error()
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 6),
                                                                                            () -> {
                                                                                                (__lhs_0_36) -> {
                                                                                                    error()
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 7),
                                                                                                    () -> {
                                                                                                        (__lhs_0_35) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 2),
                                                                                                            () -> {
                                                                                                                (__lhs_0_33) -> {
                                                                                                                    sa = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_33)));
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__chooseData(sa, () -> {
                                                                                                                            true
                                                                                                                        }, () -> {
                                                                                                                            false
                                                                                                                        }, () -> {
                                                                                                                            false
                                                                                                                        }, () -> {
                                                                                                                            false
                                                                                                                        }, () -> {
                                                                                                                            false
                                                                                                                        })(),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_34) -> {
                                                                                                                                index_12 = __core__fstPair(__core__unConstrData(__lhs_0_34));
                                                                                                                                fields_73 = __core__sndPair(__core__unConstrData(__lhs_0_34));
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __core__equalsInteger(index_12, index_12),
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )(), foundRecId = __core__unBData(__core__headList(fields_73));
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsByteString(recId_7, foundRecId),
                                                                                                                                        false,
                                                                                                                                        true
                                                                                                                                    ),
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        true
                                                                                                                                    }
                                                                                                                                )())
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__24) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(sa)
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__23) -> {
                                                                                                                    false
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()(a_15)
                                                                            }, __core__mkNilData(()));
                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                __core__ifThenElse(
                                                                                    __core__lessThanEqualsInteger(__helios__common__length(actsOnThisRecord), 0),
                                                                                    false,
                                                                                    true
                                                                                ),
                                                                                () -> {
                                                                                    ()
                                                                                },
                                                                                () -> {
                                                                                    error()
                                                                                }
                                                                            )(), __core__chooseUnit(__core__ifThenElse(
                                                                                __core__equalsInteger(__helios__common__length(actsOnThisRecord), 1),
                                                                                () -> {
                                                                                    ()
                                                                                },
                                                                                () -> {
                                                                                    error()
                                                                                }
                                                                            )(), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(self_180))))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__22) -> {
                                                                            error()
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()(__cond_21)))), (inputDD) -> {
                                                            __core__chooseUnit(__core__ifThenElse(
                                                                __core__equalsData(inputDD, inputDD),
                                                                () -> {
                                                                    ()
                                                                },
                                                                () -> {
                                                                    error()
                                                                }
                                                            )(), __core__chooseUnit(__core__ifThenElse(
                                                                __core__equalsString("settings", dDataTypeName),
                                                                () -> {
                                                                    (curSettingsId) -> {
                                                                        ()
                                                                    }((self_264) -> {
                                                                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_264))))
                                                                    }((oe) -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(oe)), 1),
                                                                            () -> {
                                                                                (__lhs_0_58) -> {
                                                                                    error()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__lhs_0_57) -> {
                                                                                    e_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_57)));
                                                                                    some_2 = __core__unBData(__helios__common__mStruct_field(e_1, #746e));
                                                                                    __core__constrData(0, __core__mkCons(__core__bData(some_2), __core__mkNilData(())))
                                                                                }
                                                                            }
                                                                        )()(oe)
                                                                    }(charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_2), 0);
                                                                    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData)))), "currentSettings"))))
                                                                },
                                                                () -> {
                                                                    ()
                                                                }
                                                            )(), __core__ifThenElse(
                                                                __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1, cctx_2, recId_7, dDataTypeName),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()))
                                                        }(hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_2, recId_7);
                                                        recIdStr_1 = __core__decodeUtf8(recId_7);
                                                        (__cond_37) -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_37)), 1),
                                                                () -> {
                                                                    (__lhs_0_70) -> {
                                                                        error()
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_69) -> {
                                                                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_69)))
                                                                    }
                                                                }
                                                            )()(__cond_37)
                                                        }(self_134 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                                                        __helios__common__find_safe(self_134, hasDD_1)))))
                                                    }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_130)));
                                                    __core__decodeUtf8(__core__unBData(d)))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 7),
                                                    () -> {
                                                        (__lhs_0_128) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),
                                                            () -> {
                                                                (__lhs_0_127) -> {
                                                                    true
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),
                                                                    () -> {
                                                                        (__lhs_0_126) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_125) -> {
                                                                            true
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()
                    }
                )()
            }
        )()(activity_3);
        __core__chooseUnit(__core__ifThenElse(
            checkNonDelegatedActivities,
            () -> {
                ()
            },
            () -> {
                error()
            }
        )(), __core__ifThenElse(
            (__module__UnspecializedDelegate__DelegateActivity[]__supportedCapoDelegatePurposes, cctx) -> {
                (mph_28) -> {
                    __core__ifThenElse(
                        __core__ifThenElse(
                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),
                            () -> {
                                (__lhs_0_122) -> {
                                    true
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),
                                    () -> {
                                        (__lhs_0_118) -> {
                                            CLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_118)));
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(CLA)), 0),
                                                () -> {
                                                    (__lhs_0_119) -> {
                                                        error()
                                                    }
                                                },
                                                () -> {
                                                    (__39) -> {
                                                        true
                                                    }
                                                }
                                            )()(CLA)
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),
                                            () -> {
                                                (__lhs_0_117) -> {
                                                    error()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 5),
                                                    () -> {
                                                        (__lhs_0_116) -> {
                                                            true
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 6),
                                                            () -> {
                                                                (__lhs_0_115) -> {
                                                                    true
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 7),
                                                                    () -> {
                                                                        (__lhs_0_114) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__38) -> {
                                                                            error()
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()(activity_3),
                        () -> {
                            true
                        },
                        () -> {
                            __core__equalsByteString(__core__serialiseData(__helios__scriptcontext__tx), __core__serialiseData(dgtionDatum))
                        }
                    )()
                }(self_143 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(dgtionDatum))));
                __core__unBData(__core__headList(__core__tailList(self_143))))
            }((), __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1, baseCctx)),
            () -> {
                true
            },
            () -> {
                error()
            }
        )())
    };
    __core__ifThenElse(
        __core__ifThenElse(
            __core__equalsInteger(__common5, 2),
            () -> {
                (__lhs_0_261) -> {
                    error()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__common5, 1),
                    () -> {
                        (isD) -> {
                            dd_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(isD))));
                            __core__chooseUnit((cond) -> {
                                __core__ifThenElse(
                                    cond,
                                    () -> {
                                        ()
                                    },
                                    () -> {
                                        error()
                                    }
                                )()
                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));
                            __core__ifThenElse(
                                __core__equalsByteString(self, #01),
                                false,
                                true
                            )), __core__chooseUnit((cond) -> {
                                __core__ifThenElse(
                                    cond,
                                    () -> {
                                        ()
                                    },
                                    () -> {
                                        error()
                                    }
                                )()
                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));
                            __core__ifThenElse(
                                __core__equalsByteString(self, #67656e6572616c),
                                false,
                                true
                            )), __core__chooseUnit((cond) -> {
                                __core__ifThenElse(
                                    cond,
                                    () -> {
                                        ()
                                    },
                                    () -> {
                                        error()
                                    }
                                )()
                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));
                            __core__ifThenElse(
                                __core__equalsByteString(self, #556e7370656369616c697a656444656c6567617465),
                                false,
                                true
                            )), myDgTkn = __helios__value__show(self_20 = __helios__scriptcontext__get_current_input();
                            self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_20))));
                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))));
                            cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1, mph_25 = __core__unBData(__core__headList(__core__tailList(dd_2)));
                            __core__mkCons(__core__bData(mph_25), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));
                            __module__BasicDelegate__checkOneActivity_1(__module__BasicDelegate__checkOneActivity_1, isD, __REDEEMER, dd_2, cctx_7))))
                        }
                    },
                    () -> {
                        __common8 = __core__unConstrData(__REDEEMER);
                        __common9 = __core__fstPair(__common8);
                        __common10 = __core__equalsInteger(__common9, 1);
                        (__76) -> {
                            __core__ifThenElse(
                                __common10,
                                () -> {
                                    (__lhs_0_260) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __common11 = __core__equalsInteger(__common9, 0);
                                    __core__ifThenElse(
                                        __common11,
                                        () -> {
                                            (__lhs_0_259) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            (__77) -> {
                                                __core__ifThenElse(
                                                    __common10,
                                                    () -> {
                                                        (__lhs_0_124) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __common11,
                                                            () -> {
                                                                (__lhs_0_123) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                (__40) -> {
                                                                    false
                                                                }
                                                            }
                                                        )()
                                                    }
                                                )()(__REDEEMER)
                                            }
                                        }
                                    )()
                                }
                            )()(__REDEEMER)
                        }
                    }
                )()
            }
        )()(__DATUM),
        () -> {
            ()
        },
        () -> {
            error()
        }
    )()
}`, "unoptimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __helios__error = (msg) -> {
        __core__trace(msg, () -> {
            error()
        })()
    };
    __helios__print = (msg_1) -> {
        __core__trace(msg_1, ())
    };
    __helios__string____add = __core__appendString;
    __helios__assert = (cond, msg_2) -> {
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                __core__trace(msg_2, () -> {
                    error()
                })()
            }
        )()
    };
    __helios__bool____not = (b) -> {
        __core__ifThenElse(
            b,
            false,
            true
        )
    };
    __helios__bytearray____eq = __core__equalsByteString;
    __helios__bytearray____neq = (self, other) -> {
        __helios__bool____not(__helios__bytearray____eq(self, other))
    };
    __helios__int____to_data = __core__iData;
    __helios__int__serialize = (self_1) -> {
        () -> {
            __core__serialiseData(__helios__int____to_data(self_1))
        }
    };
    __helios__string__encode_utf8 = (self_2) -> {
        () -> {
            __core__encodeUtf8(self_2)
        }
    };
    __helios__bool__and = (a, b_1) -> {
        __core__ifThenElse(
            a(),
            () -> {
                b_1()
            },
            () -> {
                false
            }
        )()
    };
    __helios__common__fold = (self_3, fn, z) -> {
        recurse_1 = (recurse, self_4, z_1) -> {
            __core__chooseList(self_4, () -> {
                z_1
            }, () -> {
                recurse(recurse, __core__tailList__safe(self_4), fn(z_1, __core__headList__safe(self_4)))
            })()
        };
        recurse_1(recurse_1, self_3, z)
    };
    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {
        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {
            callback_ok(__core__unBData__safe(data))
        })()
    };
    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;
    __helios__int__to_hex = (self_5) -> {
        () -> {
            recurse_3 = (recurse_2) -> {
                (self_6, bytes) -> {
                    digit = __core__modInteger(self_6, 16);
                    bytes_1 = __core__consByteString(__core__ifThenElse(
                        __core__lessThanInteger(digit, 10),
                        __core__addInteger(digit, 48),
                        __core__addInteger(digit, 87)
                    ), bytes);
                    __core__ifThenElse(
                        __core__lessThanInteger(self_6, 16),
                        () -> {
                            bytes_1
                        },
                        () -> {
                            recurse_2(recurse_2)(__core__divideInteger(self_6, 16), bytes_1)
                        }
                    )()
                }
            };
            __core__decodeUtf8__safe(__core__ifThenElse(
                __core__lessThanInteger(self_5, 0),
                () -> {
                    __core__consByteString(45, recurse_3(recurse_3)(__core__multiplyInteger(self_5, -1), #))
                },
                () -> {
                    recurse_3(recurse_3)(self_5, #)
                }
            )())
        }
    };
    __helios__bytearray__show = (self_7) -> {
        () -> {
            recurse_5 = (recurse_4, self_8) -> {
                n = __core__lengthOfByteString(self_8);
                __core__ifThenElse(
                    __core__lessThanInteger(0, n),
                    () -> {
                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_8, 0))());
                        __core__ifThenElse(
                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                            __core__consByteString(48, hex_bytes),
                            hex_bytes
                        )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_8)))
                    },
                    () -> {
                        ""
                    }
                )()
            };
            recurse_5(recurse_5, self_7)
        }
    };
    __helios__mintingpolicyhash__show = __helios__bytearray__show;
    __helios__common__unMapData__safe = (data_1, callback_ok_1, callback_nok_1) -> {
        __core__chooseData(data_1, callback_nok_1, () -> {
            callback_ok_1(__core__unMapData__safe(data_1))
        }, callback_nok_1, callback_nok_1, callback_nok_1)()
    };
    __helios__common__unIData__safe = (data_2, callback_ok_2, callback_nok_2) -> {
        __core__chooseData(data_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
            callback_ok_2(__core__unIData__safe(data_2))
        }, callback_nok_2)()
    };
    __helios__int__show_digit = (x) -> {
        __core__addInteger(__core__modInteger(x, 10), 48)
    };
    __helios__int__show = (self_9) -> {
        () -> {
            __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {
                bytes_3 = __core__consByteString(__helios__int__show_digit(i), bytes_2);
                __core__ifThenElse(
                    __core__lessThanInteger(i, 10),
                    () -> {
                        bytes_3
                    },
                    () -> {
                        recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)
                    }
                )()
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_9, 0),
                () -> {
                    __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_9, -1), #))
                },
                () -> {
                    recurse_7(recurse_7, self_9, #)
                }
            )())
        }
    };
    __helios__real__ONE = 1000000;
    __helios__real__floor = (self_10) -> {
        () -> {
            __core__divideInteger(self_10, __helios__real__ONE)
        }
    };
    __helios__int__abs = (self_11) -> {
        () -> {
            __core__ifThenElse(
                __core__lessThanInteger(self_11, 0),
                () -> {
                    __core__multiplyInteger(self_11, -1)
                },
                () -> {
                    self_11
                }
            )()
        }
    };
    __helios__real__abs = __helios__int__abs;
    __helios__int__show_padded = (self_12, n_1) -> {
        recurse_9 = (recurse_8, x_1, pos, bytes_4) -> {
            __core__ifThenElse(
                __core__equalsInteger(x_1, 0),
                () -> {
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(n_1, pos),
                        () -> {
                            bytes_4
                        },
                        () -> {
                            recurse_8(recurse_8, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_4))
                        }
                    )()
                },
                () -> {
                    recurse_8(recurse_8, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__helios__int__show_digit(x_1), bytes_4))
                }
            )()
        };
        recurse_9(recurse_9, self_12, 0, #)
    };
    __helios__int____mod = __core__modInteger;
    __helios__real__PRECISION = 6;
    __helios__real__show = (self_13) -> {
        () -> {
            show_positive = (x_2) -> {
                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_2)())())(), __helios__string____add(".", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_2, __helios__real__ONE), __helios__real__PRECISION))))
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_13, 0),
                () -> {
                    __helios__string____add("-", show_positive(__core__multiplyInteger(self_13, -1)))
                },
                () -> {
                    show_positive(self_13)
                }
            )()
        }
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes_5) -> {
        n_2 = __core__lengthOfByteString(bytes_5);
        recurse_11 = (recurse_10, i_1) -> {
            __core__ifThenElse(
                __core__equalsInteger(i_1, n_2),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes_5, i_1);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse_10(recurse_10, __core__addInteger(i_1, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i_1, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n_2),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __core__lessThanEqualsInteger(128, c_2)
                                                            }, () -> {
                                                                __core__lessThanEqualsInteger(c_2, 2047)
                                                            }),
                                                            () -> {
                                                                recurse_10(recurse_10, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i_1, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n_2),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __helios__bool__and(() -> {
                                                                                    __core__lessThanEqualsInteger(2048, c_1)
                                                                                }, () -> {
                                                                                    __core__lessThanEqualsInteger(c_1, 65535)
                                                                                }),
                                                                                () -> {
                                                                                    recurse_10(recurse_10, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i_1, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n_2),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __core__lessThanEqualsInteger(65536, c)
                                                                                                    }, () -> {
                                                                                                        __core__lessThanEqualsInteger(c, 2097151)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        recurse_10(recurse_10, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_11(recurse_11, 0)
    };
    __helios__bytearray__decode_utf8_safe = (self_14) -> {
        () -> {
            __core__ifThenElse(
                __helios__string__is_valid_utf8(self_14),
                () -> {
                    __core__decodeUtf8__safe(self_14)
                },
                () -> {
                    __helios__bytearray__show(self_14)()
                }
            )()
        }
    };
    __helios__value__show = (self_15) -> {
        (__useopt__ada, ada) -> {
            __helios__common__fold(self_15, (prev, pair) -> {
                mph_data = __core__fstPair(pair);
                tokens_data = __core__sndPair(pair);
                __helios__string____add(prev, __helios__common__unBData__safe(mph_data, (mph) -> {
                    __helios__string____add(__core__ifThenElse(
                        __helios__mintingpolicyhash____eq(mph, #),
                        () -> {
                            ""
                        },
                        () -> {
                            __helios__string____add(__helios__mintingpolicyhash__show(mph)(), "
")
                        }
                    )(), __helios__common__unMapData__safe(tokens_data, (tokens) -> {
                        __helios__common__fold(tokens, (prev_1, pair_1) -> {
                            token_name_data = __core__fstPair(pair_1);
                            qty_data = __core__sndPair(pair_1);
                            __helios__common__unBData__safe(token_name_data, (token_name) -> {
                                __helios__common__unIData__safe(qty_data, (qty) -> {
                                    __core__ifThenElse(
                                        __helios__mintingpolicyhash____eq(mph, #),
                                        () -> {
                                            __core__ifThenElse(
                                                __helios__bool__and(() -> {
                                                    __useopt__ada
                                                }, () -> {
                                                    ada
                                                }),
                                                () -> {
                                                    __helios__string____add("ada ", __helios__string____add(__helios__real__show(qty)(), "
"))
                                                },
                                                () -> {
                                                    __helios__string____add("lovelace ", __helios__string____add(__helios__int__show(qty)(), "
"))
                                                }
                                            )()
                                        },
                                        () -> {
                                            __helios__string____add("  .", __helios__string____add(__helios__bytearray__decode_utf8_safe(token_name)(), __helios__string____add(" ", __helios__string____add(__helios__int__show(qty)(), "
"))))
                                        }
                                    )()
                                }, () -> {
                                    ""
                                })
                            }, () -> {
                                ""
                            })
                        }, prev)
                    }, () -> {
                        ""
                    }))
                }, () -> {
                    ""
                }))
            }, "")
        }
    };
    __helios__common__enum_fields = (self_16) -> {
        __core__sndPair(__core__unConstrData(self_16))
    };
    __helios__common__enum_fields_after_0 = (self_17) -> {
        __core__tailList(__helios__common__enum_fields(self_17))
    };
    __helios__common__enum_field_1 = (self_18) -> {
        __core__headList(__helios__common__enum_fields_after_0(self_18))
    };
    __helios__txoutput__value = (self_19) -> {
        __core__unMapData(__helios__common__enum_field_1(self_19))
    };
    __helios__txinput__output = __helios__common__enum_field_1;
    __helios__txinput__value = (self_20) -> {
        __helios__txoutput__value(__helios__txinput__output(self_20))
    };
    __helios__common__enum_field_0 = (self_21) -> {
        __core__headList(__helios__common__enum_fields(self_21))
    };
    __helios__scriptcontext__data = __CONTEXT;
    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);
    __helios__scriptcontext__get_spending_purpose_output_id = () -> {
        __helios__common__enum_field_0(__helios__scriptcontext__purpose)
    };
    __helios__txinput__output_id = __helios__common__enum_field_0;
    __helios__tx__inputs = (self_22) -> {
        __core__unListData(__helios__common__enum_field_0(self_22))
    };
    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);
    __helios__scriptcontext__get_current_input = () -> {
        id = __helios__scriptcontext__get_spending_purpose_output_id();
        recurse_13 = (recurse_12, lst) -> {
            __core__chooseList(lst, () -> {
                __helios__error("not found")
            }, () -> {
                item = __core__headList__safe(lst);
                __core__ifThenElse(
                    __core__equalsData(__helios__txinput__output_id(item), id),
                    () -> {
                        item
                    },
                    () -> {
                        recurse_12(recurse_12, __core__tailList__safe(lst))
                    }
                )()
            })()
        };
        recurse_13(recurse_13, __helios__tx__inputs(__helios__scriptcontext__tx))
    };
    __helios__bool__or = (a_1, b_2) -> {
        __core__ifThenElse(
            a_1(),
            () -> {
                true
            },
            () -> {
                b_2()
            }
        )()
    };
    __helios__string____to_data = (s) -> {
        __core__bData(__core__encodeUtf8(s))
    };
    __helios__value__ZERO = __core__mkNilPairData(());
    __helios__value__new = (assetClass, i_2) -> {
        __core__ifThenElse(
            __core__equalsInteger(0, i_2),
            () -> {
                __helios__value__ZERO
            },
            () -> {
                mph_1 = __helios__common__enum_field_0(assetClass);
                tokenName = __helios__common__enum_field_1(assetClass);
                __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i_2)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
            }
        )()
    };
    __helios__common__list_0 = __core__mkNilData(());
    __helios__common__list_1 = (a_2) -> {
        __core__mkCons(a_2, __helios__common__list_0)
    };
    __helios__common__list_2 = (arg0, arg1) -> {
        __core__mkCons(arg0, __helios__common__list_1(arg1))
    };
    __helios__bytearray____to_data = __core__bData;
    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;
    __helios__assetclass__new = (mph_2, token_name_1) -> {
        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_2), __helios__bytearray____to_data(token_name_1)))
    };
    __helios__int____neg = (self_23) -> {
        __core__multiplyInteger(self_23, -1)
    };
    __helios__int____eq = __core__equalsInteger;
    __helios__value__get = (self_24) -> {
        (assetClass_1) -> {
            mph_3 = __helios__common__enum_field_0(assetClass_1);
            tokenName_1 = __helios__common__enum_field_1(assetClass_1);
            outer_1 = (outer, inner, map) -> {
                __core__chooseList(map, () -> {
                    __helios__error(__helios__string____add(__helios__string____add("policy ", __helios__mintingpolicyhash__show(__core__unBData(mph_3))()), " not found"))
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_3),
                        () -> {
                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                        },
                        () -> {
                            outer(outer, inner, __core__tailList__safe(map))
                        }
                    )()
                })()
            };
            inner_2 = (inner_1, map_1) -> {
                __core__chooseList(map_1, () -> {
                    __helios__error("tokenName not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                        },
                        () -> {
                            inner_1(inner_1, __core__tailList__safe(map_1))
                        }
                    )()
                })()
            };
            outer_1(outer_1, inner_2, self_24)
        }
    };
    __helios__common__enum_fields_after_1 = (self_25) -> {
        __core__tailList(__helios__common__enum_fields_after_0(self_25))
    };
    __helios__common__enum_fields_after_2 = (self_26) -> {
        __core__tailList(__helios__common__enum_fields_after_1(self_26))
    };
    __helios__common__enum_fields_after_3 = (self_27) -> {
        __core__tailList(__helios__common__enum_fields_after_2(self_27))
    };
    __helios__common__enum_field_4 = (self_28) -> {
        __core__headList(__helios__common__enum_fields_after_3(self_28))
    };
    __helios__tx__minted = (self_29) -> {
        __core__unMapData(__helios__common__enum_field_4(self_29))
    };
    __helios__common__assert_constr_index = (data_3, i_3) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_3)), i_3),
            () -> {
                data_3
            },
            () -> {
                __helios__error("unexpected constructor index")
            }
        )()
    };
    __helios__string____eq = __core__equalsString;
    __helios__common____eq = __core__equalsData;
    __helios__assetclass____eq = __helios__common____eq;
    __helios__data__show = (self_30) -> {
        () -> {
            show_data_list = (list, show_item) -> {
                __helios__common__fold(list, (prev_2, item_1) -> {
                    __core__ifThenElse(
                        __helios__string____eq(prev_2, ""),
                        () -> {
                            show_item(item_1)
                        },
                        () -> {
                            __helios__string____add(prev_2, __helios__string____add(",", show_item(item_1)))
                        }
                    )()
                }, "")
            };
            (recurse_15, data_5) -> {
                recurse_15(recurse_15, data_5)
            }((recurse_14, data_4) -> {
                __core__chooseData(data_4, () -> {
                    pair_3 = __core__unConstrData__safe(data_4);
                    tag = __core__fstPair(pair_3);
                    fields = __core__sndPair(pair_3);
                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add("{", __helios__string____add(show_data_list(fields, (item_3) -> {
                        recurse_14(recurse_14, item_3)
                    }), "}")))
                }, () -> {
                    map_2 = __core__unMapData__safe(data_4);
                    __helios__string____add("{", __helios__string____add(show_data_list(map_2, (pair_2) -> {
                        key = recurse_14(recurse_14, __core__fstPair(pair_2));
                        value_1 = recurse_14(recurse_14, __core__sndPair(pair_2));
                        __helios__string____add(key, __helios__string____add(":", value_1))
                    }), "}"))
                }, () -> {
                    lst_1 = __core__unListData__safe(data_4);
                    __helios__string____add("[", __helios__string____add(show_data_list(lst_1, (item_2) -> {
                        recurse_14(recurse_14, item_2)
                    }), "]"))
                }, () -> {
                    value = __core__unIData__safe(data_4);
                    __helios__int__show(value)()
                }, () -> {
                    bytes_6 = __core__unBData__safe(data_4);
                    __helios__bytearray__show(bytes_6)()
                })()
            }, self_30)
        }
    };
    __helios__data__show_constr_data = (callback_1) -> {
        (data_6) -> {
            callback_nok_3 = __helios__data__show(data_6);
            __core__chooseData(data_6, () -> {
                pair_4 = __core__unConstrData__safe(data_6);
                callback_1(__core__fstPair(pair_4), __core__sndPair(pair_4))
            }, callback_nok_3, callback_nok_3, callback_nok_3, callback_nok_3)()
        }
    };
    __helios__data__show_field = (index, callback_2) -> {
        (list_1) -> {
            recurse_17 = (recurse_16) -> {
                (lst_2, i_4) -> {
                    __core__chooseList(lst_2, () -> {
                        "<missing>"
                    }, () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(i_4, 0),
                            () -> {
                                head = __core__headList__safe(lst_2);
                                callback_2(head)
                            },
                            () -> {
                                recurse_16(recurse_16)(__core__tailList__safe(lst_2), __core__subtractInteger(i_4, 1))
                            }
                        )()
                    })()
                }
            };
            recurse_17(recurse_17)(list_1, index)
        }
    };
    __helios__data__show_bdata = (callback_3) -> {
        (data_7) -> {
            callback_nok_4 = __helios__data__show(data_7);
            __core__chooseData(data_7, callback_nok_4, callback_nok_4, callback_nok_4, callback_nok_4, () -> {
                callback_3(__core__unBData__safe(data_7))
            })()
        }
    };
    __helios__assetclass__show = (self_31) -> {
        () -> {
            __helios__data__show_constr_data((tag_1, fields_1) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_1, 0),
                    () -> {
                        mph_str = __helios__data__show_field(0, __helios__data__show_bdata((mph_4) -> {
                            __helios__bytearray__show(mph_4)()
                        }))(fields_1);
                        token_name_str = __helios__data__show_field(1, __helios__data__show_bdata((token_name_2) -> {
                            __helios__bytearray__show(token_name_2)()
                        }))(fields_1);
                        __core__appendString(mph_str, __core__appendString(".", token_name_str))
                    },
                    () -> {
                        __helios__data__show(self_31)()
                    }
                )()
            })(self_31)
        }
    };
    __helios__string____neq = (self_32, other_1) -> {
        __helios__bool____not(__helios__string____eq(self_32, other_1))
    };
    __helios__int____gt = (a_3, b_3) -> {
        __helios__bool____not(__core__lessThanEqualsInteger(a_3, b_3))
    };
    __helios__int____neq = (self_33, other_2) -> {
        __helios__bool____not(__helios__int____eq(self_33, other_2))
    };
    __helios__int____sub = __core__subtractInteger;
    __helios__value__to_map = (self_34) -> {
        () -> {
            self_34
        }
    };
    __helios__string__show = (self_35) -> {
        () -> {
            __core__appendString("'", __core__appendString(self_35, "'"))
        }
    };
    __helios__bool__show = (self_36) -> {
        () -> {
            __core__ifThenElse(
                self_36,
                "true",
                "false"
            )
        }
    };
    __helios__bool__trace = (self_37) -> {
        (prefix) -> {
            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_37)()), self_37)
        }
    };
    __helios__txinput____eq = __helios__common____eq;
    __helios__bytearray__from_data = __core__unBData;
    __helios__string__from_data = (d) -> {
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__common__length = (lst_3) -> {
        recurse_19 = (recurse_18, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_19(recurse_19, lst_3)
    };
    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {
        recurse_21 = (recurse_20, self_39, key_2) -> {
            __core__chooseList(self_39, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_39);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_38, key_1)
    };
    __helios__common__enum_tag_equals = (data_8, i_5) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_8)), i_5)
    };
    __helios__option__NONE_FUNC = (callback_4) -> {
        callback_4(false, ())
    };
    __helios__option__SOME_FUNC = (some) -> {
        (callback_5) -> {
            callback_5(true, some)
        }
    };
    __helios__bytearray__from_data_safe = (data_9) -> {
        __core__chooseData(data_9, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unBData__safe(data_9))
        })()
    };
    __helios__int__from_data_safe = (data_10) -> {
        __core__chooseData(data_10, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unIData__safe(data_10))
        }, () -> {
            __helios__option__NONE_FUNC
        })()
    };
    __helios__common__all = (self_40, fn_1) -> {
        recurse_23 = (recurse_22, self_41, fn_2) -> {
            __core__chooseList(self_41, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_41)),
                    () -> {
                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_23(recurse_23, self_40, fn_1)
    };
    __helios__common__identity = (self_42) -> {
        self_42
    };
    __helios__assetclass____to_data = __helios__common__identity;
    __helios__assetclass__from_data = __helios__common__identity;
    __helios__data__from_data = __helios__common__identity;
    __helios__bool__from_data = (d_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),
            false,
            true
        )
    };
    __helios__int__from_data = __core__unIData;
    __helios__common__serialize = (self_43) -> {
        () -> {
            __core__serialiseData(self_43)
        }
    };
    __helios__tx__serialize = __helios__common__serialize;
    __helios__common__find_safe = (self_44, fn_3, callback_6) -> {
        recurse_25 = (recurse_24, self_45, fn_4) -> {
            __core__chooseList(self_45, () -> {
                __core__constrData(1, __helios__common__list_0)
            }, () -> {
                head_2 = __core__headList__safe(self_45);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__constrData(0, __helios__common__list_1(callback_6(head_2)))
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(self_45), fn_4)
                    }
                )()
            })()
        };
        recurse_25(recurse_25, self_44, fn_3)
    };
    __helios__string__is_valid_data = (data_11) -> {
        __core__chooseData(data_11, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__string__is_valid_utf8(__core__unBData__safe(data_11))
        })()
    };
    __helios__bytearray__is_valid_data = (data_12) -> {
        __core__chooseData(data_12, false, false, false, false, true)
    };
    __helios__txoutputid__from_data = __helios__common__identity;
    __helios__common__test_constr_data_2 = (data_13, index_1, test_a, test_b) -> {
        __core__chooseData(data_13, () -> {
            pair_5 = __core__unConstrData__safe(data_13);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_5), index_1),
                () -> {
                    fields_2 = __core__sndPair(pair_5);
                    __core__chooseList(fields_2, () -> {
                        false
                    }, () -> {
                        __core__ifThenElse(
                            test_a(__core__headList__safe(fields_2)),
                            () -> {
                                tail = __core__tailList__safe(fields_2);
                                __core__chooseList(tail, () -> {
                                    false
                                }, () -> {
                                    __core__ifThenElse(
                                        test_b(__core__headList__safe(tail)),
                                        () -> {
                                            __core__chooseList(__core__tailList__safe(tail), () -> {
                                                true
                                            }, () -> {
                                                false
                                            })()
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data_fixed_length = (n_3) -> {
        (data_14) -> {
            __core__chooseData(data_14, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_7 = __core__unBData__safe(data_14);
                __core__ifThenElse(
                    __core__equalsInteger(__core__lengthOfByteString(bytes_7), n_3),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__txid__is_valid_data = (data_15) -> {
        __core__chooseData(data_15, () -> {
            pair_6 = __core__unConstrData__safe(data_15);
            index_2 = __core__fstPair(pair_6);
            fields_3 = __core__sndPair(pair_6);
            __core__ifThenElse(
                __core__equalsInteger(0, index_2),
                () -> {
                    __core__chooseList(fields_3, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_3), () -> {
                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_3))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__int__is_valid_data = (data_16) -> {
        __core__chooseData(data_16, false, false, false, true, false)
    };
    __helios__txoutputid__is_valid_data = (data_17) -> {
        __helios__common__test_constr_data_2(data_17, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)
    };
    __helios__data__is_valid_data = (data_18) -> {
        true
    };
    __helios__value__contains_policy = (self_46) -> {
        (mph_5) -> {
            mph_6 = __helios__mintingpolicyhash____to_data(mph_5);
            recurse_27 = (recurse_26, map_3) -> {
                __core__chooseList(map_3, () -> {
                    false
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mph_6),
                        () -> {
                            true
                        },
                        () -> {
                            recurse_26(recurse_26, __core__tailList__safe(map_3))
                        }
                    )()
                })()
            };
            recurse_27(recurse_27, self_46)
        }
    };
    __helios__value__from_map = __helios__common__identity;
    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;
    __helios__value__is_zero_inner = (tokens_1) -> {
        recurse_29 = (recurse_28, tokens_2) -> {
            __core__chooseList(tokens_2, () -> {
                true
            }, () -> {
                __helios__bool__and(() -> {
                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)
                }, () -> {
                    recurse_28(recurse_28, __core__tailList__safe(tokens_2))
                })
            })()
        };
        recurse_29(recurse_29, tokens_1)
    };
    __helios__value__is_zero = (self_47) -> {
        () -> {
            recurse_31 = (recurse_30, map_4) -> {
                __core__chooseList(map_4, () -> {
                    true
                }, () -> {
                    __helios__bool__and(() -> {
                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_4))))
                    }, () -> {
                        recurse_30(recurse_30, __core__tailList__safe(map_4))
                    })
                })()
            };
            recurse_31(recurse_31, self_47)
        }
    };
    __helios__value__get_policy = (self_48) -> {
        (mph_7) -> {
            mph_8 = __helios__mintingpolicyhash____to_data(mph_7);
            recurse_33 = (recurse_32, map_5) -> {
                __core__chooseList(map_5, () -> {
                    __helios__error("policy not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_5)), mph_8),
                        () -> {
                            __core__unMapData(__core__sndPair(__core__headList__safe(map_5)))
                        },
                        () -> {
                            recurse_32(recurse_32, __core__tailList__safe(map_5))
                        }
                    )()
                })()
            };
            recurse_33(recurse_33, self_48)
        }
    };
    __helios__value__get_inner_map_int = (map_6, key_3) -> {
        recurse_35 = (recurse_34, map_7, key_4) -> {
            __core__chooseList(map_7, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), key_4),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_7)))
                    },
                    () -> {
                        recurse_34(recurse_34, __core__tailList__safe(map_7), key_4)
                    }
                )()
            })()
        };
        recurse_35(recurse_35, map_6, key_3)
    };
    __helios__value__get_map_keys = (map_8) -> {
        recurse_37 = (recurse_36, map_9) -> {
            __core__chooseList(map_9, () -> {
                __helios__common__list_0
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_9)), recurse_36(recurse_36, __core__tailList__safe(map_9)))
            })()
        };
        recurse_37(recurse_37, map_8)
    };
    __helios__common__any = (self_49, fn_5) -> {
        recurse_39 = (recurse_38, self_50, fn_6) -> {
            __core__chooseList(self_50, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_6(__core__headList__safe(self_50)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_38(recurse_38, __core__tailList__safe(self_50), fn_6)
                    }
                )()
            })()
        };
        recurse_39(recurse_39, self_49, fn_5)
    };
    __helios__common__is_in_bytearray_list = (lst_5, key_5) -> {
        __helios__common__any(lst_5, (item_4) -> {
            __core__equalsData(item_4, key_5)
        })
    };
    __helios__common__concat = (a_4, b_4) -> {
        recurse_41 = (recurse_40, lst_6, rem) -> {
            __core__chooseList(rem, () -> {
                lst_6
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_40(recurse_40, lst_6, __core__tailList__safe(rem)))
            })()
        };
        recurse_41(recurse_41, b_4, a_4)
    };
    __helios__value__merge_map_keys = (a_5, b_5) -> {
        aKeys = __helios__value__get_map_keys(a_5);
        recurse_43 = (recurse_42, keys, map_10) -> {
            __core__chooseList(map_10, () -> {
                __helios__common__list_0
            }, () -> {
                key_6 = __core__fstPair(__core__headList__safe(map_10));
                __core__ifThenElse(
                    __helios__common__is_in_bytearray_list(aKeys, key_6),
                    () -> {
                        recurse_42(recurse_42, keys, __core__tailList__safe(map_10))
                    },
                    () -> {
                        __core__mkCons(key_6, recurse_42(recurse_42, keys, __core__tailList__safe(map_10)))
                    }
                )()
            })()
        };
        uniqueBKeys = recurse_43(recurse_43, aKeys, b_5);
        __helios__common__concat(aKeys, uniqueBKeys)
    };
    __helios__value__add_or_subtract_inner = (op) -> {
        (a_6, b_6) -> {
            recurse_45 = (recurse_44, keys_1, result) -> {
                __core__chooseList(keys_1, () -> {
                    result
                }, () -> {
                    key_7 = __core__headList__safe(keys_1);
                    tail_1 = recurse_44(recurse_44, __core__tailList__safe(keys_1), result);
                    sum = op(__helios__value__get_inner_map_int(a_6, key_7), __helios__value__get_inner_map_int(b_6, key_7));
                    __core__ifThenElse(
                        __core__equalsInteger(sum, 0),
                        () -> {
                            tail_1
                        },
                        () -> {
                            __core__mkCons(__core__mkPairData(key_7, __core__iData(sum)), tail_1)
                        }
                    )()
                })()
            };
            recurse_45(recurse_45, __helios__value__merge_map_keys(a_6, b_6), __core__mkNilPairData(()))
        }
    };
    __helios__value__get_inner_map = (map_11, mph_9) -> {
        recurse_47 = (recurse_46, map_12) -> {
            __core__chooseList(map_12, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_12)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_12)))
                    },
                    () -> {
                        recurse_46(recurse_46, __core__tailList__safe(map_12))
                    }
                )()
            })()
        };
        recurse_47(recurse_47, map_11)
    };
    __helios__value__add_or_subtract = (a_7, b_7, op_1) -> {
        recurse_49 = (recurse_48, keys_2, result_1) -> {
            __core__chooseList(keys_2, () -> {
                result_1
            }, () -> {
                key_8 = __core__headList__safe(keys_2);
                tail_2 = recurse_48(recurse_48, __core__tailList__safe(keys_2), result_1);
                item_5 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_7, key_8), __helios__value__get_inner_map(b_7, key_8));
                __core__chooseList(item_5, () -> {
                    tail_2
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_8, __core__mapData(item_5)), tail_2)
                })()
            })()
        };
        recurse_49(recurse_49, __helios__value__merge_map_keys(a_7, b_7), __core__mkNilPairData(()))
    };
    __helios__value____add = (a_8, b_8) -> {
        __helios__value__add_or_subtract(a_8, b_8, __core__addInteger)
    };
    __helios__common__map = (self_51, fn_7, init) -> {
        recurse_51 = (recurse_50, rem_1, lst_7) -> {
            __core__chooseList(rem_1, () -> {
                lst_7
            }, () -> {
                __core__mkCons(fn_7(__core__headList__safe(rem_1)), recurse_50(recurse_50, __core__tailList__safe(rem_1), lst_7))
            })()
        };
        recurse_51(recurse_51, self_51, init)
    };
    __helios__value____to_data = __core__mapData;
    __helios__value__value = __helios__common__identity;
    __helios__value__from_data = __core__unMapData;
    __helios__common__insert_in_sorted = (x_3, lst_8, comp) -> {
        recurse_53 = (recurse_52, lst_9) -> {
            __core__chooseList(lst_9, () -> {
                __core__mkCons(x_3, lst_9)
            }, () -> {
                head_3 = __core__headList__safe(lst_9);
                __core__ifThenElse(
                    comp(x_3, head_3),
                    () -> {
                        __core__mkCons(x_3, lst_9)
                    },
                    () -> {
                        __core__mkCons(head_3, recurse_52(recurse_52, __core__tailList__safe(lst_9)))
                    }
                )()
            })()
        };
        recurse_53(recurse_53, lst_8)
    };
    __helios__common__sort = (lst_10, comp_1) -> {
        recurse_55 = (recurse_54, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                (head_4, tail_3) -> {
                    __helios__common__insert_in_sorted(head_4, tail_3, comp_1)
                }(__core__headList__safe(lst_11), recurse_54(recurse_54, __core__tailList__safe(lst_11)))
            })()
        };
        recurse_55(recurse_55, lst_10)
    };
    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;
    __helios__common__filter = (self_52, fn_8, nil) -> {
        recurse_57 = (recurse_56, self_53, fn_9) -> {
            __core__chooseList(self_53, () -> {
                nil
            }, () -> {
                head_5 = __core__headList__safe(self_53);
                __core__ifThenElse(
                    fn_9(head_5),
                    () -> {
                        __core__mkCons(head_5, recurse_56(recurse_56, __core__tailList__safe(self_53), fn_9))
                    },
                    () -> {
                        recurse_56(recurse_56, __core__tailList__safe(self_53), fn_9)
                    }
                )()
            })()
        };
        recurse_57(recurse_57, self_52, fn_8)
    };
    __helios__common__filter_map = (self_54, fn_10) -> {
        __helios__common__filter(self_54, fn_10, __core__mkNilPairData(()))
    };
    __helios__bytearray____lt = __core__lessThanByteString;
    __helios__int__max = (a_9, b_9) -> {
        __core__ifThenElse(
            __core__lessThanInteger(a_9, b_9),
            b_9,
            a_9
        )
    };
    __helios__common__slice_bytearray = (self_55, selfLengthFn) -> {
        (start, end) -> {
            normalize = (pos_1) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(pos_1, 0),
                    () -> {
                        __core__addInteger(__core__addInteger(selfLengthFn(self_55), 1), pos_1)
                    },
                    () -> {
                        pos_1
                    }
                )()
            };
            fn_12 = (start_1) -> {
                fn_11 = (end_1) -> {
                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_55)
                };
                fn_11(normalize(end))
            };
            fn_12(normalize(start))
        }
    };
    __helios__bytearray__slice = (self_56) -> {
        __helios__common__slice_bytearray(self_56, __core__lengthOfByteString)
    };
    __helios__bytearray__blake2b = (self_57) -> {
        () -> {
            __core__blake2b_256(self_57)
        }
    };
    __helios__bytearray__length = __core__lengthOfByteString;
    __helios__bytearray____add = __core__appendByteString;
    __helios__txid__serialize = __helios__common__serialize;
    __helios__txoutputid__index = (self_58) -> {
        __helios__int__from_data(__helios__common__enum_field_1(self_58))
    };
    __helios__txoutputid__tx_id = __helios__common__enum_field_0;
    __helios__common__enum_fields_after_4 = (self_59) -> {
        __core__tailList(__helios__common__enum_fields_after_3(self_59))
    };
    __helios__common__enum_fields_after_5 = (self_60) -> {
        __core__tailList(__helios__common__enum_fields_after_4(self_60))
    };
    __helios__common__enum_fields_after_6 = (self_61) -> {
        __core__tailList(__helios__common__enum_fields_after_5(self_61))
    };
    __helios__common__enum_fields_after_7 = (self_62) -> {
        __core__tailList(__helios__common__enum_fields_after_6(self_62))
    };
    __helios__common__enum_fields_after_8 = (self_63) -> {
        __core__tailList(__helios__common__enum_fields_after_7(self_63))
    };
    __helios__common__enum_field_9 = (self_64) -> {
        __core__headList(__helios__common__enum_fields_after_8(self_64))
    };
    __helios__tx__redeemers = (self_65) -> {
        __core__unMapData(__helios__common__enum_field_9(self_65))
    };
    __helios__scriptpurpose__spending____is = (data_19) -> {
        __helios__common__enum_tag_equals(data_19, 1)
    };
    __helios__txoutputid____eq = __helios__common____eq;
    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;
    __helios__value__get_safe = (self_66) -> {
        (assetClass_2) -> {
            mintingPolicyHash = __helios__common__enum_field_0(assetClass_2);
            tokenName_2 = __helios__common__enum_field_1(assetClass_2);
            outer_3 = (outer_2, inner_3, map_13) -> {
                __core__chooseList(map_13, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), mintingPolicyHash),
                        () -> {
                            inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_13))))
                        },
                        () -> {
                            outer_2(outer_2, inner_3, __core__tailList__safe(map_13))
                        }
                    )()
                })()
            };
            inner_5 = (inner_4, map_14) -> {
                __core__chooseList(map_14, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_14)), tokenName_2),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_14)))
                        },
                        () -> {
                            inner_4(inner_4, __core__tailList__safe(map_14))
                        }
                    )()
                })()
            };
            outer_3(outer_3, inner_5, self_66)
        }
    };
    __helios__scriptpurpose____to_data = __helios__common__identity;
    __helios__txid__show = (self_67) -> {
        () -> {
            __helios__data__show_constr_data((tag_2, fields_4) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_2, 0),
                    () -> {
                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_8) -> {
                            __helios__bytearray__show(bytes_8)()
                        }))(fields_4)
                    },
                    () -> {
                        __helios__data__show(self_67)()
                    }
                )()
            })(self_67)
        }
    };
    __helios__data__show_idata = (callback_7) -> {
        (data_20) -> {
            callback_nok_5 = __helios__data__show(data_20);
            __core__chooseData(data_20, callback_nok_5, callback_nok_5, callback_nok_5, () -> {
                callback_7(__core__unIData__safe(data_20))
            }, callback_nok_5)()
        }
    };
    __helios__txoutputid__show = (self_68) -> {
        () -> {
            __helios__data__show_constr_data((tag_3, fields_5) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_3, 0),
                    () -> {
                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {
                            __helios__txid__show(tx_id_data)()
                        })(fields_5);
                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_6) -> {
                            __helios__int__show(i_6)()
                        }))(fields_5);
                        __core__appendString(tx_id_str, __core__appendString("#", index_str))
                    },
                    () -> {
                        __helios__data__show(self_68)()
                    }
                )()
            })(self_68)
        }
    };
    __helios__txoutputdatum__inline = (self_69) -> {
        pair_7 = __core__unConstrData(self_69);
        index_3 = __core__fstPair(pair_7);
        fields_6 = __core__sndPair(pair_7);
        __core__ifThenElse(
            __core__equalsInteger(index_3, 2),
            () -> {
                __core__headList(fields_6)
            },
            () -> {
                __helios__error("not an inline datum")
            }
        )()
    };
    __helios__common__enum_field_2 = (self_70) -> {
        __core__headList(__helios__common__enum_fields_after_1(self_70))
    };
    __helios__txoutput__datum = __helios__common__enum_field_2;
    __helios__txinput__datum = (self_71) -> {
        __helios__txoutput__datum(__helios__txinput__output(self_71))
    };
    __helios__tx__ref_inputs = (self_72) -> {
        __core__unListData(__helios__common__enum_field_1(self_72))
    };
    __helios__tx__outputs = (self_73) -> {
        __core__unListData(__helios__common__enum_field_2(self_73))
    };
    __helios__address____eq = __helios__common____eq;
    __helios__txoutput__address = __helios__common__enum_field_0;
    __helios__bytearray__decode_utf8 = (self_74) -> {
        () -> {
            __core__decodeUtf8(self_74)
        }
    };
    __helios__string__serialize = (self_75) -> {
        () -> {
            __core__serialiseData(__helios__string____to_data(self_75))
        }
    };
    __helios__txinput__address = (self_76) -> {
        __helios__txoutput__address(__helios__txinput__output(self_76))
    };
    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);
    __helios__txoutput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_0 = __core__tailList;
    __helios__common__struct_field_1 = (self_77) -> {
        __core__headList(__helios__common__struct_fields_after_0(self_77))
    };
    __helios__common__struct_field_0 = __core__headList;
    __helios__struct____to_data = __core__listData;
    __helios__struct____eq = (self_78, other_3) -> {
        __core__equalsData(__helios__struct____to_data(self_78), __helios__struct____to_data(other_3))
    };
    __helios__value__compare_inner = (comp_2, a_10, b_10) -> {
        recurse_59 = (recurse_58, keys_3) -> {
            __core__chooseList(keys_3, () -> {
                true
            }, () -> {
                key_9 = __core__headList__safe(keys_3);
                __core__ifThenElse(
                    __helios__bool____not(comp_2(__helios__value__get_inner_map_int(a_10, key_9), __helios__value__get_inner_map_int(b_10, key_9))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_58(recurse_58, __core__tailList__safe(keys_3))
                    }
                )()
            })()
        };
        recurse_59(recurse_59, __helios__value__merge_map_keys(a_10, b_10))
    };
    __helios__value__compare = (a_11, b_11, comp_3) -> {
        recurse_61 = (recurse_60, keys_4) -> {
            __core__chooseList(keys_4, () -> {
                true
            }, () -> {
                key_10 = __core__headList__safe(keys_4);
                __core__ifThenElse(
                    __helios__bool____not(__helios__value__compare_inner(comp_3, __helios__value__get_inner_map(a_11, key_10), __helios__value__get_inner_map(b_11, key_10))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_60(recurse_60, __core__tailList__safe(keys_4))
                    }
                )()
            })()
        };
        recurse_61(recurse_61, __helios__value__merge_map_keys(a_11, b_11))
    };
    __helios__value____geq = (a_12, b_12) -> {
        __helios__value__compare(a_12, b_12, (a_qty, b_qty) -> {
            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))
        })
    };
    __helios__value__contains = (self_79) -> {
        (value_2) -> {
            __helios__value____geq(self_79, value_2)
        }
    };
    __helios__txoutput__sum_values = (outputs) -> {
        __helios__common__fold(outputs, (prev_3, txOutput) -> {
            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))
        }, __helios__value__ZERO)
    };
    __helios__common__filter_list = (self_80, fn_13) -> {
        __helios__common__filter(self_80, fn_13, __helios__common__list_0)
    };
    __helios__tx__filter_outputs = (self_81, fn_14) -> {
        __helios__common__filter_list(__helios__tx__outputs(self_81), fn_14)
    };
    __helios__address__credential = __helios__common__enum_field_0;
    __helios__spendingcredential__is_validator = (self_82) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_82)), 1)
    };
    __helios__validatorhash____eq = __helios__bytearray____eq;
    __helios__validatorhash__from_data = __helios__bytearray__from_data;
    __helios__spendingcredential__validator__hash = (self_83) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_83))
    };
    __helios__spendingcredential__validator__cast = (data_21) -> {
        __helios__common__assert_constr_index(data_21, 1)
    };
    __helios__txoutput__is_locked_by = (self_84) -> {
        (hash) -> {
            credential = __helios__address__credential(__helios__txoutput__address(self_84));
            __core__ifThenElse(
                __helios__spendingcredential__is_validator(credential),
                () -> {
                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))
                },
                () -> {
                    false
                }
            )()
        }
    };
    __helios__tx__outputs_locked_by = (self_85) -> {
        (vh) -> {
            __helios__tx__filter_outputs(self_85, (output) -> {
                __helios__txoutput__is_locked_by(output)(vh)
            })
        }
    };
    __helios__tx__value_locked_by = (self_86) -> {
        (vh_1) -> {
            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_86)(vh_1))
        }
    };
    __helios__txoutputdatum__serialize = __helios__common__serialize;
    __helios__data__constrdata____is = (data_22) -> {
        __core__chooseData(data_22, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__data__constrdata__fields = (data_23) -> {
        __core__sndPair(__core__unConstrData(data_23))
    };
    __helios__data__constrdata__tag = (data_24) -> {
        __core__fstPair(__core__unConstrData(data_24))
    };
    __helios__txinput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_1 = (self_87) -> {
        __core__tailList(__helios__common__struct_fields_after_0(self_87))
    };
    __helios__common__struct_fields_after_2 = (self_88) -> {
        __core__tailList(__helios__common__struct_fields_after_1(self_88))
    };
    __helios__common__struct_fields_after_3 = (self_89) -> {
        __core__tailList(__helios__common__struct_fields_after_2(self_89))
    };
    __helios__common__struct_field_4 = (self_90) -> {
        __core__headList(__helios__common__struct_fields_after_3(self_90))
    };
    __helios__common__struct_field_3 = (self_91) -> {
        __core__headList(__helios__common__struct_fields_after_2(self_91))
    };
    __helios__common__struct_field_2 = (self_92) -> {
        __core__headList(__helios__common__struct_fields_after_1(self_92))
    };
    __helios__struct__serialize = (self_93) -> {
        () -> {
            __core__serialiseData(__helios__struct____to_data(self_93))
        }
    };
    __helios__txoutput__is_valid_data = (data_25) -> {
        __core__chooseData(data_25, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__txinput__is_valid_data = (data_26) -> {
        __helios__common__test_constr_data_2(data_26, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)
    };
    __helios__txinput____to_data = __helios__common__identity;
    __helios__common__enum_field_7 = (self_94) -> {
        __core__headList(__helios__common__enum_fields_after_6(self_94))
    };
    __helios__common__enum_field_6 = (self_95) -> {
        __core__headList(__helios__common__enum_fields_after_5(self_95))
    };
    __helios__common__enum_field_5 = (self_96) -> {
        __core__headList(__helios__common__enum_fields_after_4(self_96))
    };
    __helios__common__enum_field_3 = (self_97) -> {
        __core__headList(__helios__common__enum_fields_after_2(self_97))
    };
    __helios__common__mStruct_field_internal = (map_15, name) -> {
        name_data = __core__bData(name);
        recurse_63 = (recurse_62, map_16) -> {
            __core__chooseList(map_16, () -> {
                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name))), ": field not found"))
            }, () -> {
                head_6 = __core__headList__safe(map_16);
                key_11 = __core__fstPair(head_6);
                value_3 = __core__sndPair(head_6);
                __core__ifThenElse(
                    __core__equalsData(key_11, name_data),
                    () -> {
                        value_3
                    },
                    () -> {
                        recurse_62(recurse_62, __core__tailList__safe(map_16))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, map_15)
    };
    __helios__common__mStruct_field = (self_98, name_1) -> {
        __helios__common__mStruct_field_internal(__core__unMapData(self_98), name_1)
    };
    __helios__common__test_mStruct_field = (self_99, name_2, inner_test) -> {
        __core__chooseData(self_99, () -> {
            false
        }, () -> {
            map_17 = __core__unMapData__safe(self_99);
            recurse_65 = (recurse_64, map_18) -> {
                __core__chooseList(map_18, () -> {
                    __core__trace(__core__appendString("Warning: field not found: ", __core__decodeUtf8__safe(__core__unBData__safe(name_2))), () -> {
                        false
                    })()
                }, () -> {
                    head_7 = __core__headList__safe(map_18);
                    key_12 = __core__fstPair(head_7);
                    value_4 = __core__sndPair(head_7);
                    __core__ifThenElse(
                        __core__equalsData(key_12, name_2),
                        () -> {
                            inner_test(value_4)
                        },
                        () -> {
                            recurse_64(recurse_64, __core__tailList__safe(map_18))
                        }
                    )()
                })()
            };
            recurse_65(recurse_65, map_17)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__mintingpolicyhash__is_valid_data = (data_27) -> {
        __core__chooseData(data_27, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            bytes_9 = __core__unBData__safe(data_27);
            n_4 = __core__lengthOfByteString(bytes_9);
            __core__ifThenElse(
                __core__equalsInteger(n_4, 0),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(n_4, 28),
                        true,
                        false
                    )
                }
            )()
        })()
    };
    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__spendingcredential__is_valid_data = (data_28) -> {
        __core__chooseData(data_28, () -> {
            pair_8 = __core__unConstrData__safe(data_28);
            index_4 = __core__fstPair(pair_8);
            fields_7 = __core__sndPair(pair_8);
            __core__ifThenElse(
                __core__equalsInteger(index_4, 0),
                () -> {
                    __core__chooseList(fields_7, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_7), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_7))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_4, 1),
                        () -> {
                            __core__chooseList(fields_7, () -> {
                                false
                            }, () -> {
                                __core__chooseList(__core__tailList__safe(fields_7), () -> {
                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_7))
                                }, () -> {
                                    false
                                })()
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__common__test_list_head_data = (test_head, test_tail) -> {
        (list_2) -> {
            __core__chooseList(list_2, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    test_head(__core__headList(list_2)),
                    () -> {
                        test_tail(__core__tailList(list_2))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;
    __helios__common__test_list_empty = (list_3) -> {
        __core__chooseList(list_3, true, false)
    };
    __helios__stakingcredential__is_valid_data = (data_29) -> {
        __core__chooseData(data_29, () -> {
            pair_9 = __core__unConstrData__safe(data_29);
            tag_4 = __core__fstPair(pair_9);
            fields_8 = __core__sndPair(pair_9);
            __core__ifThenElse(
                __core__equalsInteger(tag_4, 0),
                () -> {
                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_8)
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(tag_4, 1),
                        () -> {
                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_8)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__stakingcredential]__is_valid_data = (data_30) -> {
        __core__chooseData(data_30, () -> {
            pair_10 = __core__unConstrData__safe(data_30);
            index_5 = __core__fstPair(pair_10);
            fields_9 = __core__sndPair(pair_10);
            __core__ifThenElse(
                __core__equalsInteger(index_5, 0),
                () -> {
                    __core__chooseList(fields_9, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_9), () -> {
                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_9))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_5, 1),
                        () -> {
                            __core__chooseList(fields_9, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__address__is_valid_data = (data_31) -> {
        __helios__common__test_constr_data_2(data_31, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)
    };
    __helios__validatorhash__show = __helios__bytearray__show;
    __helios__spendingcredential____eq = __helios__common____eq;
    __helios__validatorhash____to_data = __helios__bytearray____to_data;
    __helios__spendingcredential__new_validator = (hash_1) -> {
        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))
    };
    __helios__bool____to_data = (b_13) -> {
        __core__constrData(__core__ifThenElse(
            b_13,
            1,
            0
        ), __helios__common__list_0)
    };
    __helios__bytearray__is_valid_data_max_length = (n_5) -> {
        (data_32) -> {
            __core__chooseData(data_32, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_10 = __core__unBData__safe(data_32);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_10), n_5),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__assetclass__is_valid_data = (data_33) -> {
        __helios__common__test_constr_data_2(data_33, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))
    };
    __helios__data__mapdata____is = (data_34) -> {
        __core__chooseData(data_34, () -> {
            false
        }, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__scriptpurpose__from_data = __helios__common__identity;
    __module__StellarHeliosHelpers__TODO = (task) -> {
        __helios__print(__helios__string____add(__helios__string____add("  \u{1F7E5}  \u{1F633}\u{1F4A6}  TODO: ", task), "
"))
    };
    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion) -> {
        assertion_1 = __core__ifThenElse(
            __useopt__assertion,
            () -> {
                assertion
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__helios__print(__helios__string____add("\u2757 ", reqt)), __helios__assert(assertion_1, __helios__string____add("  \u274C\u274C ^ failed: ", reqt)))
    };
    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2) -> {
        assertion_3 = __core__ifThenElse(
            __useopt__assertion_1,
            () -> {
                assertion_2
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3), true)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {
        tn_1 = __core__ifThenElse(
            __useopt__tn,
            () -> {
                tn
            },
            () -> {
                ""
            }
        )();
        tnBytes_1 = __core__ifThenElse(
            __useopt__tnBytes,
            () -> {
                tnBytes
            },
            () -> {
                __helios__string__encode_utf8(tn_1)()
            }
        )();
        count_1 = __core__ifThenElse(
            __useopt__count,
            () -> {
                count
            },
            () -> {
                1
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), "missing reqd tn or tnBytes"), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), count_1))
    };
    __helios__list[__helios__txoutput]__find = (self_100) -> {
        (fn_15) -> {
            recurse_67 = (recurse_66, lst_12) -> {
                __core__chooseList(lst_12, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_6 = __helios__txoutput__from_data(__core__headList__safe(lst_12));
                    __core__ifThenElse(
                        fn_15(item_6),
                        () -> {
                            item_6
                        },
                        () -> {
                            recurse_66(recurse_66, __core__tailList__safe(lst_12))
                        }
                    )()
                })()
            };
            recurse_67(recurse_67, self_100)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length = (self_101) -> {
        __helios__common__length(self_101)
    };
    __helios__map[__helios__bytearray@__helios__int]__length = (self_102) -> {
        __helios__common__length(self_102)
    };
    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_19) -> {
        recurse_69 = (recurse_68, map_20) -> {
            __core__chooseList(map_20, () -> {
                true
            }, () -> {
                head_8 = __core__headList__safe(map_20);
                __core__ifThenElse(
                    __helios__bytearray__is_valid_data(__core__fstPair(head_8)),
                    () -> {
                        __core__ifThenElse(
                            __helios__int__is_valid_data(__core__sndPair(head_8)),
                            () -> {
                                recurse_68(recurse_68, __core__tailList__safe(map_20))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_69(recurse_69, map_19)
    };
    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_35) -> {
        map_21 = __core__unMapData(data_35);
        _ = __core__ifThenElse(
            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_21),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_21
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_103) -> {
        (key_13) -> {
            __helios__common__map_get(self_103, __helios__scriptpurpose____to_data(key_13), (x_4) -> {
                __helios__data__from_data(x_4)
            }, () -> {
                __helios__error("key not found")
            })
        }
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_104) -> {
        (fn_16) -> {
            recurse_71 = (recurse_70, map_22) -> {
                __core__chooseList(map_22, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_7 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_22)));
                    __core__ifThenElse(
                        fn_16(item_7),
                        () -> {
                            item_7
                        },
                        () -> {
                            recurse_70(recurse_70, __core__tailList__safe(map_22))
                        }
                    )()
                })()
            };
            recurse_71(recurse_71, self_104)
        }
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __helios__txinput__output_id(txInput);
        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);
        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {
            __cond = purpose;
            __core__ifThenElse(
                __helios__scriptpurpose__spending____is(__cond),
                () -> {
                    (sp) -> {
                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)
                    }
                },
                () -> {
                    (__1) -> {
                        false
                    }
                }
            )()(__cond)
        });
        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)
    };
    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_36) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_36, __core__bData(#747065), __helios__string__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_36, __core__bData(#406964), __helios__bytearray__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid data in AnyData.@id", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in AnyData.tpe", () -> {
                    false
                })()
            }
        )()
    };
    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_37) -> {
        ignore = __core__ifThenElse(
            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_37),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", ())
            }
        )();
        data_37
    };
    __module__StellarHeliosHelpers__AnyData[]__id = (self_105) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_105, #406964))
    };
    __module__StellarHeliosHelpers__AnyData[]__type = (self_106) -> {
        __helios__string__from_data(__helios__common__mStruct_field(self_106, #747065))
    };
    __helios__list[__helios__data]__head = (self_107) -> {
        __helios__data__from_data(__core__headList(self_107))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {
        __cond_1 = value_5;
        __core__ifThenElse(
            __helios__data__constrdata____is(__cond_1),
            () -> {
                (__lhs_0) -> {
                    fields_10 = __helios__data__constrdata__fields(__lhs_0);
                    __cond_2 = __helios__list[__helios__data]__head(fields_10);
                    __core__ifThenElse(
                        __helios__data__mapdata____is(__cond_2),
                        () -> {
                            (__lhs_0_1) -> {
                                __helios__list[__helios__data]__head(fields_10)
                            }
                        },
                        () -> {
                            (__3) -> {
                                __helios__error("bad cast from ConstrData{_, ...fields} to mStruct: first field must be a map")
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    __helios__error("bad cast to mStruct from non-ConstrData")
                }
            }
        )()(__cond_1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {
        (data_38) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_38),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_38),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_38),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {
        (data_39) -> {
            ignore_1 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_39),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateLifecycleActivity data", ())
                }
            )();
            data_39
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_40) -> {
        __helios__common__enum_tag_equals(data_40, 0)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_41) -> {
        __core__chooseData(data_41, () -> {
            pair_11 = __core__unConstrData__safe(data_41);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_11), 0),
                () -> {
                    data_42 = __core__listData(__core__sndPair(pair_11));
                    __core__chooseData(data_42, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_11 = __core__unListData__safe(data_42);
                        __core__chooseList(fields_11, () -> {
                            false
                        }, () -> {
                            head_9 = __core__headList__safe(fields_11);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_9),
                                () -> {
                                    fields_12 = __core__tailList__safe(fields_11);
                                    __core__chooseList(fields_12, () -> {
                                        false
                                    }, () -> {
                                        head_10 = __core__headList__safe(fields_12);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_10),
                                            () -> {
                                                fields_13 = __core__tailList__safe(fields_12);
                                                __core__chooseList(fields_13, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed = (self_108) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_108))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose = (self_109) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_109))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_43) -> {
        __helios__common__enum_tag_equals(data_43, 1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_44) -> {
        __core__chooseData(data_44, () -> {
            pair_12 = __core__unConstrData__safe(data_44);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_12), 1),
                () -> {
                    data_45 = __core__listData(__core__sndPair(pair_12));
                    __core__chooseData(data_45, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_14 = __core__unListData__safe(data_45);
                        __core__chooseList(fields_14, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is = (data_46) -> {
        __helios__common__enum_tag_equals(data_46, 2)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_47) -> {
        __core__chooseData(data_47, () -> {
            pair_13 = __core__unConstrData__safe(data_47);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_13), 2),
                () -> {
                    data_48 = __core__listData(__core__sndPair(pair_13));
                    __core__chooseData(data_48, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_15 = __core__unListData__safe(data_48);
                        __core__chooseList(fields_15, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {
        (data_49) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_49),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_49),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_49),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_49),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_49),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_49),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_49),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_49),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__from_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1) -> {
        (data_50) -> {
            ignore_2 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(data_50),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateRole data", ())
                }
            )();
            data_50
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_51) -> {
        __helios__common__enum_tag_equals(data_51, 0)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2 = (data_52) -> {
        __core__chooseData(data_52, () -> {
            pair_14 = __core__unConstrData__safe(data_52);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_14), 0),
                () -> {
                    data_53 = __core__listData(__core__sndPair(pair_14));
                    __core__chooseData(data_53, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_16 = __core__unListData__safe(data_53);
                        __core__chooseList(fields_16, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_54) -> {
        __helios__common__enum_tag_equals(data_54, 1)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2 = (data_55) -> {
        __core__chooseData(data_55, () -> {
            pair_15 = __core__unConstrData__safe(data_55);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_15), 1),
                () -> {
                    data_56 = __core__listData(__core__sndPair(pair_15));
                    __core__chooseData(data_56, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_17 = __core__unListData__safe(data_56);
                        __core__chooseList(fields_17, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is = (data_57) -> {
        __helios__common__enum_tag_equals(data_57, 2)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2 = (data_58) -> {
        __core__chooseData(data_58, () -> {
            pair_16 = __core__unConstrData__safe(data_58);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_16), 2),
                () -> {
                    data_59 = __core__listData(__core__sndPair(pair_16));
                    __core__chooseData(data_59, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_18 = __core__unListData__safe(data_59);
                        __core__chooseList(fields_18, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is = (data_60) -> {
        __helios__common__enum_tag_equals(data_60, 3)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2 = (data_61) -> {
        __core__chooseData(data_61, () -> {
            pair_17 = __core__unConstrData__safe(data_61);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_17), 3),
                () -> {
                    data_62 = __core__listData(__core__sndPair(pair_17));
                    __core__chooseData(data_62, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_19 = __core__unListData__safe(data_62);
                        __core__chooseList(fields_19, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is = (data_63) -> {
        __helios__common__enum_tag_equals(data_63, 4)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2 = (data_64) -> {
        __core__chooseData(data_64, () -> {
            pair_18 = __core__unConstrData__safe(data_64);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_18), 4),
                () -> {
                    data_65 = __core__listData(__core__sndPair(pair_18));
                    __core__chooseData(data_65, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_20 = __core__unListData__safe(data_65);
                        __core__chooseList(fields_20, () -> {
                            false
                        }, () -> {
                            head_11 = __core__headList__safe(fields_20);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_11),
                                () -> {
                                    fields_21 = __core__tailList__safe(fields_20);
                                    __core__chooseList(fields_21, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_110) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_110))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new = (self_111) -> {
        __core__constrData(4, __helios__common__list_1(__helios__string____to_data(self_111)))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is = (data_66) -> {
        __helios__common__enum_tag_equals(data_66, 5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2 = (data_67) -> {
        __core__chooseData(data_67, () -> {
            pair_19 = __core__unConstrData__safe(data_67);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_19), 5),
                () -> {
                    data_68 = __core__listData(__core__sndPair(pair_19));
                    __core__chooseData(data_68, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_22 = __core__unListData__safe(data_68);
                        __core__chooseList(fields_22, () -> {
                            false
                        }, () -> {
                            head_12 = __core__headList__safe(fields_22);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_12),
                                () -> {
                                    fields_23 = __core__tailList__safe(fields_22);
                                    __core__chooseList(fields_23, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_69) -> {
        __helios__common__enum_tag_equals(data_69, 6)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2 = (data_70) -> {
        __core__chooseData(data_70, () -> {
            pair_20 = __core__unConstrData__safe(data_70);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_20), 6),
                () -> {
                    data_71 = __core__listData(__core__sndPair(pair_20));
                    __core__chooseData(data_71, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_24 = __core__unListData__safe(data_71);
                        __core__chooseList(fields_24, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {
        __core__constrData(6, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_72) -> {
        __helios__common__enum_tag_equals(data_72, 7)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2 = (data_73) -> {
        __core__chooseData(data_73, () -> {
            pair_21 = __core__unConstrData__safe(data_73);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_21), 7),
                () -> {
                    data_74 = __core__listData(__core__sndPair(pair_21));
                    __core__chooseData(data_74, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_25 = __core__unListData__safe(data_74);
                        __core__chooseList(fields_25, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {
        (data_75) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_75),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_75),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_75),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_75),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_75),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__from_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1) -> {
        (data_76) -> {
            ignore_3 = __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(data_76),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestActivity data", ())
                }
            )();
            data_76
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is = (data_77) -> {
        __helios__common__enum_tag_equals(data_77, 0)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2 = (data_78) -> {
        __core__chooseData(data_78, () -> {
            pair_22 = __core__unConstrData__safe(data_78);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_22), 0),
                () -> {
                    data_79 = __core__listData(__core__sndPair(pair_22));
                    __core__chooseData(data_79, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_26 = __core__unListData__safe(data_79);
                        __core__chooseList(fields_26, () -> {
                            false
                        }, () -> {
                            head_13 = __core__headList__safe(fields_26);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_13),
                                () -> {
                                    fields_27 = __core__tailList__safe(fields_26);
                                    __core__chooseList(fields_27, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is = (data_80) -> {
        __helios__common__enum_tag_equals(data_80, 1)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2 = (data_81) -> {
        __core__chooseData(data_81, () -> {
            pair_23 = __core__unConstrData__safe(data_81);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_23), 1),
                () -> {
                    data_82 = __core__listData(__core__sndPair(pair_23));
                    __core__chooseData(data_82, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_28 = __core__unListData__safe(data_82);
                        __core__chooseList(fields_28, () -> {
                            false
                        }, () -> {
                            head_14 = __core__headList__safe(fields_28);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_14),
                                () -> {
                                    fields_29 = __core__tailList__safe(fields_28);
                                    __core__chooseList(fields_29, () -> {
                                        false
                                    }, () -> {
                                        head_15 = __core__headList__safe(fields_29);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_15),
                                            () -> {
                                                fields_30 = __core__tailList__safe(fields_29);
                                                __core__chooseList(fields_30, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is = (data_83) -> {
        __helios__common__enum_tag_equals(data_83, 2)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2 = (data_84) -> {
        __core__chooseData(data_84, () -> {
            pair_24 = __core__unConstrData__safe(data_84);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_24), 2),
                () -> {
                    data_85 = __core__listData(__core__sndPair(pair_24));
                    __core__chooseData(data_85, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_31 = __core__unListData__safe(data_85);
                        __core__chooseList(fields_31, () -> {
                            false
                        }, () -> {
                            head_16 = __core__headList__safe(fields_31);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_16),
                                () -> {
                                    fields_32 = __core__tailList__safe(fields_31);
                                    __core__chooseList(fields_32, () -> {
                                        false
                                    }, () -> {
                                        head_17 = __core__headList__safe(fields_32);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_17),
                                            () -> {
                                                fields_33 = __core__tailList__safe(fields_32);
                                                __core__chooseList(fields_33, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key = (self_112) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_112))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName = (self_113) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_113))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is = (data_86) -> {
        __helios__common__enum_tag_equals(data_86, 3)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2 = (data_87) -> {
        __core__chooseData(data_87, () -> {
            pair_25 = __core__unConstrData__safe(data_87);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_25), 3),
                () -> {
                    data_88 = __core__listData(__core__sndPair(pair_25));
                    __core__chooseData(data_88, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_34 = __core__unListData__safe(data_88);
                        __core__chooseList(fields_34, () -> {
                            false
                        }, () -> {
                            head_18 = __core__headList__safe(fields_34);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_18),
                                () -> {
                                    fields_35 = __core__tailList__safe(fields_34);
                                    __core__chooseList(fields_35, () -> {
                                        false
                                    }, () -> {
                                        head_19 = __core__headList__safe(fields_35);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_19),
                                            () -> {
                                                fields_36 = __core__tailList__safe(fields_35);
                                                __core__chooseList(fields_36, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2 = (data_89) -> {
        __core__chooseData(data_89, () -> {
            pair_26 = __core__unConstrData__safe(data_89);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_26), 4),
                () -> {
                    data_90 = __core__listData(__core__sndPair(pair_26));
                    __core__chooseData(data_90, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_37 = __core__unListData__safe(data_90);
                        __core__chooseList(fields_37, () -> {
                            false
                        }, () -> {
                            head_20 = __core__headList__safe(fields_37);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_20),
                                () -> {
                                    fields_38 = __core__tailList__safe(fields_37);
                                    __core__chooseList(fields_38, () -> {
                                        false
                                    }, () -> {
                                        head_21 = __core__headList__safe(fields_38);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_21),
                                            () -> {
                                                fields_39 = __core__tailList__safe(fields_38);
                                                __core__chooseList(fields_39, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {
        (data_91) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_91),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_91),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_91),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1) -> {
        (data_92) -> {
            ignore_4 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(data_92),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingDelegateAction data", ())
                }
            )();
            data_92
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is = (data_93) -> {
        __helios__common__enum_tag_equals(data_93, 0)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2 = (data_94) -> {
        __core__chooseData(data_94, () -> {
            pair_27 = __core__unConstrData__safe(data_94);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_27), 0),
                () -> {
                    data_95 = __core__listData(__core__sndPair(pair_27));
                    __core__chooseData(data_95, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_40 = __core__unListData__safe(data_95);
                        __core__chooseList(fields_40, () -> {
                            false
                        }, () -> {
                            head_22 = __core__headList__safe(fields_40);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_22),
                                () -> {
                                    fields_41 = __core__tailList__safe(fields_40);
                                    __core__chooseList(fields_41, () -> {
                                        false
                                    }, () -> {
                                        head_23 = __core__headList__safe(fields_41);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_23),
                                            () -> {
                                                fields_42 = __core__tailList__safe(fields_41);
                                                __core__chooseList(fields_42, () -> {
                                                    false
                                                }, () -> {
                                                    head_24 = __core__headList__safe(fields_42);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_24),
                                                        () -> {
                                                            fields_43 = __core__tailList__safe(fields_42);
                                                            __core__chooseList(fields_43, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed = (self_114) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_114))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose = (self_115) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_115))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_116) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_116))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is = (data_96) -> {
        __helios__common__enum_tag_equals(data_96, 1)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2 = (data_97) -> {
        __core__chooseData(data_97, () -> {
            pair_28 = __core__unConstrData__safe(data_97);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_28), 1),
                () -> {
                    data_98 = __core__listData(__core__sndPair(pair_28));
                    __core__chooseData(data_98, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_44 = __core__unListData__safe(data_98);
                        __core__chooseList(fields_44, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is = (data_99) -> {
        __helios__common__enum_tag_equals(data_99, 2)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2 = (data_100) -> {
        __core__chooseData(data_100, () -> {
            pair_29 = __core__unConstrData__safe(data_100);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_29), 2),
                () -> {
                    data_101 = __core__listData(__core__sndPair(pair_29));
                    __core__chooseData(data_101, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_45 = __core__unListData__safe(data_101);
                        __core__chooseList(fields_45, () -> {
                            false
                        }, () -> {
                            head_25 = __core__headList__safe(fields_45);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_25),
                                () -> {
                                    fields_46 = __core__tailList__safe(fields_45);
                                    __core__chooseList(fields_46, () -> {
                                        false
                                    }, () -> {
                                        head_26 = __core__headList__safe(fields_46);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_26),
                                            () -> {
                                                fields_47 = __core__tailList__safe(fields_46);
                                                __core__chooseList(fields_47, () -> {
                                                    false
                                                }, () -> {
                                                    head_27 = __core__headList__safe(fields_47);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_27),
                                                        () -> {
                                                            fields_48 = __core__tailList__safe(fields_47);
                                                            __core__chooseList(fields_48, () -> {
                                                                false
                                                            }, () -> {
                                                                head_28 = __core__headList__safe(fields_48);
                                                                __core__ifThenElse(
                                                                    __helios__assetclass__is_valid_data(head_28),
                                                                    () -> {
                                                                        fields_49 = __core__tailList__safe(fields_48);
                                                                        __core__chooseList(fields_49, true, false)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed = (self_117) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_117))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose = (self_118) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_118))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_119) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_119))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt = (self_120) -> {
        __helios__assetclass__from_data(__helios__common__enum_field_3(self_120))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {
        (data_102) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_102),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_102),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_102),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_102),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_102),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_102),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_102),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {
        (data_103) -> {
            ignore_5 = __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_103),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoLifecycleActivity data", ())
                }
            )();
            data_103
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_104) -> {
        __helios__common__enum_tag_equals(data_104, 0)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_105) -> {
        __core__chooseData(data_105, () -> {
            pair_30 = __core__unConstrData__safe(data_105);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_30), 0),
                () -> {
                    data_106 = __core__listData(__core__sndPair(pair_30));
                    __core__chooseData(data_106, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_50 = __core__unListData__safe(data_106);
                        __core__chooseList(fields_50, () -> {
                            false
                        }, () -> {
                            head_29 = __core__headList__safe(fields_50);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_29),
                                () -> {
                                    fields_51 = __core__tailList__safe(fields_50);
                                    __core__chooseList(fields_51, () -> {
                                        false
                                    }, () -> {
                                        head_30 = __core__headList__safe(fields_51);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_30),
                                            () -> {
                                                fields_52 = __core__tailList__safe(fields_51);
                                                __core__chooseList(fields_52, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed = (self_121) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_121))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose = (self_122) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_122))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_107) -> {
        __helios__common__enum_tag_equals(data_107, 1)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_108) -> {
        __core__chooseData(data_108, () -> {
            pair_31 = __core__unConstrData__safe(data_108);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_31), 1),
                () -> {
                    data_109 = __core__listData(__core__sndPair(pair_31));
                    __core__chooseData(data_109, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_53 = __core__unListData__safe(data_109);
                        __core__chooseList(fields_53, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_110) -> {
        __helios__common__enum_tag_equals(data_110, 2)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_111) -> {
        __core__chooseData(data_111, () -> {
            pair_32 = __core__unConstrData__safe(data_111);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_32), 2),
                () -> {
                    data_112 = __core__listData(__core__sndPair(pair_32));
                    __core__chooseData(data_112, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_54 = __core__unListData__safe(data_112);
                        __core__chooseList(fields_54, () -> {
                            false
                        }, () -> {
                            head_31 = __core__headList__safe(fields_54);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_31),
                                () -> {
                                    fields_55 = __core__tailList__safe(fields_54);
                                    __core__chooseList(fields_55, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_113) -> {
        __helios__common__enum_tag_equals(data_113, 3)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_114) -> {
        __core__chooseData(data_114, () -> {
            pair_33 = __core__unConstrData__safe(data_114);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_33), 3),
                () -> {
                    data_115 = __core__listData(__core__sndPair(pair_33));
                    __core__chooseData(data_115, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_56 = __core__unListData__safe(data_115);
                        __core__chooseList(fields_56, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_116) -> {
        __helios__common__enum_tag_equals(data_116, 4)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_117) -> {
        __core__chooseData(data_117, () -> {
            pair_34 = __core__unConstrData__safe(data_117);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_34), 4),
                () -> {
                    data_118 = __core__listData(__core__sndPair(pair_34));
                    __core__chooseData(data_118, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_57 = __core__unListData__safe(data_118);
                        __core__chooseList(fields_57, () -> {
                            false
                        }, () -> {
                            head_32 = __core__headList__safe(fields_57);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_32),
                                () -> {
                                    fields_58 = __core__tailList__safe(fields_57);
                                    __core__chooseList(fields_58, () -> {
                                        false
                                    }, () -> {
                                        head_33 = __core__headList__safe(fields_58);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_33),
                                            () -> {
                                                fields_59 = __core__tailList__safe(fields_58);
                                                __core__chooseList(fields_59, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_119) -> {
        __helios__common__enum_tag_equals(data_119, 5)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_120) -> {
        __core__chooseData(data_120, () -> {
            pair_35 = __core__unConstrData__safe(data_120);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_35), 5),
                () -> {
                    data_121 = __core__listData(__core__sndPair(pair_35));
                    __core__chooseData(data_121, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_60 = __core__unListData__safe(data_121);
                        __core__chooseList(fields_60, () -> {
                            false
                        }, () -> {
                            head_34 = __core__headList__safe(fields_60);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_34),
                                () -> {
                                    fields_61 = __core__tailList__safe(fields_60);
                                    __core__chooseList(fields_61, () -> {
                                        false
                                    }, () -> {
                                        head_35 = __core__headList__safe(fields_61);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_35),
                                            () -> {
                                                fields_62 = __core__tailList__safe(fields_61);
                                                __core__chooseList(fields_62, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_122) -> {
        __helios__common__enum_tag_equals(data_122, 6)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_123) -> {
        __core__chooseData(data_123, () -> {
            pair_36 = __core__unConstrData__safe(data_123);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_36), 6),
                () -> {
                    data_124 = __core__listData(__core__sndPair(pair_36));
                    __core__chooseData(data_124, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_63 = __core__unListData__safe(data_124);
                        __core__chooseList(fields_63, () -> {
                            false
                        }, () -> {
                            head_36 = __core__headList__safe(fields_63);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_36),
                                () -> {
                                    fields_64 = __core__tailList__safe(fields_63);
                                    __core__chooseList(fields_64, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity = (self_123) -> {
        __module__CapoDelegateHelpers__ManifestActivity[]__from_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(__helios__common__enum_field_0(self_123))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_125) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_125),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_125),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_125),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_125),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_125),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_125),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_125),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_125),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_125),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_126) -> {
            ignore_6 = __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1)(data_126),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid AbstractDelegateActivitiesEnum data", ())
                }
            )();
            data_126
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_127) -> {
        __core__chooseData(data_127, () -> {
            pair_37 = __core__unConstrData__safe(data_127);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_37), 0),
                () -> {
                    data_128 = __core__listData(__core__sndPair(pair_37));
                    __core__chooseData(data_128, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_65 = __core__unListData__safe(data_128);
                        __core__chooseList(fields_65, () -> {
                            false
                        }, () -> {
                            head_37 = __core__headList__safe(fields_65);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_37),
                                () -> {
                                    fields_66 = __core__tailList__safe(fields_65);
                                    __core__chooseList(fields_66, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_129) -> {
        __helios__common__enum_tag_equals(data_129, 1)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_130) -> {
        __core__chooseData(data_130, () -> {
            pair_38 = __core__unConstrData__safe(data_130);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_38), 1),
                () -> {
                    data_131 = __core__listData(__core__sndPair(pair_38));
                    __core__chooseData(data_131, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_67 = __core__unListData__safe(data_131);
                        __core__chooseList(fields_67, () -> {
                            false
                        }, () -> {
                            head_38 = __core__headList__safe(fields_67);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_38),
                                () -> {
                                    fields_68 = __core__tailList__safe(fields_67);
                                    __core__chooseList(fields_68, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_124) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_124))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_132) -> {
        __helios__common__enum_tag_equals(data_132, 2)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_133) -> {
        __core__chooseData(data_133, () -> {
            pair_39 = __core__unConstrData__safe(data_133);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_39), 2),
                () -> {
                    data_134 = __core__listData(__core__sndPair(pair_39));
                    __core__chooseData(data_134, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_69 = __core__unListData__safe(data_134);
                        __core__chooseList(fields_69, () -> {
                            false
                        }, () -> {
                            head_39 = __core__headList__safe(fields_69);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_39),
                                () -> {
                                    fields_70 = __core__tailList__safe(fields_69);
                                    __core__chooseList(fields_70, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_125) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_125))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_135) -> {
        __helios__common__enum_tag_equals(data_135, 3)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_136) -> {
        __core__chooseData(data_136, () -> {
            pair_40 = __core__unConstrData__safe(data_136);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_40), 3),
                () -> {
                    data_137 = __core__listData(__core__sndPair(pair_40));
                    __core__chooseData(data_137, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_71 = __core__unListData__safe(data_137);
                        __core__chooseList(fields_71, () -> {
                            false
                        }, () -> {
                            head_40 = __core__headList__safe(fields_71);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_40),
                                () -> {
                                    fields_72 = __core__tailList__safe(fields_71);
                                    __core__chooseList(fields_72, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity = (self_126) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_126))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_138) -> {
        __core__chooseData(data_138, () -> {
            pair_41 = __core__unConstrData__safe(data_138);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_41), 4),
                () -> {
                    data_139 = __core__listData(__core__sndPair(pair_41));
                    __core__chooseData(data_139, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_73 = __core__unListData__safe(data_139);
                        __core__chooseList(fields_73, () -> {
                            false
                        }, () -> {
                            head_41 = __core__headList__safe(fields_73);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_41),
                                () -> {
                                    fields_74 = __core__tailList__safe(fields_73);
                                    __core__chooseList(fields_74, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_140) -> {
        __helios__common__enum_tag_equals(data_140, 5)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_141) -> {
        __core__chooseData(data_141, () -> {
            pair_42 = __core__unConstrData__safe(data_141);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_42), 5),
                () -> {
                    data_142 = __core__listData(__core__sndPair(pair_42));
                    __core__chooseData(data_142, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_75 = __core__unListData__safe(data_142);
                        __core__chooseList(fields_75, () -> {
                            false
                        }, () -> {
                            head_42 = __core__headList__safe(fields_75);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_42),
                                () -> {
                                    fields_76 = __core__tailList__safe(fields_75);
                                    __core__chooseList(fields_76, () -> {
                                        false
                                    }, () -> {
                                        head_43 = __core__headList__safe(fields_76);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_43),
                                            () -> {
                                                fields_77 = __core__tailList__safe(fields_76);
                                                __core__chooseList(fields_77, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_143) -> {
        __helios__common__enum_tag_equals(data_143, 6)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_144) -> {
        __core__chooseData(data_144, () -> {
            pair_43 = __core__unConstrData__safe(data_144);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_43), 6),
                () -> {
                    data_145 = __core__listData(__core__sndPair(pair_43));
                    __core__chooseData(data_145, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_78 = __core__unListData__safe(data_145);
                        __core__chooseList(fields_78, () -> {
                            false
                        }, () -> {
                            head_44 = __core__headList__safe(fields_78);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_44),
                                () -> {
                                    fields_79 = __core__tailList__safe(fields_78);
                                    __core__chooseList(fields_79, () -> {
                                        false
                                    }, () -> {
                                        head_45 = __core__headList__safe(fields_79);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_45),
                                            () -> {
                                                fields_80 = __core__tailList__safe(fields_79);
                                                __core__chooseList(fields_80, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_146) -> {
        __helios__common__enum_tag_equals(data_146, 7)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_147) -> {
        __core__chooseData(data_147, () -> {
            pair_44 = __core__unConstrData__safe(data_147);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_44), 7),
                () -> {
                    data_148 = __core__listData(__core__sndPair(pair_44));
                    __core__chooseData(data_148, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_81 = __core__unListData__safe(data_148);
                        __core__chooseList(fields_81, () -> {
                            false
                        }, () -> {
                            head_46 = __core__headList__safe(fields_81);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_46),
                                () -> {
                                    fields_82 = __core__tailList__safe(fields_81);
                                    __core__chooseList(fields_82, () -> {
                                        false
                                    }, () -> {
                                        head_47 = __core__headList__safe(fields_82);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_47),
                                            () -> {
                                                fields_83 = __core__tailList__safe(fields_82);
                                                __core__chooseList(fields_83, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_149) -> {
        __helios__common__enum_tag_equals(data_149, 8)
    };
    __helios__list[__helios__data]__is_valid_data_internal = (lst_13) -> {
        recurse_73 = (recurse_72, lst_14) -> {
            __core__chooseList(lst_14, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__data__is_valid_data(__core__headList__safe(lst_14)),
                    () -> {
                        recurse_72(recurse_72, __core__tailList__safe(lst_14))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_73(recurse_73, lst_13)
    };
    __helios__list[__helios__data]__is_valid_data = (data_150) -> {
        __core__chooseData(data_150, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_150))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_151) -> {
        __core__chooseData(data_151, () -> {
            pair_45 = __core__unConstrData__safe(data_151);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_45), 8),
                () -> {
                    data_152 = __core__listData(__core__sndPair(pair_45));
                    __core__chooseData(data_152, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_84 = __core__unListData__safe(data_152);
                        __core__chooseList(fields_84, () -> {
                            false
                        }, () -> {
                            head_48 = __core__headList__safe(fields_84);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_48),
                                () -> {
                                    fields_85 = __core__tailList__safe(fields_84);
                                    __core__chooseList(fields_85, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__data]__from_data = (data_153) -> {
        lst_15 = __core__unListData(data_153);
        __4 = __core__ifThenElse(
            __helios__list[__helios__data]__is_valid_data_internal(lst_15),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_15
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_127) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_127))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_154) -> {
        __helios__common__enum_tag_equals(data_154, 0)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_155) -> {
        __helios__common__enum_tag_equals(data_155, 1)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __helios__option[__helios__validatorhash]__is_valid_data = (data_156) -> {
        __core__chooseData(data_156, () -> {
            pair_46 = __core__unConstrData__safe(data_156);
            index_6 = __core__fstPair(pair_46);
            fields_86 = __core__sndPair(pair_46);
            __core__ifThenElse(
                __core__equalsInteger(index_6, 0),
                () -> {
                    __core__chooseList(fields_86, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_86), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_86))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_6, 1),
                        () -> {
                            __core__chooseList(fields_86, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_157) -> {
        __core__chooseData(data_157, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_87 = __core__unListData__safe(data_157);
            __core__chooseList(fields_87, () -> {
                false
            }, () -> {
                head_49 = __core__headList__safe(fields_87);
                __core__ifThenElse(
                    __helios__string__is_valid_data(head_49),
                    () -> {
                        fields_88 = __core__tailList__safe(fields_87);
                        __core__chooseList(fields_88, () -> {
                            false
                        }, () -> {
                            head_50 = __core__headList__safe(fields_88);
                            __core__ifThenElse(
                                __helios__option[__helios__validatorhash]__is_valid_data(head_50),
                                () -> {
                                    fields_89 = __core__tailList__safe(fields_88);
                                    __core__chooseList(fields_89, () -> {
                                        false
                                    }, () -> {
                                        head_51 = __core__headList__safe(fields_89);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_51),
                                            () -> {
                                                fields_90 = __core__tailList__safe(fields_89);
                                                __core__chooseList(fields_90, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_158) -> {
        ignore_7 = __core__ifThenElse(
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_158),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid RelativeDelegateLink data", ())
            }
        )();
        __core__unListData(data_158)
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_128) -> {
        __helios__string__from_data(__helios__common__struct_field_0(self_128))
    };
    __helios__option[__helios__validatorhash]__from_data = (data_159) -> {
        __5 = __core__ifThenElse(
            __helios__option[__helios__validatorhash]__is_valid_data(data_159),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_159
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_129) -> {
        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_129))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken = (self_130) -> {
        (mph_11) -> {
            __module__StellarHeliosHelpers__mkTv(mph_11, true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_130), false, (), false, ())
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_131) -> {
        (mph_12) -> {
            __helios__assetclass__new(mph_12, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_131))())
        }
    };
    __helios__option[__helios__txinput]__none____is = (data_160) -> {
        __helios__common__enum_tag_equals(data_160, 1)
    };
    __helios__option[__helios__bool]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bool]__some____new = (some_1) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bool____to_data(some_1)))
    };
    __helios__option[__helios__txinput]__some__some = (self_132) -> {
        __helios__txinput__from_data(__helios__common__enum_field_0(self_132))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings = (__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput) -> {
        (self_133) -> {
            (inputs, mph_13, inputRequired) -> {
                __cond_3 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_133)(inputs, mph_13, true, inputRequired);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_3),
                    () -> {
                        (__lhs_0_5) -> {
                            __helios__option[__helios__bool]__none____new()
                        }
                    },
                    () -> {
                        (__lhs_0_2) -> {
                            spendDelegateInput = __helios__option[__helios__txinput]__some__some(__lhs_0_2);
                            (spendDelegateIsValid) -> {
                                __core__chooseUnit(__helios__assert(spendDelegateIsValid, "no way o"), __helios__option[__helios__bool]__some____new(spendDelegateIsValid))
                            }(__cond_4 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput));
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_4),
                                () -> {
                                    (__lhs_0_3) -> {
                                        a_13 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_3);
                                        __cond_5 = a_13;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is(__cond_5),
                                            () -> {
                                                (__lhs_0_4) -> {
                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_133)(mph_13, false, (), false, ())
                                                }
                                            },
                                            () -> {
                                                (__7) -> {
                                                    __helios__error(__helios__string____add("delegate not ValidatingSettings: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_133)))
                                                }
                                            }
                                        )()(__cond_5)
                                    }
                                },
                                () -> {
                                    (__6) -> {
                                        __helios__error("no way n")
                                    }
                                }
                            )()(__cond_4))
                        }
                    }
                )()(__cond_3)
            }
        }
    };
    __helios__option[__helios__validatorhash]__none____is = (data_161) -> {
        __helios__common__enum_tag_equals(data_161, 1)
    };
    __helios__option[__helios__txinput]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__txinput]__some____is = (data_162) -> {
        __helios__common__enum_tag_equals(data_162, 0)
    };
    __helios__list[__helios__txinput]__find_safe = (self_134) -> {
        (fn_17) -> {
            __helios__common__find_safe(self_134, (item_8) -> {
                fn_17(__helios__txinput__from_data(item_8))
            }, __helios__common__identity)
        }
    };
    __helios__option[__helios__validatorhash]__some__some = (self_135) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_135))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1 = (self_136) -> {
        (inputs_1, mph_14, __useopt__required, required) -> {
            required_1 = __core__ifThenElse(
                __useopt__required,
                () -> {
                    required
                },
                () -> {
                    true
                }
            )();
            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_136);
            __cond_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_136);
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__none____is(__cond_6),
                () -> {
                    (__lhs_0_8) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                __helios__error(__helios__string____add("\u274C\u274C \u27A1\uFE0F \u{1F481} missing required input with dgTkn ", uutName))
                            },
                            () -> {
                                () -> {
                                    __helios__option[__helios__txinput]__none____new()
                                }()
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0_6) -> {
                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_6);
                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);
                        ac = __helios__assetclass__new(mph_14, __helios__string__encode_utf8(uutName)());
                        __core__chooseUnit(__helios__print(__helios__string____add("  -- seeking input dgTkn: ", uutName)), __cond_7 = __helios__list[__helios__txinput]__find_safe(inputs_1)((i_7) -> {
                            __helios__bool__and(() -> {
                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_7)), needsAddrWithCred)
                            }, () -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_7))(ac), 0)
                            })
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txinput]__some____is(__cond_7),
                            () -> {
                                (foundGood) -> {
                                    __core__chooseUnit(__helios__print("  \u2705 \u27A1\uFE0F  \u{1F481} found ^ input dgTkn"), foundGood)
                                }
                            },
                            () -> {
                                (__lhs_0_7) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            __helios__error(__helios__string____add("_\u274C \u27A1\uFE0F  \u{1F481} missing req'd input dgTkn (at script addr) ", uutName))
                                        },
                                        () -> {
                                            () -> {
                                                __core__chooseUnit(__helios__print(" <- \u{1F6AB} \u27A1\uFE0F \u{1F481} no input with ^ dgTkn; not req'd; returning false
"), __helios__option[__helios__txinput]__none____new())
                                            }()
                                        }
                                    )()
                                }
                            }
                        )()(__cond_7))
                    }
                }
            )()(__cond_6)
        }
    };
    __helios__option[__helios__validatorhash]__some____is = (data_163) -> {
        __helios__common__enum_tag_equals(data_163, 0)
    };
    __helios__option[__helios__txoutput]__some____is = (data_164) -> {
        __helios__common__enum_tag_equals(data_164, 0)
    };
    __helios__list[__helios__txoutput]__find_safe = (self_137) -> {
        (fn_18) -> {
            __helios__common__find_safe(self_137, (item_9) -> {
                fn_18(__helios__txoutput__from_data(item_9))
            }, __helios__common__identity)
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_138) -> {
        (mph_15, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {
            required_3 = __core__ifThenElse(
                __useopt__required_1,
                () -> {
                    required_2
                },
                () -> {
                    true
                }
            )();
            createdOrReturned_1 = __core__ifThenElse(
                __useopt__createdOrReturned,
                () -> {
                    createdOrReturned
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __lhs_0_9 = self_138;
            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_9);
            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_9);
            ac_1 = __helios__assetclass__new(mph_15, __helios__string__encode_utf8(uut)());
            (cOrR) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u{1F50E} \u{1F481} expect dgTkn ", cOrR), ": "), uut)), (hasDelegate) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__and(() -> {
                            __helios__bool____not(hasDelegate)
                        }, () -> {
                            required_3
                        }),
                        () -> {
                            __cond_11 = createdOrReturned_1;
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_11),
                                () -> {
                                    (__lhs_0_18) -> {
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not created: ", uut))
                                    }
                                },
                                () -> {
                                    (__lhs_0_16) -> {
                                        __lhs_0_17 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(self_138)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_15, true, true);
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not returned: ", uut))
                                    }
                                }
                            )()(__cond_11)
                        },
                        () -> {
                            () -> {
                                __core__ifThenElse(
                                    hasDelegate,
                                    () -> {
                                        __helios__print(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u2705 \u{1F481} ok:  ^ dgTkn has ", cOrR), " a valid output
"))
                                    },
                                    () -> {
                                        () -> {
                                            __helios__print(" \u2B05\uFE0F \u{1F6AB} \u{1F481} no delegate but not req'd; false")
                                        }()
                                    }
                                )()
                            }()
                        }
                    )(), hasDelegate)
                }(__cond_9 = validatorHash;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_9),
                    () -> {
                        (__lhs_0_15) -> {
                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_15);
                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("  ... ^ sent to validator: ", __helios__validatorhash__show(vh_3)()), "
")), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))
                        }
                    },
                    () -> {
                        (__lhs_0_12) -> {
                            __core__chooseUnit(__helios__print("   (to anywhere)"), __cond_10 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_10),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10))
                        }
                    }
                )()(__cond_9)))
            }(__cond_8 = createdOrReturned_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_8),
                () -> {
                    (__lhs_0_11) -> {
                        "returned"
                    }
                },
                () -> {
                    (__lhs_0_10) -> {
                        "created"
                    }
                }
            )()(__cond_8))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_165) -> {
        __core__chooseData(data_165, () -> {
            pair_47 = __core__unConstrData__safe(data_165);
            index_7 = __core__fstPair(pair_47);
            fields_91 = __core__sndPair(pair_47);
            __core__ifThenElse(
                __core__equalsInteger(index_7, 0),
                () -> {
                    __core__chooseList(fields_91, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_91), () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_91))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_7, 1),
                        () -> {
                            __core__chooseList(fields_91, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_166) -> {
        __core__chooseData(data_166, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_92 = __core__unListData__safe(data_166);
            __core__chooseList(fields_92, () -> {
                false
            }, () -> {
                head_52 = __core__headList__safe(fields_92);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(head_52),
                    () -> {
                        fields_93 = __core__tailList__safe(fields_92);
                        __core__chooseList(fields_93, () -> {
                            false
                        }, () -> {
                            head_53 = __core__headList__safe(fields_93);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_53),
                                () -> {
                                    fields_94 = __core__tailList__safe(fields_93);
                                    __core__chooseList(fields_94, () -> {
                                        false
                                    }, () -> {
                                        head_54 = __core__headList__safe(fields_94);
                                        __core__ifThenElse(
                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_54),
                                            () -> {
                                                fields_95 = __core__tailList__safe(fields_94);
                                                __core__chooseList(fields_95, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data = (data_167) -> {
        ignore_8 = __core__ifThenElse(
            __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(data_167),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid PendingDelegateChange data", ())
            }
        )();
        __core__unListData(data_167)
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__action = (self_139) -> {
        __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(__helios__common__struct_field_0(self_139))
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__role = (self_140) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_140))
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_168) -> {
        __8 = __core__ifThenElse(
            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(data_168),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_168
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink = (self_141) -> {
        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__struct_field_2(self_141))
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {
        (data_169) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_169),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_169),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__from_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1) -> {
        (data_170) -> {
            ignore_9 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(data_170),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingCharterChange data", ())
                }
            )();
            data_170
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is = (data_171) -> {
        __helios__common__enum_tag_equals(data_171, 0)
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2 = (data_172) -> {
        __core__chooseData(data_172, () -> {
            pair_48 = __core__unConstrData__safe(data_172);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_48), 0),
                () -> {
                    data_173 = __core__listData(__core__sndPair(pair_48));
                    __core__chooseData(data_173, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_96 = __core__unListData__safe(data_173);
                        __core__chooseList(fields_96, () -> {
                            false
                        }, () -> {
                            head_55 = __core__headList__safe(fields_96);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_55),
                                () -> {
                                    fields_97 = __core__tailList__safe(fields_96);
                                    __core__chooseList(fields_97, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change = (self_142) -> {
        __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data(__helios__common__enum_field_0(self_142))
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_16) -> {
        recurse_75 = (recurse_74, lst_17) -> {
            __core__chooseList(lst_17, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__core__headList__safe(lst_17)),
                    () -> {
                        recurse_74(recurse_74, __core__tailList__safe(lst_17))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_75(recurse_75, lst_16)
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_174) -> {
        __core__chooseData(data_174, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_174))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2 = (data_175) -> {
        __core__chooseData(data_175, () -> {
            pair_49 = __core__unConstrData__safe(data_175);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_49), 1),
                () -> {
                    data_176 = __core__listData(__core__sndPair(pair_49));
                    __core__chooseData(data_176, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_98 = __core__unListData__safe(data_176);
                        __core__chooseList(fields_98, () -> {
                            false
                        }, () -> {
                            head_56 = __core__headList__safe(fields_98);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_56),
                                () -> {
                                    fields_99 = __core__tailList__safe(fields_98);
                                    __core__chooseList(fields_99, () -> {
                                        false
                                    }, () -> {
                                        head_57 = __core__headList__safe(fields_99);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_57),
                                            () -> {
                                                fields_100 = __core__tailList__safe(fields_99);
                                                __core__chooseList(fields_100, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data = (data_177) -> {
        __core__chooseData(data_177, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_101 = __core__unListData__safe(data_177);
            __core__chooseList(fields_101, () -> {
                false
            }, () -> {
                head_58 = __core__headList__safe(fields_101);
                __core__ifThenElse(
                    __helios__address__is_valid_data(head_58),
                    () -> {
                        fields_102 = __core__tailList__safe(fields_101);
                        __core__chooseList(fields_102, () -> {
                            false
                        }, () -> {
                            head_59 = __core__headList__safe(fields_102);
                            __core__ifThenElse(
                                __helios__mintingpolicyhash__is_valid_data(head_59),
                                () -> {
                                    fields_103 = __core__tailList__safe(fields_102);
                                    __core__chooseList(fields_103, () -> {
                                        false
                                    }, () -> {
                                        head_60 = __core__headList__safe(fields_103);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_60),
                                            () -> {
                                                fields_104 = __core__tailList__safe(fields_103);
                                                __core__chooseList(fields_104, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__from_data = (data_178) -> {
        ignore_10 = __core__ifThenElse(
            __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(data_178),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid DelegationDetail data", ())
            }
        )();
        __core__unListData(data_178)
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__mph = (self_143) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_1(self_143))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__tn = (self_144) -> {
        __helios__bytearray__from_data(__helios__common__struct_field_2(self_144))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken = (self_145) -> {
        () -> {
            __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(self_145), __module__CapoDelegateHelpers__DelegationDetail[]__tn(self_145))
        }
    };
    __helios__list[__helios__txinput]__any = (self_146) -> {
        (fn_19) -> {
            __helios__common__any(self_146, (item_10) -> {
                fn_19(__helios__txinput__from_data(item_10))
            })
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {
        (data_179) -> {
            __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_179),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_179),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_179),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_179),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_179),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__from_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1) -> {
        (data_180) -> {
            ignore_11 = __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)(data_180),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestEntryType data", ())
                }
            )();
            data_180
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is = (data_181) -> {
        __helios__common__enum_tag_equals(data_181, 0)
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2 = (data_182) -> {
        __core__chooseData(data_182, () -> {
            pair_50 = __core__unConstrData__safe(data_182);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_50), 0),
                () -> {
                    data_183 = __core__listData(__core__sndPair(pair_50));
                    __core__chooseData(data_183, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_105 = __core__unListData__safe(data_183);
                        __core__chooseList(fields_105, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is = (data_184) -> {
        __helios__common__enum_tag_equals(data_184, 1)
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2 = (data_185) -> {
        __core__chooseData(data_185, () -> {
            pair_51 = __core__unConstrData__safe(data_185);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_51), 1),
                () -> {
                    data_186 = __core__listData(__core__sndPair(pair_51));
                    __core__chooseData(data_186, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_106 = __core__unListData__safe(data_186);
                        __core__chooseList(fields_106, () -> {
                            false
                        }, () -> {
                            head_61 = __core__headList__safe(fields_106);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_61),
                                () -> {
                                    fields_107 = __core__tailList__safe(fields_106);
                                    __core__chooseList(fields_107, () -> {
                                        false
                                    }, () -> {
                                        head_62 = __core__headList__safe(fields_107);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_62),
                                            () -> {
                                                fields_108 = __core__tailList__safe(fields_107);
                                                __core__chooseList(fields_108, () -> {
                                                    false
                                                }, () -> {
                                                    head_63 = __core__headList__safe(fields_108);
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(head_63),
                                                        () -> {
                                                            fields_109 = __core__tailList__safe(fields_108);
                                                            __core__chooseList(fields_109, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink = (self_147) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_147))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix = (self_148) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_148))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount = (self_149) -> {
        __helios__int__from_data(__helios__common__enum_field_2(self_149))
    };
    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2 = (data_187) -> {
        __core__chooseData(data_187, () -> {
            pair_52 = __core__unConstrData__safe(data_187);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_52), 2),
                () -> {
                    data_188 = __core__listData(__core__sndPair(pair_52));
                    __core__chooseData(data_188, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_110 = __core__unListData__safe(data_188);
                        __core__chooseList(fields_110, () -> {
                            false
                        }, () -> {
                            head_64 = __core__headList__safe(fields_110);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_64),
                                () -> {
                                    fields_111 = __core__tailList__safe(fields_110);
                                    __core__chooseList(fields_111, () -> {
                                        false
                                    }, () -> {
                                        head_65 = __core__headList__safe(fields_111);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_65),
                                            () -> {
                                                fields_112 = __core__tailList__safe(fields_111);
                                                __core__chooseList(fields_112, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2 = (data_189) -> {
        __core__chooseData(data_189, () -> {
            pair_53 = __core__unConstrData__safe(data_189);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_53), 3),
                () -> {
                    data_190 = __core__listData(__core__sndPair(pair_53));
                    __core__chooseData(data_190, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_113 = __core__unListData__safe(data_190);
                        __core__chooseList(fields_113, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2 = (data_191) -> {
        __core__chooseData(data_191, () -> {
            pair_54 = __core__unConstrData__safe(data_191);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_54), 4),
                () -> {
                    data_192 = __core__listData(__core__sndPair(pair_54));
                    __core__chooseData(data_192, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_114 = __core__unListData__safe(data_192);
                        __core__chooseList(fields_114, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_193) -> {
        __core__chooseData(data_193, () -> {
            pair_55 = __core__unConstrData__safe(data_193);
            index_8 = __core__fstPair(pair_55);
            fields_115 = __core__sndPair(pair_55);
            __core__ifThenElse(
                __core__equalsInteger(index_8, 0),
                () -> {
                    __core__chooseList(fields_115, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_115), () -> {
                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_115))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_8, 1),
                        () -> {
                            __core__chooseList(fields_115, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_194) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_194, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_194, __core__bData(#746e), __helios__bytearray__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_194, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)),
                            () -> {
                                true
                            },
                            () -> {
                                __core__trace("Warning: invalid data in CapoManifestEntry.tpe", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in CapoManifestEntry.tn", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in CapoManifestEntry.mph", () -> {
                    false
                })()
            }
        )()
    };
    __module__CapoHelpers__CapoManifestEntry[]__from_data = (data_195) -> {
        ignore_12 = __core__ifThenElse(
            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(data_195),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", ())
            }
        )();
        data_195
    };
    __module__CapoHelpers__CapoManifestEntry[]__entryType = (self_150) -> {
        __module__CapoHelpers__ManifestEntryType[]__from_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)(__helios__common__mStruct_field(self_150, #747065))
    };
    __module__CapoHelpers__CapoManifestEntry[]__tokenName = (self_151) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_151, #746e))
    };
    __helios__option[__helios__mintingpolicyhash]__from_data = (data_196) -> {
        __9 = __core__ifThenElse(
            __helios__option[__helios__mintingpolicyhash]__is_valid_data(data_196),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_196
    };
    __module__CapoHelpers__CapoManifestEntry[]__mph = (self_152) -> {
        __helios__option[__helios__mintingpolicyhash]__from_data(__helios__common__mStruct_field(self_152, #6d7068))
    };
    __helios__option[__helios__mintingpolicyhash]__some____is = (data_197) -> {
        __helios__common__enum_tag_equals(data_197, 0)
    };
    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {
        (data_198) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_198),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_198),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_198),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {
        (data_199) -> {
            ignore_13 = __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_199),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoDatum data", ())
                }
            )();
            data_199
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_18) -> {
        recurse_77 = (recurse_76, lst_19) -> {
            __core__chooseList(lst_19, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_19)),
                    () -> {
                        recurse_76(recurse_76, __core__tailList__safe(lst_19))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_77(recurse_77, lst_18)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_200) -> {
        __core__chooseData(data_200, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_200))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_23) -> {
        recurse_79 = (recurse_78, map_24) -> {
            __core__chooseList(map_24, () -> {
                true
            }, () -> {
                head_66 = __core__headList__safe(map_24);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_66)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_66)),
                            () -> {
                                recurse_78(recurse_78, __core__tailList__safe(map_24))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_79(recurse_79, map_23)
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_201) -> {
        __core__chooseData(data_201, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_201))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_25) -> {
        recurse_81 = (recurse_80, map_26) -> {
            __core__chooseList(map_26, () -> {
                true
            }, () -> {
                head_67 = __core__headList__safe(map_26);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_67)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_67)),
                            () -> {
                                recurse_80(recurse_80, __core__tailList__safe(map_26))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_81(recurse_81, map_25)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_202) -> {
        __core__chooseData(data_202, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_202))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_20) -> {
        recurse_83 = (recurse_82, lst_21) -> {
            __core__chooseList(lst_21, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList__safe(lst_21)),
                    () -> {
                        recurse_82(recurse_82, __core__tailList__safe(lst_21))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_83(recurse_83, lst_20)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_203) -> {
        __core__chooseData(data_203, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_203))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_204) -> {
        __core__chooseData(data_204, () -> {
            pair_56 = __core__unConstrData__safe(data_204);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_56), 0),
                () -> {
                    data_205 = __core__listData(__core__sndPair(pair_56));
                    __core__chooseData(data_205, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_116 = __core__unListData__safe(data_205);
                        __core__chooseList(fields_116, () -> {
                            false
                        }, () -> {
                            head_68 = __core__headList__safe(fields_116);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_68),
                                () -> {
                                    fields_117 = __core__tailList__safe(fields_116);
                                    __core__chooseList(fields_117, () -> {
                                        false
                                    }, () -> {
                                        head_69 = __core__headList__safe(fields_117);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_69),
                                            () -> {
                                                fields_118 = __core__tailList__safe(fields_117);
                                                __core__chooseList(fields_118, () -> {
                                                    false
                                                }, () -> {
                                                    head_70 = __core__headList__safe(fields_118);
                                                    __core__ifThenElse(
                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_70),
                                                        () -> {
                                                            fields_119 = __core__tailList__safe(fields_118);
                                                            __core__chooseList(fields_119, () -> {
                                                                false
                                                            }, () -> {
                                                                head_71 = __core__headList__safe(fields_119);
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_71),
                                                                    () -> {
                                                                        fields_120 = __core__tailList__safe(fields_119);
                                                                        __core__chooseList(fields_120, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            head_72 = __core__headList__safe(fields_120);
                                                                            __core__ifThenElse(
                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_72),
                                                                                () -> {
                                                                                    fields_121 = __core__tailList__safe(fields_120);
                                                                                    __core__chooseList(fields_121, () -> {
                                                                                        false
                                                                                    }, () -> {
                                                                                        head_73 = __core__headList__safe(fields_121);
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_73),
                                                                                            () -> {
                                                                                                fields_122 = __core__tailList__safe(fields_121);
                                                                                                __core__chooseList(fields_122, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    head_74 = __core__headList__safe(fields_122);
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_74),
                                                                                                        () -> {
                                                                                                            fields_123 = __core__tailList__safe(fields_122);
                                                                                                            __core__chooseList(fields_123, () -> {
                                                                                                                false
                                                                                                            }, () -> {
                                                                                                                head_75 = __core__headList__safe(fields_123);
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_75),
                                                                                                                    () -> {
                                                                                                                        fields_124 = __core__tailList__safe(fields_123);
                                                                                                                        __core__chooseList(fields_124, true, false)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })()
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_206) -> {
        ignore_14 = __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_206),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CharterData data", ())
            }
        )();
        data_206
    };
    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;
    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_153) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_153))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_207) -> {
        lst_22 = __core__unListData(data_207);
        __10 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_22),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_22
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_154) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_154))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_208) -> {
        map_27 = __core__unMapData(data_208);
        __11 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_27),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_27
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_155) -> {
        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_155))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_156) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_156))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_157) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_157))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_158) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_158))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_209) -> {
        map_28 = __core__unMapData(data_209);
        __12 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_28),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_28
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_159) -> {
        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_159))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_210) -> {
        lst_23 = __core__unListData(data_210);
        __13 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_23
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_160) -> {
        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_160))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;
    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_211) -> {
        __core__chooseData(data_211, () -> {
            pair_57 = __core__unConstrData__safe(data_211);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_57), 1),
                () -> {
                    data_212 = __core__listData(__core__sndPair(pair_57));
                    __core__chooseData(data_212, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_125 = __core__unListData__safe(data_212);
                        __core__chooseList(fields_125, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_213) -> {
        __helios__common__enum_tag_equals(data_213, 2)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_29) -> {
        recurse_85 = (recurse_84, map_30) -> {
            __core__chooseList(map_30, () -> {
                true
            }, () -> {
                head_76 = __core__headList__safe(map_30);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_76)),
                    () -> {
                        __core__ifThenElse(
                            __helios__data__is_valid_data(__core__sndPair(head_76)),
                            () -> {
                                recurse_84(recurse_84, __core__tailList__safe(map_30))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_85(recurse_85, map_29)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_214) -> {
        __core__chooseData(data_214, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_214))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_215) -> {
        __core__chooseData(data_215, () -> {
            pair_58 = __core__unConstrData__safe(data_215);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_58), 2),
                () -> {
                    data_216 = __core__listData(__core__sndPair(pair_58));
                    __core__chooseData(data_216, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_126 = __core__unListData__safe(data_216);
                        __core__chooseList(fields_126, () -> {
                            false
                        }, () -> {
                            head_77 = __core__headList__safe(fields_126);
                            __core__ifThenElse(
                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_77),
                                () -> {
                                    fields_127 = __core__tailList__safe(fields_126);
                                    __core__chooseList(fields_127, () -> {
                                        false
                                    }, () -> {
                                        head_78 = __core__headList__safe(fields_127);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_78),
                                            () -> {
                                                fields_128 = __core__tailList__safe(fields_127);
                                                __core__chooseList(fields_128, () -> {
                                                    false
                                                }, () -> {
                                                    head_79 = __core__headList__safe(fields_128);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_79),
                                                        () -> {
                                                            fields_129 = __core__tailList__safe(fields_128);
                                                            __core__chooseList(fields_129, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;
    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {
        (data_217) -> {
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_217),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_217),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_217),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {
        (data_218) -> {
            ignore_15 = __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_218),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid cctx_CharterInputType data", ())
                }
            )();
            data_218
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_219) -> {
        __helios__common__enum_tag_equals(data_219, 0)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_220) -> {
        __core__chooseData(data_220, () -> {
            pair_59 = __core__unConstrData__safe(data_220);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_59), 0),
                () -> {
                    data_221 = __core__listData(__core__sndPair(pair_59));
                    __core__chooseData(data_221, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_130 = __core__unListData__safe(data_221);
                        __core__chooseList(fields_130, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_222) -> {
        __helios__common__enum_tag_equals(data_222, 1)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_223) -> {
        __core__chooseData(data_223, () -> {
            pair_60 = __core__unConstrData__safe(data_223);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_60), 1),
                () -> {
                    data_224 = __core__listData(__core__sndPair(pair_60));
                    __core__chooseData(data_224, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_131 = __core__unListData__safe(data_224);
                        __core__chooseList(fields_131, () -> {
                            false
                        }, () -> {
                            head_80 = __core__headList__safe(fields_131);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_80),
                                () -> {
                                    fields_132 = __core__tailList__safe(fields_131);
                                    __core__chooseList(fields_132, () -> {
                                        false
                                    }, () -> {
                                        head_81 = __core__headList__safe(fields_132);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_81),
                                            () -> {
                                                fields_133 = __core__tailList__safe(fields_132);
                                                __core__chooseList(fields_133, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_161) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_161))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_162) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_162))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo) -> {
        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo), __core__mkNilData(()))))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_225) -> {
        __helios__common__enum_tag_equals(data_225, 2)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_226) -> {
        __core__chooseData(data_226, () -> {
            pair_61 = __core__unConstrData__safe(data_226);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_61), 2),
                () -> {
                    data_227 = __core__listData(__core__sndPair(pair_61));
                    __core__chooseData(data_227, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_134 = __core__unListData__safe(data_227);
                        __core__chooseList(fields_134, () -> {
                            false
                        }, () -> {
                            head_82 = __core__headList__safe(fields_134);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_82),
                                () -> {
                                    fields_135 = __core__tailList__safe(fields_134);
                                    __core__chooseList(fields_135, () -> {
                                        false
                                    }, () -> {
                                        head_83 = __core__headList__safe(fields_135);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_83),
                                            () -> {
                                                fields_136 = __core__tailList__safe(fields_135);
                                                __core__chooseList(fields_136, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_163) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_163))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_164) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_164))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_1) -> {
        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))
    };
    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {
        (data_228) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_228),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_228),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_228),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_228),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_228),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_228),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {
        (data_229) -> {
            ignore_16 = __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_229),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoActivity data", ())
                }
            )();
            data_229
        }
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_230) -> {
        __helios__common__enum_tag_equals(data_230, 0)
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_231) -> {
        __core__chooseData(data_231, () -> {
            pair_62 = __core__unConstrData__safe(data_231);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_62), 0),
                () -> {
                    data_232 = __core__listData(__core__sndPair(pair_62));
                    __core__chooseData(data_232, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_137 = __core__unListData__safe(data_232);
                        __core__chooseList(fields_137, () -> {
                            false
                        }, () -> {
                            head_84 = __core__headList__safe(fields_137);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_84),
                                () -> {
                                    fields_138 = __core__tailList__safe(fields_137);
                                    __core__chooseList(fields_138, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_165) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_165))
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_233) -> {
        __helios__common__enum_tag_equals(data_233, 1)
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_234) -> {
        __core__chooseData(data_234, () -> {
            pair_63 = __core__unConstrData__safe(data_234);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_63), 1),
                () -> {
                    data_235 = __core__listData(__core__sndPair(pair_63));
                    __core__chooseData(data_235, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_139 = __core__unListData__safe(data_235);
                        __core__chooseList(fields_139, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_236) -> {
        __helios__common__enum_tag_equals(data_236, 2)
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_237) -> {
        __core__chooseData(data_237, () -> {
            pair_64 = __core__unConstrData__safe(data_237);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_64), 2),
                () -> {
                    data_238 = __core__listData(__core__sndPair(pair_64));
                    __core__chooseData(data_238, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_140 = __core__unListData__safe(data_238);
                        __core__chooseList(fields_140, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_239) -> {
        __helios__common__enum_tag_equals(data_239, 3)
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_240) -> {
        __core__chooseData(data_240, () -> {
            pair_65 = __core__unConstrData__safe(data_240);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_65), 3),
                () -> {
                    data_241 = __core__listData(__core__sndPair(pair_65));
                    __core__chooseData(data_241, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_141 = __core__unListData__safe(data_241);
                        __core__chooseList(fields_141, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_242) -> {
        __helios__common__enum_tag_equals(data_242, 4)
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_243) -> {
        __core__chooseData(data_243, () -> {
            pair_66 = __core__unConstrData__safe(data_243);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_66), 4),
                () -> {
                    data_244 = __core__listData(__core__sndPair(pair_66));
                    __core__chooseData(data_244, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_142 = __core__unListData__safe(data_244);
                        __core__chooseList(fields_142, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_245) -> {
        __helios__common__enum_tag_equals(data_245, 5)
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_246) -> {
        __core__chooseData(data_246, () -> {
            pair_67 = __core__unConstrData__safe(data_246);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_67), 5),
                () -> {
                    data_247 = __core__listData(__core__sndPair(pair_67));
                    __core__chooseData(data_247, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_143 = __core__unListData__safe(data_247);
                        __core__chooseList(fields_143, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__getRefCharterUtxo = (mph_16) -> {
        charterAc = __helios__assetclass__new(mph_16, __helios__string__encode_utf8("charter")());
        hasCharter = (txin) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)
        };
        __core__chooseUnit(__helios__print("getting ref_input for charter
"), (charterUtxo) -> {
            charterUtxo
        }(__cond_12 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_12),
            () -> {
                (__lhs_0_20) -> {
                    ch = __helios__option[__helios__txinput]__some__some(__lhs_0_20);
                    ch
                }
            },
            () -> {
                (__lhs_0_19) -> {
                    __helios__error("Missing charter in required ref_inputs (use tcxWithCharterRef(tcx) in txn building functions)")
                }
            }
        )()(__cond_12)))
    };
    __module__CapoHelpers__getTxCharterData = (mph_17, __useopt__refInputs, refInputs) -> {
        refInputs_1 = __core__ifThenElse(
            __useopt__refInputs,
            () -> {
                refInputs
            },
            () -> {
                __helios__tx__ref_inputs(__helios__scriptcontext__tx)
            }
        )();
        charterAc_1 = __helios__assetclass__new(mph_17, __helios__string__encode_utf8("charter")());
        hasCharter_1 = (txin_1) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)
        };
        (charterUtxo_1) -> {
            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);
            ctd
        }(__cond_13 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter_1);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_13),
            () -> {
                (__lhs_0_24) -> {
                    ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_24);
                    ch_2
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_1);
                    __core__ifThenElse(
                        __helios__option[__helios__txinput]__some____is(__cond_14),
                        () -> {
                            (__lhs_0_23) -> {
                                ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_23);
                                ch_1
                            }
                        },
                        () -> {
                            (__lhs_0_22) -> {
                                __helios__error("Missing charter inputs / ref_inputs")
                            }
                        }
                    )()(__cond_14)
                }
            }
        )()(__cond_13))
    };
    __helios__option[__helios__string]__is_valid_data = (data_248) -> {
        __core__chooseData(data_248, () -> {
            pair_68 = __core__unConstrData__safe(data_248);
            index_9 = __core__fstPair(pair_68);
            fields_144 = __core__sndPair(pair_68);
            __core__ifThenElse(
                __core__equalsInteger(index_9, 0),
                () -> {
                    __core__chooseList(fields_144, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_144), () -> {
                            __helios__string__is_valid_data(__core__headList__safe(fields_144))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_9, 1),
                        () -> {
                            __core__chooseList(fields_144, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__txinput]__is_valid_data = (data_249) -> {
        __core__chooseData(data_249, () -> {
            pair_69 = __core__unConstrData__safe(data_249);
            index_10 = __core__fstPair(pair_69);
            fields_145 = __core__sndPair(pair_69);
            __core__ifThenElse(
                __core__equalsInteger(index_10, 0),
                () -> {
                    __core__chooseList(fields_145, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_145), () -> {
                            __helios__txinput__is_valid_data(__core__headList__safe(fields_145))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_10, 1),
                        () -> {
                            __core__chooseList(fields_145, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__DelegateInput[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__DelegateInput[]__link = (self_166) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_166))
    };
    __module__CapoHelpers__DelegateInput[]__role = (self_167) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_167))
    };
    __helios__option[__helios__string]__from_data = (data_250) -> {
        __14 = __core__ifThenElse(
            __helios__option[__helios__string]__is_valid_data(data_250),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_250
    };
    __module__CapoHelpers__DelegateInput[]__idPrefix = (self_168) -> {
        __helios__option[__helios__string]__from_data(__helios__common__struct_field_2(self_168))
    };
    __helios__option[__helios__txinput]__from_data = (data_251) -> {
        __15 = __core__ifThenElse(
            __helios__option[__helios__txinput]__is_valid_data(data_251),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_251
    };
    __module__CapoHelpers__DelegateInput[]__input = (self_169) -> {
        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_169))
    };
    __module__CapoHelpers__DelegateInput[]__mph = (self_170) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_170))
    };
    __helios__option[__helios__string]____to_data = __helios__common__identity;
    __helios__option[__helios__txinput]____to_data = __helios__common__identity;
    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_18) -> {
        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_18), __core__mkNilData(()))))))
    };
    __helios__option[__helios__txinput]__unwrap = (self_171) -> {
        () -> {
            __helios__txinput__from_data(__helios__common__enum_field_0(self_171))
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_172) -> {
        () -> {
            i_8 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_172))();
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
            __core__chooseUnit(__cond_15 = inputData;
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_15),
                () -> {
                    (__lhs_0_25) -> {
                        index_11 = __helios__data__constrdata__tag(__lhs_0_25);
                        fields_146 = __helios__data__constrdata__fields(__lhs_0_25);
                        __core__chooseUnit(__helios__print(__helios__string____add("    --\u{1F41E} generic delegate activity at index ", __helios__int__show(index_11)())), __cond_16 = __helios__list[__helios__data]__head(fields_146);
                        __core__ifThenElse(
                            __helios__data__constrdata____is(__cond_16),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __helios__data__constrdata__tag(__lhs_0_26);
                                    __helios__print(__helios__string____add("    --\u{1F41E} nested activity at index ", __helios__int__show(index2)()))
                                }
                            },
                            () -> {
                                (__17) -> {
                                    ()
                                }
                            }
                        )()(__cond_16))
                    }
                },
                () -> {
                    (__16) -> {
                        ()
                    }
                }
            )()(__cond_15), inputData)
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {
        (self_173) -> {
            () -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_173)())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__assert = (__module__CapoHelpers__DelegateInput[]__error) -> {
        (self_174) -> {
            (assertionOk, msg_3) -> {
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    true
                }, () -> {
                    __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_174)(), __module__CapoHelpers__DelegateInput[]__serialize(self_174)())
                }), msg_3), __core__ifThenElse(
                    assertionOk,
                    () -> {
                        __helios__assert(true, "")
                    },
                    () -> {
                        () -> {
                            __module__CapoHelpers__DelegateInput[]__error(self_174)(msg_3)
                        }()
                    }
                )())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__error_1 = (self_175) -> {
        (msg_4) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_175)(), __module__CapoHelpers__DelegateInput[]__serialize(self_175)())
            }), msg_4), __core__chooseUnit(__helios__print(__helios__string____add("\u26A0\uFE0F \u26A0\uFE0F \u26A0\uFE0F error executing policy for dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__DelegateInput[]__link(self_175)))), __core__chooseUnit(__helios__print(__helios__string____add("     ---- with input value: ", __helios__value__show(__helios__txinput__value(__helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_175))()))(false, ()))), __core__chooseUnit(__helios__print("
"), __helios__assert(false, msg_4)))))
        }
    };
    __helios__list[__helios__data]__get = (self_176) -> {
        (index_12) -> {
            recurse_87 = (recurse_86, self_177, i_9) -> {
                __core__chooseList(self_177, () -> {
                    __helios__error("index out of range")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_12, i_9),
                        () -> {
                            __core__headList__safe(self_177)
                        },
                        () -> {
                            recurse_86(recurse_86, __core__tailList__safe(self_177), __core__addInteger(i_9, 1))
                        }
                    )()
                })()
            };
            recurse_87(recurse_87, self_176, 0)
        }
    };
    __helios__list[__helios__data]__length = __helios__common__length;
    __helios__list[__helios__data]__filter = (self_178) -> {
        (fn_20) -> {
            __helios__common__filter_list(self_178, (item_11) -> {
                fn_20(__helios__data__from_data(item_11))
            })
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged) -> {
        (self_179) -> {
            (seed) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqSeededMinting: ensures the delegate is unchanged, so callers needn't.", false, ()), __cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_179)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_17),
                    () -> {
                        (__lhs_0_30) -> {
                            ma_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_30);
                            __core__chooseUnit(__cond_20 = ma_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_20),
                                () -> {
                                    (__lhs_0_31) -> {
                                        fields_148 = __helios__data__constrdata__fields(__lhs_0_31);
                                        __helios__assert(__helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__get(fields_148)(0))), "seed mismatch")
                                    }
                                },
                                () -> {
                                    (__21) -> {
                                        __helios__error("no way")
                                    }
                                }
                            )()(__cond_20), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_179)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_17),
                            () -> {
                                (__lhs_0_27) -> {
                                    activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_27);
                                    __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__list[__helios__data]__length(activities), 0), "no minting activities found"), foundWithThisSeed = __helios__list[__helios__data]__filter(activities)((a_14) -> {
                                        __cond_18 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_14);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_18),
                                            () -> {
                                                (__lhs_0_28) -> {
                                                    ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_28);
                                                    __cond_19 = ma;
                                                    __core__ifThenElse(
                                                        __helios__data__constrdata____is(__cond_19),
                                                        () -> {
                                                            (__lhs_0_29) -> {
                                                                index_13 = __helios__data__constrdata__tag(__lhs_0_29);
                                                                fields_147 = __helios__data__constrdata__fields(__lhs_0_29);
                                                                __core__chooseUnit(__helios__assert(__helios__int____eq(index_13, index_13), "no way c"), __helios__bool__and(() -> {
                                                                    __helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__head(fields_147)))
                                                                }, () -> {
                                                                    true
                                                                }))
                                                            }
                                                        },
                                                        () -> {
                                                            (__20) -> {
                                                                __helios__error("no way d")
                                                            }
                                                        }
                                                    )()(__cond_19)
                                                }
                                            },
                                            () -> {
                                                (__19) -> {
                                                    false
                                                }
                                            }
                                        )()(__cond_18)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate multi-activities must be minting with this seed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_179)(__helios__int____gt(__helios__list[__helios__data]__length(foundWithThisSeed), 0), "no minting activity found for seed!"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given seed is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_179)(__helios__int____eq(__helios__list[__helios__data]__length(foundWithThisSeed), 1), "multiple minting activities found for seed"), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_179)())))))
                                }
                            },
                            () -> {
                                (__18) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_179)("non-mint activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_17))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1) -> {
        (self_180) -> {
            (recId) -> {
                __core__chooseUnit(__cond_25 = __module__CapoHelpers__DelegateInput[]__role(self_180);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_25),
                    () -> {
                        (__lhs_0_40) -> {
                            __helios__print("ok, checking spending activity for a DgData Policy")
                        }
                    },
                    () -> {
                        (__26) -> {
                            __helios__error("withUniqueDDSpendingActivity: only valid for DgDataPolicy")
                        }
                    }
                )()(__cond_25), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqueDDSpendingActivity: checks presence of delegated-data controller's spending activity for recId", false, ()), strId = __helios__bytearray__decode_utf8(recId)();
                __core__chooseUnit(__helios__print(__helios__string____add("    -- recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("TEST THIS v"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spendDgt must be acting on the matching record-id", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the delegate is unchanged, so callers needn't also check that", false, ()), __cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_180)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_21),
                    () -> {
                        (__lhs_0_38) -> {
                            sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_38);
                            __core__chooseUnit(__cond_24 = sa_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_24),
                                () -> {
                                    (__lhs_0_39) -> {
                                        index_15 = __helios__data__constrdata__tag(__lhs_0_39);
                                        fields_150 = __helios__data__constrdata__fields(__lhs_0_39);
                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_15, index_15), "no way e"), foundRecId_1 = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_150));
                                        __core__ifThenElse(
                                            __helios__bytearray____neq(recId, foundRecId_1),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending:", strId)), __core__chooseUnit(__helios__print(__helios__string____add("  -- actual: Spending:", __helios__bytearray__show(foundRecId_1)())), __module__CapoHelpers__DelegateInput[]__error_1(self_180)("recId mismatch")))
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__print(__helios__string____add("  -- ok: DD controller spending activity for ", strId))
                                                }()
                                            }
                                        )())
                                    }
                                },
                                () -> {
                                    (__25) -> {
                                        __helios__error("no way f")
                                    }
                                }
                            )()(__cond_24), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_180)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_21),
                            () -> {
                                (__lhs_0_32) -> {
                                    activities_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_32);
                                    __core__chooseUnit(__helios__print("    -- multiple activities found
"), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_180)(__helios__int____gt(__helios__list[__helios__data]__length(activities_1), 0), "no spending activities found"), actsOnThisRecord = __helios__list[__helios__data]__filter(activities_1)((a_15) -> {
                                        __cond_22 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_15);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_22),
                                            () -> {
                                                (__lhs_0_37) -> {
                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_180)("dgInput: withSpendingActivity: CreatingDelegatedData invalid"), __helios__error(""))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_22),
                                                    () -> {
                                                        (__lhs_0_36) -> {
                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_180)("dgInput: withSpendingActivity: UpdatingDgData invalid; use a Spending variant in the delegated-data policy"), __helios__error(""))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_22),
                                                            () -> {
                                                                (__lhs_0_35) -> {
                                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_180)("dgInput: withSpendingActivity: DeletingDelegatedData invalid"), __helios__error(""))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_22),
                                                                    () -> {
                                                                        (__lhs_0_33) -> {
                                                                            sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_33);
                                                                            __cond_23 = sa;
                                                                            __core__ifThenElse(
                                                                                __helios__data__constrdata____is(__cond_23),
                                                                                () -> {
                                                                                    (__lhs_0_34) -> {
                                                                                        index_14 = __helios__data__constrdata__tag(__lhs_0_34);
                                                                                        fields_149 = __helios__data__constrdata__fields(__lhs_0_34);
                                                                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_14, index_14), "no way h"), foundRecId = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_149));
                                                                                        __core__ifThenElse(
                                                                                            __helios__bytearray____neq(recId, foundRecId),
                                                                                            () -> {
                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending: ", strId)), __core__chooseUnit(__helios__print(__helios__string____add("
  -- actual: Spending: ", __helios__bytearray__show(foundRecId)())), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_180)("recId mismatch"), __helios__error(""))))
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    true
                                                                                                }()
                                                                                            }
                                                                                        )())
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__24) -> {
                                                                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_180)("wrong structure for spending activity"), __helios__error(""))
                                                                                    }
                                                                                }
                                                                            )()(__cond_23)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__23) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(__cond_22)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate data-controller multi-activities must treat this recId", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_180)(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(actsOnThisRecord), 0))("dgt acting on this recId? "), __helios__string____add("no spending activity found for recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given recId is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_180)(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(actsOnThisRecord), 1))("exactly one activity? "), __helios__string____add("multiple spending activities found for recId: ", strId)), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_180)()))))))
                                }
                            },
                            () -> {
                                (__22) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_180)("non-spend activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_21)))))))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_181) -> {
        () -> {
            __lhs_0_41 = self_181;
            link_1 = __module__CapoHelpers__DelegateInput[]__link(__lhs_0_41);
            input_1 = __module__CapoHelpers__DelegateInput[]__input(__lhs_0_41);
            mph_19 = __module__CapoHelpers__DelegateInput[]__mph(__lhs_0_41);
            __lhs_0_42 = link_1;
            uut_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_42);
            validatorHash_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_42);
            targetValue = __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken(link_1)(mph_19);
            (returnedUnchanged) -> {
                __core__chooseUnit(__helios__assert(returnedUnchanged, "no"), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1)(mph_19, false, (), false, ()), "no"), self_181))
            }(__cond_26 = validatorHash_1;
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__some____is(__cond_26),
                () -> {
                    (__lhs_0_44) -> {
                        vh_4 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_44);
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_181)(__helios__value__contains(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_4))(targetValue), __helios__string____add("dgTkn not returned: ", uut_1)), __cond_27 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o_1) -> {
                            __helios__bytearray____eq(__helios__txoutputdatum__serialize(__helios__txoutput__datum(o_1))(), __helios__txoutputdatum__serialize(__helios__txinput__datum(__helios__option[__helios__txinput]__unwrap(input_1)()))())
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txoutput]__some____is(__cond_27),
                            () -> {
                                (__lhs_0_46) -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add(" -- good, the dgTkn is unchanged: ", uut_1)), true)
                                }
                            },
                            () -> {
                                (__lhs_0_45) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_181)("dgt modified"), __helios__error(""))
                                }
                            }
                        )()(__cond_27))
                    }
                },
                () -> {
                    (__lhs_0_43) -> {
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_181)("unchOut - no vh"), __helios__error(""))
                    }
                }
            )()(__cond_26))
        }
    };
    __module__CapoHelpers__DelegateInput[]__orFail = (self_182) -> {
        () -> {
            __lhs_0_47 = self_182;
            true
        }
    };
    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;
    __module__CapoHelpers__CapoCtx[]__mph = (self_183) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_183))
    };
    __module__CapoHelpers__CapoCtx[]__charter = (self_184) -> {
        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_184))
    };
    __module__CapoHelpers__CapoCtx[]____new = (mph_20, charter) -> {
        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_20), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_185) -> {
        () -> {
            e = "requires charter as input";
            __cond_28 = __module__CapoHelpers__CapoCtx[]__charter(self_185);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_28),
                () -> {
                    (__lhs_0_56) -> {
                        __helios__error(e)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_28),
                        () -> {
                            (__lhs_0_55) -> {
                                __helios__error(e)
                            }
                        },
                        () -> {
                            (__lhs_0_48) -> {
                                utxo_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_48);
                                activity = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2));
                                wrongActivity = () -> {
                                    __core__ifThenElse(
                                        true,
                                        () -> {
                                            __helios__error("non-CharterData activity")
                                        },
                                        () -> {
                                            () -> {
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()
                                            }()
                                        }
                                    )()
                                };
                                __cond_29 = activity;
                                __core__ifThenElse(
                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_29),
                                    () -> {
                                        (__lhs_0_54) -> {
                                            wrongActivity()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_29),
                                            () -> {
                                                (__lhs_0_53) -> {
                                                    wrongActivity()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_29),
                                                    () -> {
                                                        (__lhs_0_52) -> {
                                                            activity
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_29),
                                                            () -> {
                                                                (__lhs_0_51) -> {
                                                                    activity
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_29),
                                                                    () -> {
                                                                        (__lhs_0_50) -> {
                                                                            activity
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_49) -> {
                                                                            activity
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_29)
                            }
                        }
                    )()
                }
            )()(__cond_28)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_186) -> {
        (key_14) -> {
            __helios__common__map_get(self_186, __helios__string____to_data(key_14), (x_5) -> {
                __core__constrData(0, __helios__common__list_1(x_5))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__findManifestEntry = (__module__CapoHelpers__CapoCtx[]__getCharterData) -> {
        (self_187) -> {
            (key_15) -> {
                __core__chooseUnit(__helios__print(__helios__string____add("    -- looking for capo's manifest entry: ", key_15)), charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData(self_187)(), 0);
                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData))(key_15))
            }
        }
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is = (data_252) -> {
        __helios__common__enum_tag_equals(data_252, 0)
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some = (self_188) -> {
        __module__CapoHelpers__CapoManifestEntry[]__from_data(__helios__common__enum_field_0(self_188))
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is = (data_253) -> {
        __helios__common__enum_tag_equals(data_253, 1)
    };
    __helios__option[__helios__bytearray]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bytearray]__some____new = (some_2) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bytearray____to_data(some_2)))
    };
    __module__CapoHelpers__CapoCtx[]__findManifestTokenName = (__module__CapoHelpers__CapoCtx[]__getCharterData_1) -> {
        (self_189) -> {
            (key_16, __useopt__required_2, required_4) -> {
                required_5 = __core__ifThenElse(
                    __useopt__required_2,
                    () -> {
                        required_4
                    },
                    () -> {
                        true
                    }
                )();
                oe = __module__CapoHelpers__CapoCtx[]__findManifestEntry(__module__CapoHelpers__CapoCtx[]__getCharterData_1)(self_189)(key_16);
                __cond_30 = oe;
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_30),
                    () -> {
                        (__lhs_0_58) -> {
                            __core__chooseUnit(__helios__assert(__helios__bool____not(required_5), __helios__string____add("missing required manifest entry: ", key_16)), __helios__option[__helios__bytearray]__none____new())
                        }
                    },
                    () -> {
                        (__lhs_0_57) -> {
                            e_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_57);
                            __helios__option[__helios__bytearray]__some____new(__module__CapoHelpers__CapoManifestEntry[]__tokenName(e_1))
                        }
                    }
                )()(__cond_30)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getSettingsId = (__module__CapoHelpers__CapoCtx[]__getCharterData_2) -> {
        (self_190) -> {
            (__useopt__required_3, required_6) -> {
                required_7 = __core__ifThenElse(
                    __useopt__required_3,
                    () -> {
                        required_6
                    },
                    () -> {
                        true
                    }
                )();
                __module__CapoHelpers__CapoCtx[]__findManifestTokenName(__module__CapoHelpers__CapoCtx[]__getCharterData_2)(self_190)("currentSettings", true, required_7)
            }
        }
    };
    __helios__option[__helios__txoutput]__some__some = (self_191) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_191))
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3) -> {
        (self_192) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must have the Capo's govAuthority approval", false, ()), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData_3(self_192)()))(__module__CapoHelpers__CapoCtx[]__mph(self_192), false, (), false, ()), "no way m"), self_192))
            }
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_254) -> {
        __helios__common__enum_tag_equals(data_254, 1)
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_193) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_193))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_194) -> {
        (key_17) -> {
            __helios__common__map_get(self_194, __helios__string____to_data(key_17), (x_6) -> {
                __core__constrData(0, __helios__common__list_1(x_6))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__option[__helios__string]__some____new = (some_3) -> {
        __core__constrData(0, __helios__common__list_1(__helios__string____to_data(some_3)))
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput) -> {
        (self_195) -> {
            (typeName, __useopt__required_4, required_8) -> {
                required_9 = __core__ifThenElse(
                    __useopt__required_4,
                    () -> {
                        required_8
                    },
                    () -> {
                        true
                    }
                )();
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- requiresDgDataPolicyInput(): locates the manifest's data-policy for this record-type", false, ()), __cond_31 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_4(self_195)()))(typeName);
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_31),
                    () -> {
                        (__lhs_0_61) -> {
                            __helios__error(__helios__string____add(__helios__string____add("missing data-policy manifest for record-type '", typeName), "'"))
                        }
                    },
                    () -> {
                        (__lhs_0_59) -> {
                            entry = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_59);
                            __cond_32 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry);
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_32),
                                () -> {
                                    (__lhs_0_60) -> {
                                        policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_60);
                                        idPrefix_2 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_60);
                                        (callback_8) -> {
                                            callback_8(policyLink, idPrefix_2)
                                        }
                                    }
                                },
                                () -> {
                                    (__27) -> {
                                        __helios__error(__helios__string____add("manifest entry is not a data policy: ", typeName))
                                    }
                                }
                            )()(__cond_32)((dgtLink, idPrefix_1) -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(__helios__string____add("requires the delegated-data policy for type=", typeName), false, ()), __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_195)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new(typeName), true, required_9, true, __helios__option[__helios__string]__some____new(idPrefix_1)))
                            })
                        }
                    }
                )()(__cond_31))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5) -> {
        (self_196) -> {
            (__useopt__required_5, required_10) -> {
                required_11 = __core__ifThenElse(
                    __useopt__required_5,
                    () -> {
                        required_10
                    },
                    () -> {
                        true
                    }
                )();
                input_2 = __helios__scriptcontext__get_current_input();
                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_196)()))(__module__CapoHelpers__CapoCtx[]__mph(self_196));
                isUsingMintDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_2))(acMintDgt), 0))("    -- acting on mintDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingMintDgt
                }, () -> {
                    __helios__bool____not(required_11)
                }), "not acting as mint delegate!"), isUsingMintDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6) -> {
        (self_197) -> {
            (__useopt__required_6, required_12) -> {
                required_13 = __core__ifThenElse(
                    __useopt__required_6,
                    () -> {
                        required_12
                    },
                    () -> {
                        true
                    }
                )();
                input_3 = __helios__scriptcontext__get_current_input();
                acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_6(self_197)()))(__module__CapoHelpers__CapoCtx[]__mph(self_197));
                isUsingSpendDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_3))(acSpendDgt), 0))("    -- acting on spendDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingSpendDgt
                }, () -> {
                    __helios__bool____not(required_13)
                }), "not acting as spend delegate!"), isUsingSpendDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_198) -> {
        () -> {
            __cond_33 = __module__CapoHelpers__CapoCtx[]__charter(self_198);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_33),
                () -> {
                    (__lhs_0_63) -> {
                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_63);
                        datum_3
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_33),
                        () -> {
                            (__lhs_0_62) -> {
                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_62);
                                datum_2
                            }
                        },
                        () -> {
                            (__28) -> {
                                __helios__error("CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first")
                            }
                        }
                    )()
                }
            )()(__cond_33)
        }
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address) -> {
        (self_199) -> {
            () -> {
                charterAc_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_199), __helios__string__encode_utf8("charter")());
                capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_199)();
                __cond_34 = __module__CapoHelpers__CapoCtx[]__charter(self_199);
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_34),
                    () -> {
                        (__lhs_0_64) -> {
                            charterData_1 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo) -> {
                                __helios__bool__and(() -> {
                                    __helios__address____eq(__helios__txoutput__address(txo), capoAddr)
                                }, () -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo))(charterAc_2), 0)
                                })
                            })))), 0);
                            charterData_1
                        }
                    },
                    () -> {
                        (__29) -> {
                            __helios__error("CapoCtx.getNextCharterData(): invalid except with charter strategy Input")
                        }
                    }
                )()(__cond_34)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1 = (self_200) -> {
        () -> {
            __cond_35 = __module__CapoHelpers__CapoCtx[]__charter(self_200);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_35),
                () -> {
                    (__lhs_0_66) -> {
                        utxo_4 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_66);
                        utxo_4
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_35),
                        () -> {
                            (__lhs_0_65) -> {
                                utxo_3 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_65);
                                utxo_3
                            }
                        },
                        () -> {
                            (__30) -> {
                                __helios__error("CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first")
                            }
                        }
                    )()
                }
            )()(__cond_35)
        }
    };
    __helios__option[__helios__string]__none____new = () -> {
        __helios__option__NONE
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_201) -> {
        (dgtLink_1, role_1, __useopt__required_7, required_14, __useopt__idPrefix, idPrefix_3) -> {
            required_15 = __core__ifThenElse(
                __useopt__required_7,
                () -> {
                    required_14
                },
                () -> {
                    true
                }
            )();
            idPrefix_4 = __core__ifThenElse(
                __useopt__idPrefix,
                () -> {
                    idPrefix_3
                },
                () -> {
                    __helios__option[__helios__string]__none____new()
                }
            )();
            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_4, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_201), true, required_15), __module__CapoHelpers__CapoCtx[]__mph(self_201))
        }
    };
    __module__CapoHelpers__CapoCtx[]__address_1 = (self_202) -> {
        () -> {
            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_202)());
            addr
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataRef = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate) -> {
        (self_203) -> {
            (__useopt__recId, recId_1, __useopt__recIdBytes, recIdBytes) -> {
                recId_2 = __core__ifThenElse(
                    __useopt__recId,
                    () -> {
                        recId_1
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_1 = __core__ifThenElse(
                    __useopt__recIdBytes,
                    () -> {
                        recIdBytes
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_2)()
                    }
                )();
                hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate(self_203)(false, (), true, recIdBytes_1);
                recIdStr = __helios__bytearray__decode_utf8(recIdBytes_1)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting refDD ", recIdStr)), __cond_36 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasDD);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_36),
                    () -> {
                        (__lhs_0_68) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ refDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_67) -> {
                            txin_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_67);
                            __core__chooseUnit(__helios__print("\u2705 \u{1F4CE} ^ refDD: ok
"), txin_2)
                        }
                    }
                )()(__cond_36))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1) -> {
        (self_204) -> {
            (__useopt__recId_1, recId_3, __useopt__recIdBytes_1, recIdBytes_2) -> {
                recId_4 = __core__ifThenElse(
                    __useopt__recId_1,
                    () -> {
                        recId_3
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_3 = __core__ifThenElse(
                    __useopt__recIdBytes_1,
                    () -> {
                        recIdBytes_2
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_4)()
                    }
                )();
                hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1(self_204)(false, (), true, recIdBytes_3);
                recIdStr_1 = __helios__bytearray__decode_utf8(recIdBytes_3)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting inDD ", recIdStr_1)), __cond_37 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_1);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_37),
                    () -> {
                        (__lhs_0_70) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ inDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_69) -> {
                            txin_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_69);
                            __core__chooseUnit(__helios__print("    \u2705 \u{1F4CE} ^ inDD: ok
"), txin_3)
                        }
                    }
                )()(__cond_37))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_205) -> {
        (__useopt__typeName, typeName_1, __useopt__id, id_1) -> {
            typeName_2 = __core__ifThenElse(
                __useopt__typeName,
                () -> {
                    typeName_1
                },
                () -> {
                    ""
                }
            )();
            id_2 = __core__ifThenElse(
                __useopt__id,
                () -> {
                    id_1
                },
                () -> {
                    #
                }
            )();
            capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_1(self_205)();
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                __helios__int____gt(__helios__bytearray__length(id_2), 0)
            }, () -> {
                __helios__int____gt(__helios__bytearray__length(__helios__string__serialize(typeName_2)()), 0)
            }), "data predicate must have id or typeName"), (txin_4) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txinput__address(txin_4), capoAddr_1),
                    () -> {
                        data_255 = __helios__txoutputdatum__inline(__helios__txinput__datum(txin_4));
                        __cond_38 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_255);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_38),
                            () -> {
                                (__lhs_0_71) -> {
                                    x_7 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_255));
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            true
                                        }, () -> {
                                            __helios__bool__or(() -> {
                                                __helios__string____eq(typeName_2, "")
                                            }, () -> {
                                                __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_7), typeName_2)
                                            })
                                        })
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_2, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_7), id_2)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__31) -> {
                                    false
                                }
                            }
                        )()(__cond_38)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput) -> {
        (self_206) -> {
            (newDataId, dataTypePurpose) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record is stored in the Capo address", false, ()), dgData = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_206)(newDataId)));
                dgDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(dgData);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record matches the type-name indicated in the dgDataPolicy manifest", false, ()), __cond_39 = dgDatum;
                __core__ifThenElse(
                    __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_39),
                    () -> {
                        (__lhs_0_72) -> {
                            data_256 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(dgData));
                            recIdStr_2 = __helios__bytearray__decode_utf8(newDataId)();
                            __core__ifThenElse(
                                __helios__bytearray____neq(__module__StellarHeliosHelpers__AnyData[]__id(data_256), newDataId),
                                () -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- expected id: ", recIdStr_2)), actualIdStr = __helios__bytearray__decode_utf8(__module__StellarHeliosHelpers__AnyData[]__id(data_256))();
                                    __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: wrong id: ", actualIdStr)))
                                },
                                () -> {
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__string____neq(__module__StellarHeliosHelpers__AnyData[]__type(data_256), dataTypePurpose),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected type: ", dataTypePurpose)), __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: bad type: ", __module__StellarHeliosHelpers__AnyData[]__type(data_256))))
                                            },
                                            () -> {
                                                () -> {
                                                    __core__chooseUnit(__helios__print(__helios__string____add("\u2705 \u{1F4CE} outDD: ok: ^ outDD to Capo: ", recIdStr_2)), true)
                                                }()
                                            }
                                        )()
                                    }()
                                }
                            )()
                        }
                    },
                    () -> {
                        (__32) -> {
                            __helios__error("output not delegated data")
                        }
                    }
                )()(__cond_39)))
            }
        }
    };
    __helios__option[__helios__txoutput]__none____is = (data_257) -> {
        __helios__common__enum_tag_equals(data_257, 1)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1 = (self_207) -> {
        (recId_5) -> {
            recIdStr_3 = __helios__bytearray__decode_utf8(recId_5)();
            ac_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_207), recId_5);
            capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_1(self_207)();
            __cond_40 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((txout) -> {
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        true
                    }, () -> {
                        __helios__bool__trace(__helios__int____eq(__helios__value__get_safe(__helios__txoutput__value(txout))(ac_2), 1))("  -- output has value? ")
                    })
                }, () -> {
                    __helios__bool__trace(__helios__address____eq(__helios__txoutput__address(txout), capoAddr_2))("     -- found output... is it at the right capoAddr? ")
                })
            });
            __core__ifThenElse(
                __helios__option[__helios__txoutput]__none____is(__cond_40),
                () -> {
                    (__lhs_0_74) -> {
                        __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} ^ outDD: not found: ", recIdStr_3))
                    }
                },
                () -> {
                    (__lhs_0_73) -> {
                        txout_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_73);
                        __core__chooseUnit(__helios__print(__helios__string____add("     \u2705 \u{1F4CE} ^ outDD: found ", recIdStr_3)), txout_1)
                    }
                }
            )()(__cond_40)
        }
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {
        (self_208) -> {
            () -> {
                charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_208);
                __cond_41 = charter_1;
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_41),
                    () -> {
                        (__lhs_0_80) -> {
                            __core__chooseUnit(__helios__print("      -- needs charter, anywhere in the tx (already found as ref : )"), self_208)
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_41),
                            () -> {
                                (__lhs_0_79) -> {
                                    __core__chooseUnit(__helios__print("      -- needs charter, anywhere in the tx (already found as input : )"), self_208)
                                }
                            },
                            () -> {
                                (__lhs_0_75) -> {
                                    __lhs_0_76 = self_208;
                                    mph_21 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_76);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be available in the transaction (input or ref)", false, ()), charterAc_3 = __helios__assetclass__new(mph_21, __helios__string__encode_utf8("charter")());
                                    hasCharter_2 = (txin_5) -> {
                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_5))(charterAc_3), 0)
                                    };
                                    __cond_42 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_2);
                                    __core__ifThenElse(
                                        __helios__option[__helios__txinput]__none____is(__cond_42),
                                        () -> {
                                            (__lhs_0_78) -> {
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): no charter ref; must be in inputs...
"), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_208)())
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_77) -> {
                                                charterUtxo_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_77);
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): found charter ref
"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);
                                                __module__CapoHelpers__CapoCtx[]____new(mph_21, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_2)))
                                            }
                                        }
                                    )()(__cond_42))
                                }
                            }
                        )()
                    }
                )()(__cond_41)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_209) -> {
        () -> {
            charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_209);
            __cond_43 = charter_2;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_43),
                () -> {
                    (__lhs_0_86) -> {
                        __core__chooseUnit(__helios__print("      -- needs charter spent in inputs (already checked : )"), self_209)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_43),
                        () -> {
                            (__lhs_0_85) -> {
                                __helios__error("CapoCtx.withCharterInput(): charter is from ref!")
                            }
                        },
                        () -> {
                            (__lhs_0_81) -> {
                                __lhs_0_82 = self_209;
                                mph_22 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_82);
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be spent in the inputs", false, ()), charterAc_4 = __helios__assetclass__new(mph_22, __helios__string__encode_utf8("charter")());
                                hasCharter_3 = (txin_6) -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_6))(charterAc_4), 0)
                                };
                                __core__chooseUnit(__helios__print("    -- CapoCtx finding charter in inputs
"), (charterUtxo_3) -> {
                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_3))), 0);
                                    __module__CapoHelpers__CapoCtx[]____new(mph_22, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_3))
                                }(__cond_44 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_3);
                                __core__ifThenElse(
                                    __helios__option[__helios__txinput]__some____is(__cond_44),
                                    () -> {
                                        (__lhs_0_84) -> {
                                            ch_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_84);
                                            ch_3
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_83) -> {
                                            __helios__error("Missing required charter input")
                                        }
                                    }
                                )()(__cond_44))))
                            }
                        }
                    )()
                }
            )()(__cond_43)
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_210) -> {
        () -> {
            charter_3 = __module__CapoHelpers__CapoCtx[]__charter(self_210);
            __cond_45 = charter_3;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_45),
                () -> {
                    (__lhs_0_90) -> {
                        __core__chooseUnit(__helios__print("      -- needs charter ref (already checked : )"), self_210)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_45),
                        () -> {
                            (__lhs_0_89) -> {
                                __helios__error("CapoCtx.withCharterRef(): charter is from inputs!")
                            }
                        },
                        () -> {
                            (__lhs_0_87) -> {
                                __lhs_0_88 = self_210;
                                mph_23 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_88);
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be referenced in the txn, but unspent", false, ()), utxo_5 = __module__CapoHelpers__getRefCharterUtxo(mph_23);
                                datum_6 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_5))), 0);
                                __module__CapoHelpers__CapoCtx[]____new(mph_23, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_6, utxo_5)))
                            }
                        }
                    )()
                }
            )()(__cond_45)
        }
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_211) -> {
        (fn_21, z_2) -> {
            __helios__common__fold(self_211, (z_3, pair_70) -> {
                fn_21(z_3, __helios__string__from_data(__core__fstPair(pair_70)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_70)))
            }, z_2)
        }
    };
    __helios__option[__helios__bool]__unwrap = (self_212) -> {
        () -> {
            __helios__bool__from_data(__helios__common__enum_field_0(self_212))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all = (self_213) -> {
        (fn_22) -> {
            fn_23 = (pair_71) -> {
                fn_22(__helios__string__from_data(__core__fstPair(pair_71)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(pair_71)))
            };
            __helios__common__all(self_213, fn_23)
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all = (self_214) -> {
        (fn_24) -> {
            __helios__common__all(self_214, (item_12) -> {
                fn_24(__module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(item_12))
            })
        }
    };
    __helios__option[__helios__bool]__some____is = (data_258) -> {
        __helios__common__enum_tag_equals(data_258, 0)
    };
    __module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings = (self_215) -> {
        () -> {
            charterData_2 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_215)();
            mph_24 = __module__CapoHelpers__CapoCtx[]__mph(self_215);
            __lhs_0_91 = __helios__common__assert_constr_index(charterData_2, 0);
            spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_91);
            otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_91);
            mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_91);
            govDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_91);
            manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_91);
            inputs_2 = __helios__tx__inputs(__helios__scriptcontext__tx);
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- only the spend delegate calls this function", false, ()), spendDelegateIsValidating = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(self_215)(false, ());
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- spend delegate requires the other delegates validate (except mint delegate == same as spend delegate)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("govDelegate MAY contribute to settings validation", false, ()), (govDelegateMaybeValidating) -> {
                checkOneInvariant = (oneDgt) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariant must validate settings", false, ()), __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(oneDgt)(inputs_2, mph_24, true))())
                };
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spend invariants must validate settings", false, ()), spendInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(spendInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("mint invariants must validate settings", false, ()), mintInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(mintInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("dgDataControllers must validate settings", false, ()), dgDataPoliciesAreValidating = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all(manifest)((key_18, entry_1) -> {
                    __cond_47 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry_1);
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_47),
                        () -> {
                            (__lhs_0_94) -> {
                                policyLink_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_94);
                                __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(policyLink_1)(inputs_2, mph_24, true))()
                            }
                        },
                        () -> {
                            (__33) -> {
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ignoring manifest entry (not a data policy): ", key_18)), true)
                            }
                        }
                    )()(__cond_47)
                });
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("named delegates must validate settings", false, ()), namedDelegatesAreValidating = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)(__core__chooseUnit(__module__StellarHeliosHelpers__REQT("  - each other-named-delegate must validate settings", false, ()), (ok, key_19, dgt) -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("  - other-named-delegate: ", key_19)), __core__chooseUnit(__helios__print("
"), __helios__bool__and(() -> {
                        ok
                    }, () -> {
                        __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(dgt)(inputs_2, mph_24, true))()
                    })))
                }), true);
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        __helios__bool__and(() -> {
                            __helios__bool__and(() -> {
                                __helios__bool__and(() -> {
                                    dgDataPoliciesAreValidating
                                }, () -> {
                                    spendDelegateIsValidating
                                })
                            }, () -> {
                                govDelegateMaybeValidating
                            })
                        }, () -> {
                            spendInvariantsAreValidating
                        })
                    }, () -> {
                        mintInvariantsAreValidating
                    })
                }, () -> {
                    namedDelegatesAreValidating
                })))))
            }(__cond_46 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(govDelegate)(inputs_2, mph_24, false);
            __core__ifThenElse(
                __helios__option[__helios__bool]__some____is(__cond_46),
                () -> {
                    (__lhs_0_93) -> {
                        true
                    }
                },
                () -> {
                    (__lhs_0_92) -> {
                        __core__chooseUnit(__helios__print("  -- govAuthority isn't a script-based validator; doesn't validate new settings
"), true)
                    }
                }
            )()(__cond_46)))))
        }
    };
    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_216) -> {
        (activity_1) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__CapoHelpers__CapoCtx[]____eq(self_216, self_216)
            }), "prevent unused var"), __cond_48 = activity_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_48),
                () -> {
                    (__lhs_0_101) -> {
                        __helios__error("the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_48),
                        () -> {
                            (__lhs_0_100) -> {
                                __helios__error("the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo")
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_48),
                                () -> {
                                    (__lhs_0_99) -> {
                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for updating the Capo manifest...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_48),
                                        () -> {
                                            (__lhs_0_98) -> {
                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for queuing a pending dgt-change...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_48),
                                                () -> {
                                                    (__lhs_0_97) -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for removing a pending dgt-change entry...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_48),
                                                        () -> {
                                                            (__lhs_0_96) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for committing pending dgt-changes...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_95) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for creating a new delegate (deprecated path)...", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("deprecate use of CLA::CreatingDelegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()(__cond_48))
        }
    };
    __module__CapoHelpers__CapoCtx[]__orFail = (self_217) -> {
        () -> {
            __lhs_0_102 = self_217;
            true
        }
    };
    __module__CapoHelpers__mkCapoCtx = (mph_25) -> {
        __module__CapoHelpers__CapoCtx[]____new(mph_25, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())
    };
    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo) -> {
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It must spend the indicated seed UTXO", false, ()), __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_4) -> {
                __helios__txoutputid____eq(__helios__txinput__output_id(input_4), seedUtxo)
            })),
            () -> {
                __core__chooseUnit(__helios__print(" - expected seedUtxo: "), __core__chooseUnit(__helios__print(__helios__txoutputid__show(seedUtxo)()), __core__chooseUnit(__helios__print("
"), __helios__assert(false, "missing expected seed input for minting"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__helios__print("  -- has seed -> ok
"), true)))
    };
    __module__CapoMintHelpers__noOtherActivitiesSupported = (__34) -> {
        __core__chooseUnit(__helios__print("yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...
"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("   -- note: for other cases, a context-specific check via validateUutMinting's (
", "  ...
  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)
"), ") option can be used to steer around this failure.
")), __core__chooseUnit(__helios__assert(false, "unexpected delegate activity"), false)))
    };
    __helios__option[__helios__data]__none____is = (data_259) -> {
        __helios__common__enum_tag_equals(data_259, 1)
    };
    __helios__option[__helios__data]__some__some = (self_218) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_218))
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_219) -> {
        (key_20) -> {
            __helios__common__map_get(self_219, __helios__scriptpurpose____to_data(key_20), (x_8) -> {
                __core__constrData(0, __helios__common__list_1(x_8))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_26, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {
        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck,
            () -> {
                extraMintDelegateRedeemerCheck
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_1 = __core__ifThenElse(
            __useopt__checkMintDgtActivity,
            () -> {
                checkMintDgtActivity
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_26);
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter's mint-delegate to authorize this mint activity", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- finding input dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {
            __core__chooseUnit(__helios__print("    -- \u2705 \u27A1\uFE0F  \u{1F481}found dgTkn ^"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {
                __cond_50 = purpose_1;
                __core__ifThenElse(
                    __helios__scriptpurpose__spending____is(__cond_50),
                    () -> {
                        (sp_1) -> {
                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)
                        }
                    },
                    () -> {
                        (__35) -> {
                            false
                        }
                    }
                )()(__cond_50)
            });
            err = __helios__string____add(__helios__string____add("dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), " not being spent as expected");
            (maybeCheckedMintDelegateAuthority) -> {
                delegateDidAuthorize = true;
                __helios__bool__and(() -> {
                    delegateDidAuthorize
                }, () -> {
                    maybeCheckedMintDelegateAuthority
                })
            }(__cond_51 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);
            __core__ifThenElse(
                __helios__option[__helios__data]__none____is(__cond_51),
                () -> {
                    (__lhs_0_110) -> {
                        __helios__error(err)
                    }
                },
                () -> {
                    (__lhs_0_105) -> {
                        x_10 = __helios__option[__helios__data]__some__some(__lhs_0_105);
                        activity_2 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(x_10);
                        __cond_52 = activity_2;
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_52),
                            () -> {
                                (__lhs_0_106) -> {
                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_106);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY we ---------------- don't need the funny redeemer-check skipping"), __core__chooseUnit(__core__ifThenElse(
                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),
                                        () -> {
                                            __core__chooseUnit(__helios__print(" vvv wherever it is, probably best it uses the checkMintDgtActivity option"), __helios__error("where is extraMintDelegateRedeemerCheck=false really needed?"))
                                        },
                                        () -> {
                                            () -> {
                                                ()
                                            }()
                                        }
                                    )(), __cond_53 = DLA;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_53),
                                        () -> {
                                            (__lhs_0_109) -> {
                                                __core__chooseUnit(__helios__print("  -- ok, dgTkn spent
"), true)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_53),
                                                () -> {
                                                    (__lhs_0_108) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_107) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_53)))
                                }
                            },
                            () -> {
                                (__36) -> {
                                    checkMintDgtActivity_1(activity_2)
                                }
                            }
                        )()(__cond_52)
                    }
                }
            )()(__cond_51)))
        }(__cond_49 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_10) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(authzAc), 0)
        });
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_49),
            () -> {
                (__lhs_0_104) -> {
                    x_9 = __helios__option[__helios__txinput]__some__some(__lhs_0_104);
                    __helios__txinput__output_id(x_9)
                }
            },
            () -> {
                (__lhs_0_103) -> {
                    __helios__error(__helios__string____add("  \u274C\u274C missing dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))
                }
            }
        )()(__cond_49))))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __helios__txoutputid__tx_id(seed_1);
        seedIdx = __helios__txoutputid__index(seed_1);
        idxBytes = __helios__int__serialize(seedIdx)();
        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);
        txoInfo = __core__ifThenElse(
            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),
            () -> {
                __core__chooseUnit(__helios__assert(false, "cbor(txoId) len > 9 !!"), idxBytes)
            },
            () -> {
                () -> {
                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8("@")()), idxBytes)
                }()
            }
        )();
        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);
        mhs = __helios__bytearray__show(miniHash)();
        (p) -> {
            __helios__string____add(__helios__string____add(p, "-"), mhs)
        }
    };
    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {
        __helios__bytearray____lt(k1, k2)
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_220) -> {
        (fn_25) -> {
            recurse_89 = (recurse_88, map_31) -> {
                __core__chooseList(map_31, () -> {
                    ()
                }, () -> {
                    head_85 = __core__headList__safe(map_31);
                    __core__chooseUnit(fn_25(__helios__bytearray__from_data(__core__fstPair(head_85)), __helios__int__from_data(__core__sndPair(head_85))), recurse_88(recurse_88, __core__tailList__safe(map_31)))
                })()
            };
            recurse_89(recurse_89, self_220)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_221) -> {
        (fn_26) -> {
            __helios__common__filter_map(self_221, (pair_72) -> {
                fn_26(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_72)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_72)))
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_222) -> {
        (fn_27) -> {
            recurse_91 = (recurse_90, map_32) -> {
                __core__chooseList(map_32, () -> {
                    ()
                }, () -> {
                    head_86 = __core__headList__safe(map_32);
                    __core__chooseUnit(fn_27(__helios__mintingpolicyhash__from_data(__core__fstPair(head_86)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_86))), recurse_90(recurse_90, __core__tailList__safe(map_32)))
                })()
            };
            recurse_91(recurse_91, self_222)
        }
    };
    __helios__option[__helios__int]__none____is = (data_260) -> {
        __helios__common__enum_tag_equals(data_260, 1)
    };
    __helios__option[__helios__int]__some__some = (self_223) -> {
        __helios__int__from_data(__helios__common__enum_field_0(self_223))
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_224) -> {
        (key_21) -> {
            __helios__common__map_get(self_224, __helios__bytearray____to_data(key_21), (x_11) -> {
                __core__constrData(0, __helios__common__list_1(x_11))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_225) -> {
        (key_22) -> {
            key_23 = __helios__mintingpolicyhash____to_data(key_22);
            recurse_93 = (recurse_92, self_226) -> {
                __core__chooseList(self_226, () -> {
                    self_226
                }, () -> {
                    head_87 = __core__headList__safe(self_226);
                    tail_4 = __core__tailList__safe(self_226);
                    __core__ifThenElse(
                        __core__equalsData(key_23, __core__fstPair(head_87)),
                        () -> {
                            recurse_92(recurse_92, tail_4)
                        },
                        () -> {
                            __core__mkCons(head_87, recurse_92(recurse_92, tail_4))
                        }
                    )()
                })()
            };
            recurse_93(recurse_93, self_225)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;
    __helios__map[__helios__bytearray@__helios__int]____eq = (self_227, other_4) -> {
        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_227), __helios__map[__helios__bytearray@__helios__int]____to_data(other_4))
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_228) -> {
        (comp_4) -> {
            __helios__common__sort(self_228, (a_16, b_14) -> {
                comp_4(__helios__bytearray__from_data(__core__fstPair(a_16)), __helios__int__from_data(__core__sndPair(a_16)), __helios__bytearray__from_data(__core__fstPair(b_14)), __helios__int__from_data(__core__sndPair(b_14)))
            })
        }
    };
    __helios__value__sum[__helios__value] = (self_229) -> {
        recurse_95 = (recurse_94, lst_24) -> {
            __core__chooseList(lst_24, () -> {
                __helios__value__ZERO
            }, () -> {
                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_24))), recurse_94(recurse_94, __core__tailList__safe(lst_24)))
            })()
        };
        recurse_95(recurse_95, self_229)
    };
    __helios__list[__helios__string]__map[__helios__value] = (self_230) -> {
        (fn_28) -> {
            __helios__common__map(self_230, (item_13) -> {
                __helios__value____to_data(fn_28(__helios__string__from_data(item_13)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_27, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        bootstrapCharter_1 = __core__ifThenElse(
            __useopt__bootstrapCharter,
            () -> {
                bootstrapCharter
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        needsMintDelegateApproval_1 = __core__ifThenElse(
            __useopt__needsMintDelegateApproval,
            () -> {
                needsMintDelegateApproval
            },
            () -> {
                true
            }
        )();
        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck_1,
            () -> {
                extraMintDelegateRedeemerCheck_2
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_3 = __core__ifThenElse(
            __useopt__checkMintDgtActivity_1,
            () -> {
                checkMintDgtActivity_2
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());
        delegateApproval = __core__ifThenElse(
            isBootstrapping,
            () -> {
                true
            },
            () -> {
                () -> {
                    __lhs_0_111 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_27, false, ()), 0);
                    mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_111);
                    __core__ifThenElse(
                        needsMintDelegateApproval_1,
                        () -> {
                            __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_27, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3)
                        },
                        () -> {
                            () -> {
                                true
                            }()
                        }
                    )()
                }()
            }
        )();
        valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
        expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](purposes)((purpose_2) -> {
            __module__StellarHeliosHelpers__mkTv(mph_27, true, mkTokenName_1(purpose_2), false, (), false, ())
        })));
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_27)),
            () -> {
                mphStr = __helios__mintingpolicyhash__show(mph_27)();
                valStr = __helios__value__show(valueMinted)(false, ());
                __core__chooseUnit(__helios__print(__helios__string____add("  -- no mint from our policy ", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print("^^  value minted"), __helios__error("\u274C\u274C validateUutMinting(): no mint from our policy"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_27))(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_3, i_12) -> {
            tnStr_1 = __helios__bytearray__decode_utf8_safe(tn_3)();
            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E} expected: ", __helios__int__show(i_12)()), "x "), tnStr_1))
        }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_27);
        actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__core__ifThenElse(
            true,
            () -> {
                __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_2, i_11) -> {
                    tnStr = __helios__bytearray__decode_utf8_safe(tn_2)();
                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E}   actual: ", __helios__int__show(i_11)()), "x "), tnStr))
                }), __core__chooseUnit(__helios__print("other policy values minted: 
"), __helios__print(__helios__value__show(__helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_15, __37) -> {
                    __helios__mintingpolicyhash____neq(b_15, mph_27)
                })))(false, ()))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the mint for this policy-id is exactly the expected value", false, ()), thisPolicyMintOK = __helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted);
        __core__chooseUnit(__helios__assert(thisPolicyMintOK, "mismatch in UUT mint"), __core__chooseUnit(__helios__print("  -- this-policy mint ok"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_2), "no seed"), __core__chooseUnit(__helios__print("  -- ok: has seed and expected this-policy mint value"), otherPoliciesMintOk = __core__ifThenElse(
            __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),
            () -> {
                true
            },
            () -> {
                () -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with an additional mint-value indicated", false, ()), remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue)(mph_27),
                        () -> {
                            __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_27))
                        },
                        () -> {
                            () -> {
                                expectedValue
                            }()
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint)(),
                        () -> {
                            true
                        },
                        () -> {
                            () -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...with other-policy values expected: ", false, ()), __core__chooseUnit(__helios__print(__helios__string____add(__helios__value__show(remainingExpectedMint)(false, ()), "^ other-mint value expected")), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It should mint exactly the indicated token names", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Doesn't constrain any mentioned policy's minting of any other tokens", false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {
                                    mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);
                                    __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_3, expectedCount) -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__cond_54 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_3);
                                            __core__ifThenElse(
                                                __helios__option[__helios__int]__none____is(__cond_54),
                                                () -> {
                                                    (__lhs_0_113) -> {
                                                        false
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_112) -> {
                                                        actualCount = __helios__option[__helios__int]__some__some(__lhs_0_112);
                                                        __helios__int____eq(actualCount, expectedCount)
                                                    }
                                                }
                                            )()(__cond_54)),
                                            () -> {
                                                tnString = __helios__bytearray__decode_utf8_safe(tokenName_3)();
                                                __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C validateUutMinting(): wrong mint for ", __helios__mintingpolicyhash__show(otherMph)()), ":"), tnString))
                                            },
                                            () -> {
                                                () -> {
                                                    ()
                                                }()
                                            }
                                        )()
                                    })
                                }), true)))))
                            }()
                        }
                    )())
                }()
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)("  -- other-expected-mints ok? "), "unreachable exception: otherPoliciesMintOk"), __core__chooseUnit(__helios__print(" \u2705 validateUutMinting:  ok!
"), __helios__bool__and(() -> {
            __helios__bool__and(() -> {
                delegateApproval
            }, () -> {
                thisPolicyMintOK
            })
        }, () -> {
            otherPoliciesMintOk
        })))))))))))
    };
    __module__UnspecializedDelegate__DelegateDatum[]__is_valid_data = (__module__UnspecializedDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data, __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__is_valid_data, __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData__is_valid_data) -> {
        (data_261) -> {
            __core__ifThenElse(
                __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData__is_valid_data(data_261),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__is_valid_data(data_261),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data(data_261),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__UnspecializedDelegate__DelegateDatum[]__from_data = (__module__UnspecializedDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData__is_valid_data_1) -> {
        (data_262) -> {
            ignore_17 = __core__ifThenElse(
                __module__UnspecializedDelegate__DelegateDatum[]__is_valid_data(__module__UnspecializedDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData__is_valid_data_1)(data_262),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateDatum data", ())
                }
            )();
            data_262
        }
    };
    __module__UnspecializedDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_2 = (data_263) -> {
        __core__chooseData(data_263, () -> {
            pair_73 = __core__unConstrData__safe(data_263);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_73), 0),
                () -> {
                    data_264 = __core__listData(__core__sndPair(pair_73));
                    __core__chooseData(data_264, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_151 = __core__unListData__safe(data_264);
                        __core__chooseList(fields_151, () -> {
                            false
                        }, () -> {
                            head_88 = __core__headList__safe(fields_151);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_88),
                                () -> {
                                    fields_152 = __core__tailList__safe(fields_151);
                                    __core__chooseList(fields_152, () -> {
                                        false
                                    }, () -> {
                                        head_89 = __core__headList__safe(fields_152);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_89),
                                            () -> {
                                                fields_153 = __core__tailList__safe(fields_152);
                                                __core__chooseList(fields_153, () -> {
                                                    false
                                                }, () -> {
                                                    head_90 = __core__headList__safe(fields_153);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_90),
                                                        () -> {
                                                            fields_154 = __core__tailList__safe(fields_153);
                                                            __core__chooseList(fields_154, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__serialize = __helios__common__serialize;
    __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation____is = (data_265) -> {
        __helios__common__enum_tag_equals(data_265, 1)
    };
    __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__is_valid_data_2 = (data_266) -> {
        __core__chooseData(data_266, () -> {
            pair_74 = __core__unConstrData__safe(data_266);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_74), 1),
                () -> {
                    data_267 = __core__listData(__core__sndPair(pair_74));
                    __core__chooseData(data_267, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_155 = __core__unListData__safe(data_267);
                        __core__chooseList(fields_155, () -> {
                            false
                        }, () -> {
                            head_91 = __core__headList__safe(fields_155);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(head_91),
                                () -> {
                                    fields_156 = __core__tailList__safe(fields_155);
                                    __core__chooseList(fields_156, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__dd = (self_231) -> {
        __module__CapoDelegateHelpers__DelegationDetail[]__from_data(__helios__common__enum_field_0(self_231))
    };
    __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData____is = (data_268) -> {
        __helios__common__enum_tag_equals(data_268, 2)
    };
    __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData__is_valid_data_2 = (data_269) -> {
        __core__chooseData(data_269, () -> {
            pair_75 = __core__unConstrData__safe(data_269);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_75), 2),
                () -> {
                    data_270 = __core__listData(__core__sndPair(pair_75));
                    __core__chooseData(data_270, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_157 = __core__unListData__safe(data_270);
                        __core__chooseList(fields_157, () -> {
                            false
                        }, () -> {
                            head_92 = __core__headList__safe(fields_157);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_92),
                                () -> {
                                    fields_158 = __core__tailList__safe(fields_157);
                                    __core__chooseList(fields_158, () -> {
                                        false
                                    }, () -> {
                                        head_93 = __core__headList__safe(fields_158);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_93),
                                            () -> {
                                                fields_159 = __core__tailList__safe(fields_158);
                                                __core__chooseList(fields_159, () -> {
                                                    false
                                                }, () -> {
                                                    head_94 = __core__headList__safe(fields_159);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_94),
                                                        () -> {
                                                            fields_160 = __core__tailList__safe(fields_159);
                                                            __core__chooseList(fields_160, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__MintingActivity[]__is_valid_data = (__module__UnspecializedDelegate__MintingActivity[]___placeholder1MA__is_valid_data) -> {
        (data_271) -> {
            __core__ifThenElse(
                __module__UnspecializedDelegate__MintingActivity[]___placeholder1MA__is_valid_data(data_271),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__UnspecializedDelegate__MintingActivity[]___placeholder1MA__is_valid_data_1 = (data_272) -> {
        __core__chooseData(data_272, () -> {
            pair_76 = __core__unConstrData__safe(data_272);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_76), 0),
                () -> {
                    data_273 = __core__listData(__core__sndPair(pair_76));
                    __core__chooseData(data_273, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_161 = __core__unListData__safe(data_273);
                        __core__chooseList(fields_161, () -> {
                            false
                        }, () -> {
                            head_95 = __core__headList__safe(fields_161);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_95),
                                () -> {
                                    fields_162 = __core__tailList__safe(fields_161);
                                    __core__chooseList(fields_162, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__SpendingActivity[]__is_valid_data = (__module__UnspecializedDelegate__SpendingActivity[]___placeholder1SA__is_valid_data) -> {
        (data_274) -> {
            __core__ifThenElse(
                __module__UnspecializedDelegate__SpendingActivity[]___placeholder1SA__is_valid_data(data_274),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__UnspecializedDelegate__SpendingActivity[]___placeholder1SA__is_valid_data_1 = (data_275) -> {
        __core__chooseData(data_275, () -> {
            pair_77 = __core__unConstrData__safe(data_275);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_77), 0),
                () -> {
                    data_276 = __core__listData(__core__sndPair(pair_77));
                    __core__chooseData(data_276, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_163 = __core__unListData__safe(data_276);
                        __core__chooseList(fields_163, () -> {
                            false
                        }, () -> {
                            head_96 = __core__headList__safe(fields_163);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_96),
                                () -> {
                                    fields_164 = __core__tailList__safe(fields_163);
                                    __core__chooseList(fields_164, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__BurningActivity[]__is_valid_data = (__module__UnspecializedDelegate__BurningActivity[]___placeholder1BA__is_valid_data) -> {
        (data_277) -> {
            __core__ifThenElse(
                __module__UnspecializedDelegate__BurningActivity[]___placeholder1BA__is_valid_data(data_277),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__UnspecializedDelegate__BurningActivity[]___placeholder1BA__is_valid_data_1 = (data_278) -> {
        __core__chooseData(data_278, () -> {
            pair_78 = __core__unConstrData__safe(data_278);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_78), 0),
                () -> {
                    data_279 = __core__listData(__core__sndPair(pair_78));
                    __core__chooseData(data_279, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_165 = __core__unListData__safe(data_279);
                        __core__chooseList(fields_165, () -> {
                            false
                        }, () -> {
                            head_97 = __core__headList__safe(fields_165);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_97),
                                () -> {
                                    fields_166 = __core__tailList__safe(fields_165);
                                    __core__chooseList(fields_166, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]____eq = __helios__common____eq;
    __module__UnspecializedDelegate__DelegateActivity[]__is_valid_data = (__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_280) -> {
            __core__ifThenElse(
                __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data(data_280),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data(data_280),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data(data_280),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data(data_280),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data(data_280),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data(data_280),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data(data_280),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data(data_280),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data(data_280),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__UnspecializedDelegate__DelegateActivity[]__from_data = (__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_281) -> {
            ignore_18 = __core__ifThenElse(
                __module__UnspecializedDelegate__DelegateActivity[]__is_valid_data(__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1)(data_281),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateActivity data", ())
                }
            )();
            data_281
        }
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is = (data_282) -> {
        __helios__common__enum_tag_equals(data_282, 0)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2 = (data_283) -> {
        __core__chooseData(data_283, () -> {
            pair_79 = __core__unConstrData__safe(data_283);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_79), 0),
                () -> {
                    data_284 = __core__listData(__core__sndPair(pair_79));
                    __core__chooseData(data_284, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_167 = __core__unListData__safe(data_284);
                        __core__chooseList(fields_167, () -> {
                            false
                        }, () -> {
                            head_98 = __core__headList__safe(fields_167);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_98),
                                () -> {
                                    fields_168 = __core__tailList__safe(fields_167);
                                    __core__chooseList(fields_168, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__activity = (self_232) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_232))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is = (data_285) -> {
        __helios__common__enum_tag_equals(data_285, 1)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2 = (data_286) -> {
        __core__chooseData(data_286, () -> {
            pair_80 = __core__unConstrData__safe(data_286);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_80), 1),
                () -> {
                    data_287 = __core__listData(__core__sndPair(pair_80));
                    __core__chooseData(data_287, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_169 = __core__unListData__safe(data_287);
                        __core__chooseList(fields_169, () -> {
                            false
                        }, () -> {
                            head_99 = __core__headList__safe(fields_169);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_99),
                                () -> {
                                    fields_170 = __core__tailList__safe(fields_169);
                                    __core__chooseList(fields_170, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__activity = (self_233) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_233))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities____is = (data_288) -> {
        __helios__common__enum_tag_equals(data_288, 2)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2 = (data_289) -> {
        __core__chooseData(data_289, () -> {
            pair_81 = __core__unConstrData__safe(data_289);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_81), 2),
                () -> {
                    data_290 = __core__listData(__core__sndPair(pair_81));
                    __core__chooseData(data_290, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_171 = __core__unListData__safe(data_290);
                        __core__chooseList(fields_171, () -> {
                            false
                        }, () -> {
                            head_100 = __core__headList__safe(fields_171);
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__SpendingActivity[]__is_valid_data(__module__UnspecializedDelegate__SpendingActivity[]___placeholder1SA__is_valid_data_1)(head_100),
                                () -> {
                                    fields_172 = __core__tailList__safe(fields_171);
                                    __core__chooseList(fields_172, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities____is = (data_291) -> {
        __helios__common__enum_tag_equals(data_291, 3)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2 = (data_292) -> {
        __core__chooseData(data_292, () -> {
            pair_82 = __core__unConstrData__safe(data_292);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_82), 3),
                () -> {
                    data_293 = __core__listData(__core__sndPair(pair_82));
                    __core__chooseData(data_293, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_173 = __core__unListData__safe(data_293);
                        __core__chooseList(fields_173, () -> {
                            false
                        }, () -> {
                            head_101 = __core__headList__safe(fields_173);
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__MintingActivity[]__is_valid_data(__module__UnspecializedDelegate__MintingActivity[]___placeholder1MA__is_valid_data_1)(head_101),
                                () -> {
                                    fields_174 = __core__tailList__safe(fields_173);
                                    __core__chooseList(fields_174, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities____is = (data_294) -> {
        __helios__common__enum_tag_equals(data_294, 4)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2 = (data_295) -> {
        __core__chooseData(data_295, () -> {
            pair_83 = __core__unConstrData__safe(data_295);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_83), 4),
                () -> {
                    data_296 = __core__listData(__core__sndPair(pair_83));
                    __core__chooseData(data_296, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_175 = __core__unListData__safe(data_296);
                        __core__chooseList(fields_175, () -> {
                            false
                        }, () -> {
                            head_102 = __core__headList__safe(fields_175);
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__BurningActivity[]__is_valid_data(__module__UnspecializedDelegate__BurningActivity[]___placeholder1BA__is_valid_data_1)(head_102),
                                () -> {
                                    fields_176 = __core__tailList__safe(fields_175);
                                    __core__chooseList(fields_176, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData____is = (data_297) -> {
        __helios__common__enum_tag_equals(data_297, 5)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2 = (data_298) -> {
        __core__chooseData(data_298, () -> {
            pair_84 = __core__unConstrData__safe(data_298);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_84), 5),
                () -> {
                    data_299 = __core__listData(__core__sndPair(pair_84));
                    __core__chooseData(data_299, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_177 = __core__unListData__safe(data_299);
                        __core__chooseList(fields_177, () -> {
                            false
                        }, () -> {
                            head_103 = __core__headList__safe(fields_177);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_103),
                                () -> {
                                    fields_178 = __core__tailList__safe(fields_177);
                                    __core__chooseList(fields_178, () -> {
                                        false
                                    }, () -> {
                                        head_104 = __core__headList__safe(fields_178);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_104),
                                            () -> {
                                                fields_179 = __core__tailList__safe(fields_178);
                                                __core__chooseList(fields_179, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__seed = (self_234) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_234))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__dataType = (self_235) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_235))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData____is = (data_300) -> {
        __helios__common__enum_tag_equals(data_300, 6)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2 = (data_301) -> {
        __core__chooseData(data_301, () -> {
            pair_85 = __core__unConstrData__safe(data_301);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_85), 6),
                () -> {
                    data_302 = __core__listData(__core__sndPair(pair_85));
                    __core__chooseData(data_302, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_180 = __core__unListData__safe(data_302);
                        __core__chooseList(fields_180, () -> {
                            false
                        }, () -> {
                            head_105 = __core__headList__safe(fields_180);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_105),
                                () -> {
                                    fields_181 = __core__tailList__safe(fields_180);
                                    __core__chooseList(fields_181, () -> {
                                        false
                                    }, () -> {
                                        head_106 = __core__headList__safe(fields_181);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_106),
                                            () -> {
                                                fields_182 = __core__tailList__safe(fields_181);
                                                __core__chooseList(fields_182, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_236) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_236))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__recId = (self_237) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_237))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData____is = (data_303) -> {
        __helios__common__enum_tag_equals(data_303, 7)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2 = (data_304) -> {
        __core__chooseData(data_304, () -> {
            pair_86 = __core__unConstrData__safe(data_304);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_86), 7),
                () -> {
                    data_305 = __core__listData(__core__sndPair(pair_86));
                    __core__chooseData(data_305, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_183 = __core__unListData__safe(data_305);
                        __core__chooseList(fields_183, () -> {
                            false
                        }, () -> {
                            head_107 = __core__headList__safe(fields_183);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_107),
                                () -> {
                                    fields_184 = __core__tailList__safe(fields_183);
                                    __core__chooseList(fields_184, () -> {
                                        false
                                    }, () -> {
                                        head_108 = __core__headList__safe(fields_184);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_108),
                                            () -> {
                                                fields_185 = __core__tailList__safe(fields_184);
                                                __core__chooseList(fields_185, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__recId = (self_238) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_238))
    };
    __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities____is = (data_306) -> {
        __helios__common__enum_tag_equals(data_306, 8)
    };
    __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2 = (data_307) -> {
        __core__chooseData(data_307, () -> {
            pair_87 = __core__unConstrData__safe(data_307);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_87), 8),
                () -> {
                    data_308 = __core__listData(__core__sndPair(pair_87));
                    __core__chooseData(data_308, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_186 = __core__unListData__safe(data_308);
                        __core__chooseList(fields_186, () -> {
                            false
                        }, () -> {
                            head_109 = __core__headList__safe(fields_186);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_109),
                                () -> {
                                    fields_187 = __core__tailList__safe(fields_186);
                                    __core__chooseList(fields_187, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__activities = (self_239) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_239))
    };
    __helios__option[__helios__string]__none____is = (data_309) -> {
        __helios__common__enum_tag_equals(data_309, 1)
    };
    __helios__list[__helios__string]__length = __helios__common__length;
    __helios__list[__helios__string]__find_safe = (self_240) -> {
        (fn_29) -> {
            __helios__common__find_safe(self_240, (item_14) -> {
                fn_29(__helios__string__from_data(item_14))
            }, __helios__common__identity)
        }
    };
    __module__UnspecializedDelegate__DelegateActivity[]__additionalDelegateValidation = (__module__UnspecializedDelegate__DelegateActivity[]__supportedCapoDelegatePurposes) -> {
        (self_241) -> {
            (priorMddd, cctx) -> {
                mph_28 = __module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__dd(priorMddd));
                __helios__bool__or(() -> {
                    __cond_55 = self_241;
                    __core__ifThenElse(
                        __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_55),
                        () -> {
                            (__lhs_0_122) -> {
                                true
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_55),
                                () -> {
                                    (__lhs_0_118) -> {
                                        CLA = __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_118);
                                        __cond_56 = CLA;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_56),
                                            () -> {
                                                (__lhs_0_119) -> {
                                                    seed_3 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_119);
                                                    purpose_3 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_119);
                                                    __cond_57 = __helios__list[__helios__string]__find_safe(__module__UnspecializedDelegate__DelegateActivity[]__supportedCapoDelegatePurposes(self_241)())((p_1) -> {
                                                        __helios__string____eq(p_1, purpose_3)
                                                    });
                                                    __core__ifThenElse(
                                                        __helios__option[__helios__string]__none____is(__cond_57),
                                                        () -> {
                                                            (__lhs_0_121) -> {
                                                                __core__chooseUnit(__core__ifThenElse(
                                                                    __helios__int____eq(__helios__list[__helios__string]__length(__module__UnspecializedDelegate__DelegateActivity[]__supportedCapoDelegatePurposes(self_241)()), 0),
                                                                    () -> {
                                                                        __helios__print("note: unspecialized delegate has no supported purposes")
                                                                    },
                                                                    () -> {
                                                                        () -> {
                                                                            ()
                                                                        }()
                                                                    }
                                                                )(), __helios__error("can't mint delegate with unsupported purpose"))
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_120) -> {
                                                                __module__CapoMintHelpers__validateUutMinting(mph_28, seed_3, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_3), false, (), false, (), true, false, false, (), false, ())
                                                            }
                                                        }
                                                    )()(__cond_57)
                                                }
                                            },
                                            () -> {
                                                (__39) -> {
                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- to customize: mint/spend delegates have an option to validate additional lifecycle constraints here", false, ()), true)
                                                }
                                            }
                                        )()(__cond_56)
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities____is(__cond_55),
                                        () -> {
                                            (__lhs_0_117) -> {
                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "can't"), __helios__error("unspecialized mint delegate doesn't have any MintingActivities"))
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_55),
                                                () -> {
                                                    (__lhs_0_116) -> {
                                                        __core__chooseUnit(__helios__print(" \u2139\uFE0F  mint delegate allowing CreatingDelegatedData on the say-so of its policy delegate"), true)
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_55),
                                                        () -> {
                                                            (__lhs_0_115) -> {
                                                                __core__chooseUnit(__helios__print(" \u2139\uFE0F  spend delegate allowing UpdatingDelegatedData on the say-so of its policy delegate"), true)
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_55),
                                                                () -> {
                                                                    (__lhs_0_114) -> {
                                                                        __core__chooseUnit(__helios__print(" \u2139\uFE0F  mint delegate allowing DeletingDelegatedData on the say-so of its policy delegate"), true)
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__38) -> {
                                                                        __core__chooseUnit(__helios__assert(false, "mint/spend delegate rejecting other activity"), false)
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()(__cond_55)
                }, () -> {
                    __helios__bytearray____eq(__helios__tx__serialize(__helios__scriptcontext__tx)(), __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__serialize(priorMddd)())
                })
            }
        }
    };
    __module__UnspecializedDelegate__DelegateActivity[]__supportedCapoDelegatePurposes_1 = (self_242) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__UnspecializedDelegate__DelegateActivity[]____eq(self_242, self_242)
            }), "no way, man"), __core__mkNilData(()))
        }
    };
    __module__UnspecializedDelegate__DelegateActivity[]__otherDatumValidation = (self_243) -> {
        (_priorMdd) -> {
            neverTriggered = () -> {
                __helios__error("never called")
            };
            __cond_58 = self_243;
            __core__ifThenElse(
                __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_58),
                () -> {
                    (__lhs_0_124) -> {
                        neverTriggered()
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_58),
                        () -> {
                            (__lhs_0_123) -> {
                                neverTriggered()
                            }
                        },
                        () -> {
                            (__40) -> {
                                false
                            }
                        }
                    )()
                }
            )()(__cond_58)
        }
    };
    __module__BasicDelegate__rev = __helios__int__from_data(__core__iData(1));
    __module__BasicDelegate__instance = #67656e6572616c;
    __module__BasicDelegate__delegateName = __helios__string__from_data(__core__bData(#556e7370656369616c697a656444656c6567617465));
    __module__BasicDelegate__isMintDelegate = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__isSpendDelegate = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__isDgDataPolicy = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__requiresGovAuthority = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __helios__list[__helios__data]__all = (self_244) -> {
        (fn_30) -> {
            __helios__common__all(self_244, (item_15) -> {
                fn_30(__helios__data__from_data(item_15))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq = (self_245, other_5) -> {
        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_245), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(other_5))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail = __core__tailList;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;
    __helios__option[__helios__assetclass]__unwrap = (self_246) -> {
        () -> {
            __helios__assetclass__from_data(__helios__common__enum_field_0(self_246))
        }
    };
    __helios__option[__helios__assetclass]__some____new = (some_4) -> {
        __core__constrData(0, __helios__common__list_1(__helios__assetclass____to_data(some_4)))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all = (self_247) -> {
        (fn_31) -> {
            __helios__common__all(self_247, (item_16) -> {
                fn_31(__module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_16))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head = (self_248) -> {
        __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList(self_248))
    };
    __helios__map[__helios__bytearray@__helios__int]__show = (self_249) -> {
        () -> {
            recurse_97 = (recurse_96, self_250, first) -> {
                __core__chooseList(self_250, () -> {
                    ""
                }, () -> {
                    __core__appendString(__core__ifThenElse(
                        first,
                        "",
                        ","
                    ), head_110 = __core__headList__safe(self_250);
                    key_data = __core__fstPair(head_110);
                    key_24 = __helios__bytearray__from_data_safe(key_data);
                    value_data = __core__sndPair(head_110);
                    value_6 = __helios__int__from_data_safe(value_data);
                    __core__appendString(__core__appendString(__core__appendString(key_24((valid_7, key_25) -> {
                        __core__ifThenElse(
                            valid_7,
                            () -> {
                                __helios__bytearray__show(key_25)()
                            },
                            () -> {
                                __helios__data__show(key_data)()
                            }
                        )()
                    }), ":"), value_6((valid_6, value_7) -> {
                        __core__ifThenElse(
                            valid_6,
                            () -> {
                                __helios__int__show(value_7)()
                            },
                            () -> {
                                __helios__data__show(value_data)()
                            }
                        )()
                    })), recurse_96(recurse_96, __core__tailList__safe(self_250), false)))
                })()
            };
            __core__appendString("{", __core__appendString(recurse_97(recurse_97, self_249, true), "}"))
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]] = (self_251) -> {
        (fn_32, a0) -> {
            __helios__common__fold(self_251, (prev_4, item_17) -> {
                fn_32(prev_4, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_17))
            }, a0)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__delete = (self_252) -> {
        (key_26) -> {
            key_27 = __helios__bytearray____to_data(key_26);
            recurse_99 = (recurse_98, self_253) -> {
                __core__chooseList(self_253, () -> {
                    self_253
                }, () -> {
                    head_111 = __core__headList__safe(self_253);
                    tail_5 = __core__tailList__safe(self_253);
                    __core__ifThenElse(
                        __core__equalsData(key_27, __core__fstPair(head_111)),
                        () -> {
                            recurse_98(recurse_98, tail_5)
                        },
                        () -> {
                            __core__mkCons(head_111, recurse_98(recurse_98, tail_5))
                        }
                    )()
                })()
            };
            recurse_99(recurse_99, self_252)
        }
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is = (data_310) -> {
        __helios__common__enum_tag_equals(data_310, 0)
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some = (self_254) -> {
        __helios__map[__helios__bytearray@__helios__int]__from_data(__helios__common__enum_field_0(self_254))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe = (self_255) -> {
        (key_28) -> {
            __helios__common__map_get(self_255, __helios__mintingpolicyhash____to_data(key_28), (x_12) -> {
                __core__constrData(0, __helios__common__list_1(x_12))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]] = (self_256) -> {
        (fn_33, a0_1, b0_1) -> {
            __helios__common__fold(self_256, (prev_5, item_18) -> {
                prev_5((a_17, b_16) -> {
                    fn_33(a_17, b_16, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_18))
                })
            }, (callback_9) -> {
                callback_9(a0_1, b0_1)
            })
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_257) -> {
        __helios__common__length(self_257)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head = (self_258) -> {
        head_112 = __core__headList(self_258);
        (callback_10) -> {
            callback_10(__helios__string__from_data(__core__fstPair(head_112)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(head_112)))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail = __core__tailList;
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap = (self_259) -> {
        () -> {
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_259))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_260) -> {
        (key_29) -> {
            key_30 = __helios__string____to_data(key_29);
            recurse_101 = (recurse_100, self_261) -> {
                __core__chooseList(self_261, () -> {
                    self_261
                }, () -> {
                    head_113 = __core__headList__safe(self_261);
                    tail_6 = __core__tailList__safe(self_261);
                    __core__ifThenElse(
                        __core__equalsData(key_30, __core__fstPair(head_113)),
                        () -> {
                            recurse_100(recurse_100, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_113, recurse_100(recurse_100, tail_6))
                        }
                    )()
                })()
            };
            recurse_101(recurse_101, self_260)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq = (self_262, other_6) -> {
        __core__equalsData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_262), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(other_6))
    };
    __helios__option[__helios__string]__unwrap = (self_263) -> {
        () -> {
            __helios__string__from_data(__helios__common__enum_field_0(self_263))
        }
    };
    __helios__option[__helios__bytearray]__unwrap = (self_264) -> {
        () -> {
            __helios__bytearray__from_data(__helios__common__enum_field_0(self_264))
        }
    };
    __module__BasicDelegate__checkOneActivity_1 = (__module__BasicDelegate__checkOneActivity) -> {
        (dgtionDatum, activity_3, __useopt__dd, dd, __useopt__baseCctx, baseCctx) -> {
            dd_1 = __core__ifThenElse(
                __useopt__dd,
                () -> {
                    dd
                },
                () -> {
                    __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__dd(dgtionDatum)
                }
            )();
            baseCctx_1 = __core__ifThenElse(
                __useopt__baseCctx,
                () -> {
                    baseCctx
                },
                () -> {
                    __module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1))
                }
            )();
            __core__chooseUnit(__helios__print("\u{1F3D2} checking activity:
"), result_2 = __core__ifThenElse(
                true,
                () -> {
                    __core__ifThenElse(
                        true,
                        () -> {
                            (checkNonDelegatedActivities) -> {
                                __core__chooseUnit(__helios__assert(checkNonDelegatedActivities, "checkNonDelegatedActivities failed"), __core__ifThenElse(
                                    __helios__bool__and(() -> {
                                        __module__StellarHeliosHelpers__bREQT("... additionalDelegateValidation", false, ())
                                    }, () -> {
                                        __module__UnspecializedDelegate__DelegateActivity[]__additionalDelegateValidation(__module__UnspecializedDelegate__DelegateActivity[]__supportedCapoDelegatePurposes_1)(activity_3)(dgtionDatum, __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(baseCctx_1)())
                                    }),
                                    () -> {
                                        __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation ok!
")), true)
                                    },
                                    () -> {
                                        () -> {
                                            __helios__error(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation returned false (without any thrown error)"))
                                        }()
                                    }
                                )())
                            }(__cond_59 = activity_3;
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities____is(__cond_59),
                                () -> {
                                    (__lhs_0_237) -> {
                                        activities_2 = __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__activities(__lhs_0_237);
                                        cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                        mintDgtCheck_1 = __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                    () -> {
                                                        true
                                                    },
                                                    () -> {
                                                        () -> {
                                                            __helios__list[__helios__data]__all(activities_2)((rawActivity) -> {
                                                                a_18 = __module__UnspecializedDelegate__DelegateActivity[]__from_data(__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity);
                                                                __core__chooseUnit(__helios__print("  -- mintDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the mint delegate, only {Create,Delete}DelegatedData activities are valid in multi-activities", false, ()), __cond_108 = a_18;
                                                                __core__ifThenElse(
                                                                    __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_108),
                                                                    () -> {
                                                                        (__lhs_0_243) -> {
                                                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_18, true, dd_1, true, cctx_6)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_108),
                                                                            () -> {
                                                                                (__lhs_0_242) -> {
                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_18, true, dd_1, true, cctx_6)
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_108),
                                                                                    () -> {
                                                                                        (__lhs_0_241) -> {
                                                                                            __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_108),
                                                                                            () -> {
                                                                                                (__lhs_0_240) -> {
                                                                                                    __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_108),
                                                                                                    () -> {
                                                                                                        (__lhs_0_239) -> {
                                                                                                            __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities____is(__cond_108),
                                                                                                            () -> {
                                                                                                                (__lhs_0_238) -> {
                                                                                                                    __helios__error("multi:multi: nesting not ok")
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__74) -> {
                                                                                                                    __helios__error("multi:non-minting activities are invalid for mintDgt")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(__cond_108)))
                                                            })
                                                        }()
                                                    }
                                                )()
                                            }
                                        )();
                                        spendDgtCheck_1 = __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                    () -> {
                                                        true
                                                    },
                                                    () -> {
                                                        () -> {
                                                            __helios__list[__helios__data]__all(activities_2)((rawActivity_1) -> {
                                                                a_19 = __module__UnspecializedDelegate__DelegateActivity[]__from_data(__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_1);
                                                                __core__chooseUnit(__helios__print("  -- spendDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities", false, ()), __cond_109 = a_19;
                                                                __core__ifThenElse(
                                                                    __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_109),
                                                                    () -> {
                                                                        (__lhs_0_249) -> {
                                                                            __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                __module__BasicDelegate__isSpendDelegate
                                                                            }, () -> {
                                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(false, ())
                                                                            }), "UpdatingDelegatedData only ok at level-1 spendDgt"), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_19, true, dd_1, true, cctx_6))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_109),
                                                                            () -> {
                                                                                (__lhs_0_248) -> {
                                                                                    __helios__error("CreatingDelegatedData only ok in mintDgt")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_109),
                                                                                    () -> {
                                                                                        (__lhs_0_247) -> {
                                                                                            __helios__error("TODO: validate spending the datum for burn")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_109),
                                                                                            () -> {
                                                                                                (__lhs_0_246) -> {
                                                                                                    __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_109),
                                                                                                    () -> {
                                                                                                        (__lhs_0_245) -> {
                                                                                                            __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities____is(__cond_109),
                                                                                                            () -> {
                                                                                                                (__lhs_0_244) -> {
                                                                                                                    __helios__error("multi:multi: nesting not ok")
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__75) -> {
                                                                                                                    __helios__error("multi: non-spending activities are invalid for spendDgt")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(__cond_109)))
                                                            })
                                                        }()
                                                    }
                                                )()
                                            }
                                        )();
                                        dgDataPolicyCheck = __core__ifThenElse(
                                            __helios__bool__or(() -> {
                                                __module__BasicDelegate__isMintDelegate
                                            }, () -> {
                                                __module__BasicDelegate__isSpendDelegate
                                            }),
                                            () -> {
                                                __core__chooseUnit(__helios__assert(__helios__bool____not(__module__BasicDelegate__isDgDataPolicy), "ack! mint/spend delegate can't be a delegated-data policy!"), true)
                                            },
                                            () -> {
                                                () -> {
                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("assert isDgDataPolicy"), __helios__list[__helios__data]__all(activities_2)((rawActivity_2) -> {
                                                        a_20 = __module__UnspecializedDelegate__DelegateActivity[]__from_data(__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_2);
                                                        __core__chooseUnit(__helios__print("  -- dgDataPolicy checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in DgDataPolicy, only Minting/Burning/Spending activities are valid", false, ()), __cond_110 = a_20;
                                                        __core__ifThenElse(
                                                            __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_110),
                                                            () -> {
                                                                (__lhs_0_258) -> {
                                                                    __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt (use a SpendingActivity in dgDataPolicy)")
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_110),
                                                                    () -> {
                                                                        (__lhs_0_257) -> {
                                                                            __helios__error("CreatingDelegatedData only ok in mintDgt (use a MintingActivity in dgDataPolicy)")
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_110),
                                                                            () -> {
                                                                                (__lhs_0_256) -> {
                                                                                    __helios__error("DeletingDelegatedData only ok at mint/spend dgt (use BurningActivity in dgDataPolicy)")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities____is(__cond_110),
                                                                                    () -> {
                                                                                        (__lhs_0_255) -> {
                                                                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_20, true, dd_1, true, cctx_6)
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities____is(__cond_110),
                                                                                            () -> {
                                                                                                (__lhs_0_254) -> {
                                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_20, true, dd_1, true, cctx_6)
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities____is(__cond_110),
                                                                                                    () -> {
                                                                                                        (__lhs_0_253) -> {
                                                                                                            __core__chooseUnit(__helios__assert(false, "TODO: support multi:BurningActivities for dgDataPolicy or other delegate"), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_20, true, dd_1, true, cctx_6))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_110),
                                                                                                            () -> {
                                                                                                                (__lhs_0_252) -> {
                                                                                                                    __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_110),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_251) -> {
                                                                                                                            __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_250) -> {
                                                                                                                            __helios__error("multi:multi: nesting not ok")
                                                                                                                        }
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()(__cond_110)))
                                                    }))
                                                }()
                                            }
                                        )();
                                        __helios__bool__and(() -> {
                                            __helios__bool__and(() -> {
                                                mintDgtCheck_1
                                            }, () -> {
                                                spendDgtCheck_1
                                            })
                                        }, () -> {
                                            dgDataPolicyCheck
                                        })
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_59),
                                        () -> {
                                            (__lhs_0_231) -> {
                                                innerActivity = __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__activity(__lhs_0_231);
                                                __cond_106 = innerActivity;
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_106),
                                                    () -> {
                                                        (__lhs_0_235) -> {
                                                            seed_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed(__lhs_0_235);
                                                            purpose_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose(__lhs_0_235);
                                                            BURNED = __helios__int____neg(1);
                                                            otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), __module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_1)), BURNED);
                                                            tnStr_3 = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_1))();
                                                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("checking ReplacingMe on ", purpose_9), ": "), tnStr_3)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("needs the charter to be approving the the new mint-delegate", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("  ^^^ should queue the new delegate in pendingChanges"), cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(baseCctx_1)();
                                                            (isUpdatingCharter) -> {
                                                                isMintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_9, __core__mkCons(__helios__string____to_data(purpose_9), __core__mkNilData(())), false, (), false, (), true, otherMintedValue_2, true, false, true, false, false, ());
                                                                __helios__bool__and(() -> {
                                                                    isMintingOk
                                                                }, () -> {
                                                                    isUpdatingCharter
                                                                })
                                                            }(__cond_107 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5)();
                                                            __core__ifThenElse(
                                                                __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_107),
                                                                () -> {
                                                                    (__lhs_0_236) -> {
                                                                        true
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__73) -> {
                                                                        false
                                                                    }
                                                                }
                                                            )()(__cond_107)))))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_106),
                                                            () -> {
                                                                (__lhs_0_234) -> {
                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... Retiring delegate authority token", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- must burn the indicated authority token", false, ()), __helios__int____eq(__helios__value__get(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken(dd_1)()), __helios__int____neg(1))))
                                                                }
                                                            },
                                                            () -> {
                                                                (__lhs_0_232) -> {
                                                                    __lhs_0_233 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), false, ()), 0);
                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("import settings from delegate and validate them"), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                        false
                                                                    }, () -> {
                                                                        true
                                                                    }), "ValidateSettings temporarily disabled"), false))
                                                                }
                                                            }
                                                        )()
                                                    }
                                                )()(__cond_106)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_59),
                                                () -> {
                                                    (__lhs_0_132) -> {
                                                        dCLA = __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_132);
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with any CapoLifecycle activity: ", false, ()), cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))())();
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the Capo's CharterData activity to match this delegate's activity", false, ()), __core__chooseUnit(__cond_104 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4)();
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_104),
                                                            () -> {
                                                                (__lhs_0_230) -> {
                                                                    cCLA = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_230);
                                                                    __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cCLA, dCLA), "activity mismatch with Capo's CharterData activity"), __helios__print("  -- ok, CharterData capoLifecycleActivity matches ours
"))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_104),
                                                                    () -> {
                                                                        (__lhs_0_228) -> {
                                                                            __cond_105 = dCLA;
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_105),
                                                                                () -> {
                                                                                    (__lhs_0_229) -> {
                                                                                        __helios__print("ok, Capo:updatingCharter works for now with CreatingDelegate
")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__72) -> {
                                                                                        __helios__error("when Capo is UpdatingCharter, the mintDelegate must be CreatingDelegate")
                                                                                    }
                                                                                }
                                                                            )()(__cond_105)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__71) -> {
                                                                            __helios__error("this activity must match the capo's own CharterData activity")
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()(__cond_104), neededRole = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx_4)(dCLA);
                                                        (myCurrentRole) -> {
                                                            __helios__bool__and(() -> {
                                                                __cond_61 = dCLA;
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_61),
                                                                    () -> {
                                                                        (__lhs_0_224) -> {
                                                                            seed_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_224);
                                                                            purpose_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_224);
                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("XXX it should output the new delegate token to the Capo as a PendingDelegate datum"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... here in the MintDgt: validates creation of UUT for the new delegate, aligned to the purpose indicated", false, ()), mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                            __cond_102 = myCurrentRole;
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_102),
                                                                                () -> {
                                                                                    (__lhs_0_225) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates the new delegate's UUT is minted", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                            __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_8, __core__mkCons(__helios__string____to_data(purpose_8), __core__mkNilData(())), true, mkTn, false, (), false, (), true, false, false, (), false, ()),
                                                                                            () -> {
                                                                                                __helios__print("  -- ok, minted the new delegate's UUT
")
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    ()
                                                                                                }()
                                                                                            }
                                                                                        )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the UUT must have the right disposition (is it checked somewhere else?!?)", false, ()), __cond_103 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)()))(purpose_8);
                                                                                        __core__ifThenElse(
                                                                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_103),
                                                                                            () -> {
                                                                                                (__lhs_0_227) -> {
                                                                                                    __helios__error("the new delegate is not present in the Capo's named-delegates list")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_226) -> {
                                                                                                    dgtLink_3 = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_226);
                                                                                                    __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_3), mkTn(purpose_8)), "uutName mismatch"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_103))))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__70) -> {
                                                                                        __helios__error("unreachable wrong role for CreatingDelegate")
                                                                                    }
                                                                                }
                                                                            )()(__cond_102)))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_61),
                                                                            () -> {
                                                                                (__lhs_0_172) -> {
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for the addingPendingDgt activity:", false, ()), charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new pending-delegate action is found at the head of the new change-list", false, ()), oldPendingChanges = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4);
                                                                                    nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                    nextChangeList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_2);
                                                                                    newChange = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head(nextChangeList);
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support otherManifestChange here"), __lhs_0_173 = __helios__common__assert_constr_index(newChange, 0);
                                                                                    __lhs_0_0_2 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_173);
                                                                                    action = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(__lhs_0_0_2);
                                                                                    role_2 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_2);
                                                                                    OdgtLink = __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(__lhs_0_0_2);
                                                                                    (newDgtRoleName) -> {
                                                                                        __core__chooseUnit(__cond_100 = action;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_100),
                                                                                            () -> {
                                                                                                (__lhs_0_222) -> {
                                                                                                    __core__chooseUnit(__helios__print("   -- another delegate-role check would be redundant."), __cond_101 = myCurrentRole;
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_101),
                                                                                                        () -> {
                                                                                                            (__lhs_0_223) -> {
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that the delegate queued for removal is present in the Capo's charterData", false, ()), __helios__error("implement me"))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__69) -> {
                                                                                                                __helios__error("unreachable")
                                                                                                            }
                                                                                                        }
                                                                                                    )()(__cond_101))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__68) -> {
                                                                                                    __helios__assert(true, "no way l")
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_100), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the change-list should be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail(nextChangeList), oldPendingChanges), "invalid update of pendingChanges; the new action must be prepended to the existing list."), __cond_99 = action;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_99),
                                                                                            () -> {
                                                                                                (__lhs_0_221) -> {
                                                                                                    __helios__error("unreachable")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_99),
                                                                                                    () -> {
                                                                                                        (__lhs_0_220) -> {
                                                                                                            seed_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed(__lhs_0_220);
                                                                                                            purpose_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose(__lhs_0_220);
                                                                                                            idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_220);
                                                                                                            (callback_14) -> {
                                                                                                                callback_14(seed_7, purpose_7, idPrefix_9)
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__lhs_0_219) -> {
                                                                                                            seed_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed(__lhs_0_219);
                                                                                                            purpose_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose(__lhs_0_219);
                                                                                                            idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_219);
                                                                                                            (callback_13) -> {
                                                                                                                callback_13(seed_6, purpose_6, idPrefix_8)
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()(__cond_99)((seed_5, purpose_5, pendingActionIdPrefix) -> {
                                                                                            (possibleMintDgtVerifications) -> {
                                                                                                (otherPossibleVerifications) -> {
                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("TEMPORARY: only one pending change is allowed", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(oldPendingChanges), 0), "only one pending change is allowed for now (avoids resource-exhaustion)"), __helios__bool__and(() -> {
                                                                                                        __helios__bool__and(() -> {
                                                                                                            true
                                                                                                        }, () -> {
                                                                                                            possibleMintDgtVerifications
                                                                                                        })
                                                                                                    }, () -> {
                                                                                                        otherPossibleVerifications
                                                                                                    })))
                                                                                                }(__cond_88 = myCurrentRole;
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_88),
                                                                                                    () -> {
                                                                                                        (__lhs_0_218) -> {
                                                                                                            __helios__error(__helios__string____add(__helios__string____add("this block had been run by spendDgt, but
", "... it's much cheaper to let the MintDgt do it ...
"), "... since it's already involved anyway"))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_88),
                                                                                                            () -> {
                                                                                                                (__lhs_0_192) -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a queued change to duplicate any other pending entry for the same delegate name", false, ()), isNotADuplicate = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4))((pdChange_2) -> {
                                                                                                                        __cond_89 = pdChange_2;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_89),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_193) -> {
                                                                                                                                    __lhs_0_0_3 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_193);
                                                                                                                                    pendingRole = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_3);
                                                                                                                                    __cond_90 = pendingRole;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_90),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_194) -> {
                                                                                                                                                changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_194);
                                                                                                                                                __helios__string____neq(changingDgtName, newDgtRoleName)
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__62) -> {
                                                                                                                                                __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_90)
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__61) -> {
                                                                                                                                    __helios__error("otherManifestChange not yet supported")
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_89)
                                                                                                                    });
                                                                                                                    __core__chooseUnit(__helios__assert(isNotADuplicate, __helios__string____add("already has a pending change for this delegate: ", newDgtRoleName)), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                    (possibleReplacementIsCorrect) -> {
                                                                                                                        __helios__bool__and(() -> {
                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                true
                                                                                                                            }, () -> {
                                                                                                                                isNotADuplicate
                                                                                                                            })
                                                                                                                        }, () -> {
                                                                                                                            possibleReplacementIsCorrect
                                                                                                                        })
                                                                                                                    }(__cond_91 = action;
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_91),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_216) -> {
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow an Add for an existing policy name", false, ()), __core__chooseUnit(__cond_98 = existingRoleEntryMaybe;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_98),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_217) -> {
                                                                                                                                            __helios__error(__helios__string____add("queuing Add failed: already has a delegate for policy name: ", newDgtRoleName))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__67) -> {
                                                                                                                                            ()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_98), true))
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_91),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_197) -> {
                                                                                                                                        replacesDgt = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt(__lhs_0_197);
                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("For Replace on an existing delegate... ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: invariants cannot be replaced", false, ()), __core__chooseUnit(__cond_97 = role_2;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_97),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_215) -> {
                                                                                                                                                    __helios__error("cannot Replace role: MintInvariant")
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_97),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_214) -> {
                                                                                                                                                            __helios__error("cannot Replace role: SpendInvariant")
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_97),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_213) -> {
                                                                                                                                                                    __helios__error("HandledByCapoOnly role is not applicable in delegate context")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__66) -> {
                                                                                                                                                                    __helios__print("  -- ok (not trying to replace an invariant)")
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()
                                                                                                                                            }
                                                                                                                                        )()(__cond_97), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- doesn't allow a Replace if the policy-name doesn't already exist", false, ()), (existingDgtLink_1) -> {
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: the PendingDelegateAction's role + replacesDgt must match the existing delegate's authority token", false, ()), (existingDgTkn) -> {
                                                                                                                                                __core__chooseUnit(__helios__assert(__helios__assetclass____eq(replacesDgt, __helios__option[__helios__assetclass]__unwrap(existingDgTkn)()), __helios__string____add(__helios__string____add(__helios__string____add("the current ", __cond_96 = role_2;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_96),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_212) -> {
                                                                                                                                                            "mint"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_96),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_211) -> {
                                                                                                                                                                    "spend"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_96),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_210) -> {
                                                                                                                                                                            "dgDataPolicy"
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_96),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_209) -> {
                                                                                                                                                                                    "named"
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__65) -> {
                                                                                                                                                                                    "\u2039incontheeiieivable\u203A"
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()(__cond_96)), " delegate's authority token doesn't match the queued action's token name "), __helios__assetclass__show(replacesDgt)())), true)
                                                                                                                                            }(__cond_95 = role_2;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_95),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_208) -> {
                                                                                                                                                        __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_95),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_207) -> {
                                                                                                                                                                __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_95),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_206) -> {
                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: dgDataPolicy: the named policy must be present in the Capo manifest", false, ()), __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1))))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_95),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_205) -> {
                                                                                                                                                                                __helios__error("unreachable: OtherNamedDgt deprecated")
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_95),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_204) -> {
                                                                                                                                                                                        __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_95),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_203) -> {
                                                                                                                                                                                                __helios__error("unreachable")
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_95),
                                                                                                                                                                                                () -> {
                                                                                                                                                                                                    (__lhs_0_202) -> {
                                                                                                                                                                                                        __helios__error("unreachable")
                                                                                                                                                                                                    }
                                                                                                                                                                                                },
                                                                                                                                                                                                () -> {
                                                                                                                                                                                                    (__lhs_0_201) -> {
                                                                                                                                                                                                        __helios__error("unreachable")
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            )()
                                                                                                                                                                                        }
                                                                                                                                                                                    )()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_95)))
                                                                                                                                        }(__cond_93 = existingRoleEntryMaybe;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_93),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_200) -> {
                                                                                                                                                    __helios__error(__helios__string____add("queuing Replace failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_198) -> {
                                                                                                                                                    __lhs_0_0_4 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_198);
                                                                                                                                                    entryType_2 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_4);
                                                                                                                                                    __cond_94 = entryType_2;
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_94),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_199) -> {
                                                                                                                                                                existingDgtLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_199);
                                                                                                                                                                existingDgtLink
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__64) -> {
                                                                                                                                                                __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_94)
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_93))))))
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_195) -> {
                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove if the policy-name doesn't already exist", false, ()), __core__chooseUnit(__cond_92 = existingRoleEntryMaybe;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_92),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_196) -> {
                                                                                                                                                    __helios__error(__helios__string____add("queuing Remove failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__63) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_92), __helios__error("unreachable: Remove not yet supported")))
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }
                                                                                                                    )()(__cond_91))))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__60) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()(__cond_88))
                                                                                            }(__cond_81 = myCurrentRole;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_81),
                                                                                                () -> {
                                                                                                    (__lhs_0_191) -> {
                                                                                                        true
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_81),
                                                                                                        () -> {
                                                                                                            (__lhs_0_175) -> {
                                                                                                                __helios__bool__and(() -> {
                                                                                                                    __module__StellarHeliosHelpers__bREQT("(general) the mintDgt checks everything about the mint", false, ())
                                                                                                                }, () -> {
                                                                                                                    __cond_82 = action;
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_82),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_183) -> {
                                                                                                                                __core__chooseUnit(__cond_87 = role_2;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_87),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_190) -> {
                                                                                                                                            __helios__error("cannot Remove role: MintDgt")
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_87),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_189) -> {
                                                                                                                                                    __helios__error("cannot Remove role: SpendDgt")
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_87),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_188) -> {
                                                                                                                                                            __helios__error("cannot Remove role: MintInvariant")
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_87),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_187) -> {
                                                                                                                                                                    __helios__error("cannot Remove role: SpendInvariant")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_87),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_186) -> {
                                                                                                                                                                            __helios__assert(false, "todo")
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_87),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_185) -> {
                                                                                                                                                                                    __helios__assert(false, "todo")
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_87),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_184) -> {
                                                                                                                                                                                            __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__59) -> {
                                                                                                                                                                                            ()
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                )()
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()(__cond_87), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove to duplicate an Add or Replace or Remove entry", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("^^^"), __core__chooseUnit(__helios__assert(false, "what else should be checked here?"), false))))
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__56) -> {
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    false,
                                                                                                                                    () -> {
                                                                                                                                        __helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't")
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        () -> {
                                                                                                                                            ()
                                                                                                                                        }()
                                                                                                                                    }
                                                                                                                                )(), mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                                dgTknName = mkTokenName_2(purpose_5);
                                                                                                                                mintedDgTkn = __helios__bool__and(() -> {
                                                                                                                                    __module__StellarHeliosHelpers__bREQT("the new delegate is created with the indicated authority token", false, ())
                                                                                                                                }, () -> {
                                                                                                                                    __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_5, __core__mkCons(__helios__string____to_data(purpose_5), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, (), false, (), true, false, false, (), false, ())
                                                                                                                                });
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new policy-token must match the seed", false, ()), (dgtLink_2) -> {
                                                                                                                                    __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2), dgTknName), __helios__string____add(__helios__string____add(__helios__string____add("uutName mismatch; expected ", dgTknName), " but found "), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2))), delegateTakesOwnership = __module__StellarHeliosHelpers__bREQT("the new policy-delegate-script must take ownership of the dgTkn", true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()));
                                                                                                                                    (possibleExtraReplacementCheck) -> {
                                                                                                                                        __helios__bool__and(() -> {
                                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                                mintedDgTkn
                                                                                                                                            }, () -> {
                                                                                                                                                delegateTakesOwnership
                                                                                                                                            })
                                                                                                                                        }, () -> {
                                                                                                                                            possibleExtraReplacementCheck
                                                                                                                                        })
                                                                                                                                    }(__cond_84 = action;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_84),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_178) -> {
                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Replace: the queued change must match the idPrefix of the current delegate ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VALIDATE this through a unit-test ^"), __core__chooseUnit(__cond_85 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_85),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_180) -> {
                                                                                                                                                            dde = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_180);
                                                                                                                                                            __lhs_0_181 = dde;
                                                                                                                                                            entryType_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_181);
                                                                                                                                                            __cond_86 = entryType_1;
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_86),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_182) -> {
                                                                                                                                                                        idPrefix_7 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_182);
                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("expects the queued idPrefix to match the existing policy's idPrefix", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("   -- expected: ", idPrefix_7)), __core__chooseUnit(__helios__print(__helios__string____add("   --   actual: ", pendingActionIdPrefix)), __helios__assert(__helios__string____eq(idPrefix_7, pendingActionIdPrefix), "idPrefix mismatch"))))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__58) -> {
                                                                                                                                                                        __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_86)
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_179) -> {
                                                                                                                                                            __helios__error(__helios__string____add("no existing dgDataPolicy found with key: ", newDgtRoleName))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_85), true)))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__57) -> {
                                                                                                                                                true
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_84)))
                                                                                                                                }(__cond_83 = OdgtLink;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_83),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_177) -> {
                                                                                                                                            __helios__error("missing required delegate link in pending dgt change")
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_176) -> {
                                                                                                                                            dl = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_176);
                                                                                                                                            dl
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_83))))
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(__cond_82)
                                                                                                                })
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__55) -> {
                                                                                                                __helios__error("unreachable")
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(__cond_81))
                                                                                        }))))
                                                                                    }(__cond_80 = role_2;
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_80),
                                                                                        () -> {
                                                                                            (__lhs_0_174) -> {
                                                                                                dgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_174);
                                                                                                dgtName
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__54) -> {
                                                                                                __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                            }
                                                                                        }
                                                                                    )()(__cond_80)))))
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_61),
                                                                                    () -> {
                                                                                        (__lhs_0_171) -> {
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement removePendDgt"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("allows the removal of a queued pending-delegate-change that can't be completed", false, ()), __core__chooseUnit(__helios__assert(false, "not yet implemented"), false)))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_61),
                                                                                            () -> {
                                                                                                (__lhs_0_148) -> {
                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... To commit pending changes:", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariants cannot be replaced", false, ()), pendingChangesList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                    previousManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                    nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                    nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData_1);
                                                                                                    __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                                        __module__StellarHeliosHelpers__bREQT("the next-changes list must be empty", false, ())
                                                                                                    }, () -> {
                                                                                                        __helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_1)), 0)
                                                                                                    }), "pendingChanges must be emptied"), spendDgtCheck = __core__ifThenElse(
                                                                                                        __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                                        () -> {
                                                                                                            true
                                                                                                        },
                                                                                                        () -> {
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                    () -> {
                                                                                                                        true
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        () -> {
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...spendDgt: validates that all the pending delegates are installed", false, ()), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]](pendingChangesList)((prevManifestRemainder_1, nextCMEs, pcChange) -> {
                                                                                                                                (pdChange) -> {
                                                                                                                                    (pendingTypeName) -> {
                                                                                                                                        __core__chooseUnit(__cond_69 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_69),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_157) -> {
                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Remove: verifies that the delegate queued for removal is now removed from the Capo manifest", false, ()), __cond_72 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(nextCMEs)(pendingTypeName);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_72),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_158) -> {
                                                                                                                                                                __helios__error(__helios__string____add("queued Remove failed: name still present in next-manifest item: ", pendingTypeName))
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__50) -> {
                                                                                                                                                                ()
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_72))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__47) -> {
                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- verifies that added & replaced entries are present in the updated map (at its next position)", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                        __helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(nextCMEs), 0),
                                                                                                                                                        () -> {
                                                                                                                                                            __helios__error("queued Add/Replace failed: no more items in next-manifest map")
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            () -> {
                                                                                                                                                                ()
                                                                                                                                                            }()
                                                                                                                                                        }
                                                                                                                                                    )(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head(nextCMEs)((CME_key, __lhs_1) -> {
                                                                                                                                                        ME_type = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_1);
                                                                                                                                                        __core__chooseUnit(__helios__print(__helios__string____add("vv @CME entry: ", CME_key)), __lhs_0_153 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                        ME_policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_153);
                                                                                                                                                        ME_idPrefix = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_153);
                                                                                                                                                        refCount = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_153);
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support minting multiple threads of a dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__int____eq(refCount, 1), "refCount must be 1 when adding a new dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__string____eq(pendingTypeName, CME_key), "queued change: name mismatch with next-manifest item"), ME_name = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(ME_policyLink))();
                                                                                                                                                        __core__chooseUnit(__helios__print(__helios__string____add("    -- ME policy link ", ME_name)), pendingLink = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange))();
                                                                                                                                                        pendingName = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(pendingLink))();
                                                                                                                                                        __core__chooseUnit(__helios__print(__helios__string____add("    -- pdChange policy link ", pendingName)), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(ME_policyLink, pendingLink), "queued change: policyLink mismatch with next-manifest item"), (nextIdPrefix) -> {
                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- @each manifest entry: next-manifest's idPrefix must match the queued change", false, ()), __helios__assert(__helios__string____eq(nextIdPrefix, ME_idPrefix), "idPrefix mismatch with next-manifest's dgDataPolicy"))
                                                                                                                                                        }(__cond_70 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_70),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_155) -> {
                                                                                                                                                                    idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_155);
                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- Replace: verifies that the next-manifest no longer has the replaced entry", false, ()), __core__chooseUnit(__cond_71 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))(pendingTypeName);
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_71),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_156) -> {
                                                                                                                                                                                __helios__error(__helios__string____add("queued Replace failed: duplicate name remaining in next-manifest map: ", pendingTypeName))
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__49) -> {
                                                                                                                                                                                ()
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    )()(__cond_71), idPrefix_6))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_70),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_154) -> {
                                                                                                                                                                            idPrefix_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_154);
                                                                                                                                                                            idPrefix_5
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__48) -> {
                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_70)))))))))
                                                                                                                                                    })))
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_69), __cond_68 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_68),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_152) -> {
                                                                                                                                                    (callback_12) -> {
                                                                                                                                                        callback_12(prevManifestRemainder_1, __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__46) -> {
                                                                                                                                                    (callback_11) -> {
                                                                                                                                                        callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(prevManifestRemainder_1)(pendingTypeName), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_68))
                                                                                                                                    }(__cond_67 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_67),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_151) -> {
                                                                                                                                                typeName_3 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_151);
                                                                                                                                                __core__chooseUnit(__helios__print("  -- ok: DgDataPolicy in commitPendingChanges"), typeName_3)
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__45) -> {
                                                                                                                                                __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_67))
                                                                                                                                }(__cond_66 = pcChange;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_66),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_150) -> {
                                                                                                                                            dgtChange = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_150);
                                                                                                                                            dgtChange
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_149) -> {
                                                                                                                                            __helios__error("otherManifestChange not yet supported")
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_66))
                                                                                                                            }, previousManifest, nextManifest)((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(nextManifestRemainder, prevManifestRemainder)
                                                                                                                            }))
                                                                                                                        }()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }()
                                                                                                        }
                                                                                                    )();
                                                                                                    mintDgtCheck = __core__ifThenElse(
                                                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                                        () -> {
                                                                                                            true
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                () -> {
                                                                                                                    true
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    () -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... mintDgt: validates that all the removed dgTkns are burned", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the txn must have all the expected burns", false, ()), mint = __helios__value__to_map(__helios__tx__minted(__helios__scriptcontext__tx))();
                                                                                                                        mintThisPolicy = __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe(mint)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1));
                                                                                                                        len = __helios__int____sub(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(mint), 1);
                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                            __helios__int____gt(len, 1),
                                                                                                                            () -> {
                                                                                                                                __core__chooseUnit(__helios__print(__helios__value__show(__helios__tx__minted(__helios__scriptcontext__tx))(false, ())), __helios__error(__helios__string____add("currently supporting only one minting policy being burned in the tx ", __helios__int__show(len)())))
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                () -> {
                                                                                                                                    ()
                                                                                                                                }()
                                                                                                                            }
                                                                                                                        )(), (observedTokenBurn) -> {
                                                                                                                            remainingMint = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]](pendingChangesList)((foldingBurn, pcChange_1) -> {
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS the spendDgt to check details of Replace activities", false, ()), (pdChange_1) -> {
                                                                                                                                    __cond_75 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange_1);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_75),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_163) -> {
                                                                                                                                                typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_163);
                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ok: DgDataPolicy in commitPendingChanges: ", typeName_4)), __cond_76 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_76),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_170) -> {
                                                                                                                                                            foldingBurn
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__52) -> {
                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that a delegate queued for removal or replacement is burned", false, ()), __cond_77 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest)(typeName_4);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_77),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_169) -> {
                                                                                                                                                                        __helios__error(__helios__string____add("queued Remove failed: not present in previous-manifest map: ", typeName_4))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_164) -> {
                                                                                                                                                                        __lhs_0_0_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_164);
                                                                                                                                                                        ME_type_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_1);
                                                                                                                                                                        tn_5 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0_1);
                                                                                                                                                                        mph_30 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0_1);
                                                                                                                                                                        __cond_78 = mph_30;
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __helios__option[__helios__mintingpolicyhash]__some____is(__cond_78),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_168) -> {
                                                                                                                                                                                    __core__chooseUnit(__helios__print("    -- TODO: manifest entry with other-mph: allow optional burn"), foldingBurn)
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__53) -> {
                                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("each pending change must have a name recognized by the manifest", false, ()), __lhs_0_165 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                                                    refCount_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_165);
                                                                                                                                                                                    tnStr_2 = __helios__bytearray__decode_utf8_safe(tn_5)();
                                                                                                                                                                                    __cond_79 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn)(tn_5);
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __helios__option[__helios__int]__none____is(__cond_79),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_167) -> {
                                                                                                                                                                                                __helios__error(__helios__string____add("queued Remove/Replace failed: no burn, or double-burn: ", tnStr_2))
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_166) -> {
                                                                                                                                                                                                burningCount = __helios__option[__helios__int]__some__some(__lhs_0_166);
                                                                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    -- ok: BURN \u{1F525}", __helios__int__show(burningCount)()), "\xD7\u{1F4B4} "), tnStr_2)), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                                    __helios__int____neq(__helios__int____sub(0, refCount_1), burningCount),
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("queued Remove/Replace failed: expected burn of ", __helios__int__show(refCount_1)()), "\xD7\u{1F4B4} "), tnStr_2))
                                                                                                                                                                                                    },
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            ()
                                                                                                                                                                                                        }()
                                                                                                                                                                                                    }
                                                                                                                                                                                                )(), __helios__map[__helios__bytearray@__helios__int]__delete(foldingBurn)(tn_5)))
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()(__cond_79))
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()(__cond_78)
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_77))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_76))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__51) -> {
                                                                                                                                                __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_75)
                                                                                                                                }(__cond_74 = pcChange_1;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_74),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_162) -> {
                                                                                                                                            dgtChange_1 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_162);
                                                                                                                                            dgtChange_1
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_161) -> {
                                                                                                                                            __helios__error("otherManifestChange not yet supported")
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_74)))
                                                                                                                            }, observedTokenBurn);
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires all the burns of our policy-id to be accounted for", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(remainingMint), 0), __helios__string____add("extra burns found in the transaction: 
", __helios__map[__helios__bytearray@__helios__int]__show(remainingMint)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... -- end of commitPendingChanges", false, ()), true)))
                                                                                                                        }(__cond_73 = mintThisPolicy;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is(__cond_73),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_160) -> {
                                                                                                                                    minted = __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some(__lhs_0_160);
                                                                                                                                    minted
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_159) -> {
                                                                                                                                    __core__mkNilPairData(())
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_73)))))
                                                                                                                    }()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )();
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __helios__bool__and(() -> {
                                                                                                            __helios__bool____not(__module__BasicDelegate__isMintDelegate)
                                                                                                        }, () -> {
                                                                                                            __helios__bool____not(__module__BasicDelegate__isSpendDelegate)
                                                                                                        }),
                                                                                                        () -> {
                                                                                                            __helios__error("unreachable? not mintDgt or spendDgt")
                                                                                                        },
                                                                                                        () -> {
                                                                                                            () -> {
                                                                                                                ()
                                                                                                            }()
                                                                                                        }
                                                                                                    )(), __helios__bool__and(() -> {
                                                                                                        mintDgtCheck
                                                                                                    }, () -> {
                                                                                                        spendDgtCheck
                                                                                                    })))))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_61),
                                                                                                    () -> {
                                                                                                        (__lhs_0_139) -> {
                                                                                                            manifestActivity = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity(__lhs_0_139);
                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow updating anything except the manifest", false, ()), __core__chooseUnit(__cond_62 = manifestActivity;
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is(__cond_62),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_147) -> {
                                                                                                                        __core__chooseUnit(__helios__assert(false, "TODO: support retirement activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't remove a dgDataPolicy entry from the manifest (use queuePendingChange instead)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("removes the indicated key from the manifest", false, ()), __module__StellarHeliosHelpers__REQT("delegates MUST be allowed to validate that this doesn't drop something they need", false, ()))))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is(__cond_62),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_146) -> {
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("if delegates need a hook to validate that the updte is acceptable, that might be enforced here"), __core__chooseUnit(__helios__assert(false, "TODO: support updatingEntry activity"), __module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ())))
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is(__cond_62),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_141) -> {
                                                                                                                                        key_31 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key(__lhs_0_141);
                                                                                                                                        tokenName_4 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName(__lhs_0_141);
                                                                                                                                        charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                                                                        nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), refInput = __module__CapoHelpers__CapoCtx[]__delegatedDataRef(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_4)(false, (), true, tokenName_4);
                                                                                                                                        __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__txinput____eq(refInput, refInput))(__helios__string____add(__helios__string____add("  -- found refInput: ", __helios__bytearray__decode_utf8_safe(tokenName_4)()), "?")), "refInput must be found"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry MUST be found in the new manifest", false, ()), __core__chooseUnit(__cond_63 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_63),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_145) -> {
                                                                                                                                                    __helios__error(__helios__string____add("the new manifest entry is missing: ", key_31))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_142) -> {
                                                                                                                                                    __lhs_0_0 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_142);
                                                                                                                                                    entryType = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0);
                                                                                                                                                    tn_4 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0);
                                                                                                                                                    mph_29 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0);
                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("   -- ok, found the manifest entry for ", key_31)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry must have the right token-name", false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(tn_4, tokenName_4), "token-name mismatch"), __core__chooseUnit(__cond_65 = mph_29;
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __helios__option[__helios__mintingpolicyhash]__some____is(__cond_65),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_144) -> {
                                                                                                                                                                __helios__error("other-mph not yet supported")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__44) -> {
                                                                                                                                                                ()
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_65), __cond_64 = entryType;
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is(__cond_64),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_143) -> {
                                                                                                                                                                __helios__print("   -- ok: matching name, with NamedTokenRef added in updatingManifest")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__43) -> {
                                                                                                                                                                __helios__error("addingEntry: the new manifest entry must be a NamedTokenRef for now")
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_64)))))
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_63), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the manifest must be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_3), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31)), "manifest modified in an unexpected way"), __helios__print("  -- ok! new manifest as expected")))))))
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is(__cond_62),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_140) -> {
                                                                                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__assert(false, "TODO: support forkingThreadToken activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates that another copy of the token name is minted", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("when the key is a DgDataPolicy, the existing manifest entry is updated", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("for mint/spend delegates and otherNamedDelegates, a new manifest entry is created with refCount=1+newThreadCount, if it doesn't exist", false, ()), __module__StellarHeliosHelpers__REQT("when the manifest already has the entry, the refCount is incremented by newThreadCount", false, ())))))))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__42) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()(__cond_62), true))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_61),
                                                                                                            () -> {
                                                                                                                (__lhs_0_138) -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the minter is instructed to force a new delegate"))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__lhs_0_137) -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the spender is instructed to force a new delegate"))
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(__cond_61)
                                                            }, () -> {
                                                                __core__ifThenElse(
                                                                    true,
                                                                    () -> {
                                                                        __core__chooseUnit(__helios__print("BasicDelegate harness deferring to specialization for CapoLifecycleActivities
"), true)
                                                                    },
                                                                    () -> {
                                                                        () -> {
                                                                            false
                                                                        }()
                                                                    }
                                                                )()
                                                            })
                                                        }(__cond_60 = neededRole;
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_60),
                                                            () -> {
                                                                (__lhs_0_136) -> {
                                                                    __helios__error("delegate invoked with invalid escape-hatch activity (always handled directly by the Capo)")
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_60),
                                                                    () -> {
                                                                        (__lhs_0_135) -> {
                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on spend delegate", true, __module__BasicDelegate__isSpendDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: spendDgt checking CapoLifecycleActivity"), neededRole)))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_60),
                                                                            () -> {
                                                                                (__lhs_0_134) -> {
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on mint delegate", true, __module__BasicDelegate__isMintDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: mintDgt checking CapoLifecycleActivity"), neededRole)))
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_60),
                                                                                    () -> {
                                                                                        (__lhs_0_133) -> {
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It EXPECTS the Capo to enforce the presence of the mintDgt (to check the right mint) and spendDgt (to validate the charter-update logic)", false, ()), __core__ifThenElse(
                                                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                () -> {
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                        () -> {
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            () -> {
                                                                                                                __helios__error(__helios__string____add("this Capo lifecycle activity is only valid on mint/spend delegate, not ", __module__BasicDelegate__delegateName))
                                                                                                            }()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )())
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__41) -> {
                                                                                            __helios__error("no way k")
                                                                                        }
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()(__cond_60)))))
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_59),
                                                        () -> {
                                                            (__lhs_0_131) -> {
                                                                seed_4 = __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__seed(__lhs_0_131);
                                                                dDataTypeName_1 = __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_131);
                                                                __core__ifThenElse(
                                                                    __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                    () -> {
                                                                        __helios__error("CreatingDelegatedData activity is only allowed in the mint delegate")
                                                                    },
                                                                    () -> {
                                                                        () -> {
                                                                            cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_3)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("context: CreatingDelegatedData", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- ensures the data-controller is invoked with its minting activity for the indicated recId", false, ()), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_3)(dDataTypeName_1, false, ());
                                                                            tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);
                                                                            purpose_4 = __helios__option[__helios__string]__unwrap(__module__CapoHelpers__DelegateInput[]__idPrefix(policyDelegateInput))();
                                                                            newDataId_1 = __helios__string__encode_utf8(tnFactory(purpose_4))();
                                                                            __helios__bool__and(() -> {
                                                                                __helios__bool__and(() -> {
                                                                                    __helios__bool__and(() -> {
                                                                                        __helios__bool__and(() -> {
                                                                                            __helios__bool__and(() -> {
                                                                                                true
                                                                                            }, () -> {
                                                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_4, __core__mkCons(__helios__string____to_data(purpose_4), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())
                                                                                            })
                                                                                        }, () -> {
                                                                                            __module__StellarHeliosHelpers__bREQT("it outputs the new delegated-data record to the Capo address", false, ())
                                                                                        })
                                                                                    }, () -> {
                                                                                        __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_3)(newDataId_1, dDataTypeName_1)
                                                                                    })
                                                                                }, () -> {
                                                                                    __module__StellarHeliosHelpers__bREQT("ensures the data-controller is invoked with ONE minting activity for the indicated recId", false, ())
                                                                                })
                                                                            }, () -> {
                                                                                __module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(policyDelegateInput)(seed_4))()
                                                                            }))))
                                                                        }()
                                                                    }
                                                                )()
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_59),
                                                                () -> {
                                                                    (__lhs_0_130) -> {
                                                                        dDataTypeName = __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_130);
                                                                        recId_7 = __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__recId(__lhs_0_130);
                                                                        __core__ifThenElse(
                                                                            __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                            () -> {
                                                                                __helios__error("UpdatingDelegatedData activity is only allowed in the spend delegate")
                                                                            },
                                                                            () -> {
                                                                                () -> {
                                                                                    cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                                                                    __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedData activity", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("implements a generic data-controller re-delegation convention based on the capo's manifest (those with type= DgDataPolicy)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the data-controller is invoked with ONE spending activity for the indicated recId", false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_2)(dDataTypeName, false, ()))(recId_7))(), "^^^ those can fail, this assert won't."), inputDD = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_2)(false, (), true, recId_7);
                                                                                    __core__chooseUnit(__helios__assert(__helios__txinput____eq(inputDD, inputDD), "no way m"), __core__chooseUnit(__core__ifThenElse(
                                                                                        __helios__string____eq("settings", dDataTypeName),
                                                                                        () -> {
                                                                                            curSettingsId = __helios__option[__helios__bytearray]__unwrap(__module__CapoHelpers__CapoCtx[]__getSettingsId(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(true, true))();
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO(__helios__string____add("when updating the current Capo settings, the delegates must all ", "have a chance to ensure the settings are valid for their needs")), __core__ifThenElse(
                                                                                                false,
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__bytearray____eq(curSettingsId, recId_7),
                                                                                                        () -> {
                                                                                                            __core__chooseUnit(__helios__print(" -> "), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings(cctx_2)(), "no way jose"), __helios__print(" <- ")))
                                                                                                        },
                                                                                                        () -> {
                                                                                                            () -> {
                                                                                                                recIdStr_4 = __helios__bytearray__decode_utf8_safe(recId_7)();
                                                                                                                curSettingsIdStr = __helios__bytearray__decode_utf8_safe(curSettingsId)();
                                                                                                                __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  -- NOTE: updating ", recIdStr_4), ", which isn't currentSettings="), curSettingsIdStr))
                                                                                                            }()
                                                                                                        }
                                                                                                    )()
                                                                                                },
                                                                                                () -> {
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    }()
                                                                                                }
                                                                                            )())
                                                                                        },
                                                                                        () -> {
                                                                                            () -> {
                                                                                                ()
                                                                                            }()
                                                                                        }
                                                                                    )(), __helios__bool__and(() -> {
                                                                                        __helios__bool__trace(__module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_2)(recId_7, dDataTypeName))("  -- did output delegated data? ")
                                                                                    }, () -> {
                                                                                        true
                                                                                    }))))))))
                                                                                }()
                                                                            }
                                                                        )()
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_59),
                                                                        () -> {
                                                                            (__lhs_0_128) -> {
                                                                                recId_6 = __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__recId(__lhs_0_128);
                                                                                __core__ifThenElse(
                                                                                    __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                    () -> {
                                                                                        __helios__error("DeletingDelegatedData activity is only allowed in the mint delegate")
                                                                                    },
                                                                                    () -> {
                                                                                        () -> {
                                                                                            cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                                                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_1)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("this code is triggered by both the mintDgt and spendDgt, with each doing their parts of the job", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the spendDgt allows the spending of the utxo", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the mintDgt requires the burning of its UUT", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must not delete a record that's still referenced by the Capo manifest", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a matching manifest entry has to be changed or removed prior to deletion", false, ()), __lhs_0_129 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_1)(false, (), true, recId_6);
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("verify the input was found ^"), __core__chooseUnit(__helios__assert(false, "Delete not supported yet"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement the generic data-controller re-delegation convention here"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("ensure that the right delegate is consulted with its BurningActivities.*"), false))))))))))
                                                                                        }()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities____is(__cond_59),
                                                                                () -> {
                                                                                    (__lhs_0_127) -> {
                                                                                        true
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities____is(__cond_59),
                                                                                        () -> {
                                                                                            (__lhs_0_126) -> {
                                                                                                true
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__lhs_0_125) -> {
                                                                                                true
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()(__cond_59))
                        },
                        () -> {
                            () -> {
                                false
                            }()
                        }
                    )()
                },
                () -> {
                    () -> {
                        false
                    }()
                }
            )();
            result_2)
        }
    };
    __module__BasicDelegate__main = (mdd, activity_4) -> {
        __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(" \u{1F6A5}\u2753delegate: ", __module__BasicDelegate__delegateName), "
")), (result_3) -> {
            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("\u{1F6A5}\u{1F7E2} delegate: ", __module__BasicDelegate__delegateName), ": ok!
")), result_3)
        }(__cond_111 = mdd;
        __core__ifThenElse(
            __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData____is(__cond_111),
            () -> {
                (__lhs_0_261) -> {
                    __helios__error("Data Delegates must never store the capoStoredData variant in the script; used only for data-structuring capo-stored utxo datum")
                }
            },
            () -> {
                __core__ifThenElse(
                    __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation____is(__cond_111),
                    () -> {
                        (isD) -> {
                            dd_2 = __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__dd(isD);
                            __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __helios__int__serialize(__module__BasicDelegate__rev)()), "param/script-hash uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __module__BasicDelegate__instance), "param/script-hash uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __helios__string__encode_utf8(__module__BasicDelegate__delegateName)()), "param/script-hash uniqueness"), myDgTkn = __helios__value__show(__helios__txinput__value(__helios__scriptcontext__get_current_input()))(false, ());
                            __core__chooseUnit(__helios__print(__helios__string____add("  -- is spending dgTkn ", myDgTkn)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... final checks:", false, ()), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_2)))();
                            govAuthorityCheck = __core__ifThenElse(
                                __helios__bool____not(__module__BasicDelegate__isDgDataPolicy),
                                () -> {
                                    true
                                },
                                () -> {
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__requiresGovAuthority),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                () -> {
                                                    __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_7)())()
                                                }()
                                            }
                                        )()
                                    }()
                                }
                            )();
                            __helios__bool__and(() -> {
                                govAuthorityCheck
                            }, () -> {
                                __module__BasicDelegate__checkOneActivity_1(__module__BasicDelegate__checkOneActivity_1)(isD, activity_4, true, dd_2, true, cctx_7)
                            }))))))
                        }
                    },
                    () -> {
                        (__76) -> {
                            kaboomInvalidRedeemer = () -> {
                                __helios__error("wrong Actvy/dtm")
                            };
                            __cond_112 = activity_4;
                            __core__ifThenElse(
                                __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_112),
                                () -> {
                                    (__lhs_0_260) -> {
                                        kaboomInvalidRedeemer()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_112),
                                        () -> {
                                            (__lhs_0_259) -> {
                                                kaboomInvalidRedeemer()
                                            }
                                        },
                                        () -> {
                                            (__77) -> {
                                                __module__UnspecializedDelegate__DelegateActivity[]__otherDatumValidation(activity_4)(mdd)
                                            }
                                        }
                                    )()
                                }
                            )()(__cond_112)
                        }
                    }
                )()
            }
        )()(__cond_111)))
    };
    __core__ifThenElse(
        __module__BasicDelegate__main(__module__UnspecializedDelegate__DelegateDatum[]__from_data(__module__UnspecializedDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__UnspecializedDelegate__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__UnspecializedDelegate__DelegateDatum[]__capoStoredData__is_valid_data_2)(__DATUM), __module__UnspecializedDelegate__DelegateActivity[]__from_data(__module__UnspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__UnspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(__REDEEMER)),
        () -> {
            ()
        },
        () -> {
            __helios__error("validation returned false")
        }
    )()
}`, "optimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/CapoMintHelpers.hl", "src/delegation/BasicDelegate.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f18690019056c0c186d001905850c187f011901450a188d0219059304188e02190593041905140219016e182919076002190230184619077d0219022d183b190d53021902411856190dec021903f11826190e6602190410185c190ea30219041f1850190fe3021903791829191037021903ab1834191044021903ab184b191392001905b1181f191490021901f118271914bd021901fa18271914df0219020218241914ef02190204182b191508021901e7182519151d021901e71825191532021901e71825191547021901e7182519155c021901e71825191571021901e71825191579021901e718251915f40219049c181f191641021904cb181b19164a021904d018371916f3001902651019171a00190277183519176f0019026a18301917ed021904a0182e191826021904e21835191840021904e6181f191848021904ee1835191873001902900c1918bc00190294182419195c001902db182d191962001902db151919f0001902c11830191a56021904ec1820191a70021904fd14191a8d001904950a191aef021905211818191af0021905211831191b0f001905ca10191bfc011901a104191c1c011901b11824191c1d011901b11824191cc7011901db1820191d25011901ec1841191d59011901f21841191d86011901db1842191ddb01190144183d191ddc01190144183d191ddd01190144183d191dde01190144183d191df101190144183d191df201190144183d191df301190144183d191df401190144183d191e440119019a0d191e62011901710c191e63011901810c191e6b001901b502191ef6001901bc13192031011901110419203501190118041920370119011a0419204301190131081920440119012d1219204c0119012a182219206e011901251319207501190118181a1920a90019073b0f1920be0019073b0f1921110019074618181921130019019318301921890019073b0f1921a40019070f0f1921b90019070f0f19227a00190719183e1922810019070f0f19229d001906e80f1922b2001906e80f192378001906f5183e19237f001906e80f19238a0019069e0819238e001906a00819240e0019067a183219246800190688183719247200190690101924750019067a18331925d303190114181d1926b70019057b183619279800190548182d19281b00190535182c1928cf00190522121928d000190522121929ee0019030418341929f30019030508192bd9001901f31845192c1d001901ff08192ca00319014010192e5304183204192e5404183204192e7c041832181aff", "variableNames": "", "termDescriptions": "b8181916f371666f756e64576974685468697353656564191c1c62746e191c1d62746e191ddb626b32191ddc626b32191ddd626b32191dde626b32191df1626b32191df2626b32191df3626b32191df4626b32191e4467707572706f7365191e6b7067657454784368617274657244617461192031677365656449647819203567726177547849641920376774786f496e666f19211371676574526566436861727465725574786f19238a68726563496453747219238e686361706f416464721928cf676467744c696e6b1928d0676467744c696e6b1929f37172657475726e6564556e6368616e676564192e5367746e4279746573192e5467746e4279746573" }, "unoptimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/CapoMintHelpers.hl", "src/delegation/BasicDelegate.hl", "src/delegation/UnspecializedDelegate.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f1903df00190195183b1903ff001901ee1619043300190509081904430019056c0c190447001905850c190481011901450a190543021905930419054402190593041905700219055e021905710219055e021905740219055f182e1905750219055f182e1905760219055f091905770219055f041905780219055f182719057a0219055f182719057b0219055f181919057d0219055f181919057e0219055f0a19058b021905910a19058e02190591182919058f02190591181a1906220219057d101906300219057e18361906320219057e182d19079c0219014d18571907b70219014e18561907db0219015118451908840219012418451909430218f9184519095e021901001845190a5c0219016e1829190aa3021901921828190bd70219021f1824190bd80219021f1824190c02021902301846190c1a0219022d183b190d4602190359183f191202021902ae18311912940219024118561913270219043b181c19138f021903f418731913b602190435183f19142f02190410185c1914880219041e187c19148e0219041f185019152f021903f11826191535021903f0183519153d02190379182019155a02190379182919155b02190379183d1915c6021903ab18341915d3021903ab184b19179502190446182b1917ce0219044d182b19181202190457186119184e02190460185d19184f02190460185d1918ac0219045d18461918ad0219045d18461918c90219046d18631918d602190454183319190a02190473182f19191502190474182b1919c9021901f118271919f9021901fa1827191a28021902021824191a29021902021837191a3b02190204182b191a3c02190204183f191a55021901e71825191a960219049c181f191af3021904c61833191b07021904cb181b191b12021904d01837191b35021904a0182e191b51021904e21835191b72021904e6181f191b9d021904ee1835191baf021904ec1820191bc7021904fd14191be00219050f1818191c240219051a1830191c36021904fe182c191c37021904fe183a191c4a021905211818191c4b021905211831191c58021904f3182c191c73021905261832191c940219052a181f191cdf02190536181b191cf802190532182d191d2a0218c31824191f8f03190147183a191fdf031901171820191fef03190117185319201c03190122184019202203190124183f19206703190130182a1920b1031901411719261903189400192a5803184700192ab801190169181e192ac4011901a104192b0b011901b11824192b0c011901b11824192b0e011901b208192b1f011901b31827192bce011901db1820192c4a011901ec1841192c7a011901f4184c192c84011901f21841192c99011901db1842192cca0119019908192cce0119019a0d192cf2011901710c192cf3011901810c192d030119017b181e192ec901190144183d192eca01190144183d192ecb01190144183d192ecc01190144183d192ecf011901441857192ed60119011104192eda0119011804192edc0119011a04192eea0119013108192eeb0119012d12192ef30119012a1822192f1d0119012509192f1f0119012513192f2401190118181a192f2a011901141822192f3f01184004192f870118620c192fe601186d17192ff00118631419300c01185d0519301901185a1319303c01184d182e1930610118470619307001184618191930d201181d18191930d301181d18191931070118261619312c001907f808193131001907d0182c1931e0001907d3101931f2001907600c19327f001907ba17193280001907ba17193281001907ba171932ab001907a418341932e4001907a6181f1932f00019078e183b19332c001907870d1933fd0019074618181934060019073b0f1934830019071d184619349800190719183e1934a10019070f0f193529001906f8183319353e001906f5183e193547001906e80f19354e0019069e08193552001906a008193577001906b018321935cc0019067a183219363a00190688183719365400190690101936630019067a1833193692001905d817193693001905d8182d193729001905c60819373e001905ca1019374b001905cd10193765001905c1182419378c001905b1181f193790001905af182b193791001905af182b1937ae001905b6182a1937c3001905b118201937ed001905a2081938930019057a183019389f0019057b18361938a90019057b181b1939050019055309193906001905500e19391400190548182d19394b001905400919394c0019053d0e19395a00190535182c19398e0019051d18691939db00190522121939dc00190522121939e400190526184d193a5100190500183d193a5b0019050709193a6e0019050414193a870019049f1823193a9b001904950a193ab100190497184c193b0200190487183f193c0c001903041834193c110019030508193c18001903221827193c1a001903220f193c2100190323182e193c2c0019032313193c490019030e11193c57001903091827193c6d001903131847193c7c001903171832193ca70019031d182d193ced001902881878193cf1001902900c193cf80019028a1826193cfd0019028a181e193d030019028c181b193d0c0019028d1841193d170019028e1855193d47001902941838193d48001902941824193d61001902971843193d6c00190298184d193db0001902a3183d193dba001902a41852193dbd001902a4182e193dce001902d41862193dda001902d811193de0001902d6182d193de6001902d615193df4001902d91851193e00001902dd11193e06001902db182d193e0c001902db15193e30001902ab181d193e48001902b1181d193e60001902b9181d193e8c001902c11844193e8d001902c11830193ea6001902c41850193eb1001902c5185c193ec0001902c61844193ec4001902c61833193ec8001902c7182e193edd001902cb1857193f0c001902e11831193f1b0019029008193f2200190250182f193f2300190250182f193f2700190253185d193f8300190264184c193f84001902641829193f8d0019026510193f9500190274185b193fa1001902751860193fa4001902751835193fb3001902761850193fbf001902771868193fc2001902771835193ffb0019026a1844193ffc0019026a18301940020019026b184f1940450019027c18301940a10019021718561940a2001902170e1940b900190219184f1940c80019021a184f1940da0019021a18321940dd0019021a183f1940de0019021a183f1940e00019021f131940f10019020d18561940f20019020d0e194155001901f3185319415d001901f3184b19415f001901f3184519418f001901ff081942fe001901b502194305001901c504194346001901bc1819194348001901bc1319437300190193183019437f0019019e051955eb0419013b091955ec0419013b0919562204190152183d19562d04190155181919563004190155183719564104190151181d1956530419015b151956540419015b18361956570419015b1837195686041901401019579704190114181d1958ae0418c3041958ca0418bc041959fb0418b108195d3a04189508195dbe04189208195e4504188f081960050418810819631e041866081963240418650819645404185e0819645a0418580819646004185708196466041856081965ae04184f081965b404184e081965ba04184d0819680804183f0819680e04183e08196b8204182c08196ed104182008196ed704181f08197170051832041971710518320419717205183204197173051832041971740518320419717505183204197176051832041971aa051832181aff", "variableNames": "b90cef00675f5f444154554d016a5f5f52454445454d455202695f5f434f4e54455854046f5f5f68656c696f735f5f6572726f72066f5f5f68656c696f735f5f7072696e7408775f5f68656c696f735f5f737472696e675f5f5f5f6164640a705f5f68656c696f735f5f6173736572740c755f5f68656c696f735f5f626f6f6c5f5f5f5f6e6f740e78195f5f68656c696f735f5f6279746561727261795f5f5f5f657110781a5f5f68656c696f735f5f6279746561727261795f5f5f5f6e65711278185f5f68656c696f735f5f696e745f5f5f5f746f5f646174611478185f5f68656c696f735f5f696e745f5f73657269616c697a6516781d5f5f68656c696f735f5f737472696e675f5f656e636f64655f757466381818735f5f68656c696f735f5f626f6f6c5f5f616e64181a765f5f68656c696f735f5f636f6d6d6f6e5f5f666f6c64181c781f5f5f68656c696f735f5f636f6d6d6f6e5f5f756e42446174615f5f73616665181e78215f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f65711820755f5f68656c696f735f5f696e745f5f746f5f686578182278195f5f68656c696f735f5f6279746561727261795f5f73686f77182478215f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f73686f77182678215f5f68656c696f735f5f636f6d6d6f6e5f5f756e4d6170446174615f5f736166651828781f5f5f68656c696f735f5f636f6d6d6f6e5f5f756e49446174615f5f73616665182a78195f5f68656c696f735f5f696e745f5f73686f775f6469676974182c735f5f68656c696f735f5f696e745f5f73686f77182e735f5f68656c696f735f5f7265616c5f5f4f4e451830755f5f68656c696f735f5f7265616c5f5f666c6f6f721832725f5f68656c696f735f5f696e745f5f6162731834735f5f68656c696f735f5f7265616c5f5f6162731836781a5f5f68656c696f735f5f696e745f5f73686f775f7061646465641838745f5f68656c696f735f5f696e745f5f5f5f6d6f64183a78195f5f68656c696f735f5f7265616c5f5f505245434953494f4e183c745f5f68656c696f735f5f7265616c5f5f73686f77183e78265f5f68656c696f735f5f737472696e675f5f70617273655f757466385f636f6e745f627974651840781f5f5f68656c696f735f5f737472696e675f5f69735f76616c69645f75746638184278255f5f68656c696f735f5f6279746561727261795f5f6465636f64655f757466385f736166651844755f5f68656c696f735f5f76616c75655f5f73686f771846781d5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c6473184878255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f30184a781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f31184c78195f5f68656c696f735f5f74786f75747075745f5f76616c7565184e78195f5f68656c696f735f5f7478696e7075745f5f6f7574707574185078185f5f68656c696f735f5f7478696e7075745f5f76616c75651852781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f301854781d5f5f68656c696f735f5f736372697074636f6e746578745f5f64617461185678205f5f68656c696f735f5f736372697074636f6e746578745f5f707572706f7365185878375f5f68656c696f735f5f736372697074636f6e746578745f5f6765745f7370656e64696e675f707572706f73655f6f75747075745f6964185a781c5f5f68656c696f735f5f7478696e7075745f5f6f75747075745f6964185c745f5f68656c696f735f5f74785f5f696e70757473185e781b5f5f68656c696f735f5f736372697074636f6e746578745f5f74781860782a5f5f68656c696f735f5f736372697074636f6e746578745f5f6765745f63757272656e745f696e7075741862725f5f68656c696f735f5f626f6f6c5f5f6f721864781b5f5f68656c696f735f5f737472696e675f5f5f5f746f5f646174611866755f5f68656c696f735f5f76616c75655f5f5a45524f1868745f5f68656c696f735f5f76616c75655f5f6e6577186a78185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f30186c78185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f31186e78185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f321870781e5f5f68656c696f735f5f6279746561727261795f5f5f5f746f5f64617461187278265f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f746f5f64617461187478195f5f68656c696f735f5f6173736574636c6173735f5f6e65771876745f5f68656c696f735f5f696e745f5f5f5f6e65671878735f5f68656c696f735f5f696e745f5f5f5f6571187a745f5f68656c696f735f5f76616c75655f5f676574187c78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f31187e78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f32188078255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f331882781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f341884745f5f68656c696f735f5f74785f5f6d696e746564188678255f5f68656c696f735f5f636f6d6d6f6e5f5f6173736572745f636f6e7374725f696e6465781888765f5f68656c696f735f5f737472696e675f5f5f5f6571188a765f5f68656c696f735f5f636f6d6d6f6e5f5f5f5f6571188c781a5f5f68656c696f735f5f6173736574636c6173735f5f5f5f6571188e745f5f68656c696f735f5f646174615f5f73686f77189078205f5f68656c696f735f5f646174615f5f73686f775f636f6e7374725f646174611892781a5f5f68656c696f735f5f646174615f5f73686f775f6669656c641894781a5f5f68656c696f735f5f646174615f5f73686f775f62646174611896781a5f5f68656c696f735f5f6173736574636c6173735f5f73686f771898775f5f68656c696f735f5f737472696e675f5f5f5f6e6571189a735f5f68656c696f735f5f696e745f5f5f5f6774189c745f5f68656c696f735f5f696e745f5f5f5f6e6571189e745f5f68656c696f735f5f696e745f5f5f5f73756218a0775f5f68656c696f735f5f76616c75655f5f746f5f6d617018a2765f5f68656c696f735f5f737472696e675f5f73686f7718a4745f5f68656c696f735f5f626f6f6c5f5f73686f7718a6755f5f68656c696f735f5f626f6f6c5f5f747261636518a8775f5f68656c696f735f5f7478696e7075745f5f5f5f657118aa781e5f5f68656c696f735f5f6279746561727261795f5f66726f6d5f6461746118ac781b5f5f68656c696f735f5f737472696e675f5f66726f6d5f6461746118ae78185f5f68656c696f735f5f636f6d6d6f6e5f5f6c656e67746818b078195f5f68656c696f735f5f636f6d6d6f6e5f5f6d61705f67657418b278215f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f7461675f657175616c7318b4781b5f5f68656c696f735f5f6f7074696f6e5f5f4e4f4e455f46554e4318b6781b5f5f68656c696f735f5f6f7074696f6e5f5f534f4d455f46554e4318b878235f5f68656c696f735f5f6279746561727261795f5f66726f6d5f646174615f7361666518ba781d5f5f68656c696f735f5f696e745f5f66726f6d5f646174615f7361666518bc755f5f68656c696f735f5f636f6d6d6f6e5f5f616c6c18be781a5f5f68656c696f735f5f636f6d6d6f6e5f5f6964656e7469747918c0781f5f5f68656c696f735f5f6173736574636c6173735f5f5f5f746f5f6461746118c2781f5f5f68656c696f735f5f6173736574636c6173735f5f66726f6d5f6461746118c478195f5f68656c696f735f5f646174615f5f66726f6d5f6461746118c678195f5f68656c696f735f5f626f6f6c5f5f66726f6d5f6461746118c878185f5f68656c696f735f5f696e745f5f66726f6d5f6461746118ca781b5f5f68656c696f735f5f636f6d6d6f6e5f5f73657269616c697a6518cc775f5f68656c696f735f5f74785f5f73657269616c697a6518ce781b5f5f68656c696f735f5f636f6d6d6f6e5f5f66696e645f7361666518d0781f5f5f68656c696f735f5f737472696e675f5f69735f76616c69645f6461746118d278225f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f6461746118d4781f5f5f68656c696f735f5f74786f757470757469645f5f66726f6d5f6461746118d678245f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f636f6e7374725f646174615f3218d8782f5f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f646174615f66697865645f6c656e67746818da781d5f5f68656c696f735f5f747869645f5f69735f76616c69645f6461746118dc781c5f5f68656c696f735f5f696e745f5f69735f76616c69645f6461746118de78235f5f68656c696f735f5f74786f757470757469645f5f69735f76616c69645f6461746118e0781d5f5f68656c696f735f5f646174615f5f69735f76616c69645f6461746118e278205f5f68656c696f735f5f76616c75655f5f636f6e7461696e735f706f6c69637918e478195f5f68656c696f735f5f76616c75655f5f66726f6d5f6d617018e678225f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f6e657118e8781e5f5f68656c696f735f5f76616c75655f5f69735f7a65726f5f696e6e657218ea78185f5f68656c696f735f5f76616c75655f5f69735f7a65726f18ec781b5f5f68656c696f735f5f76616c75655f5f6765745f706f6c69637918ee78225f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d61705f696e7418f0781d5f5f68656c696f735f5f76616c75655f5f6765745f6d61705f6b65797318f2755f5f68656c696f735f5f636f6d6d6f6e5f5f616e7918f478265f5f68656c696f735f5f636f6d6d6f6e5f5f69735f696e5f6279746561727261795f6c69737418f678185f5f68656c696f735f5f636f6d6d6f6e5f5f636f6e63617418f8781f5f5f68656c696f735f5f76616c75655f5f6d657267655f6d61705f6b65797318fa78265f5f68656c696f735f5f76616c75655f5f6164645f6f725f73756274726163745f696e6e657218fc781e5f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d617018fe78205f5f68656c696f735f5f76616c75655f5f6164645f6f725f7375627472616374190100765f5f68656c696f735f5f76616c75655f5f5f5f616464190102755f5f68656c696f735f5f636f6d6d6f6e5f5f6d6170190104781a5f5f68656c696f735f5f76616c75655f5f5f5f746f5f64617461190106765f5f68656c696f735f5f76616c75655f5f76616c7565190108781a5f5f68656c696f735f5f76616c75655f5f66726f6d5f6461746119010a78225f5f68656c696f735f5f636f6d6d6f6e5f5f696e736572745f696e5f736f7274656419010c765f5f68656c696f735f5f636f6d6d6f6e5f5f736f727419010e78265f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f66726f6d5f6461746119011078185f5f68656c696f735f5f636f6d6d6f6e5f5f66696c746572190112781c5f5f68656c696f735f5f636f6d6d6f6e5f5f66696c7465725f6d617019011478195f5f68656c696f735f5f6279746561727261795f5f5f5f6c74190116725f5f68656c696f735f5f696e745f5f6d617819011878215f5f68656c696f735f5f636f6d6d6f6e5f5f736c6963655f62797465617272617919011a781a5f5f68656c696f735f5f6279746561727261795f5f736c69636519011c781c5f5f68656c696f735f5f6279746561727261795f5f626c616b65326219011e781b5f5f68656c696f735f5f6279746561727261795f5f6c656e677468190120781a5f5f68656c696f735f5f6279746561727261795f5f5f5f61646419012278195f5f68656c696f735f5f747869645f5f73657269616c697a65190124781b5f5f68656c696f735f5f74786f757470757469645f5f696e646578190126781b5f5f68656c696f735f5f74786f757470757469645f5f74785f696419012878255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3419012a78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3519012c78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3619012e78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3719013078255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f38190132781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f39190134775f5f68656c696f735f5f74785f5f72656465656d65727319013678275f5f68656c696f735f5f736372697074707572706f73655f5f7370656e64696e675f5f5f5f6973190138781a5f5f68656c696f735f5f74786f757470757469645f5f5f5f657119013a782c5f5f68656c696f735f5f736372697074707572706f73655f5f7370656e64696e675f5f6f75747075745f696419013c78195f5f68656c696f735f5f76616c75655f5f6765745f7361666519013e78225f5f68656c696f735f5f736372697074707572706f73655f5f5f5f746f5f64617461190140745f5f68656c696f735f5f747869645f5f73686f77190142781a5f5f68656c696f735f5f646174615f5f73686f775f6964617461190144781a5f5f68656c696f735f5f74786f757470757469645f5f73686f77190146781f5f5f68656c696f735f5f74786f7574707574646174756d5f5f696e6c696e65190148781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f3219014a78195f5f68656c696f735f5f74786f75747075745f5f646174756d19014c78185f5f68656c696f735f5f7478696e7075745f5f646174756d19014e78185f5f68656c696f735f5f74785f5f7265665f696e70757473190150755f5f68656c696f735f5f74785f5f6f757470757473190152775f5f68656c696f735f5f616464726573735f5f5f5f6571190154781b5f5f68656c696f735f5f74786f75747075745f5f6164647265737319015678205f5f68656c696f735f5f6279746561727261795f5f6465636f64655f75746638190158781b5f5f68656c696f735f5f737472696e675f5f73657269616c697a6519015a781a5f5f68656c696f735f5f7478696e7075745f5f6164647265737319015c765f5f68656c696f735f5f6f7074696f6e5f5f4e4f4e4519015e781d5f5f68656c696f735f5f74786f75747075745f5f66726f6d5f6461746119016078275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f3019016278205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f3119016478205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f30190166781b5f5f68656c696f735f5f7374727563745f5f5f5f746f5f64617461190168765f5f68656c696f735f5f7374727563745f5f5f5f657119016a781e5f5f68656c696f735f5f76616c75655f5f636f6d706172655f696e6e657219016c78185f5f68656c696f735f5f76616c75655f5f636f6d7061726519016e765f5f68656c696f735f5f76616c75655f5f5f5f67657119017078195f5f68656c696f735f5f76616c75655f5f636f6e7461696e73190172781e5f5f68656c696f735f5f74786f75747075745f5f73756d5f76616c756573190174781d5f5f68656c696f735f5f636f6d6d6f6e5f5f66696c7465725f6c697374190176781c5f5f68656c696f735f5f74785f5f66696c7465725f6f757470757473190178781d5f5f68656c696f735f5f616464726573735f5f63726564656e7469616c19017a782a5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f69735f76616c696461746f7219017c781d5f5f68656c696f735f5f76616c696461746f72686173685f5f5f5f657119017e78225f5f68656c696f735f5f76616c696461746f72686173685f5f66726f6d5f64617461190180782d5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f76616c696461746f725f5f68617368190182782d5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f76616c696461746f725f5f6361737419018478205f5f68656c696f735f5f74786f75747075745f5f69735f6c6f636b65645f6279190186781f5f5f68656c696f735f5f74785f5f6f7574707574735f6c6f636b65645f6279190188781d5f5f68656c696f735f5f74785f5f76616c75655f6c6f636b65645f627919018a78225f5f68656c696f735f5f74786f7574707574646174756d5f5f73657269616c697a6519018c78205f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f5f5f697319018e78225f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f6669656c6473190190781f5f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f746167190192781c5f5f68656c696f735f5f7478696e7075745f5f66726f6d5f6461746119019478275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f3119019678275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f3219019878275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f3319019a78205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f3419019c78205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f3319019e78205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f321901a0781b5f5f68656c696f735f5f7374727563745f5f73657269616c697a651901a278215f5f68656c696f735f5f74786f75747075745f5f69735f76616c69645f646174611901a478205f5f68656c696f735f5f7478696e7075745f5f69735f76616c69645f646174611901a6781c5f5f68656c696f735f5f7478696e7075745f5f5f5f746f5f646174611901a8781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f371901aa781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f361901ac781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f351901ae781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f331901b078285f5f68656c696f735f5f636f6d6d6f6e5f5f6d5374727563745f6669656c645f696e7465726e616c1901b2781f5f5f68656c696f735f5f636f6d6d6f6e5f5f6d5374727563745f6669656c641901b478245f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6d5374727563745f6669656c641901b6782a5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f69735f76616c69645f646174611901b878265f5f68656c696f735f5f76616c696461746f72686173685f5f69735f76616c69645f646174611901ba78235f5f68656c696f735f5f7075626b6579686173685f5f69735f76616c69645f646174611901bc782b5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f69735f76616c69645f646174611901be78255f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6c6973745f686561645f646174611901c078245f5f68656c696f735f5f7374616b696e67686173685f5f69735f76616c69645f646174611901c278215f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6c6973745f656d7074791901c4782a5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5f5f69735f76616c69645f646174611901c6783c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5d5f5f69735f76616c69645f646174611901c878205f5f68656c696f735f5f616464726573735f5f69735f76616c69645f646174611901ca781d5f5f68656c696f735f5f76616c696461746f72686173685f5f73686f771901cc78225f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f5f5f65711901ce78225f5f68656c696f735f5f76616c696461746f72686173685f5f5f5f746f5f646174611901d0782b5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f6e65775f76616c696461746f721901d278195f5f68656c696f735f5f626f6f6c5f5f5f5f746f5f646174611901d4782d5f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f646174615f6d61785f6c656e6774681901d678235f5f68656c696f735f5f6173736574636c6173735f5f69735f76616c69645f646174611901d8781d5f5f68656c696f735f5f646174615f5f6d6170646174615f5f5f5f69731901da78225f5f68656c696f735f5f736372697074707572706f73655f5f66726f6d5f646174611901dc64544f444f1901de64524551541901e06562524551541901e2646d6b54761901e478285f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f74786f75747075745d5f5f66696e641901e678635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f6c656e6774681901e878385f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f6c656e6774681901ea78485f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f69735f76616c69645f646174615f696e7465726e616c1901ec783b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f66726f6d5f646174611901ee783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f6765741901f0783f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f66696e645f6b65791901f2756d75737446696e64496e70757452656465656d65721901f478385f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f69735f76616c69645f646174611901f678345f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f66726f6d5f646174611901f8782d5f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f69641901fa782f5f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f747970651901fc78245f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f686561641901fe7066726f6d43697036385772617070657219020078495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f69735f76616c69645f6461746119020278455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f66726f6d5f64617461190204784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f5f5f697319020678585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f646174615f32190208784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f7365656419020a78505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f707572706f736519020c784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f5f5f697319020e78555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f646174615f3219021078545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f5f5f6973190212785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f646174615f3219021478385f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5f5f746f5f64617461190216783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f69735f76616c69645f6461746119021878385f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f66726f6d5f6461746119021a783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f5f5f697319021c78475f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f646174615f3219021e783d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f5f5f6e6577190220783d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f5f5f697319022278485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f646174615f32190224783e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f5f5f6e657719022678425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f5f5f6973190228784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f646174615f3219022a78435f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f5f5f697319022c784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f646174615f3219022e78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f5f5f6973190230784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f3219023278415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f6e616d6519023478425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f5f5f6e657719023678425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f5f5f6973190238784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f646174615f3219023a78485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f5f5f697319023c78535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f646174615f3219023e78495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f5f5f6e657719024078465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f5f5f697319024278515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f646174615f3219024478405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f69735f76616c69645f64617461190246783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f66726f6d5f6461746119024878465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f5f5f697319024a78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f646174615f3219024c78465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f5f5f697319024e78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f646174615f3219025078445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f5f5f6973190252784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f646174615f3219025478435f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f6b657919025678495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f746f6b656e4e616d65190258784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f5f5f697319025a78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f3219025c78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f3219025e78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f69735f76616c69645f6461746119026078415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f66726f6d5f6461746119026278415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f5f5f6973190264784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f646174615f3219026678415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f7365656419026878445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f707572706f736519026a78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f696450726566697819026c78445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f5f5f697319026e784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f646174615f3219027078455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f5f5f697319027278505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f646174615f3219027478455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f7365656419027678485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f707572706f736519027878495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f696450726566697819027a784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f7265706c6163657344677419027c783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f5f5f657119027e78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f69735f76616c69645f6461746119028078415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f66726f6d5f64617461190282784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f5f5f697319028478595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f646174615f32190286784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f7365656419028878515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f707572706f736519028a78505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f5f5f697319028c785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f646174615f3219028e78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f5f5f6973190290785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f646174615f3219029278525f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f5f5f6973190294785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f646174615f3219029678555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f5f5f697319029878605f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174615f3219029a78545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f5f5f697319029c785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174615f3219029e784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f5f5f69731902a078595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f646174615f321902a278525f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f61637469766974791902a4784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f69735f76616c69645f646174611902a6784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f66726f6d5f646174611902a878695f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f321902aa78625f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f5f5f69731902ac786d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f321902ae78665f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f61637469766974791902b078595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f5f5f69731902b278645f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f321902b4785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f61637469766974791902b678585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f5f5f69731902b878635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f321902ba785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f61637469766974791902bc78635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f321902be785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f5f5f69731902c078675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f321902c2785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f5f5f69731902c478675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f321902c6785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f5f5f69731902c878675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f321902ca78615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f5f5f69731902cc78365f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174615f696e7465726e616c1902ce782d5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174611902d0786c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f321902d278295f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f66726f6d5f646174611902d478675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f616374697669746965731902d678415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f52657475726e65645f5f5f5f69731902d878425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f52657475726e65645f5f5f5f6e65771902da78405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f437265617465645f5f5f5f69731902dc78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f437265617465645f5f5f5f6e65771902de78385f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f69735f76616c69645f646174611902e078445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f69735f76616c69645f646174611902e2783b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f5f5f65711902e478405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f66726f6d5f646174611902e678405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f5f5f746f5f646174611902e8783e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f7575744e616d651902ea78345f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f66726f6d5f646174611902ec784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f64656c656761746556616c696461746f72486173681902ee782652656c617469766544656c65676174654c696e6b3a3a7476417574686f72697479546f6b656e1902f0782652656c617469766544656c65676174654c696e6b3a3a6163417574686f72697479546f6b656e1902f2782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f6e6f6e655f5f5f5f69731902f4782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f6e6f6e655f5f5f5f6e65771902f6782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f736f6d655f5f5f5f6e65771902f8782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f736f6d655f5f736f6d651902fa782e52656c617469766544656c65676174654c696e6b3a3a76616c6964617465735570646174656453657474696e67731902fc78355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f6e6f6e655f5f5f5f69731902fe78305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f6e6f6e655f5f5f5f6e6577190300782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f736f6d655f5f5f5f6973190302782c5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f66696e645f7361666519030478355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f736f6d655f5f736f6d65190306782652656c617469766544656c65676174654c696e6b3a3a68617344656c6567617465496e70757419030878355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f736f6d655f5f5f5f697319030a78305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f74786f75747075745d5f5f736f6d655f5f5f5f697319030c782d5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f74786f75747075745d5f5f66696e645f7361666519030e782452656c617469766544656c65676174654c696e6b3a3a68617356616c69644f757470757419031078565f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f6461746119031278455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f69735f76616c69645f6461746119031478415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f66726f6d5f64617461190316783e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f616374696f6e190318783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f726f6c6519031a78525f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f6461746119031c783f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f6467744c696e6b19031e78445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f69735f76616c69645f6461746119032078405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f66726f6d5f64617461190322784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f5f5f697319032478565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f646174615f32190326784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f6368616e676519032878555f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c19032a784c5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5d5f5f69735f76616c69645f6461746119032c785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f646174615f3219032e78405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f69735f76616c69645f64617461190330783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f66726f6d5f6461746119033278365f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f6d706819033478355f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f746e190336782244656c65676174696f6e44657461696c3a3a6163417574686f72697479546f6b656e19033878265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f616e7919033a78395f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f69735f76616c69645f6461746119033c78355f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f66726f6d5f6461746119033e783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f5f5f6973190340784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f646174615f32190342783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f5f5f697319034478495f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f3219034678445f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f706f6c6963794c696e6b19034878425f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f696450726566697819034a78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f726566436f756e7419034c784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f646174615f3219034e784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f646174615f32190350784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f646174615f32190352783c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685d5f5f69735f76616c69645f6461746119035478395f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f69735f76616c69645f6461746119035678355f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f66726f6d5f6461746119035878355f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f656e7472795479706519035a78355f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f746f6b656e4e616d6519035c78385f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685d5f5f66726f6d5f6461746119035e782f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f6d706819036078395f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685d5f5f736f6d655f5f5f5f697319036278315f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f69735f76616c69645f64617461190364782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f66726f6d5f64617461190366785d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c19036878545f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f6461746119036a786d5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c19036c78645f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f6461746119036e78625f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c19037078595f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f69735f76616c69645f64617461190372785d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c19037478545f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f69735f76616c69645f6461746119037678405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f646174615f32190378783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f66726f6d5f6461746119037a783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f5f5f746f5f6461746119037c78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f7370656e6444656c65676174654c696e6b19037e78505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f6461746119038078405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f7370656e64496e76617269616e747319038278605f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f6461746119038478445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6f746865724e616d656444656c65676174657319038678415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d696e7444656c65676174654c696e6b190388783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d696e74496e76617269616e747319038a78415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f676f76417574686f726974794c696e6b19038c78555f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f66726f6d5f6461746119038e78395f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d616e696665737419039078505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f66726f6d5f64617461190392783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f70656e64696e674368616e67657319039478555f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f5f5f746f5f6461746119039678505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f5f5f746f5f6461746119039878445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f646174615f3219039a78375f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f5f5f697319039c78465f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174615f696e7465726e616c19039e783d5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174611903a078425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f646174615f321903a278395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f5f5f746f5f646174611903a4783d5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f69735f76616c69645f646174611903a678395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f66726f6d5f646174611903a878395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f5f5f69731903aa78445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f646174615f321903ac783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f5f5f6e65771903ae783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f5f5f69731903b078495f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f646174615f321903b2783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f646174756d1903b4783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f7574786f1903b6783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f5f5f6e65771903b8783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f5f5f69731903ba78465f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f646174615f321903bc783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f646174756d1903be783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f7574786f1903c0783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f5f5f6e65771903c278345f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f69735f76616c69645f646174611903c478305f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f66726f6d5f646174611903c678425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f5f5f69731903c8784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f646174615f321903ca78465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f61637469766974791903cc783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f5f5f69731903ce78465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f646174615f321903d0783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f5f5f6e65771903d2783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f5f5f69731903d478495f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f646174615f321903d678415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f5f5f69731903d8784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f646174615f321903da78435f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f5f5f69731903dc784e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f646174615f321903de783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f5f5f69731903e078475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f646174615f321903e271676574526566436861727465725574786f1903e470676574547843686172746572446174611903e678315f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f69735f76616c69645f646174611903e878325f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f69735f76616c69645f646174611903ea78315f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f73657269616c697a651903ec782c5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6c696e6b1903ee782c5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f726f6c651903f0782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f66726f6d5f646174611903f278305f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f69645072656669781903f4782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f66726f6d5f646174611903f6782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f696e7075741903f8782b5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6d70681903fa782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f5f5f746f5f646174611903fc782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f5f5f746f5f646174611903fe782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f5f5f6e6577190400782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f756e77726170190402782c44656c6567617465496e7075743a3a67656e6572696344656c65676174654163746976697479417344617461190404782644656c6567617465496e7075743a3a67656e6572696344656c656761746541637469766974791904067544656c6567617465496e7075743a3a6173736572741904087444656c6567617465496e7075743a3a6572726f7219040a78235f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f67657419040c78265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f6c656e67746819040e78265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f66696c746572190410782e44656c6567617465496e7075743a3a77697468556e697175655365656465644d696e74696e674163746976697479190412782b44656c6567617465496e7075743a3a77697468556e6971756544445370656e64696e674163746976697479190414782044656c6567617465496e7075743a3a64656c6567617465556e6368616e6765641904167544656c6567617465496e7075743a3a6f724661696c19041878265f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f5f5f657119041a78255f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6d706819041c78295f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6368617274657219041e78275f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f5f5f6e6577190420781b4361706f4374783a3a6765744368617274657252656465656d657219042278545f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6765745f73616665190424781a4361706f4374783a3a66696e644d616e6966657374456e74727919042678485f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f736f6d655f5f5f5f697319042878485f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f736f6d655f5f736f6d6519042a78485f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6e6f6e655f5f5f5f697319042c78325f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f6e6f6e655f5f5f5f6e657719042e78325f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f736f6d655f5f5f5f6e6577190430781e4361706f4374783a3a66696e644d616e6966657374546f6b656e4e616d65190432764361706f4374783a3a67657453657474696e6773496419043478305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f74786f75747075745d5f5f736f6d655f5f736f6d65190436781d4361706f4374783a3a7265717569726573476f76417574686f7269747919043878535f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f6e6f6e655f5f5f5f697319043a78535f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f736f6d655f5f736f6d6519043c785f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f6765745f7361666519043e782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f736f6d655f5f5f5f6e657719044078224361706f4374783a3a7265717569726573446744617461506f6c696379496e707574190442781b4361706f4374783a3a6e6f77416374696e6741734d696e74446774190444781c4361706f4374783a3a6e6f77416374696e6741735370656e64446774190446774361706f4374783a3a6765744368617274657244617461190448781b4361706f4374783a3a6765744e657874436861727465724461746119044a781b4361706f4374783a3a7265736f6c7665436861727465725574786f19044c782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f6e6f6e655f5f5f5f6e657719044e781e4361706f4374783a3a726571756972657344656c6567617465496e707574190450704361706f4374783a3a6164647265737319045278194361706f4374783a3a64656c65676174656444617461526566190454781d4361706f4374783a3a64656c656761746564446174615478496e70757419045678214361706f4374783a3a6d6b44656c6567617465644461746150726564696361746519045878204361706f4374783a3a6d7573744f757470757444656c6567617465644461746119045a78305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f74786f75747075745d5f5f6e6f6e655f5f5f5f697319045c781a4361706f4374783a3a64656c65676174656454784f757470757419045e754361706f4374783a3a6e656564734368617274657219046078194361706f4374783a3a7769746843686172746572496e707574190462774361706f4374783a3a7769746843686172746572526566190464786b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f666f6c645b5f5f68656c696f735f5f626f6f6c5d19046678285f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f756e77726170190468784f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f616c6c19046a784a5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f616c6c19046c782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f736f6d655f5f5f5f697319046e782a4361706f4374783a3a616c6c44656c65676174657341726556616c69646174696e6753657474696e677319047078254361706f4374783a3a646774526f6c6573466f724c6966656379636c6541637469766974791904726f4361706f4374783a3a6f724661696c190474696d6b4361706f4374781904766b686173536565645574786f190478781a6e6f4f7468657241637469766974696573537570706f7274656419047a782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f646174615d5f5f6e6f6e655f5f5f5f697319047c782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f646174615d5f5f736f6d655f5f736f6d6519047e783f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f6765745f73616665190480781f726571756972657344656c6567617465417574686f72697a696e674d696e741904826e6d6b557574546e466163746f7279190484781b736f7274506f6c69637956616c7565735072656469637461626c79190486783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f666f725f6561636819048878635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f66696c74657219048a78655f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f666f725f6561636819048c782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f696e745d5f5f6e6f6e655f5f5f5f697319048e782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f696e745d5f5f736f6d655f5f736f6d65190490783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f6765745f7361666519049278635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f64656c657465190494783b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f5f5f746f5f6461746119049678365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f5f5f657119049878365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f736f727419049a78255f5f68656c696f735f5f76616c75655f5f73756d5b5f5f68656c696f735f5f76616c75655d19049c78365f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f6d61705b5f5f68656c696f735f5f76616c75655d19049e7276616c69646174655575744d696e74696e671904a0783f5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f69735f76616c69645f646174611904a2783b5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f66726f6d5f646174611904a478505f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f4369703638526566546f6b656e5f5f69735f76616c69645f646174615f321904a678495f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f73657269616c697a651904a878445f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f5f5f69731904aa784f5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f69735f76616c69645f646174615f321904ac78425f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f64641904ae78465f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f5f5f69731904b078515f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f69735f76616c69645f646174615f321904b278415f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f4d696e74696e6741637469766974795b5d5f5f69735f76616c69645f646174611904b478545f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f4d696e74696e6741637469766974795b5d5f5f5f706c616365686f6c646572314d415f5f69735f76616c69645f646174615f311904b678425f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f5370656e64696e6741637469766974795b5d5f5f69735f76616c69645f646174611904b878555f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f5370656e64696e6741637469766974795b5d5f5f5f706c616365686f6c6465723153415f5f69735f76616c69645f646174615f311904ba78415f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f4275726e696e6741637469766974795b5d5f5f69735f76616c69645f646174611904bc78545f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f4275726e696e6741637469766974795b5d5f5f5f706c616365686f6c6465723142415f5f69735f76616c69645f646174615f311904be78395f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5f5f65711904c078425f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f69735f76616c69645f646174611904c2783e5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f66726f6d5f646174611904c478525f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f5f5f69731904c6785d5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f321904c878565f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f61637469766974791904ca78565f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f5f5f69731904cc78615f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f321904ce785a5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f61637469766974791904d0784d5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f5f5f69731904d278585f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f321904d4784c5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f5f5f69731904d678575f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f321904d8784c5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f5f5f69731904da78575f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f321904dc78505f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f5f5f69731904de785b5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f321904e078505f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f736565641904e278545f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f64617461547970651904e478505f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f5f5f69731904e6785b5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f321904e878545f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f64617461547970651904ea78515f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f72656349641904ec78505f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f5f5f69731904ee785b5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f321904f078515f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f72656349641904f278555f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f5f5f69731904f478605f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f321904f6785b5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f616374697669746965731904f8782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f6e6f6e655f5f5f5f69731904fa78285f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f6c656e6774681904fc782b5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f66696e645f736166651904fe782e44656c656761746541637469766974793a3a6164646974696f6e616c44656c656761746556616c69646174696f6e190500782f44656c656761746541637469766974793a3a737570706f727465644361706f44656c6567617465507572706f736573190502782644656c656761746541637469766974793a3a6f74686572446174756d56616c69646174696f6e1905046372657619050668696e7374616e63651905086c64656c65676174654e616d6519050a6e69734d696e7444656c656761746519050c6f69735370656e6444656c656761746519050e6e6973446744617461506f6c696379190510747265717569726573476f76417574686f7269747919051278235f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f616c6c190514784b5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f5f5f6571190516784b5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f7461696c190518784d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f6c656e67746819051a782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6173736574636c6173735d5f5f756e7772617019051c78335f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6173736574636c6173735d5f5f736f6d655f5f5f5f6e657719051e784a5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f616c6c190520784b5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f6865616419052278365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f73686f77190524787d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f666f6c645b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d19052678385f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f64656c657465190528784e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f736f6d655f5f5f5f697319052a784e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f736f6d655f5f736f6d6519052c78655f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f6765745f7361666519052e78e35f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f666f6c64325b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5d19053078525f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6c656e67746819053278505f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6865616419053478505f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f7461696c190536784f5f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f756e7772617019053878525f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f64656c65746519053a78505f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f5f5f657119053c782a5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f756e7772617019053e782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f756e7772617019054070636865636b4f6e654163746976697479190542646d61696e190570636d646419057168616374697669747919058268726573756c745f331905946a5f5f636f6e645f3131311905a06b5f5f6c68735f305f3236311905af636973441905b16464645f321905e6676d794467546b6e1905fe66636374785f3719060071676f76417574686f72697479436865636b190653645f5f3736190655756b61626f6f6d496e76616c696452656465656d65721906576a5f5f636f6e645f3131321906636b5f5f6c68735f305f3236301906716b5f5f6c68735f305f323539190675645f5f373719068378295f5f6d6f64756c655f5f426173696344656c65676174655f5f636865636b4f6e6541637469766974791906846b646774696f6e446174756d1906856a61637469766974795f331906866c5f5f7573656f70745f5f6464190687626464190688725f5f7573656f70745f5f626173654363747819068968626173654363747819068b6464645f3119068d6a62617365436374785f3119069668726573756c745f321906a9781b636865636b4e6f6e44656c656761746564416374697669746965731906f3695f5f636f6e645f35391906ff6b5f5f6c68735f305f3233371907016c616374697669746965735f3219070366636374785f361907056e6d696e74446774436865636b5f311907076f7370656e64446774436865636b5f3119070971646744617461506f6c696379436865636b19073f6d72617741637469766974795f3219074164615f32301907556a5f5f636f6e645f3131301907616b5f5f6c68735f305f3235381907706b5f5f6c68735f305f32353719077f6b5f5f6c68735f305f32353619078e6b5f5f6c68735f305f3235351907a96b5f5f6c68735f305f3235341907c46b5f5f6c68735f305f3235331907e86b5f5f6c68735f305f3235321907f76b5f5f6c68735f305f3235311907fc6b5f5f6c68735f305f32353019083d6d72617741637469766974795f3119083f64615f31391908536a5f5f636f6e645f31303919085f6b5f5f6c68735f305f3234391908916b5f5f6c68735f305f3234381908a06b5f5f6c68735f305f3234371908af6b5f5f6c68735f305f3234361908be6b5f5f6c68735f305f3234351908cd6b5f5f6c68735f305f3234341908d2645f5f37351909136b726177416374697669747919091564615f31381909296a5f5f636f6e645f3130381909356b5f5f6c68735f305f3234331909506b5f5f6c68735f305f32343219096b6b5f5f6c68735f305f32343119097a6b5f5f6c68735f305f3234301909896b5f5f6c68735f305f3233391909986b5f5f6c68735f305f32333819099d645f5f37341909ca6b5f5f6c68735f305f3233311909cc6d696e6e657241637469766974791909ce6a5f5f636f6e645f3130361909da6b5f5f6c68735f305f3233351909dc66736565645f391909de69707572706f73655f391909e0664255524e45441909e2726f746865724d696e74656456616c75655f321909e467746e5374725f33190a0b66636374785f35190a0d7169735570646174696e6743686172746572190a0f6b69734d696e74696e674f6b190a426a5f5f636f6e645f313037190a4e6b5f5f6c68735f305f323336190a51645f5f3733190a836b5f5f6c68735f305f323334190aab6b5f5f6c68735f305f323332190aad6b5f5f6c68735f305f323333190ae26b5f5f6c68735f305f313332190ae46464434c41190af166636374785f34190b026a5f5f636f6e645f313034190b0e6b5f5f6c68735f305f323330190b106463434c41190b2f6b5f5f6c68735f305f323238190b316a5f5f636f6e645f313035190b3d6b5f5f6c68735f305f323239190b42645f5f3732190b49645f5f3731190b536a6e6565646564526f6c65190b556d6d7943757272656e74526f6c65190b5b695f5f636f6e645f3631190b676b5f5f6c68735f305f323234190b6966736565645f38190b6b69707572706f73655f38190b7f646d6b546e190b816a5f5f636f6e645f313032190b8d6b5f5f6c68735f305f323235190be16a5f5f636f6e645f313033190bed6b5f5f6c68735f305f323237190bf26b5f5f6c68735f305f323236190bf4696467744c696e6b5f33190c29645f5f3730190c436b5f5f6c68735f305f313732190c506d63686172746572446174615f34190c5d716f6c6450656e64696e674368616e676573190c5f716e65787443686172746572446174615f32190c616e6e6578744368616e67654c697374190c63696e65774368616e6765190c6c6b5f5f6c68735f305f313733190c6e6b5f5f6c68735f305f305f32190c7066616374696f6e190c7266726f6c655f32190c74684f6467744c696e6b190c766e6e6577446774526f6c654e616d65190c7c6a5f5f636f6e645f313030190c886b5f5f6c68735f305f323232190c916a5f5f636f6e645f313031190c9d6b5f5f6c68735f305f323233190cad645f5f3639190cb4645f5f3638190cd8695f5f636f6e645f3939190ce46b5f5f6c68735f305f323231190cf36b5f5f6c68735f305f323230190cf566736565645f37190cf769707572706f73655f37190cf96a69645072656669785f39190cfa6b63616c6c6261636b5f3134190d0c6b5f5f6c68735f305f323139190d0e66736565645f36190d1069707572706f73655f36190d126a69645072656669785f38190d136b63616c6c6261636b5f3133190d2666736565645f35190d2769707572706f73655f35190d287570656e64696e67416374696f6e4964507265666978190d2a781c706f737369626c654d696e74446774566572696669636174696f6e73190d2c781a6f74686572506f737369626c65566572696669636174696f6e73190d55695f5f636f6e645f3838190d616b5f5f6c68735f305f323138190d786b5f5f6c68735f305f313932190d856f69734e6f74414475706c6963617465190d94766578697374696e67526f6c65456e7472794d61796265190d96781c706f737369626c655265706c6163656d656e744973436f7272656374190da5695f5f636f6e645f3931190db16b5f5f6c68735f305f323136190dc2695f5f636f6e645f3938190dce6b5f5f6c68735f305f323137190dd7645f5f3637190de76b5f5f6c68735f305f313937190de96b7265706c61636573446774190e05695f5f636f6e645f3937190e116b5f5f6c68735f305f323135190e206b5f5f6c68735f305f323134190e2f6b5f5f6c68735f305f323133190e34645f5f3636190e46716578697374696e674467744c696e6b5f31190e536d6578697374696e674467546b6e190e6e695f5f636f6e645f3936190e7a6b5f5f6c68735f305f323132190e876b5f5f6c68735f305f323131190e946b5f5f6c68735f305f323130190ea16b5f5f6c68735f305f323039190ea4645f5f3635190eaf695f5f636f6e645f3935190ebb6b5f5f6c68735f305f323038190ed26b5f5f6c68735f305f323037190ee96b5f5f6c68735f305f323036190f096b5f5f6c68735f305f323035190f186b5f5f6c68735f305f323034190f276b5f5f6c68735f305f323033190f366b5f5f6c68735f305f323032190f3b6b5f5f6c68735f305f323031190f42695f5f636f6e645f3933190f4e6b5f5f6c68735f305f323030190f576b5f5f6c68735f305f313938190f596b5f5f6c68735f305f305f34190f5b6b656e747279547970655f32190f5d695f5f636f6e645f3934190f696b5f5f6c68735f305f313939190f6b6f6578697374696e674467744c696e6b190f71645f5f3634190f8b6b5f5f6c68735f305f313935190f9c695f5f636f6e645f3932190fa86b5f5f6c68735f305f313936190fb1645f5f3633190fc76a70644368616e67655f32190fc9695f5f636f6e645f3839190fd56b5f5f6c68735f305f313933190fd76b5f5f6c68735f305f305f33190fd96b70656e64696e67526f6c65190fdb695f5f636f6e645f3930190fe76b5f5f6c68735f305f313934190fe96f6368616e67696e674467744e616d65190ff3645f5f3632191000645f5f3631191007645f5f363019100e695f5f636f6e645f383119101a6b5f5f6c68735f305f3139311910276b5f5f6c68735f305f313735191035695f5f636f6e645f38321910416b5f5f6c68735f305f313833191047695f5f636f6e645f38371910536b5f5f6c68735f305f3139301910626b5f5f6c68735f305f3138391910716b5f5f6c68735f305f3138381910806b5f5f6c68735f305f31383719108f6b5f5f6c68735f305f3138361910a06b5f5f6c68735f305f3138351910b16b5f5f6c68735f305f3138341910b6645f5f35391910d7645f5f35361910f66d6d6b546f6b656e4e616d655f321910f8696467546b6e4e616d651910fa6b6d696e7465644467546b6e191107696467744c696e6b5f321911267664656c656761746554616b65734f776e657273686970191128781d706f737369626c6545787472615265706c6163656d656e74436865636b191137695f5f636f6e645f38341911436b5f5f6c68735f305f31373819115b695f5f636f6e645f38351911676b5f5f6c68735f305f3138301911696364646519116b6b5f5f6c68735f305f31383119116d6b656e747279547970655f3119116f695f5f636f6e645f383619117b6b5f5f6c68735f305f31383219117d6a69645072656669785f371911ac645f5f35381911c26b5f5f6c68735f305f3137391911d4645f5f35371911ef695f5f636f6e645f38331911fb6b5f5f6c68735f305f3137371912006b5f5f6c68735f305f31373619120262646c19124a645f5f3535191251695f5f636f6e645f383019125d6b5f5f6c68735f305f31373419125f676467744e616d65191265645f5f35341912a06b5f5f6c68735f305f3137311912c86b5f5f6c68735f305f3134381912e07270656e64696e674368616e6765734c6973741912e27070726576696f75734d616e69666573741912e4716e65787443686172746572446174615f311912e66c6e6578744d616e69666573741913056d7370656e64446774436865636b1913076c6d696e74446774436865636b191365646d696e741913676e6d696e7454686973506f6c696379191369636c656e191398716f62736572766564546f6b656e4275726e19139a6d72656d61696e696e674d696e741913cd6b666f6c64696e674275726e1913ce6a70634368616e67655f311913db6a70644368616e67655f311913dd695f5f636f6e645f37351913e96b5f5f6c68735f305f3136331913eb6a747970654e616d655f341913f8695f5f636f6e645f37361914046b5f5f6c68735f305f313730191407645f5f3532191414695f5f636f6e645f37371914206b5f5f6c68735f305f3136391914296b5f5f6c68735f305f31363419142b6b5f5f6c68735f305f305f3119142d694d455f747970655f3119142f64746e5f35191431666d70685f3330191433695f5f636f6e645f373819143f6b5f5f6c68735f305f313638191449645f5f35331914566b5f5f6c68735f305f3136351914586a726566436f756e745f3119145a67746e5374725f3219145c695f5f636f6e645f37391914686b5f5f6c68735f305f3136371914716b5f5f6c68735f305f3136361914736c6275726e696e67436f756e741914ea645f5f35311914f3695f5f636f6e645f37341914ff6b5f5f6c68735f305f3136321915016b6467744368616e67655f311915076b5f5f6c68735f305f31363119150f695f5f636f6e645f373319151b6b5f5f6c68735f305f31363019151d666d696e7465641915236b5f5f6c68735f305f31353919157377707265764d616e696665737452656d61696e6465725f31191574686e657874434d45731915756870634368616e67651915776870644368616e67651915796f70656e64696e67547970654e616d6519157f695f5f636f6e645f363919158b6b5f5f6c68735f305f313537191598695f5f636f6e645f37321915a46b5f5f6c68735f305f3135381915ad645f5f35301915b6645f5f34371915df67434d455f6b65791915e0675f5f6c68735f311915e2674d455f747970651915ef6b5f5f6c68735f305f3135331915f16d4d455f706f6c6963794c696e6b1915f36b4d455f69645072656669781915f568726566436f756e74191618674d455f6e616d651916256b70656e64696e674c696e6b1916276b70656e64696e674e616d651916416c6e6578744964507265666978191657695f5f636f6e645f37301916636b5f5f6c68735f305f3135351916656a69645072656669785f36191676695f5f636f6e645f37311916826b5f5f6c68735f305f31353619168b645f5f34391916a46b5f5f6c68735f305f3135341916a66a69645072656669785f351916ac645f5f34381916dc695f5f636f6e645f36381916e86b5f5f6c68735f305f3135321916e96b63616c6c6261636b5f31321916f2645f5f34361916f36b63616c6c6261636b5f3131191704695f5f636f6e645f36371917106b5f5f6c68735f305f3135311917126a747970654e616d655f3319171f645f5f3435191728695f5f636f6e645f36361917346b5f5f6c68735f305f313530191736696467744368616e676519173c6b5f5f6c68735f305f31343919174475707265764d616e696665737452656d61696e646572191745756e6578744d616e696665737452656d61696e64657219176d6b5f5f6c68735f305f31333919176f706d616e69666573744163746976697479191780695f5f636f6e645f363219178c6b5f5f6c68735f305f3134371917be6b5f5f6c68735f305f3134361917e16b5f5f6c68735f305f3134311917e3666b65795f33311917e56b746f6b656e4e616d655f341917e76d63686172746572446174615f331917e96f6e65787443686172746572446174611917f668726566496e707574191823695f5f636f6e645f363319182f6b5f5f6c68735f305f3134351918386b5f5f6c68735f305f31343219183a695f5f6c68735f305f3019183c69656e7472795479706519183e64746e5f34191840666d70685f3239191869695f5f636f6e645f36351918756b5f5f6c68735f305f31343419187a645f5f343419187f695f5f636f6e645f363419188b6b5f5f6c68735f305f313433191890645f5f34331918fb6b5f5f6c68735f305f31343019194a645f5f343219195d6b5f5f6c68735f305f31333819196d6b5f5f6c68735f305f313337191994695f5f636f6e645f36301919a06b5f5f6c68735f305f3133361919af6b5f5f6c68735f305f3133351919df6b5f5f6c68735f305f313334191a0f6b5f5f6c68735f305f313333191a4b645f5f3431191a716b5f5f6c68735f305f313331191a7366736565645f34191a756f6444617461547970654e616d655f31191a8766636374785f33191ab073706f6c69637944656c6567617465496e707574191ab269746e466163746f7279191ab469707572706f73655f34191ab66b6e65774461746149645f31191b4d6b5f5f6c68735f305f313330191b4f6d6444617461547970654e616d65191b516772656349645f37191b6366636374785f32191bb567696e7075744444191bd46d63757253657474696e67734964191c0e6a72656349645374725f34191c107063757253657474696e67734964537472191c716b5f5f6c68735f305f313238191c736772656349645f36191c8566636374785f31191ccf6b5f5f6c68735f305f313239191d0e6b5f5f6c68735f305f313237191d1b6b5f5f6c68735f305f313236191d1e6b5f5f6c68735f305f313235191d466873656c665f323634191d4d6873656c665f323633191d546873656c665f323632191d55676f746865725f36191d5f6873656c665f323630191d60666b65795f3239191d62666b65795f3330191d646b726563757273655f313031191d6a6b726563757273655f313030191d6b6873656c665f323631191d7868686561645f313133191d7a667461696c5f36191da66873656c665f323539191daf6873656c665f323538191db168686561645f313132191db26b63616c6c6261636b5f3130191dc86873656c665f323537191dcc6873656c665f323536191dcd65666e5f3333191dce6461305f31191dcf6462305f31191dd566707265765f35191dd6676974656d5f3138191dd964615f3137191dda64625f3136191de86a63616c6c6261636b5f39191dee6873656c665f323535191def666b65795f3238191df964785f3132191e076873656c665f323534191e0d68646174615f333130191e136873656c665f323532191e14666b65795f3236191e16666b65795f3237191e186a726563757273655f3939191e1e6a726563757273655f3938191e1f6873656c665f323533191e2c68686561645f313131191e2e667461696c5f35191e5a6873656c665f323531191e5b65666e5f3332191e5c626130191e6266707265765f34191e63676974656d5f3137191e706873656c665f323439191e736a726563757273655f3937191e836a726563757273655f3936191e846873656c665f323530191e85656669727374191e9d68686561645f313130191e9f686b65795f64617461191ea1666b65795f3234191ea36a76616c75655f64617461191ea56776616c75655f36191eb16776616c69645f37191eb2666b65795f3235191ec76776616c69645f36191ec86776616c75655f37191ef86873656c665f323438191f036873656c665f323437191f0465666e5f3331191f09676974656d5f3136191f1366736f6d655f34191f1d6873656c665f323436191f276873656c665f323435191f28676f746865725f35191f326873656c665f323434191f3365666e5f3330191f38676974656d5f3135191f516873656c665f323433191f52695f7072696f724d6464191f546e6e65766572547269676765726564191f56695f5f636f6e645f3538191f626b5f5f6c68735f305f313234191f706b5f5f6c68735f305f313233191f74645f5f3430191f7c6873656c665f323432191f9478525f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f737570706f727465644361706f44656c6567617465507572706f736573191f956873656c665f323431191f96697072696f724d646464191f976463637478191f99666d70685f3238191f9f695f5f636f6e645f3535191fab6b5f5f6c68735f305f313232191fb86b5f5f6c68735f305f313138191fba63434c41191fbc695f5f636f6e645f3536191fc86b5f5f6c68735f305f313139191fca66736565645f33191fcc69707572706f73655f33191fce695f5f636f6e645f3537191fda6b5f5f6c68735f305f313231191ffb6b5f5f6c68735f305f31323019202e63705f3119203b645f5f33391920586b5f5f6c68735f305f3131371920766b5f5f6c68735f305f31313619208a6b5f5f6c68735f305f31313519209e6b5f5f6c68735f305f3131341920a8645f5f33381920c66873656c665f3234301920c765666e5f32391920cd676974656d5f31341920d568646174615f3330391920db6873656c665f3233391920e168646174615f3330371920ee67706169725f383719210068646174615f3330381921116a6669656c64735f31383619211e68686561645f31303919212a6a6669656c64735f31383719215968646174615f33303619215f6873656c665f32333819216568646174615f33303419217267706169725f383619218468646174615f3330351921956a6669656c64735f3138331921a268686561645f3130371921ae6a6669656c64735f3138341921bb68686561645f3130381921c76a6669656c64735f31383519220068646174615f3330331922066873656c665f32333719220c6873656c665f32333619221268646174615f33303119221f67706169725f383519223168646174615f3330321922426a6669656c64735f31383019224f68686561645f31303519225b6a6669656c64735f31383119226868686561645f3130361922746a6669656c64735f3138321922ad68646174615f3330301922b36873656c665f3233351922b96873656c665f3233341922bf68646174615f3239381922cc67706169725f38341922de68646174615f3239391922ef6a6669656c64735f3137371922fc68686561645f3130331923086a6669656c64735f31373819231568686561645f3130341923216a6669656c64735f31373919235a68646174615f32393719236068646174615f32393519236d67706169725f383319237f68646174615f3239361923906a6669656c64735f31373519239d68686561645f3130321923ab6a6669656c64735f3137361923da68646174615f3239341923e068646174615f3239321923ed67706169725f38321923ff68646174615f3239331924106a6669656c64735f31373319241d68686561645f31303119242b6a6669656c64735f31373419245a68646174615f32393119246068646174615f32383919246d67706169725f383119247f68646174615f3239301924906a6669656c64735f31373119249d68686561645f3130301924ab6a6669656c64735f3137321924da68646174615f3238381924e06873656c665f3233331924ec68646174615f3238361924f967706169725f383019250b68646174615f32383719251c6a6669656c64735f31363919252967686561645f393919253b6a6669656c64735f31373019256a68646174615f3238351925706873656c665f32333219258468646174615f32383319259167706169725f37391925a368646174615f3238341925b46a6669656c64735f3136371925c167686561645f39381925db6a6669656c64735f31363819260a68646174615f323832192610785d5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f3119261178615f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f3119261278585f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f3119261378575f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f3119261478575f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f31192615785b5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f31192616785b5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f31192617785b5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3119261878605f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f3119261968646174615f32383119261b6969676e6f72655f3138192641785b5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f64617461192642785f5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f6461746119264378565f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f6461746119264478555f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f6461746119264578555f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f6461746119264678595f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f6461746119264778595f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f6461746119264878595f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f64617461192649785e5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f6461746119264a68646174615f3238301926b968646174615f3237381926c667706169725f37381926d868646174615f3237391926e96a6669656c64735f3136351926f667686561645f39371927026a6669656c64735f31363619273178525f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f4275726e696e6741637469766974795b5d5f5f5f706c616365686f6c6465723142415f5f69735f76616c69645f6461746119273268646174615f32373719274068646174615f32373519274d67706169725f373719275f68646174615f3237361927706a6669656c64735f31363319277d67686561645f39361927896a6669656c64735f3136341927b878535f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f5370656e64696e6741637469766974795b5d5f5f5f706c616365686f6c6465723153415f5f69735f76616c69645f646174611927b968646174615f3237341927c768646174615f3237321927d467706169725f37361927e668646174615f3237331927f76a6669656c64735f31363119280467686561645f39351928106a6669656c64735f31363219283f78525f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f4d696e74696e6741637469766974795b5d5f5f5f706c616365686f6c646572314d415f5f69735f76616c69645f6461746119284068646174615f32373119284e68646174615f32363919285b67706169725f373519286d68646174615f32373019287e6a6669656c64735f31353719288b67686561645f39321928976a6669656c64735f3135381928a467686561645f39331928b06a6669656c64735f3135391928bd67686561645f39341928c96a6669656c64735f31363019290c68646174615f3236381929126873656c665f32333119291868646174615f32363619292567706169725f373419293768646174615f3236371929486a6669656c64735f31353519295567686561645f39311929616a6669656c64735f31353619299068646174615f32363519299768646174615f3236331929a467706169725f37331929b668646174615f3236341929c76a6669656c64735f3135311929d467686561645f38381929e06a6669656c64735f3135321929ed67686561645f38391929f96a6669656c64735f313533192a0667686561645f3930192a126a6669656c64735f313534192a5578505f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f4369703638526566546f6b656e5f5f69735f76616c69645f646174615f31192a56784f5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f69735f76616c69645f646174615f31192a5778515f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f69735f76616c69645f646174615f31192a5868646174615f323632192a5a6969676e6f72655f3137192a74784e5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f4369703638526566546f6b656e5f5f69735f76616c69645f64617461192a75784d5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f69735f76616c69645f64617461192a76784f5f5f6d6f64756c655f5f556e7370656369616c697a656444656c65676174655f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f69735f76616c69645f64617461192a7768646174615f323631192a9d666d70685f3237192a9e66736565645f32192a9f68707572706f736573192aa0755f5f7573656f70745f5f6d6b546f6b656e4e616d65192aa16b6d6b546f6b656e4e616d65192aa2781a5f5f7573656f70745f5f626f6f74737472617043686172746572192aa370626f6f74737472617043686172746572192aa4781a5f5f7573656f70745f5f6f746865724d696e74656456616c7565192aa5706f746865724d696e74656456616c7565192aa678235f5f7573656f70745f5f6e656564734d696e7444656c6567617465417070726f76616c192aa778196e656564734d696e7444656c6567617465417070726f76616c192aa8782a5f5f7573656f70745f5f65787472614d696e7444656c656761746552656465656d6572436865636b5f31192aa9782065787472614d696e7444656c656761746552656465656d6572436865636b5f32192aaa78205f5f7573656f70745f5f636865636b4d696e7444677441637469766974795f31192aab76636865636b4d696e7444677441637469766974795f32192aad6d6d6b546f6b656e4e616d655f31192aaf72626f6f747374726170436861727465725f31192ab1726f746865724d696e74656456616c75655f31192ab3781b6e656564734d696e7444656c6567617465417070726f76616c5f31192ab5782065787472614d696e7444656c656761746552656465656d6572436865636b5f33192ab776636865636b4d696e7444677441637469766974795f33192ab96f6973426f6f74737472617070696e67192abb7064656c6567617465417070726f76616c192abd6b76616c75654d696e746564192abf6d657870656374656456616c7565192ad3666d7068537472192ad56676616c537472192b0274657870656374656456616c756573536f72746564192b0b64746e5f33192b0c64695f3132192b0e67746e5374725f31192b267461637475616c54686973506f6c6963794d696e74192b28781a61637475616c54686973506f6c6963794d696e74536f72746564192b3d64746e5f32192b3e64695f3131192b4065746e537472192b6d64625f3135192b6e645f5f3337192b867074686973506f6c6963794d696e744f4b192bac736f74686572506f6c69636965734d696e744f6b192beb7572656d61696e696e6745787065637465644d696e74192c38686f746865724d7068192c3978186578706563746564546f6b656e7354686973506f6c696379192c3b706d696e74656454686973506f6c696379192c406b746f6b656e4e616d655f33192c416d6578706563746564436f756e74192c4b695f5f636f6e645f3534192c576b5f5f6c68735f305f313133192c5a6b5f5f6c68735f305f313132192c5c6b61637475616c436f756e74192c6d68746e537472696e67192cce69707572706f73655f32192cf06b5f5f6c68735f305f313131192cf2676d696e74446774192d646873656c665f323330192d6565666e5f3238192d6b676974656d5f3133192d766873656c665f323239192d786a726563757273655f3935192d7e6a726563757273655f3934192d7f666c73745f3234192d9e6873656c665f323238192d9f66636f6d705f34192da464615f3136192da564625f3134192dc76873656c665f323237192dc8676f746865725f34192dd36873656c665f323235192dd4666b65795f3232192dd6666b65795f3233192dd86a726563757273655f3933192dde6a726563757273655f3932192ddf6873656c665f323236192dec67686561645f3837192dee667461696c5f34192e1a6873656c665f323234192e1b666b65795f3231192e2564785f3131192e336873656c665f323233192e3968646174615f323630192e3f6873656c665f323232192e4065666e5f3237192e426a726563757273655f3931192e486a726563757273655f3930192e49666d61705f3332192e5667686561645f3836192e786873656c665f323231192e7965666e5f3236192e7e67706169725f3732192e906873656c665f323230192e9165666e5f3235192e936a726563757273655f3839192e996a726563757273655f3838192e9a666d61705f3331192ea767686561645f3835192ec9626b31192eca635f7631192ecb626b31192ecc635f7631192ed266736565645f31192ed4687365656454784964192ed66773656564496478192ed8686964784279746573192eda6772617754784964192edc6774786f496e666f192ede686d696e6948617368192ee0636d6873192ee16170192f346c64656c65676174654c696e6b192f35666d70685f3236192f3678285f5f7573656f70745f5f65787472614d696e7444656c656761746552656465656d6572436865636b192f37781e65787472614d696e7444656c656761746552656465656d6572436865636b192f38781e5f5f7573656f70745f5f636865636b4d696e744467744163746976697479192f3974636865636b4d696e744467744163746976697479192f3b782065787472614d696e7444656c656761746552656465656d6572436865636b5f31192f3d76636865636b4d696e7444677441637469766974795f31192f3f67617574687a4163192f596a74617267657449645f31192f62727370656e6473417574686f72697479557574192f6463657272192f6678216d61796265436865636b65644d696e7444656c6567617465417574686f72697479192f687464656c6567617465446964417574686f72697a65192f72695f5f636f6e645f3531192f7e6b5f5f6c68735f305f313130192f836b5f5f6c68735f305f313035192f8564785f3130192f876a61637469766974795f32192f89695f5f636f6e645f3532192f956b5f5f6c68735f305f313036192f9763444c41192fbc695f5f636f6e645f3533192fc86b5f5f6c68735f305f313039192fdc6b5f5f6c68735f305f313038192fe16b5f5f6c68735f305f313037192feb645f5f333619302269707572706f73655f31193024695f5f636f6e645f35301930306473705f31193039645f5f333519303e695f5f636f6e645f343919304a6b5f5f6c68735f305f31303419304c63785f391930546b5f5f6c68735f305f31303319306564695f313019308c6873656c665f32313919308d666b65795f323019309763785f381930a56873656c665f3231381930ab68646174615f3235391930b1645f5f33341930d26274781930d368736565645574786f1930f167696e7075745f34193123666d70685f323519312a6873656c665f32313719312d6b5f5f6c68735f305f3130321931306873656c665f3231361931316a61637469766974795f31193146695f5f636f6e645f34381931526b5f5f6c68735f305f3130311931616b5f5f6c68735f305f3130301931706a5f5f6c68735f305f39391931896a5f5f6c68735f305f39381931a26a5f5f6c68735f305f39371931bb6a5f5f6c68735f305f39361931ca6a5f5f6c68735f305f39351931e16873656c665f3231351931e46d63686172746572446174615f321931e6666d70685f32341931e86a5f5f6c68735f305f39311931ea6f7370656e64496e76617269616e74731931ec736f746865724e616d656444656c6567617465731931ee6e6d696e74496e76617269616e74731931f06b676f7644656c65676174651931f2686d616e69666573741931f468696e707574735f3219320178197370656e6444656c6567617465497356616c69646174696e67193219781a676f7644656c65676174654d6179626556616c69646174696e6719321b71636865636b4f6e65496e76617269616e74193228781c7370656e64496e76617269616e747341726556616c69646174696e67193235781b6d696e74496e76617269616e747341726556616c69646174696e67193242781b646744617461506f6c696369657341726556616c69646174696e6719324f781b6e616d656444656c65676174657341726556616c69646174696e6719327f626f6b193280666b65795f3139193281636467741932af666b65795f31381932b067656e7472795f311932b2695f5f636f6e645f34371932be6a5f5f6c68735f305f39341932c06c706f6c6963794c696e6b5f311932d5645f5f33331932f0666f6e6544677419330d695f5f636f6e645f34361933196a5f5f6c68735f305f393319331c6a5f5f6c68735f305f393219335a68646174615f3235381933606873656c665f32313419336165666e5f3234193366676974656d5f313219336c6873656c665f32313319336d65666e5f323219336f65666e5f323319337567706169725f37311933876873656c665f32313219338e6873656c665f32313119338f65666e5f3231193390637a5f32193396637a5f3319339767706169725f37301933ac6873656c665f3231301933af69636861727465725f331933b1695f5f636f6e645f34351933bd6a5f5f6c68735f305f39301933d16a5f5f6c68735f305f38391933d66a5f5f6c68735f305f38371933d86a5f5f6c68735f305f38381933da666d70685f32331933e7667574786f5f351933e967646174756d5f3619340a6873656c665f32303919340d69636861727465725f3219340f695f5f636f6e645f343319341b6a5f5f6c68735f305f383619342f6a5f5f6c68735f305f38351934346a5f5f6c68735f305f38311934366a5f5f6c68735f305f3832193438666d70685f32321934456b6368617274657241635f341934476c686173436861727465725f331934506d636861727465725574786f5f3319345267646174756d5f35193468695f5f636f6e645f34341934746a5f5f6c68735f305f38341934766463685f3319347c6a5f5f6c68735f305f3833193488667478696e5f361934a578325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f7769746843686172746572496e7075741934a66873656c665f3230381934a969636861727465725f311934ab695f5f636f6e645f34311934b76a5f5f6c68735f305f38301934cb6a5f5f6c68735f305f37391934d56a5f5f6c68735f305f37351934d76a5f5f6c68735f305f37361934d9666d70685f32311934e66b6368617274657241635f331934e86c686173436861727465725f321934ea695f5f636f6e645f34321934f66a5f5f6c68735f305f37381935036a5f5f6c68735f305f37371935056d636861727465725574786f5f3219350e67646174756d5f3419352e667478696e5f3519354b6873656c665f32303719354c6772656349645f3519354e6a72656349645374725f331935506461635f321935526a6361706f416464725f32193554695f5f636f6e645f34301935606a5f5f6c68735f305f37341935696a5f5f6c68735f305f373319356b6774786f75745f311935826574786f75741935b768646174615f3235371935bd78335f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f64656c65676174656454784f75747075741935be6873656c665f3230361935bf696e65774461746149641935c06f6461746154797065507572706f73651935cd666467446174611935cf676467446174756d1935dc695f5f636f6e645f33391935e86a5f5f6c68735f305f37321935ea68646174615f3235361935ec6a72656349645374725f321936076b61637475616c4964537472193653645f5f333219366b6873656c665f32303519366c725f5f7573656f70745f5f747970654e616d6519366d6a747970654e616d655f3119366e6c5f5f7573656f70745f5f696419366f6469645f311936716a747970654e616d655f321936736469645f321936756a6361706f416464725f31193694667478696e5f341936a468646174615f3235351936a6695f5f636f6e645f33381936b26a5f5f6c68735f305f37311936b463785f371936e8645f5f3331193717783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6d6b44656c656761746564446174615072656469636174655f311937186873656c665f323034193719715f5f7573656f70745f5f72656349645f3119371a6772656349645f3319371b765f5f7573656f70745f5f726563496442797465735f3119371c6c726563496442797465735f3219371e6772656349645f341937206c726563496442797465735f331937226768617344445f311937246a72656349645374725f31193731695f5f636f6e645f333719373d6a5f5f6c68735f305f37301937426a5f5f6c68735f305f3639193744667478696e5f33193780783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6d6b44656c656761746564446174615072656469636174651937816873656c665f3230331937826f5f5f7573656f70745f5f72656349641937836772656349645f31193784745f5f7573656f70745f5f726563496442797465731937856a726563496442797465731937876772656349645f321937896c726563496442797465735f3119378b65686173444419378d68726563496453747219379a695f5f636f6e645f33361937a66a5f5f6c68735f305f36381937ab6a5f5f6c68735f305f36371937ad667478696e5f321937e96873656c665f3230321937ec64616464721937f46873656c665f3230311937f5696467744c696e6b5f311937f666726f6c655f311937f7745f5f7573656f70745f5f72657175697265645f371937f86b72657175697265645f31341937f9725f5f7573656f70745f5f69645072656669781937fa6a69645072656669785f331937fc6b72657175697265645f31351937fe6a69645072656669785f341938336873656c665f323030193836695f5f636f6e645f33351938426a5f5f6c68735f305f3636193844667574786f5f341938546a5f5f6c68735f305f3635193856667574786f5f3319385c645f5f333019386478345f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f7265736f6c7665436861727465725574786f19386578295f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f616464726573731938666873656c665f3139391938696b6368617274657241635f3219386b686361706f4164647219386d695f5f636f6e645f33341938796a5f5f6c68735f305f363419387b6d63686172746572446174615f311938926374786f1938ac645f5f32391938c26873656c665f3139381938c5695f5f636f6e645f33331938d16a5f5f6c68735f305f36331938d367646174756d5f331938e36a5f5f6c68735f305f36321938e567646174756d5f321938eb645f5f32381938f378325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f361938f46873656c665f3139371938f5745f5f7573656f70745f5f72657175697265645f361938f66b72657175697265645f31321938f86b72657175697265645f31331938fa67696e7075745f331938fc6a61635370656e644467741938fe6f69735573696e675370656e6444677419393978325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f3519393a6873656c665f31393619393b745f5f7573656f70745f5f72657175697265645f3519393c6b72657175697265645f313019393e6b72657175697265645f313119394067696e7075745f321939426961634d696e744467741939446e69735573696e674d696e7444677419397f78325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f3419398078375f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f726571756972657344656c6567617465496e7075741939816873656c665f31393519398268747970654e616d65193983745f5f7573656f70745f5f72657175697265645f341939846a72657175697265645f381939866a72657175697265645f39193993695f5f636f6e645f333119399f6a5f5f6c68735f305f36311939ac6a5f5f6c68735f305f35391939ae65656e7472791939b1695f5f636f6e645f33321939bd6a5f5f6c68735f305f36301939bf6a706f6c6963794c696e6b1939c16a69645072656669785f321939c26a63616c6c6261636b5f381939cf645f5f32371939db676467744c696e6b1939dc6a69645072656669785f31193a1866736f6d655f33193a226873656c665f313934193a23666b65795f3137193a2d63785f36193a3b6873656c665f313933193a4168646174615f323534193a4778325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f33193a486873656c665f313932193a726873656c665f313931193a7878325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f32193a796873656c665f313930193a7a745f5f7573656f70745f5f72657175697265645f33193a7b6a72657175697265645f36193a7d6a72657175697265645f37193a9478325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f31193a956873656c665f313839193a96666b65795f3136193a97745f5f7573656f70745f5f72657175697265645f32193a986a72657175697265645f34193a9a6a72657175697265645f35193a9c626f65193a9e695f5f636f6e645f3330193aaa6a5f5f6c68735f305f3538193abd6a5f5f6c68735f305f3537193abf63655f31193adc66736f6d655f32193ae868646174615f323533193aee6873656c665f313838193af468646174615f323532193afa78305f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6765744368617274657244617461193afb6873656c665f313837193afc666b65795f3135193b096b6368617274657244617461193b196873656c665f313836193b1a666b65795f3134193b2463785f35193b326873656c665f313835193b356165193b37695f5f636f6e645f3238193b436a5f5f6c68735f305f3536193b526a5f5f6c68735f305f3535193b576a5f5f6c68735f305f3438193b59667574786f5f32193b5b686163746976697479193b5d6d77726f6e674163746976697479193b5f695f5f636f6e645f3239193b6b6a5f5f6c68735f305f3534193b796a5f5f6c68735f305f3533193b876a5f5f6c68735f305f3532193b946a5f5f6c68735f305f3531193ba16a5f5f6c68735f305f3530193ba46a5f5f6c68735f305f3439193bd2666d70685f3230193bd36763686172746572193be56873656c665f313834193bf16873656c665f313833193bf86873656c665f313832193bfb6a5f5f6c68735f305f3437193bfe6873656c665f313831193c016a5f5f6c68735f305f3431193c03666c696e6b5f31193c0567696e7075745f31193c07666d70685f3139193c096a5f5f6c68735f305f3432193c0b657575745f31193c0d6f76616c696461746f72486173685f31193c0f6b74617267657456616c7565193c117172657475726e6564556e6368616e676564193c32695f5f636f6e645f3236193c3e6a5f5f6c68735f305f3434193c406476685f34193c5b695f5f636f6e645f3237193c676a5f5f6c68735f305f3436193c756a5f5f6c68735f305f3435193c89636f5f31193ca06a5f5f6c68735f305f3433193cc5783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f64656c6567617465556e6368616e6765645f31193cc66873656c665f313830193cc7657265634964193ccd695f5f636f6e645f3235193cd96a5f5f6c68735f305f3430193cde645f5f3236193cf2657374724964193d1c695f5f636f6e645f3231193d286a5f5f6c68735f305f3338193d2a6473615f31193d30695f5f636f6e645f3234193d3c6a5f5f6c68735f305f3339193d3e68696e6465785f3135193d406a6669656c64735f313530193d4f6c666f756e6452656349645f31193d90645f5f3235193da86a5f5f6c68735f305f3332193daa6c616374697669746965735f31193dc670616374734f6e546869735265636f7264193e1b64615f3135193e1d695f5f636f6e645f3232193e296a5f5f6c68735f305f3337193e416a5f5f6c68735f305f3336193e596a5f5f6c68735f305f3335193e716a5f5f6c68735f305f3333193e73627361193e75695f5f636f6e645f3233193e816a5f5f6c68735f305f3334193e8368696e6465785f3134193e856a6669656c64735f313439193e946a666f756e645265634964193ed6645f5f3234193ee9645f5f3233193f05645f5f3232193f1d78395f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f64656c6567617465556e6368616e676564193f1e6873656c665f313739193f1f6473656564193f2c695f5f636f6e645f3137193f386a5f5f6c68735f305f3330193f3a646d615f31193f40695f5f636f6e645f3230193f4c6a5f5f6c68735f305f3331193f4e6a6669656c64735f313438193f62645f5f3231193f7a6a5f5f6c68735f305f3237193f7c6a61637469766974696573193f8d71666f756e64576974685468697353656564193fd264615f3134193fd4695f5f636f6e645f3138193fe06a5f5f6c68735f305f3238193fe2626d61193fe4695f5f636f6e645f3139193ff06a5f5f6c68735f305f3239193ff268696e6465785f3133193ff46a6669656c64735f313437194018645f5f3230194022645f5f313919403e645f5f31381940526873656c665f31373819405365666e5f3230194058676974656d5f313119405f6873656c665f31373619406068696e6465785f31321940626a726563757273655f383719406a6a726563757273655f383619406b6873656c665f31373719406c63695f391940996873656c665f31373519409a656d73675f341940e7782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6572726f721940e86873656c665f3137341940e96b617373657274696f6e4f6b1940ea656d73675f33194119783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f67656e6572696344656c6567617465416374697669747919411a6873656c665f3137331941346873656c665f31373219413763695f3819413969696e7075744461746119413f695f5f636f6e645f313519414b6a5f5f6c68735f305f323519414d68696e6465785f313119414f6a6669656c64735f31343619415f695f5f636f6e645f313619416b6a5f5f6c68735f305f323619416d66696e6465783219417c645f5f3137194189645f5f31361941976873656c665f31373119419e646c696e6b19419f64726f6c651941a06869645072656669781941a165696e7075741941a2666d70685f31381941cb6873656c665f3137301941d16873656c665f3136391941d768646174615f3235311941d9645f5f31351941ed6873656c665f3136381941f368646174615f3235301941f5645f5f31341942096873656c665f31363719421f6873656c665f31363619422668646174615f32343919423367706169725f363919423568696e6465785f31301942376a6669656c64735f31343519429068646174615f32343819429d67706169725f363819429f67696e6465785f391942a16a6669656c64735f3134341942fa666d70685f31371942fb735f5f7573656f70745f5f726566496e707574731942fc69726566496e707574731942fe69726566496e707574731943006b6368617274657241635f311943026c686173436861727465725f311943046d636861727465725574786f5f3119430663637464194314695f5f636f6e645f31331943206a5f5f6c68735f305f32341943226463685f321943286a5f5f6c68735f305f323119432a695f5f636f6e645f31341943366a5f5f6c68735f305f32331943386463685f3119433e6a5f5f6c68735f305f3232194350667478696e5f31194371666d70685f3136194373696368617274657241631943756a6861734368617274657219437e6b636861727465725574786f194381695f5f636f6e645f313219438d6a5f5f6c68735f305f323019438f6263681943956a5f5f6c68735f305f31391943a1647478696e1943b568646174615f3234361943c267706169725f36371943d468646174615f3234371943e56a6669656c64735f31343319440a68646174615f32343519441068646174615f32343319441d67706169725f363619442f68646174615f3234341944406a6669656c64735f31343219446568646174615f32343219446b68646174615f32343019447867706169725f363519448a68646174615f32343119449b6a6669656c64735f3134311944c068646174615f3233391944c668646174615f3233371944d367706169725f36341944e568646174615f3233381944f66a6669656c64735f31343019451b68646174615f32333619452968646174615f32333419453667706169725f363319454868646174615f3233351945596a6669656c64735f31333919457e68646174615f3233331945846873656c665f31363519459868646174615f3233311945a567706169725f36321945b768646174615f3233321945c86a6669656c64735f3133371945d567686561645f38341945ef6a6669656c64735f31333819461e68646174615f323330194624784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f646174615f3119462578465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f646174615f3119462678495f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f646174615f31194627784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f646174615f31194628784e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f646174615f3119462978475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f646174615f3119462a68646174615f32323919462c6969676e6f72655f313619464c784b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f6461746119464d78445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f6461746119464e78475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f6461746119464f784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f64617461194650784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f6461746119465178455f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f6461746119465268646174615f32323819469c67646174756d5f3119469d667574786f5f311946b36873656c665f3136341946b96873656c665f3136331946bf68646174615f3232361946cc67706169725f36311946de68646174615f3232371946ef6a6669656c64735f3133341946fc67686561645f38321947086a6669656c64735f31333519471567686561645f38331947216a6669656c64735f31333619475a68646174615f32323519476065646174756d194761647574786f1947776873656c665f31363219477d6873656c665f31363119478368646174615f32323319479067706169725f36301947a268646174615f3232341947b36a6669656c64735f3133311947c067686561645f38301947cc6a6669656c64735f3133321947d967686561645f38311947e56a6669656c64735f31333319481e68646174615f32323219482c68646174615f32323019483967706169725f353919484b68646174615f32323119485c6a6669656c64735f31333019488168646174615f32313919488778445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f646174615f3119488878495f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f646174615f3119488978465f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f646174615f3119488a68646174615f32313819488c6969676e6f72655f31351948a678425f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f646174611948a778475f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f646174611948a878445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f646174611948a968646174615f3231371948d068646174615f3231351948dd67706169725f35381948ef68646174615f3231361949006a6669656c64735f31323619490d67686561645f37371949196a6669656c64735f31323719492667686561645f37381949326a6669656c64735f31323819493f67686561645f373919494b6a6669656c64735f31323919498e68646174615f3231341949a7666d61705f32391949a96a726563757273655f38351949af6a726563757273655f38341949b0666d61705f33301949bd67686561645f37361949ea68646174615f3231331949f068646174615f3231311949fd67706169725f3537194a0f68646174615f323132194a206a6669656c64735f313235194a476873656c665f313630194a4d68646174615f323130194a4f666c73745f3233194a51645f5f3133194a686873656c665f313539194a6e68646174615f323039194a70666d61705f3238194a72645f5f3132194a896873656c665f313538194a8f6873656c665f313537194a956873656c665f313536194a9b6873656c665f313535194aa168646174615f323038194aa3666d61705f3237194aa5645f5f3131194abc6873656c665f313534194ac268646174615f323037194ac4666c73745f3232194ac6645f5f3130194add6873656c665f313533194ae468646174615f323036194ae66969676e6f72655f3134194afa68646174615f323034194b0767706169725f3536194b1968646174615f323035194b2a6a6669656c64735f313136194b3767686561645f3638194b436a6669656c64735f313137194b5067686561645f3639194b5c6a6669656c64735f313138194b6967686561645f3730194b756a6669656c64735f313139194b8267686561645f3731194b8e6a6669656c64735f313230194b9b67686561645f3732194ba76a6669656c64735f313231194bb467686561645f3733194bc06a6669656c64735f313232194bcd67686561645f3734194bd96a6669656c64735f313233194be667686561645f3735194bf26a6669656c64735f313234194c6768646174615f323033194c80666c73745f3230194c826a726563757273655f3833194c886a726563757273655f3832194c89666c73745f3231194cb068646174615f323032194cc9666d61705f3235194ccb6a726563757273655f3831194cd16a726563757273655f3830194cd2666d61705f3236194cdf67686561645f3637194d0c68646174615f323031194d25666d61705f3233194d276a726563757273655f3739194d2d6a726563757273655f3738194d2e666d61705f3234194d3b67686561645f3636194d6868646174615f323030194d81666c73745f3138194d836a726563757273655f3737194d896a726563757273655f3736194d8a666c73745f3139194dad78405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f646174615f31194dae78445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f646174615f31194daf78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f646174615f31194db068646174615f313939194db26969676e6f72655f3133194dcc783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f64617461194dcd78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f64617461194dce78405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f64617461194dcf68646174615f313938194df568646174615f313937194dfb6873656c665f313532194e0368646174615f313936194e05635f5f39194e196873656c665f313531194e216873656c665f313530194e3368646174615f313935194e356969676e6f72655f3132194e4968646174615f313934194ea068646174615f313933194ead67706169725f3535194eaf67696e6465785f38194eb16a6669656c64735f313135194f0a68646174615f313931194f1767706169725f3534194f2968646174615f313932194f3a6a6669656c64735f313134194f5f68646174615f313839194f6c67706169725f3533194f7e68646174615f313930194f8f6a6669656c64735f313133194fb468646174615f313837194fc167706169725f3532194fd368646174615f313838194fe46a6669656c64735f313130194ff167686561645f363419500d6a6669656c64735f31313119501a67686561645f36351950266a6669656c64735f31313219505f6873656c665f3134391950656873656c665f31343819506b6873656c665f31343719507168646174615f31383519507e67706169725f353119509068646174615f3138361950a16a6669656c64735f3130361950ae67686561645f36311950ba6a6669656c64735f3130371950c767686561645f36321950d36a6669656c64735f3130381950e067686561645f36331950ec6a6669656c64735f31303919512f68646174615f31383419513568646174615f31383219514267706169725f353019515468646174615f3138331951656a6669656c64735f31303519518a68646174615f313831195190784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f646174615f3119519178495f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f31195192784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f646174615f31195193784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f646174615f31195194784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f646174615f3119519568646174615f3138301951976969676e6f72655f31311951b578485f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f646174611951b678475f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174611951b7784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f646174611951b8784b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f646174611951b9784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f646174611951ba68646174615f3137391951f86873656c665f3134361951f965666e5f31391951fe676974656d5f31301952046873656c665f31343519520f6873656c665f3134341952156873656c665f31343319521b68646174615f31373819521d6969676e6f72655f313019523368646174615f3137371952446a6669656c64735f31303119525167686561645f353819525d6a6669656c64735f31303219526a67686561645f35391952766a6669656c64735f31303319528367686561645f363019528f6a6669656c64735f3130341952be68646174615f3137351952cb67706169725f34391952dd68646174615f3137361952ee696669656c64735f39381952fb67686561645f3536195311696669656c64735f393919531e67686561645f353719532a6a6669656c64735f31303019536368646174615f31373419537c666c73745f313619537e6a726563757273655f37351953846a726563757273655f3734195385666c73745f31371953b86873656c665f3134321953be68646174615f3137321953cb67706169725f34381953dd68646174615f3137331953ee696669656c64735f39361953fb67686561645f3535195407696669656c64735f393719543668646174615f31373119543c78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f646174615f3119543d785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f646174615f3119543e68646174615f3137301954406869676e6f72655f3919545878545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f6461746119545978595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f6461746119545a68646174615f3136391954746873656c665f31343119547a68646174615f31363819547c635f5f381954906873656c665f3134301954a66873656c665f3133391954b268646174615f3136371954b46869676e6f72655f381954ca68646174615f3136361954db696669656c64735f39321954e867686561645f35321954fa696669656c64735f393319550767686561645f3533195523696669656c64735f393419553067686561645f353419553c696669656c64735f393519556b68646174615f31363519557867706169725f343719557a67696e6465785f3719557c696669656c64735f39311955d56873656c665f3133381955d6666d70685f31351955d76473656c661955d86a72657175697265645f321955d9781b5f5f7573656f70745f5f637265617465644f7252657475726e65641955da71637265617465644f7252657475726e65641955dc6a72657175697265645f331955de73637265617465644f7252657475726e65645f311955e0695f5f6c68735f305f391955e2637575741955e46d76616c696461746f72486173681955e66461635f311955e864634f72521955fd6b68617344656c6567617465195613695f5f636f6e645f313119561f6a5f5f6c68735f305f31381956286a5f5f6c68735f305f313619562a6a5f5f6c68735f305f313719565f685f5f636f6e645f3919566b6a5f5f6c68735f305f313519566d6476685f331956916a5f5f6c68735f305f313219569a695f5f636f6e645f31301956a66a5f5f6c68735f305f31341956a96a5f5f6c68735f305f31331956b2616f1956c1685f5f636f6e645f381956cd6a5f5f6c68735f305f31311956d06a5f5f6c68735f305f31301956fa6873656c665f3133371956fb65666e5f3138195701666974656d5f3919570868646174615f31363419570e68646174615f3136331957146873656c665f31333619571568696e707574735f31195716666d70685f3134195717725f5f7573656f70745f5f726571756972656419571868726571756972656419571a6a72657175697265645f3119571c677575744e616d6519571e685f5f636f6e645f3619572a695f5f6c68735f305f38195740695f5f6c68735f305f361957426476685f32195744716e65656473416464725769746843726564195746626163195753685f5f636f6e645f3719575f69666f756e64476f6f64195769695f5f6c68735f305f3719578a63695f371957c46873656c665f3133351957ca6873656c665f3133341957cb65666e5f31371957d1666974656d5f381957d868646174615f3136321957e068646174615f3136311957e678475f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f68617344656c6567617465496e7075741957e778455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f68617356616c69644f75747075741957e86873656c665f3133331957e966696e707574731957ea666d70685f31331957eb6d696e70757452657175697265641957ed685f5f636f6e645f331957f9695f5f6c68735f305f351957fd695f5f6c68735f305f321957ff727370656e6444656c6567617465496e707574195801747370656e6444656c6567617465497356616c696419580f685f5f636f6e645f3419581b695f5f6c68735f305f3319581d64615f313319581f685f5f636f6e645f3519582b695f5f6c68735f305f3419583a635f5f3719584a635f5f361958756873656c665f31333219587b66736f6d655f3119588768646174615f31363019588d6873656c665f31333119588e666d70685f31321958996873656c665f31333019589a666d70685f31311958ac6873656c665f3132391958b268646174615f3135391958b4635f5f351958c86873656c665f3132381958cf68646174615f3135381958d16869676e6f72655f371958e868646174615f3135371958f9696669656c64735f383719590667686561645f3439195912696669656c64735f383819591f67686561645f353019592b696669656c64735f383919593867686561645f3531195944696669656c64735f393019597368646174615f31353619598067706169725f343619598267696e6465785f36195984696669656c64735f38361959e568646174615f3135351959f368646174615f3135341959f96873656c665f3132371959ff68646174615f313533195a01666c73745f3135195a03635f5f34195a1a68646174615f313531195a2767706169725f3435195a3968646174615f313532195a4a696669656c64735f3834195a5767686561645f3438195a63696669656c64735f3835195a9268646174615f313530195aab666c73745f3133195aad6a726563757273655f3733195ab36a726563757273655f3732195ab4666c73745f3134195ad768646174615f313439195add68646174615f313437195aea67706169725f3434195afc68646174615f313438195b0d696669656c64735f3831195b1a67686561645f3436195b26696669656c64735f3832195b3367686561645f3437195b3f696669656c64735f3833195b7868646174615f313436195b7e68646174615f313434195b8b67706169725f3433195b9d68646174615f313435195bae696669656c64735f3738195bbb67686561645f3434195bc7696669656c64735f3739195bd467686561645f3435195be0696669656c64735f3830195c1968646174615f313433195c1f68646174615f313431195c2c67706169725f3432195c3e68646174615f313432195c4f696669656c64735f3735195c5c67686561645f3432195c68696669656c64735f3736195c7567686561645f3433195c81696669656c64735f3737195cba68646174615f313430195cc068646174615f313338195ccd67706169725f3431195cdf68646174615f313339195cf0696669656c64735f3733195cfd67686561645f3431195d09696669656c64735f3734195d386873656c665f313236195d3e68646174615f313336195d4b67706169725f3430195d5d68646174615f313337195d6e696669656c64735f3731195d7b67686561645f3430195d87696669656c64735f3732195db668646174615f313335195dbc6873656c665f313235195dc268646174615f313333195dcf67706169725f3339195de168646174615f313334195df2696669656c64735f3639195dff67686561645f3339195e0b696669656c64735f3730195e3a68646174615f313332195e406873656c665f313234195e4c68646174615f313330195e5967706169725f3338195e6b68646174615f313331195e7c696669656c64735f3637195e8967686561645f3338195e9b696669656c64735f3638195eca68646174615f313239195ed068646174615f313237195edd67706169725f3337195eef68646174615f313238195f00696669656c64735f3635195f0d67686561645f3337195f27696669656c64735f3636195f5678695f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f31195f57786d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f31195f5878645f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f31195f5978635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f31195f5a78635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f31195f5b78675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f31195f5c78675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f31195f5d78675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f31195f5e786c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f31195f5f68646174615f313236195f616869676e6f72655f36195f8778675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f64617461195f88786b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f64617461195f8978625f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f64617461195f8a78615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f64617461195f8b78615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f64617461195f8c78655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f64617461195f8d78655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f64617461195f8e78655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f64617461195f8f786a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f64617461195f9068646174615f313235195ffe6873656c665f31323319600e68646174615f31323319601b67706169725f333619602d68646174615f31323419603e696669656c64735f363319604b67686561645f3336196061696669656c64735f363419609068646174615f31323219609668646174615f3132301960a367706169725f33351960b568646174615f3132311960c6696669656c64735f36301960d367686561645f33341960df696669656c64735f36311960ec67686561645f33351960f8696669656c64735f363219613168646174615f31313919613768646174615f31313719614467706169725f333419615668646174615f313138196167696669656c64735f353719617467686561645f3332196180696669656c64735f353819618d67686561645f3333196199696669656c64735f35391961d268646174615f3131361961d868646174615f3131341961e567706169725f33331961f768646174615f313135196208696669656c64735f353619622d68646174615f31313319623368646174615f31313119624067706169725f333219625268646174615f313132196263696669656c64735f353419627067686561645f333119628c696669656c64735f35351962bb68646174615f3131301962c168646174615f3130381962ce67706169725f33311962e068646174615f3130391962f1696669656c64735f353319631668646174615f31303719631c6873656c665f3132321963226873656c665f31323119632868646174615f31303519633567706169725f333019634768646174615f313036196358696669656c64735f353019636567686561645f3239196371696669656c64735f353119637e67686561645f333019638a696669656c64735f35321963c368646174615f3130341963c978595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f646174615f311963ca785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f646174615f311963cb785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f646174615f311963cc785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f646174615f311963cd78605f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174615f311963ce785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174615f311963cf78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f646174615f311963d068646174615f3130331963d26869676e6f72655f351963f478575f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f646174611963f578595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f646174611963f6785a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f646174611963f7785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f646174611963f8785e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174611963f9785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174611963fa78575f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f646174611963fb68646174615f3130321964526873656c665f3132301964586873656c665f31313919645e6873656c665f3131381964646873656c665f31313719646a68646174615f31303019647767706169725f323919648968646174615f31303119649a696669656c64735f34351964a767686561645f32351964b3696669656c64735f34361964c067686561645f32361964cc696669656c64735f34371964d967686561645f32371964e5696669656c64735f34381964f267686561645f32381964fe696669656c64735f343919654b67646174615f393919655167646174615f393719655e67706169725f323819657067646174615f3938196581696669656c64735f34341965a667646174615f39361965ac6873656c665f3131361965b26873656c665f3131351965b86873656c665f3131341965be67646174615f39341965cb67706169725f32371965dd67646174615f39351965ee696669656c64735f34301965fb67686561645f3232196607696669656c64735f343119661467686561645f3233196620696669656c64735f343219662d67686561645f3234196639696669656c64735f343319667c67646174615f3933196682784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f646174615f31196683784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f646174615f3119668478505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f646174615f3119668567646174615f39321966876869676e6f72655f341966a1784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f646174611966a2784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f646174611966a3784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f646174611966a467646174615f39311966ca67646174615f38391966d767706169725f32361966e967646174615f39301966fa696669656c64735f333719670767686561645f3230196713696669656c64735f333819672067686561645f323119672c696669656c64735f333919676567646174615f383719677267706169725f323519678467646174615f3838196795696669656c64735f33341967a267686561645f31381967ae696669656c64735f33351967bb67686561645f31391967c7696669656c64735f333619680067646174615f38361968066873656c665f31313319680c6873656c665f31313219681267646174615f383419681f67706169725f323419683167646174615f3835196842696669656c64735f333119684f67686561645f313619685b696669656c64735f333219686867686561645f3137196874696669656c64735f33331968ad67646174615f38331968b367646174615f38311968c067706169725f32331968d267646174615f38321968e3696669656c64735f32381968f067686561645f31341968fc696669656c64735f323919690967686561645f3135196915696669656c64735f333019694e67646174615f383019695467646174615f373819696167706169725f323219697367646174615f3739196984696669656c64735f323619699167686561645f313319699d696669656c64735f32371969cc67646174615f37371969d278515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f646174615f311969d378515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f646174615f311969d4784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f646174615f311969d578565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f311969d678565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f311969d767646174615f37361969d96869676e6f72655f331969f7784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f646174611969f8784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f646174611969f9784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f646174611969fa78545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f646174611969fb78545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f646174611969fc67646174615f3735196a3a67646174615f3733196a4767706169725f3231196a5967646174615f3734196a6a696669656c64735f3235196a8f67646174615f3732196a9d67646174615f3730196aaa67706169725f3230196abc67646174615f3731196acd696669656c64735f3234196af267646174615f3639196af867646174615f3637196b0567706169725f3139196b1767646174615f3638196b28696669656c64735f3232196b3567686561645f3132196b41696669656c64735f3233196b7067646174615f3636196b766873656c665f313131196b806873656c665f313130196b8667646174615f3634196b9367706169725f3138196ba567646174615f3635196bb6696669656c64735f3230196bc367686561645f3131196bcf696669656c64735f3231196bfe67646174615f3633196c0467646174615f3631196c1167706169725f3137196c2367646174615f3632196c34696669656c64735f3139196c5967646174615f3630196c5f67646174615f3538196c6c67706169725f3136196c7e67646174615f3539196c8f696669656c64735f3138196cb467646174615f3537196cc267646174615f3535196ccf67706169725f3135196ce167646174615f3536196cf2696669656c64735f3137196d1767646174615f3534196d2567646174615f3532196d3267706169725f3134196d4467646174615f3533196d55696669656c64735f3136196d7a67646174615f3531196d8078475f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f646174615f31196d8178485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f646174615f31196d82784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f646174615f31196d83784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f646174615f31196d84784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f31196d85784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f646174615f31196d8678535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f646174615f31196d8778515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f646174615f31196d8867646174615f3530196d8a6869676e6f72655f32196dae78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f64617461196daf78465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f64617461196db0784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f64617461196db1784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f64617461196db2784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f64617461196db3784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f64617461196db478515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f64617461196db5784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f64617461196db667646174615f3439196e1967646174615f3437196e2667706169725f3133196e3867646174615f3438196e49696669656c64735f3135196e6e67646174615f3436196e7467646174615f3434196e8167706169725f3132196e9367646174615f3435196ea4696669656c64735f3134196ec967646174615f3433196ecf6873656c665f313039196ed56873656c665f313038196edb67646174615f3431196ee867706169725f3131196efa67646174615f3432196f0b696669656c64735f3131196f1866686561645f39196f24696669656c64735f3132196f3167686561645f3130196f3d696669656c64735f3133196f7667646174615f3430196f7c78585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f646174615f31196f7d78555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f646174615f31196f7e785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f646174615f31196f7f67646174615f3339196f816869676e6f72655f31196f9b78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f64617461196f9c78535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f64617461196f9d785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f64617461196f9e67646174615f3338196fc46776616c75655f35196fc6685f5f636f6e645f31196fd2675f5f6c68735f30196fd4696669656c64735f3130196fd6685f5f636f6e645f32196fe2695f5f6c68735f305f31196fe7635f5f33196ff3635f5f32196ff96873656c665f3130371970006873656c665f3130361970086873656c665f31303519701067646174615f33371970126669676e6f726519702667646174615f333619705a677478496e70757419705c68746172676574496419705e6972656465656d657273197060737370656e64734578706563746564496e70757419706a67707572706f736519706c665f5f636f6e64197078627370197081635f5f3119708b6873656c665f31303419708c65666e5f313619708e6a726563757273655f37311970946a726563757273655f3730197095666d61705f32321970a4666974656d5f371970c36873656c665f3130331970c4666b65795f31331970ce63785f341970d667646174615f33351970d8666d61705f32311970da615f1970f1666d61705f31391970f36a726563757273655f36391970f96a726563757273655f36381970fa666d61705f323019710766686561645f381971346873656c665f3130321971386873656c665f31303119713c6873656c665f31303019713d65666e5f313519713f6a726563757273655f36371971456a726563757273655f3636197146666c73745f3132197155666974656d5f36197170666d70685f31301971716c5f5f7573656f70745f5f746e19717262746e197173715f5f7573656f70745f5f746e427974657319717467746e42797465731971756f5f5f7573656f70745f5f636f756e7419717665636f756e7419717864746e5f3119717a69746e42797465735f3119717c646d6b54761971b966726571745f311971ba755f5f7573656f70745f5f617373657274696f6e5f311971bb6b617373657274696f6e5f321971bd6b617373657274696f6e5f331971d564726571741971d6735f5f7573656f70745f5f617373657274696f6e1971d769617373657274696f6e1971d96b617373657274696f6e5f311971f9647461736b19720667646174615f333419721b67646174615f3333197227636e5f3519722867646174615f333219723d6862797465735f313019725264625f313319725f66686173685f3119726c67646174615f333119727667646174615f333019728367706169725f313019728567696e6465785f35197287686669656c64735f391972e067646174615f32391972ed66706169725f391972ef657461675f341972f1686669656c64735f38197338666c6973745f3319734369746573745f6865616419734469746573745f7461696c197345666c6973745f3219736667646174615f323819737366706169725f3819737567696e6465785f34197377686669656c64735f371973ec67646174615f32371974016762797465735f39197403636e5f341974246773656c665f3939197425666e616d655f321974266a696e6e65725f74657374197435666d61705f31371974376a726563757273655f363519743d6a726563757273655f363419743e666d61705f313819745a66686561645f3719745c666b65795f313219745e6776616c75655f3419748e6773656c665f393819748f666e616d655f31197497666d61705f3135197498646e616d6519749a696e616d655f6461746119749c6a726563757273655f36331974a26a726563757273655f36321974a3666d61705f31361974bc66686561645f361974be666b65795f31311974c06776616c75655f331974e86773656c665f39371974ef6773656c665f39361974f66773656c665f39351974fd6773656c665f393419750567646174615f323619750f67646174615f32351975246773656c665f393319752b6773656c665f39321975326773656c665f39311975396773656c665f39301975406773656c665f38391975476773656c665f383819754e6773656c665f383719755667646174615f323419755e67646174615f323319756667646174615f323219757c6773656c665f383619757d6476685f311975856773656c665f383519758662766819758b666f75747075741975916773656c665f383419759264686173681975946a63726564656e7469616c1975af67646174615f32311975b56773656c665f38331975bd6773656c665f38321975ca6773656c665f38311975cb65666e5f31341975d36773656c665f38301975d465666e5f31331975dc676f7574707574731975e266707265765f331975e36874784f75747075741975ec6773656c665f37391975ed6776616c75655f321975f364615f31321975f464625f31321975fb65615f7174791975fc65625f71747919760464615f313119760564625f313119760666636f6d705f331976086a726563757273655f36311976126a726563757273655f3630197613666b6579735f34197620666b65795f313019764766636f6d705f3219764864615f313019764964625f313019764b6a726563757273655f35391976556a726563757273655f3538197656666b6579735f33197663656b65795f391976886773656c665f3738197689676f746865725f331976966773656c665f37371976a56773656c665f37361976ab6773656c665f37351976b26773656c665f37341976b96773656c665f37331976bf6773656c665f37321976c56773656c665f37311976cc6773656c665f37301976d36773656c665f36391976d566706169725f371976d767696e6465785f331976d9686669656c64735f361976fb6773656c665f3638197700657461675f33197701686669656c64735f3519770f6974785f69645f73747219771169696e6465785f73747219772263695f3619772d6a74785f69645f646174611977396a63616c6c6261636b5f3719773a67646174615f323019773c6e63616c6c6261636b5f6e6f6b5f351977546773656c665f3637197759657461675f3219775a686669656c64735f3419776e6762797465735f3819777b6773656c665f363619777c6c6173736574436c6173735f3219777e716d696e74696e67506f6c696379486173681977806b746f6b656e4e616d655f32197782676f757465725f3319778467696e6e65725f3519778c67696e6e65725f3419778d666d61705f31341977bf676f757465725f321977c067696e6e65725f331977c1666d61705f313319780167646174615f31391978076773656c665f363519780d6773656c665f36341978146773656c665f363319781b6773656c665f36321978226773656c665f36311978296773656c665f36301978306773656c665f35391978386773656c665f35381978416773656c665f35371978466773656c665f353619784c6773656c665f353519784d6c73656c664c656e677468466e19784e65737461727419784f63656e64197851696e6f726d616c697a6519785365666e5f31321978596773746172745f3119785b65666e5f313119786165656e645f3119787165706f735f3119788b63615f3919788c63625f3919789a6773656c665f353419789b65666e5f31301978a56773656c665f35321978a664666e5f381978a7636e696c1978a96a726563757273655f35371978b16a726563757273655f35361978b26773656c665f35331978b364666e5f391978c066686561645f351978ea666c73745f31301978eb66636f6d705f311978ed6a726563757273655f35351978f36a726563757273655f35341978f4666c73745f313119790266686561645f34197903667461696c5f3319791763785f33197918656c73745f3819791964636f6d7019791b6a726563757273655f35331979216a726563757273655f3532197922656c73745f3919793466686561645f3319795c6773656c665f353119795d64666e5f3719795e64696e69741979606a726563757273655f35311979686a726563757273655f35301979696572656d5f3119796a656c73745f3719798a63615f3819798b63625f3819799363615f3719799463625f37197995646f705f311979976a726563757273655f34391979a56a726563757273655f34381979a6666b6579735f321979a768726573756c745f311979b4656b65795f381979b6667461696c5f321979b8666974656d5f351979ed666d61705f31311979ee656d70685f391979f06a726563757273655f34371979f66a726563757273655f34361979f7666d61705f3132197a2b626f70197a2c63615f36197a2d63625f36197a2f6a726563757273655f3435197a3d6a726563757273655f3434197a3e666b6579735f31197a3f66726573756c74197a4c656b65795f37197a4e667461696c5f31197a506373756d197a8663615f35197a8763625f35197a8965614b657973197a8b6a726563757273655f3433197a8d6b756e69717565424b657973197a9a6a726563757273655f3432197a9b646b657973197a9c666d61705f3130197aa9656b65795f36197adb63615f34197adc63625f34197ade6a726563757273655f3431197ae66a726563757273655f3430197ae7656c73745f36197ae86372656d197b06656c73745f35197b07656b65795f35197b0c666974656d5f34197b126773656c665f3439197b1364666e5f35197b156a726563757273655f3339197b1d6a726563757273655f3338197b1e6773656c665f3530197b1f64666e5f36197b44656d61705f38197b466a726563757273655f3337197b4c6a726563757273655f3336197b4d656d61705f39197b6d656d61705f36197b6e656b65795f33197b706a726563757273655f3335197b786a726563757273655f3334197b79656d61705f37197b7a656b65795f34197bae6773656c665f3438197baf656d70685f37197bb1656d70685f38197bb36a726563757273655f3333197bb96a726563757273655f3332197bba656d61705f35197bf16773656c665f3437197bf46a726563757273655f3331197bfa6a726563757273655f3330197bfb656d61705f34197c2068746f6b656e735f31197c226a726563757273655f3239197c286a726563757273655f3238197c2968746f6b656e735f32197c526773656c665f3436197c53656d70685f35197c55656d70685f36197c576a726563757273655f3237197c5d6a726563757273655f3236197c5e656d61705f33197c8a67646174615f3138197c8c67646174615f3137197c9667646174615f3136197ca567646174615f3135197cb266706169725f36197cb467696e6465785f32197cb6686669656c64735f33197cfb636e5f33197cfc67646174615f3134197d116762797465735f37197d2667646174615f3133197d2767696e6465785f31197d2866746573745f61197d2966746573745f62197d3666706169725f35197d48686669656c64735f32197d62647461696c197da567646174615f3132197db467646174615f3131197dcd6773656c665f3434197dce64666e5f33197dcf6a63616c6c6261636b5f36197dd16a726563757273655f3235197dd96a726563757273655f3234197dda6773656c665f3435197ddb64666e5f34197dec66686561645f32197e106773656c665f3433197e1663645f31197e2c6773656c665f3432197e2e6773656c665f3430197e2f64666e5f31197e316a726563757273655f3233197e396a726563757273655f3232197e3a6773656c665f3431197e3b64666e5f32197e6067646174615f3130197e7966646174615f39197e9264736f6d65197e936a63616c6c6261636b5f35197e996a63616c6c6261636b5f34197e9f66646174615f38197ea063695f35197eac6773656c665f3338197ead656b65795f31197eae67666e466f756e64197eaf6a666e4e6f74466f756e64197eb16a726563757273655f3231197eb96a726563757273655f3230197eba6773656c665f3339197ebb656b65795f32197ec766686561645f31197eee656c73745f33197ef06a726563757273655f3139197ef66a726563757273655f3138197ef7656c73745f34197f0f6164197f176773656c665f3337197f1866707265666978197f266773656c665f3336197f306773656c665f3335197f3b6773656c665f3334197f3f6773656c665f3333197f40676f746865725f32197f4863615f33197f4963625f33197f516773656c665f3332197f52676f746865725f31197f5a6773656c665f3331197f5f657461675f31197f60686669656c64735f31197f6e676d70685f737472197f706e746f6b656e5f6e616d655f737472197f816c746f6b656e5f6e616d655f32197f8e656d70685f34197f9a6a63616c6c6261636b5f33197f9b66646174615f37197f9d6e63616c6c6261636b5f6e6f6b5f34197fb565696e646578197fb66a63616c6c6261636b5f32197fb7666c6973745f31197fb96a726563757273655f3137197fc16a726563757273655f3136197fc2656c73745f32197fc363695f34197fdc6468656164197ff36a63616c6c6261636b5f31197ff466646174615f36197ff66e63616c6c6261636b5f6e6f6b5f3319800366706169725f3419801b6773656c665f333019801e6e73686f775f646174615f6c6973741980216a726563757273655f313519802266646174615f351980286a726563757273655f313419802966646174615f3419803666706169725f331980386374616719803a666669656c647319804d666974656d5f33198063656d61705f3219806f66706169725f32198071636b65791980736776616c75655f31198095656c73745f311980a1666974656d5f321980ad6576616c75651980b76762797465735f361980c0646c6973741980c16973686f775f6974656d1980c766707265765f321980c8666974656d5f311980e866646174615f331980e963695f331981016773656c665f32391981076773656c665f323819810e6773656c665f32371981156773656c665f323619811c6773656c665f32351981236773656c665f32341981246c6173736574436c6173735f31198126656d70685f331981286b746f6b656e4e616d655f3119812a676f757465725f3119812c67696e6e65725f3219813467696e6e65725f31198135656d61705f31198169656f7574657219816a65696e6e657219816b636d61701981b96773656c665f32331981bf656d70685f321981c06c746f6b656e5f6e616d655f311981d064617267301981d164617267311981da63615f321981e46a6173736574436c6173731981e563695f321981f5656d70685f311981f769746f6b656e4e616d6519821c617319822263615f3119822363625f321982336269641982356a726563757273655f313319823d6a726563757273655f313219823e636c737419824d646974656d19826f6773656c665f323219827e6773656c665f32311982856773656c665f323019828c6773656c665f31391982926773656c665f31381982996773656c665f31371982a06773656c665f31361982a86773656c665f31351982a96d5f5f7573656f70745f5f6164611982aa636164611982b064707265761982b164706169721982b3686d70685f646174611982b56b746f6b656e735f646174611982bf636d70681982de66746f6b656e731982e466707265765f311982e566706169725f311982e76f746f6b656e5f6e616d655f646174611982e9687174795f646174611982ef6a746f6b656e5f6e616d651982f56371747919835f6773656c665f31341983736762797465735f35198375636e5f321983776a726563757273655f313119837d6a726563757273655f313019837e63695f3119838e6262301983b667696e6578745f321983cf6776616c69645f351983d06463315f321983da63635f3219842067696e6578745f311984396776616c69645f3319843a6463315f3119844f6776616c69645f341984506463325f3119845a63635f311984aa65696e6578741984c36576616c69641984c46263311984d96776616c69645f311984da6263321984ef6776616c69645f321984f06263331984fa616319854c646279746519854d6863616c6c6261636b19856d6773656c665f31331985706d73686f775f706f73697469766519858c63785f321985ab6773656c665f31321985ac636e5f311985ae69726563757273655f391985b869726563757273655f381985b963785f311985ba63706f731985bb6762797465735f341986006773656c665f31311986156773656c665f313019861d6673656c665f3919862269726563757273655f3719864669726563757273655f3619864761691986486762797465735f3219864a6762797465735f3319866b617819867566646174615f321986766d63616c6c6261636b5f6f6b5f321986776e63616c6c6261636b5f6e6f6b5f3219868c66646174615f3119868d6d63616c6c6261636b5f6f6b5f3119868e6e63616c6c6261636b5f6e6f6b5f311986a46673656c665f371986a769726563757273655f351986ad69726563757273655f341986ae6673656c665f381986b0616e1986c3696865785f62797465731986f06673656c665f351986f369726563757273655f3319871969726563757273655f3219871a6673656c665f3619871b65627974657319871d65646967697419871f6762797465735f3119875764646174611987586b63616c6c6261636b5f6f6b1987596c63616c6c6261636b5f6e6f6b19876e6673656c665f3319876f62666e198770617a19877269726563757273655f3119877a677265637572736519877b6673656c665f3419877c637a5f31198799616119879a63625f311987a86673656c665f321987ad6673656c665f311987b56473656c661987b6656f746865721987bf61621987c864636f6e641987c9656d73675f321987dd656d73675f311987e4636d7367", "termDescriptions": "b82d190570646d61696e190571646d61696e192b0b62746e192b0c62746e192b0e65746e537472192cce67707572706f7365192ec9626b32192eca626b32192ecb626b32192ecc626b32192ecf781b736f7274506f6c69637956616c7565735072656469637461626c79192ed66773656564496478192eda6772617754784964192edc6774786f496e666f192f3f67617574687a4163192f876861637469766974791930d268736565645574786f1930d368736565645574786f19313168616374697669747919327f636b6579193280636b6579193281636b657919354e687265634964537472193552686361706f41646472193790683c61737369676e3e193791683c61737369676e3e1937ed64616464721939db676467744c696e6b1939dc676467744c696e6b193c117172657475726e6564556e6368616e676564193f226473656564193f236473656564193f8d71666f756e645769746854686973536565641942fe706765745478436861727465724461746119437371676574526566436861727465725574786f19437f683c61737369676e3e1955eb683c61737369676e3e1955ec683c61737369676e3e19717067746e427974657319717167746e427974657319717267746e427974657319717367746e427974657319717467746e427974657319717567746e427974657319717667746e4279746573" } },
      scriptHash: "f9a2c425e37fe25b53a47258b2183c379ea8bc5e7056bb55cbd2cd16",
      config: { "rev": "1", "delegateName": "UnspecializedDelegate", "isMintDelegate": true, "isSpendDelegate": true, "isDgDataPolicy": false, "requiresGovAuthority": true }
    }
  };
  specializedDelegateModule = UnspecializedDelegate_hl;
  requiresGovAuthority = true;
  get rev() {
    return 1n;
  }
  get params() {
    return {
      rev: this.rev,
      delegateName: this.moduleName,
      isMintDelegate: true,
      isSpendDelegate: true,
      isDgDataPolicy: false,
      requiresGovAuthority: this.requiresGovAuthority
    };
  }
  get moduleName() {
    return "UnspecializedDelegate";
  }
  get bridgeClassName() {
    return "UnspecializedDelegateBridge";
  }
}

export { UnspecializedDgtBundle, UnspecializedDgtBundle as default };
//# sourceMappingURL=UnspecializedDelegate.hlb.mjs.map
