import '@helios-lang/compiler-utils';
import { C as CapoHeliosBundle } from '../CapoHeliosBundle2.mjs';
import '../HeliosBundle.mjs';
import '../BasicDelegate.mjs';
import { R as ReqtsPolicy_hl, a as ReqtsData_hl } from '../ReqtsData.mjs';
import { DelegatedDataBundle } from '../DelegatedDataBundle.mjs';
import '../DefaultCapo.mjs';
import '@helios-lang/ledger';
import '@helios-lang/uplc';
import '@donecollectively/stellar-contracts/HeliosProgramWithCacheAPI';
import '@helios-lang/compiler';
import '@helios-lang/codec-utils';
import '@helios-lang/crypto';
import '@helios-lang/contract-utils';
import '../environment.mjs';
import '../CapoDelegateHeliosBundle.mjs';

class ReqtsBundle extends DelegatedDataBundle {
  specializedDelegateModule = ReqtsPolicy_hl;
  get modules() {
    return [
      ...super.modules,
      ReqtsData_hl
    ];
  }
}

class ReqtsConcreteBundle extends ReqtsBundle.usingCapoBundleClass(CapoHeliosBundle) {
  preCompiled = {
    singleton: {
      programBundle: { "programElements": { "src/delegation/BasicDelegate.hl": "c1c08070fec3cd0c35f0095277755d972353c4873df785f31aa3a17a2c751a8c", "src/CapoMintHelpers.hl": "8f780e9a5523a44dbbcaab8ccf4b94716aac9e29cfa7c98f52f3d71ae70038d4", "src/delegation/CapoDelegateHelpers.hl": "51761f4364905846422a194f77ba875c0b9f694dd6cedf65da502fcd3823a81d", "src/StellarHeliosHelpers.hl": "8494efc84f3ef859470648af3cc4b08ab12572c193d5702c69c1470300c0ff70", "src/CapoHelpers.hl": "81ca077606b3bfa65052c1011d7bb0e5f4d048a511cf8e8b9c41657e3bf27463", "src/reqts/ReqtsData.hl": "3a187537ec07c985fe82ddd3f8c62d3365c34f900b5b7a4058cb7cf3e705106d", "generatedSpecializedDelegateModule": "098031ee2f026f1261eb399fbf411996363246b88d7eea4f20588f3285540812", "src/reqts/ReqtsPolicy.hl": "6396d53c7895218ae04732558d0d7cde727097e121530fefeb1161fe148f1109", "params": { "BasicDelegate::rev": "const rev: Int = ##01;", "BasicDelegate::instance": "const instance: ByteArray = #67656e6572616c;", "BasicDelegate::delegateName": "const delegateName: String = ##4b5265717473506f6c696379;", "BasicDelegate::isMintDelegate": "const isMintDelegate: Bool = ##d87980;", "BasicDelegate::isSpendDelegate": "const isSpendDelegate: Bool = ##d87980;", "BasicDelegate::isDgDataPolicy": "const isDgDataPolicy: Bool = ##d87a80;", "BasicDelegate::requiresGovAuthority": "const requiresGovAuthority: Bool = ##d87a80;" } }, "version": "PlutusV2", "optimized": "", "unoptimized": "", "optimizedIR": '(__DATUM, __REDEEMER, __CONTEXT) -> {\n    __common9 = __core__unConstrData(__CONTEXT);\n    __common10 = __core__sndPair(__common9);\n    __common7 = __core__fstPair(__core__unConstrData(__DATUM));\n    __helios__common__fold = (self_3, fn, z) -> {\n        recurse_1 = (recurse, self_4, z_1) -> {\n            __core__chooseList(self_4, () -> {\n                z_1\n            }, () -> {\n                recurse(recurse, __core__tailList__safe(self_4), fn(z_1, __core__headList__safe(self_4)))\n            })()\n        };\n        recurse_1(recurse_1, self_3, z)\n    };\n    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {\n        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {\n            callback_ok(__core__unBData__safe(data))\n        })()\n    };\n    __helios__bytearray__show = (self_7) -> {\n        recurse_5 = (recurse_4, self_8) -> {\n            n = __core__lengthOfByteString(self_8);\n            __core__ifThenElse(\n                __core__lessThanInteger(0, n),\n                () -> {\n                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_5 = __core__indexByteString__safe(self_8, 0);\n                    recurse_3 = (recurse_2, self_6, bytes) -> {\n                        digit = __core__modInteger(self_6, 16);\n                        bytes_1 = __core__consByteString(__core__ifThenElse(\n                            __core__lessThanInteger(digit, 10),\n                            __core__addInteger(digit, 48),\n                            __core__addInteger(digit, 87)\n                        ), bytes);\n                        __core__ifThenElse(\n                            __core__lessThanInteger(self_6, 16),\n                            () -> {\n                                bytes_1\n                            },\n                            () -> {\n                                recurse_2(recurse_2, __core__divideInteger(self_6, 16), bytes_1)\n                            }\n                        )()\n                    };\n                    __core__decodeUtf8__safe(__core__ifThenElse(\n                        __core__lessThanInteger(self_5, 0),\n                        () -> {\n                            __core__consByteString(45, recurse_3(recurse_3, __core__multiplyInteger(self_5, -1), #))\n                        },\n                        () -> {\n                            recurse_3(recurse_3, self_5, #)\n                        }\n                    )()));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),\n                        __core__consByteString(48, hex_bytes),\n                        hex_bytes\n                    )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_8)))\n                },\n                () -> {\n                    ""\n                }\n            )()\n        };\n        recurse_5(recurse_5, self_7)\n    };\n    __helios__int__show = (self_9) -> {\n        __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {\n            bytes_3 = __core__consByteString(__core__addInteger(__core__modInteger(i, 10), 48), bytes_2);\n            __core__ifThenElse(\n                __core__lessThanInteger(i, 10),\n                () -> {\n                    bytes_3\n                },\n                () -> {\n                    recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)\n                }\n            )()\n        };\n        __core__ifThenElse(\n            __core__lessThanInteger(self_9, 0),\n            () -> {\n                __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_9, -1), #))\n            },\n            () -> {\n                recurse_7(recurse_7, self_9, #)\n            }\n        )())\n    };\n    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__divideInteger(byte, 64), 2),\n            () -> {\n                callback(true, __core__modInteger(byte, 64))\n            },\n            () -> {\n                callback(false, 0)\n            }\n        )()\n    };\n    __helios__string__is_valid_utf8 = (bytes_5) -> {\n        n_2 = __core__lengthOfByteString(bytes_5);\n        recurse_11 = (recurse_10, i_1) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(i_1, n_2),\n                () -> {\n                    true\n                },\n                () -> {\n                    b0 = __core__indexByteString__safe(bytes_5, i_1);\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(b0, 127),\n                        () -> {\n                            recurse_10(recurse_10, __core__addInteger(i_1, 1))\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),\n                                () -> {\n                                    inext_2 = __core__addInteger(i_1, 2);\n                                    __core__ifThenElse(\n                                        __core__lessThanEqualsInteger(inext_2, n_2),\n                                        () -> {\n                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {\n                                                __core__ifThenElse(\n                                                    valid_5,\n                                                    () -> {\n                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);\n                                                        __core__ifThenElse(\n                                                            __core__ifThenElse(\n                                                                __core__lessThanEqualsInteger(128, c_2),\n                                                                () -> {\n                                                                    __core__lessThanEqualsInteger(c_2, 2047)\n                                                                },\n                                                                () -> {\n                                                                    false\n                                                                }\n                                                            )(),\n                                                            () -> {\n                                                                recurse_10(recurse_10, inext_2)\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    },\n                                                    () -> {\n                                                        false\n                                                    }\n                                                )()\n                                            })\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )()\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),\n                                        () -> {\n                                            inext_1 = __core__addInteger(i_1, 3);\n                                            __core__ifThenElse(\n                                                __core__lessThanEqualsInteger(inext_1, n_2),\n                                                () -> {\n                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {\n                                                        __core__ifThenElse(\n                                                            valid_3,\n                                                            () -> {\n                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {\n                                                                    __core__ifThenElse(\n                                                                        valid_4,\n                                                                        () -> {\n                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));\n                                                                            __core__ifThenElse(\n                                                                                __core__ifThenElse(\n                                                                                    __core__lessThanEqualsInteger(2048, c_1),\n                                                                                    () -> {\n                                                                                        __core__lessThanEqualsInteger(c_1, 65535)\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )(),\n                                                                                () -> {\n                                                                                    recurse_10(recurse_10, inext_1)\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        },\n                                                                        () -> {\n                                                                            false\n                                                                        }\n                                                                    )()\n                                                                })\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    })\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),\n                                                () -> {\n                                                    inext = __core__addInteger(i_1, 4);\n                                                    __core__ifThenElse(\n                                                        __core__lessThanEqualsInteger(inext, n_2),\n                                                        () -> {\n                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {\n                                                                __core__ifThenElse(\n                                                                    valid,\n                                                                    () -> {\n                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {\n                                                                            __core__ifThenElse(\n                                                                                valid_1,\n                                                                                () -> {\n                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            valid_2,\n                                                                                            () -> {\n                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__lessThanEqualsInteger(65536, c),\n                                                                                                        () -> {\n                                                                                                            __core__lessThanEqualsInteger(c, 2097151)\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )(),\n                                                                                                    () -> {\n                                                                                                        recurse_10(recurse_10, inext)\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    })\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        })\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        };\n        recurse_11(recurse_11, 0)\n    };\n    __helios__value__show = (self_15) -> {\n        __helios__common__fold(self_15, (prev, pair) -> {\n            mph_data = __core__fstPair(pair);\n            tokens_data = __core__sndPair(pair);\n            __core__appendString(prev, __helios__common__unBData__safe(mph_data, (mph) -> {\n                __core__appendString(__core__ifThenElse(\n                    __core__equalsByteString(mph, #),\n                    () -> {\n                        ""\n                    },\n                    () -> {\n                        __core__appendString(__helios__bytearray__show(mph), "\n")\n                    }\n                )(), __core__chooseData(tokens_data, () -> {\n                    ""\n                }, () -> {\n                    __helios__common__fold(__core__unMapData__safe(tokens_data), (prev_1, pair_1) -> {\n                        token_name_data = __core__fstPair(pair_1);\n                        qty_data = __core__sndPair(pair_1);\n                        __helios__common__unBData__safe(token_name_data, (token_name) -> {\n                            __core__chooseData(qty_data, () -> {\n                                ""\n                            }, () -> {\n                                ""\n                            }, () -> {\n                                ""\n                            }, () -> {\n                                qty = __core__unIData__safe(qty_data);\n                                __core__ifThenElse(\n                                    __core__equalsByteString(mph, #),\n                                    () -> {\n                                        __core__appendString("lovelace ", __core__appendString(__helios__int__show(qty), "\n"))\n                                    },\n                                    () -> {\n                                        __core__appendString("  .", __core__appendString(__core__ifThenElse(\n                                            __helios__string__is_valid_utf8(token_name),\n                                            () -> {\n                                                __core__decodeUtf8__safe(token_name)\n                                            },\n                                            () -> {\n                                                __helios__bytearray__show(token_name)\n                                            }\n                                        )(), __core__appendString(" ", __core__appendString(__helios__int__show(qty), "\n"))))\n                                    }\n                                )()\n                            }, () -> {\n                                ""\n                            })()\n                        }, () -> {\n                            ""\n                        })\n                    }, prev)\n                }, () -> {\n                    ""\n                }, () -> {\n                    ""\n                }, () -> {\n                    ""\n                })())\n            }, () -> {\n                ""\n            }))\n        }, "")\n    };\n    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common10));\n    __helios__scriptcontext__tx = __core__headList(__common10);\n    __helios__scriptcontext__get_current_input = () -> {\n        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));\n        recurse_13 = (recurse_12, lst) -> {\n            __core__chooseList(lst, () -> {\n                error()\n            }, () -> {\n                item = __core__headList__safe(lst);\n                __core__ifThenElse(\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item))), id),\n                    () -> {\n                        item\n                    },\n                    () -> {\n                        recurse_12(recurse_12, __core__tailList__safe(lst))\n                    }\n                )()\n            })()\n        };\n        recurse_13(recurse_13, __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))\n    };\n    __helios__value__new = (assetClass, i_2) -> {\n        mph_1 = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));\n        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));\n        __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i_2)), __core__mkNilPairData(())))), __core__mkNilPairData(()))\n    };\n    __helios__assetclass__new = (mph_2, token_name_1) -> {\n        __core__constrData(0, __core__mkCons(__core__bData(mph_2), __core__mkCons(__core__bData(token_name_1), __core__mkNilData(()))))\n    };\n    __helios__tx__minted = (self_29) -> {\n        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))))))\n    };\n    __helios__common__assert_constr_index = (data_3, i_3) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_3)), i_3),\n            () -> {\n                data_3\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__data__show = (self_30) -> {\n        () -> {\n            show_data_list = (list, show_item) -> {\n                __helios__common__fold(list, (prev_2, item_1) -> {\n                    __core__ifThenElse(\n                        __core__equalsString(prev_2, ""),\n                        () -> {\n                            show_item(item_1)\n                        },\n                        () -> {\n                            __core__appendString(prev_2, __core__appendString(",", show_item(item_1)))\n                        }\n                    )()\n                }, "")\n            };\n            recurse_15 = (recurse_14, data_4) -> {\n                __core__chooseData(data_4, () -> {\n                    pair_3 = __core__unConstrData__safe(data_4);\n                    __core__appendString(__helios__int__show(__core__fstPair(pair_3)), __core__appendString("{", __core__appendString(show_data_list(__core__sndPair(pair_3), (item_3) -> {\n                        recurse_14(recurse_14, item_3)\n                    }), "}")))\n                }, () -> {\n                    __core__appendString("{", __core__appendString(show_data_list(__core__unMapData__safe(data_4), (pair_2) -> {\n                        __core__appendString(recurse_14(recurse_14, __core__fstPair(pair_2)), __core__appendString(":", recurse_14(recurse_14, __core__sndPair(pair_2))))\n                    }), "}"))\n                }, () -> {\n                    __core__appendString("[", __core__appendString(show_data_list(__core__unListData__safe(data_4), (item_2) -> {\n                        recurse_14(recurse_14, item_2)\n                    }), "]"))\n                }, () -> {\n                    __helios__int__show(__core__unIData__safe(data_4))\n                }, () -> {\n                    __helios__bytearray__show(__core__unBData__safe(data_4))\n                })()\n            };\n            recurse_15(recurse_15, self_30)\n        }\n    };\n    __helios__data__show_constr_data = (callback_1, data_6) -> {\n        callback_nok_3 = __helios__data__show(data_6);\n        __core__chooseData(data_6, () -> {\n            pair_4 = __core__unConstrData__safe(data_6);\n            callback_1(__core__fstPair(pair_4), __core__sndPair(pair_4))\n        }, callback_nok_3, callback_nok_3, callback_nok_3, callback_nok_3)()\n    };\n    __helios__data__show_field = (index, callback_2, list_1) -> {\n        recurse_17 = (recurse_16, lst_2, i_4) -> {\n            __core__chooseList(lst_2, () -> {\n                "<missing>"\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(i_4, 0),\n                    () -> {\n                        callback_2(__core__headList__safe(lst_2))\n                    },\n                    () -> {\n                        recurse_16(recurse_16, __core__tailList__safe(lst_2), __core__subtractInteger(i_4, 1))\n                    }\n                )()\n            })()\n        };\n        recurse_17(recurse_17, list_1, index)\n    };\n    __helios__data__show_bdata = (callback_3) -> {\n        (data_7) -> {\n            callback_nok_4 = __helios__data__show(data_7);\n            __core__chooseData(data_7, callback_nok_4, callback_nok_4, callback_nok_4, callback_nok_4, () -> {\n                callback_3(__core__unBData__safe(data_7))\n            })()\n        }\n    };\n    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {\n        recurse_21 = (recurse_20, self_39, key_2) -> {\n            __core__chooseList(self_39, fnNotFound, () -> {\n                head_1 = __core__headList__safe(self_39);\n                __core__ifThenElse(\n                    __core__equalsData(key_2, __core__fstPair(head_1)),\n                    () -> {\n                        fnFound(__core__sndPair(head_1))\n                    },\n                    () -> {\n                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)\n                    }\n                )()\n            })()\n        };\n        recurse_21(recurse_21, self_38, key_1)\n    };\n    __helios__common__all = (self_40, fn_1) -> {\n        recurse_23 = (recurse_22, self_41, fn_2) -> {\n            __core__chooseList(self_41, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    fn_2(__core__headList__safe(self_41)),\n                    () -> {\n                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_23(recurse_23, self_40, fn_1)\n    };\n    __helios__bool__from_data = (d_1) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),\n            false,\n            true\n        )\n    };\n    __helios__timerange__end = (self_43) -> {\n        __core__unIData((self_21) -> {\n            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n        }(self_21 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_43))));\n        __core__headList(__core__sndPair(__core__unConstrData(self_21)))))\n    };\n    __helios__common__enum_fields_after_4 = (self_44) -> {\n        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44)))))))\n    };\n    __helios__timerange__start = (self_48) -> {\n        __core__unIData((self_21) -> {\n            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n        }(self_21 = __core__headList(__core__sndPair(__core__unConstrData(self_48)));\n        __core__headList(__core__sndPair(__core__unConstrData(self_21)))))\n    };\n    __helios__timerange__contains = (self_49, t) -> {\n        lower = __core__headList(__core__sndPair(__core__unConstrData(self_49)));\n        extended = __core__headList(__core__sndPair(__core__unConstrData(lower)));\n        closed = __helios__bool__from_data(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(lower)))));\n        lowerExtType = __core__fstPair(__core__unConstrData(extended));\n        checkUpper = () -> {\n            upper = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_49))));\n            __common32 = __core__unConstrData(upper);\n            __common33 = __core__sndPair(__common32);\n            extended_1 = __core__headList(__common33);\n            __common5 = __core__unConstrData(extended_1);\n            closed_1 = __helios__bool__from_data(__core__headList(__core__tailList(__common33)));\n            upperExtType = __core__fstPair(__common5);\n            __core__ifThenElse(\n                __core__equalsInteger(upperExtType, 0),\n                () -> {\n                    false\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(upperExtType, 2),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __core__ifThenElse(\n                                    closed_1,\n                                    () -> {\n                                        __core__lessThanEqualsInteger(t, __core__unIData(__core__headList(__core__sndPair(__common5))))\n                                    },\n                                    () -> {\n                                        __core__lessThanInteger(t, __core__unIData(__core__headList(__core__sndPair(__common5))))\n                                    }\n                                )(),\n                                true,\n                                false\n                            )\n                        }\n                    )()\n                }\n            )()\n        };\n        __core__ifThenElse(\n            __core__equalsInteger(lowerExtType, 2),\n            () -> {\n                false\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(lowerExtType, 0),\n                    checkUpper,\n                    () -> {\n                        __core__ifThenElse(\n                            __core__ifThenElse(\n                                closed,\n                                () -> {\n                                    __core__lessThanEqualsInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)\n                                },\n                                () -> {\n                                    __core__lessThanInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)\n                                }\n                            )(),\n                            checkUpper,\n                            () -> {\n                                false\n                            }\n                        )()\n                    }\n                )()\n            }\n        )()\n    };\n    __helios__txoutputdatum__inline = (self_50) -> {\n        pair_5 = __core__unConstrData(self_50);\n        index_1 = __core__fstPair(pair_5);\n        fields_2 = __core__sndPair(pair_5);\n        __core__ifThenElse(\n            __core__equalsInteger(index_1, 2),\n            () -> {\n                __core__headList(fields_2)\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__txinput__address = (self_57) -> {\n        self_21 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_57))));\n        __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n    };\n    __helios__value__get_safe = (self_58, assetClass_2) -> {\n        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_2)));\n        tokenName_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_2))));\n        outer_3 = (outer_2, inner_3, map_3) -> {\n            __core__chooseList(map_3, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mintingPolicyHash),\n                    () -> {\n                        inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_3))))\n                    },\n                    () -> {\n                        outer_2(outer_2, inner_3, __core__tailList__safe(map_3))\n                    }\n                )()\n            })()\n        };\n        outer_3(outer_3, (inner_4, map_4) -> {\n            __core__chooseList(map_4, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), tokenName_2),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_4)))\n                    },\n                    () -> {\n                        inner_4(inner_4, __core__tailList__safe(map_4))\n                    }\n                )()\n            })()\n        }, self_58)\n    };\n    __helios__common__filter = (self_63, fn_3, nil) -> {\n        recurse_25 = (recurse_24, self_64, fn_4) -> {\n            __core__chooseList(self_64, () -> {\n                nil\n            }, () -> {\n                head_2 = __core__headList__safe(self_64);\n                __core__ifThenElse(\n                    fn_4(head_2),\n                    () -> {\n                        __core__mkCons(head_2, recurse_24(recurse_24, __core__tailList__safe(self_64), fn_4))\n                    },\n                    () -> {\n                        recurse_24(recurse_24, __core__tailList__safe(self_64), fn_4)\n                    }\n                )()\n            })()\n        };\n        recurse_25(recurse_25, self_63, fn_3)\n    };\n    __helios__common__mStruct_field = (self_66, name_1) -> {\n        map_5 = __core__unMapData(self_66);\n        name_data = __core__bData(name_1);\n        recurse_27 = (recurse_26, map_6) -> {\n            __core__chooseList(map_6, () -> {\n                error()\n            }, () -> {\n                head_3 = __core__headList__safe(map_6);\n                key_3 = __core__fstPair(head_3);\n                value_3 = __core__sndPair(head_3);\n                __core__ifThenElse(\n                    __core__equalsData(key_3, name_data),\n                    () -> {\n                        value_3\n                    },\n                    () -> {\n                        recurse_26(recurse_26, __core__tailList__safe(map_6))\n                    }\n                )()\n            })()\n        };\n        recurse_27(recurse_27, map_5)\n    };\n    __helios__value__contains_policy = (self_67, mph_5) -> {\n        mph_6 = __core__bData(mph_5);\n        recurse_29 = (recurse_28, map_7) -> {\n            __core__chooseList(map_7, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), mph_6),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_28(recurse_28, __core__tailList__safe(map_7))\n                    }\n                )()\n            })()\n        };\n        recurse_29(recurse_29, self_67)\n    };\n    __helios__value__is_zero = (self_68) -> {\n        recurse_33 = (recurse_32, map_8) -> {\n            __core__chooseList(map_8, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_8)));\n                    recurse_31 = (recurse_30, tokens_2) -> {\n                        __core__chooseList(tokens_2, () -> {\n                            true\n                        }, () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),\n                                () -> {\n                                    recurse_30(recurse_30, __core__tailList__safe(tokens_2))\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_31(recurse_31, tokens_1),\n                    () -> {\n                        recurse_32(recurse_32, __core__tailList__safe(map_8))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_33(recurse_33, self_68)\n    };\n    __helios__value__get_policy = (self_69, mph_7) -> {\n        mph_8 = __core__bData(mph_7);\n        recurse_35 = (recurse_34, map_9) -> {\n            __core__chooseList(map_9, () -> {\n                error()\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_8),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_9)))\n                    },\n                    () -> {\n                        recurse_34(recurse_34, __core__tailList__safe(map_9))\n                    }\n                )()\n            })()\n        };\n        recurse_35(recurse_35, self_69)\n    };\n    __helios__value__get_inner_map_int = (map_10, key_4) -> {\n        recurse_37 = (recurse_36, map_11, key_5) -> {\n            __core__chooseList(map_11, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), key_5),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_11)))\n                    },\n                    () -> {\n                        recurse_36(recurse_36, __core__tailList__safe(map_11), key_5)\n                    }\n                )()\n            })()\n        };\n        recurse_37(recurse_37, map_10, key_4)\n    };\n    __helios__common__any = (self_70, fn_6) -> {\n        recurse_41 = (recurse_40, self_71, fn_7) -> {\n            __core__chooseList(self_71, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    fn_7(__core__headList__safe(self_71)),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_40(recurse_40, __core__tailList__safe(self_71), fn_7)\n                    }\n                )()\n            })()\n        };\n        recurse_41(recurse_41, self_70, fn_6)\n    };\n    __helios__value__merge_map_keys = (a_7, b_12) -> {\n        (aKeys) -> {\n            recurse_45 = (recurse_44, keys, map_14) -> {\n                __core__chooseList(map_14, () -> {\n                    __core__mkNilData(())\n                }, () -> {\n                    key_7 = __core__fstPair(__core__headList__safe(map_14));\n                    __core__ifThenElse(\n                        __helios__common__any(aKeys, (item_4) -> {\n                            __core__equalsData(item_4, key_7)\n                        }),\n                        () -> {\n                            recurse_44(recurse_44, keys, __core__tailList__safe(map_14))\n                        },\n                        () -> {\n                            __core__mkCons(key_7, recurse_44(recurse_44, keys, __core__tailList__safe(map_14)))\n                        }\n                    )()\n                })()\n            };\n            b_11 = recurse_45(recurse_45, aKeys, b_12);\n            recurse_43 = (recurse_42, lst_6, rem) -> {\n                __core__chooseList(rem, () -> {\n                    lst_6\n                }, () -> {\n                    __core__mkCons(__core__headList__safe(rem), recurse_42(recurse_42, lst_6, __core__tailList__safe(rem)))\n                })()\n            };\n            recurse_43(recurse_43, b_11, aKeys)\n        }(recurse_39 = (recurse_38, map_13) -> {\n            __core__chooseList(map_13, () -> {\n                __core__mkNilData(())\n            }, () -> {\n                __core__mkCons(__core__fstPair(__core__headList__safe(map_13)), recurse_38(recurse_38, __core__tailList__safe(map_13)))\n            })()\n        };\n        recurse_39(recurse_39, a_7))\n    };\n    __helios__value__get_inner_map = (map_15, mph_9) -> {\n        recurse_49 = (recurse_48, map_16) -> {\n            __core__chooseList(map_16, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_16)), mph_9),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_16)))\n                    },\n                    () -> {\n                        recurse_48(recurse_48, __core__tailList__safe(map_16))\n                    }\n                )()\n            })()\n        };\n        recurse_49(recurse_49, map_15)\n    };\n    __helios__value____add = (a_10, b_15) -> {\n        recurse_51 = (recurse_50, keys_2) -> {\n            __core__chooseList(keys_2, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                key_9 = __core__headList__safe(keys_2);\n                tail_1 = recurse_50(recurse_50, __core__tailList__safe(keys_2));\n                item_5 = (a_8, b_13) -> {\n                    recurse_47 = (recurse_46, keys_1) -> {\n                        __core__chooseList(keys_1, () -> {\n                            __core__mkNilPairData(())\n                        }, () -> {\n                            key_8 = __core__headList__safe(keys_1);\n                            tail = recurse_46(recurse_46, __core__tailList__safe(keys_1));\n                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_8, key_8), __helios__value__get_inner_map_int(b_13, key_8));\n                            __core__ifThenElse(\n                                __core__equalsInteger(sum, 0),\n                                () -> {\n                                    tail\n                                },\n                                () -> {\n                                    __core__mkCons(__core__mkPairData(key_8, __core__iData(sum)), tail)\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_47(recurse_47, __helios__value__merge_map_keys(a_8, b_13))\n                }(__helios__value__get_inner_map(a_10, key_9), __helios__value__get_inner_map(b_15, key_9));\n                __core__chooseList(item_5, () -> {\n                    tail_1\n                }, () -> {\n                    __core__mkCons(__core__mkPairData(key_9, __core__mapData(item_5)), tail_1)\n                })()\n            })()\n        };\n        recurse_51(recurse_51, __helios__value__merge_map_keys(a_10, b_15))\n    };\n    __helios__common__find_safe = (self_107, fn_13) -> {\n        recurse_65 = (recurse_64, self_108, fn_14) -> {\n            __core__chooseList(self_108, () -> {\n                __core__constrData(1, __core__mkNilData(()))\n            }, () -> {\n                head_7 = __core__headList__safe(self_108);\n                __core__ifThenElse(\n                    fn_14(head_7),\n                    () -> {\n                        __core__constrData(0, __core__mkCons(head_7, __core__mkNilData(())))\n                    },\n                    () -> {\n                        recurse_64(recurse_64, __core__tailList__safe(self_108), fn_14)\n                    }\n                )()\n            })()\n        };\n        recurse_65(recurse_65, self_107, fn_13)\n    };\n    __helios__list[__helios__txoutput]__find = (self_109, fn_15) -> {\n        recurse_67 = (recurse_66, lst_12) -> {\n            __core__chooseList(lst_12, () -> {\n                error()\n            }, () -> {\n                item_6 = __core__headList__safe(lst_12);\n                __core__ifThenElse(\n                    fn_15(item_6),\n                    () -> {\n                        item_6\n                    },\n                    () -> {\n                        recurse_66(recurse_66, __core__tailList__safe(lst_12))\n                    }\n                )()\n            })()\n        };\n        recurse_67(recurse_67, self_109)\n    };\n    __module__StellarHeliosHelpers__AnyData[]__type = (self_115) -> {\n        d = __helios__common__mStruct_field(self_115, #747065);\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_6) -> {\n        __core__ifThenElse(\n            __core__chooseData(value_6, () -> {\n                true\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            })(),\n            () -> {\n                (__lhs_0) -> {\n                    fields_12 = __core__sndPair(__core__unConstrData(__lhs_0));\n                    __cond_2 = __core__headList(fields_12);\n                    __core__ifThenElse(\n                        __core__chooseData(__cond_2, () -> {\n                            false\n                        }, () -> {\n                            true\n                        }, () -> {\n                            false\n                        }, () -> {\n                            false\n                        }, () -> {\n                            false\n                        })(),\n                        () -> {\n                            (__lhs_0_1) -> {\n                                __core__headList(fields_12)\n                            }\n                        },\n                        () -> {\n                            (__3) -> {\n                                error()\n                            }\n                        }\n                    )()(__cond_2)\n                }\n            },\n            () -> {\n                (__2) -> {\n                    error()\n                }\n            }\n        )()(value_6)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_119) -> {\n        d = __core__headList(__core__sndPair(__core__unConstrData(self_119)));\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_140, mph_12) -> {\n        __helios__assetclass__new(mph_12, __core__encodeUtf8(d = __core__headList(self_140);\n        __core__decodeUtf8(__core__unBData(d))))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_147, mph_15) -> {\n        (uut) -> {\n            validatorHash = __core__headList(__core__tailList(self_147));\n            ac_1 = __helios__assetclass__new(mph_15, __core__encodeUtf8(uut));\n            hasDelegate = __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),\n                () -> {\n                    (__lhs_0_15) -> {\n                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_15))));\n                        a_3 = __helios__value__get_safe((outputs) -> {\n                            __helios__common__fold(outputs, (prev_3, txOutput) -> {\n                                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))\n                            }, __core__mkNilPairData(()))\n                        }(self_65 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__filter(self_65, (output) -> {\n                            (credential) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),\n                                    () -> {\n                                        __core__equalsByteString(vh_3, self_92 = __helios__common__assert_constr_index(credential, 1);\n                                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_92)))))\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }(self_21 = __core__headList(__core__sndPair(__core__unConstrData(output)));\n                            __core__headList(__core__sndPair(__core__unConstrData(self_21))))\n                        }, __core__mkNilData(()))), ac_1);\n                        __core__ifThenElse(\n                            __core__lessThanEqualsInteger(a_3, 0),\n                            false,\n                            true\n                        )\n                    }\n                },\n                () -> {\n                    (__lhs_0_12) -> {\n                        (__cond_10) -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_10)), 0),\n                                () -> {\n                                    (__lhs_0_14) -> {\n                                        true\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_13) -> {\n                                        false\n                                    }\n                                }\n                            )()(__cond_10)\n                        }(self_146 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__find_safe(self_146, (o) -> {\n                            a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);\n                            __core__ifThenElse(\n                                __core__lessThanEqualsInteger(a_3, 0),\n                                false,\n                                true\n                            )\n                        }))\n                    }\n                }\n            )()(validatorHash);\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __core__ifThenElse(\n                        hasDelegate,\n                        false,\n                        true\n                    ),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        false\n                    }\n                )(),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), hasDelegate)\n        }(d = __core__headList(self_147);\n        __core__decodeUtf8(__core__unBData(d)))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_165) -> {\n        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_165)))))))\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_194) -> {\n        __cond_28 = __core__headList(__core__tailList(self_194));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 0),\n            () -> {\n                (__lhs_0_56) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 1),\n                    () -> {\n                        (__lhs_0_55) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_48) -> {\n                            utxo_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_48))));\n                            (activity) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 2),\n                                    () -> {\n                                        (__lhs_0_54) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 4),\n                                            () -> {\n                                                (__lhs_0_53) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 1),\n                                                    () -> {\n                                                        (__lhs_0_52) -> {\n                                                            activity\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 5),\n                                                            () -> {\n                                                                (__lhs_0_51) -> {\n                                                                    activity\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 3),\n                                                                    () -> {\n                                                                        (__lhs_0_50) -> {\n                                                                            activity\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__lhs_0_49) -> {\n                                                                            activity\n                                                                        }\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()(activity)\n                            }(targetId = __core__headList(__core__sndPair(__core__unConstrData(utxo_2)));\n                            redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));\n                            (spendsExpectedInput) -> {\n                                __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {\n                                    x_4\n                                }, () -> {\n                                    error()\n                                })\n                            }(recurse_71 = (recurse_70, map_22) -> {\n                                __core__chooseList(map_22, () -> {\n                                    error()\n                                }, () -> {\n                                    item_7 = __core__fstPair(__core__headList__safe(map_22));\n                                    __core__ifThenElse(\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(item_7)), 1),\n                                            () -> {\n                                                (sp) -> {\n                                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)\n                                                }\n                                            },\n                                            () -> {\n                                                (__1) -> {\n                                                    false\n                                                }\n                                            }\n                                        )()(item_7),\n                                        () -> {\n                                            item_7\n                                        },\n                                        () -> {\n                                            recurse_70(recurse_70, __core__tailList__safe(map_22))\n                                        }\n                                    )()\n                                })()\n                            };\n                            recurse_71(recurse_71, redeemers)))\n                        }\n                    }\n                )()\n            }\n        )()(__cond_28)\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_195, key_14) -> {\n        __helios__common__map_get(self_195, __core__bData(__core__encodeUtf8(key_14)), (x_5) -> {\n            __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))\n        }, () -> {\n            __core__constrData(1, __core__mkNilData(()))\n        })\n    };\n    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3, self_201) -> {\n        __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(self_167 = __module__CapoHelpers__CapoCtx[]__getCharterData_3(self_201);\n        __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_167))), __core__unBData(__core__headList(self_201)));\n        __core__ifThenElse(\n            cond,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), self_201)\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_207) -> {\n        __cond_33 = __core__headList(__core__tailList(self_207));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 1),\n            () -> {\n                (self_170) -> {\n                    data_139 = __core__headList(__core__sndPair(__core__unConstrData(self_170)));\n                    __helios__common__assert_constr_index(data_139, 0)\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 2),\n                    () -> {\n                        (self_172) -> {\n                            data_139 = __core__headList(__core__sndPair(__core__unConstrData(self_172)));\n                            __helios__common__assert_constr_index(data_139, 0)\n                        }\n                    },\n                    () -> {\n                        (__28) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_33)\n    };\n    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__address, self_208) -> {\n        charterAc_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_208)), #63686172746572);\n        capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_208);\n        __cond_34 = __core__headList(__core__tailList(self_208));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_34)), 2),\n            () -> {\n                (__lhs_0_64) -> {\n                    __helios__common__assert_constr_index(__helios__txoutputdatum__inline(self_51 = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), (txo) -> {\n                        __core__ifThenElse(\n                            __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo))), capoAddr),\n                            () -> {\n                                a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txo))))), charterAc_2);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    });\n                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51)))))), 0)\n                }\n            },\n            () -> {\n                (__29) -> {\n                    error()\n                }\n            }\n        )()(__cond_34)\n    };\n    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1 = (self_209) -> {\n        __cond_35 = __core__headList(__core__tailList(self_209));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 1),\n            () -> {\n                (self_18) -> {\n                    __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 2),\n                    () -> {\n                        (self_18) -> {\n                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))\n                        }\n                    },\n                    () -> {\n                        (__30) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_35)\n    };\n    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_214, __useopt__typeName, id_1) -> {\n        typeName_2 = __core__ifThenElse(\n            __useopt__typeName,\n            () -> {\n                "Reqt"\n            },\n            () -> {\n                ""\n            }\n        )();\n        capoAddr_1 = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_214));\n        (txin_4) -> {\n            __core__ifThenElse(\n                __core__equalsData(__helios__txinput__address(txin_4), capoAddr_1),\n                () -> {\n                    data_161 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_4))));\n                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_161)), 2),\n                        () -> {\n                            (__lhs_0_71) -> {\n                                x_7 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_161);\n                                __core__ifThenElse(\n                                    __core__ifThenElse(\n                                        __core__equalsString(typeName_2, ""),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_7), "Reqt")\n                                        }\n                                    )(),\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsByteString(id_1, #),\n                                            () -> {\n                                                true\n                                            },\n                                            () -> {\n                                                __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_7, #406964)), id_1)\n                                            }\n                                        )()\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }\n                        },\n                        () -> {\n                            (__31) -> {\n                                false\n                            }\n                        }\n                    )()(data_161)\n                },\n                () -> {\n                    false\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput, self_218) -> {\n        charter_1 = __core__headList(__core__tailList(self_218));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 1),\n            () -> {\n                (__lhs_0_81) -> {\n                    self_218\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 2),\n                    () -> {\n                        (__lhs_0_80) -> {\n                            self_218\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_76) -> {\n                            mph_21 = __core__unBData(__core__headList(self_218));\n                            charterAc_3 = __helios__assetclass__new(mph_21, #63686172746572);\n                            (__cond_43) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_43)), 1),\n                                    () -> {\n                                        (__lhs_0_79) -> {\n                                            __module__CapoHelpers__CapoCtx[]__withCharterInput(self_218)\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_78) -> {\n                                            charterUtxo_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_78)));\n                                            datum_4 = __helios__common__assert_constr_index(data_139 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));\n                                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                            __helios__common__assert_constr_index(data_139, 0), 0);\n                                            __core__mkCons(__core__bData(mph_21), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))\n                                        }\n                                    }\n                                )()(__cond_43)\n                            }(self_143 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                            __helios__common__find_safe(self_143, (txin_5) -> {\n                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_5))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_3);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            }))\n                        }\n                    }\n                )()\n            }\n        )()(charter_1)\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_219) -> {\n        charter_2 = __core__headList(__core__tailList(self_219));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),\n            () -> {\n                (__lhs_0_87) -> {\n                    self_219\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),\n                    () -> {\n                        (__lhs_0_86) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_82) -> {\n                            mph_22 = __core__unBData(__core__headList(self_219));\n                            charterAc_4 = __helios__assetclass__new(mph_22, #63686172746572);\n                            (charterUtxo_3) -> {\n                                datum_5 = __helios__common__assert_constr_index(data_139 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_3))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                __helios__common__assert_constr_index(data_139, 0), 0);\n                                __core__mkCons(__core__bData(mph_22), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_3, __core__mkNilData(())))), __core__mkNilData(())))\n                            }((__cond_45) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_45)), 0),\n                                    () -> {\n                                        (self_21) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_84) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_45)\n                            }(self_143 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                            __helios__common__find_safe(self_143, (txin_6) -> {\n                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_6))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_4);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_2)\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_220) -> {\n        charter_3 = __core__headList(__core__tailList(self_220));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 1),\n            () -> {\n                (__lhs_0_91) -> {\n                    self_220\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 2),\n                    () -> {\n                        (__lhs_0_90) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_88) -> {\n                            mph_23 = __core__unBData(__core__headList(self_220));\n                            (utxo_5) -> {\n                                datum_6 = __helios__common__assert_constr_index(data_139 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_5))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                __helios__common__assert_constr_index(data_139, 0), 0);\n                                __core__mkCons(__core__bData(mph_23), __core__mkCons(__core__constrData(1, __core__mkCons(datum_6, __core__mkCons(utxo_5, __core__mkNilData(())))), __core__mkNilData(())))\n                            }(charterAc = __helios__assetclass__new(mph_23, #63686172746572);\n                            (__cond_12) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 0),\n                                    () -> {\n                                        (self_21) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_19) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_12)\n                            }(self_143 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                            __helios__common__find_safe(self_143, (txin) -> {\n                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_3)\n    };\n    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {\n        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed_1)));\n        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed_1)))));\n        idxBytes = __core__serialiseData(__core__iData(seedIdx));\n        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));\n        txoInfo = __core__ifThenElse(\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),\n                false,\n                true\n            ),\n            () -> {\n                error()\n            },\n            () -> {\n                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)\n            }\n        )();\n        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));\n        (p) -> {\n            __core__appendString(__core__appendString(p, "-"), mhs)\n        }\n    };\n    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_230, fn_25) -> {\n        recurse_87 = (recurse_86, map_29) -> {\n            __core__chooseList(map_29, () -> {\n                ()\n            }, () -> {\n                head_43 = __core__headList__safe(map_29);\n                __core__chooseUnit(fn_25(__core__unBData(__core__fstPair(head_43)), __core__unIData(__core__sndPair(head_43))), recurse_86(recurse_86, __core__tailList__safe(map_29)))\n            })()\n        };\n        recurse_87(recurse_87, self_230)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__sort = (self_238, comp_4) -> {\n        recurse_57 = (recurse_56, lst_11) -> {\n            __core__chooseList(lst_11, () -> {\n                lst_11\n            }, () -> {\n                tail_2 = recurse_56(recurse_56, __core__tailList__safe(lst_11));\n                x_3 = __core__headList__safe(lst_11);\n                recurse_55 = (recurse_54, lst_9) -> {\n                    __core__chooseList(lst_9, () -> {\n                        __core__mkCons(x_3, lst_9)\n                    }, () -> {\n                        head_4 = __core__headList__safe(lst_9);\n                        __core__ifThenElse(\n                            comp_4(__core__unBData(__core__fstPair(x_3)), __core__unIData(__core__sndPair(x_3)), __core__unBData(__core__fstPair(head_4)), __core__unIData(__core__sndPair(head_4))),\n                            () -> {\n                                __core__mkCons(x_3, lst_9)\n                            },\n                            () -> {\n                                __core__mkCons(head_4, recurse_54(recurse_54, __core__tailList__safe(lst_9)))\n                            }\n                        )()\n                    })()\n                };\n                recurse_55(recurse_55, tail_2)\n            })()\n        };\n        recurse_57(recurse_57, self_238)\n    };\n    __module__CapoMintHelpers__validateUutMinting = (mph_27, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__otherMintedValue, otherMintedValue) -> {\n        mkTokenName_1 = __core__ifThenElse(\n            __useopt__mkTokenName,\n            () -> {\n                mkTokenName\n            },\n            () -> {\n                __module__CapoMintHelpers__mkUutTnFactory(seed_2)\n            }\n        )();\n        otherMintedValue_1 = __core__ifThenElse(\n            __useopt__otherMintedValue,\n            () -> {\n                otherMintedValue\n            },\n            () -> {\n                __core__mkNilPairData(())\n            }\n        )();\n        (delegateApproval) -> {\n            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);\n            expectedValue = __helios__value____add(__helios__value____add(__core__mkNilPairData(()), otherMintedValue_1), (self_239) -> {\n                recurse_93 = (recurse_92, lst_24) -> {\n                    __core__chooseList(lst_24, () -> {\n                        __core__mkNilPairData(())\n                    }, () -> {\n                        __helios__value____add(__core__unMapData(__core__headList__safe(lst_24)), recurse_92(recurse_92, __core__tailList__safe(lst_24)))\n                    })()\n                };\n                recurse_93(recurse_93, self_239)\n            }(recurse_53 = (recurse_52, rem_1) -> {\n                __core__chooseList(rem_1, () -> {\n                    __core__mkNilData(())\n                }, () -> {\n                    __core__mkCons(__core__mapData(purpose_2 = __core__decodeUtf8(__core__unBData(__core__headList__safe(rem_1)));\n                    tnBytes_1 = __core__encodeUtf8(mkTokenName_1(purpose_2));\n                    __core__chooseUnit(__core__ifThenElse(\n                        __core__ifThenElse(\n                            __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),\n                            false,\n                            true\n                        ),\n                        () -> {\n                            ()\n                        },\n                        () -> {\n                            error()\n                        }\n                    )(), __helios__value__new(__helios__assetclass__new(mph_27, tnBytes_1), 1))), recurse_52(recurse_52, __core__tailList__safe(rem_1)))\n                })()\n            };\n            recurse_53(recurse_53, purposes)));\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __helios__value__contains_policy(valueMinted, mph_27),\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_27), (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_3, i_15) -> {\n                ()\n            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, mph_27);\n            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_2, i_14) -> {\n                ()\n            }), msg_1 = __helios__value__show(__helios__common__filter(valueMinted, (pair_39) -> {\n                (b_21, __38) -> {\n                    __core__ifThenElse(\n                        __core__equalsByteString(b_21, mph_27),\n                        false,\n                        true\n                    )\n                }(__core__unBData(__core__fstPair(pair_39)), __core__unMapData(__core__sndPair(pair_39)))\n            }, __core__mkNilPairData(())));\n            ()), thisPolicyMintOK = __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted));\n            __core__chooseUnit(__core__ifThenElse(\n                thisPolicyMintOK,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__chooseUnit(cond = __core__chooseUnit(__core__ifThenElse(\n                b = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), (input_4) -> {\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_4))), seed_2)\n                });\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), true);\n            (), otherPoliciesMintOk = __core__ifThenElse(\n                b = __helios__value__is_zero(otherMintedValue_1);\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    true\n                },\n                () -> {\n                    remainingExpectedMint = __core__ifThenElse(\n                        __helios__value__contains_policy(expectedValue, mph_27),\n                        () -> {\n                            key_23 = __core__bData(mph_27);\n                            recurse_91 = (recurse_90, self_236) -> {\n                                __core__chooseList(self_236, () -> {\n                                    self_236\n                                }, () -> {\n                                    head_45 = __core__headList__safe(self_236);\n                                    tail_4 = __core__tailList__safe(self_236);\n                                    __core__ifThenElse(\n                                        __core__equalsData(key_23, __core__fstPair(head_45)),\n                                        () -> {\n                                            recurse_90(recurse_90, tail_4)\n                                        },\n                                        () -> {\n                                            __core__mkCons(head_45, recurse_90(recurse_90, tail_4))\n                                        }\n                                    )()\n                                })()\n                            };\n                            recurse_91(recurse_91, expectedValue)\n                        },\n                        () -> {\n                            expectedValue\n                        }\n                    )();\n                    __core__ifThenElse(\n                        __helios__value__is_zero(remainingExpectedMint),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__chooseUnit(recurse_89 = (recurse_88, map_30) -> {\n                                __core__chooseList(map_30, () -> {\n                                    ()\n                                }, () -> {\n                                    head_44 = __core__headList__safe(map_30);\n                                    __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {\n                                        mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);\n                                        __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_3, expectedCount) -> {\n                                            __core__ifThenElse(\n                                                (b) -> {\n                                                    __core__ifThenElse(\n                                                        b,\n                                                        false,\n                                                        true\n                                                    )\n                                                }(__cond_55 = __helios__common__map_get(mintedThisPolicy, __core__bData(tokenName_3), (x_12) -> {\n                                                    __core__constrData(0, __core__mkCons(x_12, __core__mkNilData(())))\n                                                }, () -> {\n                                                    __core__constrData(1, __core__mkNilData(()))\n                                                });\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_55)), 1),\n                                                    () -> {\n                                                        (__lhs_0_114) -> {\n                                                            false\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        (__lhs_0_113) -> {\n                                                            actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_113))));\n                                                            __core__equalsInteger(actualCount, expectedCount)\n                                                        }\n                                                    }\n                                                )()(__cond_55)),\n                                                () -> {\n                                                    error()\n                                                },\n                                                () -> {\n                                                    ()\n                                                }\n                                            )()\n                                        })\n                                    }(__core__unBData(__core__fstPair(head_44)), __core__unMapData(__core__sndPair(head_44))), recurse_88(recurse_88, __core__tailList__safe(map_30)))\n                                })()\n                            };\n                            recurse_89(recurse_89, remainingExpectedMint), true)\n                        }\n                    )()\n                }\n            )();\n            __core__chooseUnit(__core__ifThenElse(\n                otherPoliciesMintOk,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__ifThenElse(\n                thisPolicyMintOK,\n                () -> {\n                    otherPoliciesMintOk\n                },\n                () -> {\n                    false\n                }\n            )()))))))\n        }(__lhs_0_112 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n        charterAc_1 = __helios__assetclass__new(mph_27, #63686172746572);\n        hasCharter_1 = (txin_1) -> {\n            a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));\n            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_1);\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(a_3, 0),\n                false,\n                true\n            )\n        };\n        (charterUtxo_1) -> {\n            __helios__common__assert_constr_index(data_139 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));\n            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n            __helios__common__assert_constr_index(data_139, 0), 0)\n        }(__cond_13 = __helios__common__find_safe(refInputs_1, hasCharter_1);\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_13)), 0),\n            () -> {\n                (self_21) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                }\n            },\n            () -> {\n                (__lhs_0_21) -> {\n                    (__cond_14) -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 0),\n                            () -> {\n                                (self_21) -> {\n                                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                }\n                            },\n                            () -> {\n                                (__lhs_0_22) -> {\n                                    error()\n                                }\n                            }\n                        )()(__cond_14)\n                    }(self_143 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                    __helios__common__find_safe(self_143, hasCharter_1))\n                }\n            }\n        )()(__cond_13)), 0);\n        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_112);\n        true)\n    };\n    __module__ReqtsPolicy__daysInFuture = () -> {\n        __core__chooseUnit(cond = __core__lessThanEqualsInteger(__core__subtractInteger(__helios__timerange__end(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))))), __helios__timerange__start(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))), 3600000);\n        __core__ifThenElse(\n            cond,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), latestAcceptable = __core__addInteger(__core__addInteger(__helios__timerange__end(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))))), 6307200000), 3600000);\n        a_4 = __core__addInteger(__helios__timerange__start(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))))), 6307200000);\n        __core__constrData(0, __core__mkCons(__core__constrData(0, __core__mkCons(__core__constrData(1, __core__mkCons(__core__iData(a_4), __core__mkNilData(()))), __core__mkCons(__core__constrData(1, __core__mkNilData(())), __core__mkNilData(())))), __core__mkCons(__core__constrData(0, __core__mkCons(__core__constrData(1, __core__mkCons(__core__iData(latestAcceptable), __core__mkNilData(()))), __core__mkCons(__core__constrData(1, __core__mkNilData(())), __core__mkNilData(())))), __core__mkNilData(())))))\n    };\n    __module__BasicDelegate__checkOneActivity_1 = (__module__BasicDelegate__checkOneActivity, dgtionDatum, activity_3, dd, baseCctx) -> {\n        checkNonDelegatedActivities = __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 8),\n            () -> {\n                (__lhs_0_237) -> {\n                    activities_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_237))));\n                    cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx);\n                    __helios__common__all(activities_2, (rawActivity_2) -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 6),\n                            () -> {\n                                (__lhs_0_258) -> {\n                                    error()\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 5),\n                                    () -> {\n                                        (__lhs_0_257) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 7),\n                                            () -> {\n                                                (__lhs_0_256) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 2),\n                                                    () -> {\n                                                        (__lhs_0_255) -> {\n                                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity_2, dd, cctx_6)\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 3),\n                                                            () -> {\n                                                                (__lhs_0_254) -> {\n                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity_2, dd, cctx_6)\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 4),\n                                                                    () -> {\n                                                                        (__lhs_0_253) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 1),\n                                                                            () -> {\n                                                                                (__lhs_0_252) -> {\n                                                                                    error()\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 0),\n                                                                                    () -> {\n                                                                                        (__lhs_0_251) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__lhs_0_250) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()\n                            }\n                        )()(rawActivity_2)\n                    })\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                    () -> {\n                        (__lhs_0_231) -> {\n                            innerActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_231)));\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 0),\n                                () -> {\n                                    (__lhs_0_235) -> {\n                                        seed_9 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_235)));\n                                        (purpose_8) -> {\n                                            otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__core__unBData(__core__headList(__core__tailList(dd))), __core__unBData(__core__headList(__core__tailList(__core__tailList(dd))))), -1);\n                                            (tnStr_3) -> {\n                                                cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(baseCctx);\n                                                (isUpdatingCharter) -> {\n                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_9, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_8)), __core__mkNilData(())), false, (), true, otherMintedValue_2);\n                                                    __core__ifThenElse(\n                                                        isMintingOk,\n                                                        () -> {\n                                                            isUpdatingCharter\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                }(__cond_108 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5);\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_108)), 5),\n                                                    () -> {\n                                                        (__lhs_0_236) -> {\n                                                            true\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        (__73) -> {\n                                                            false\n                                                        }\n                                                    }\n                                                )()(__cond_108))\n                                            }(self_14 = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd))));\n                                            __core__ifThenElse(\n                                                __helios__string__is_valid_utf8(self_14),\n                                                () -> {\n                                                    __core__decodeUtf8__safe(self_14)\n                                                },\n                                                () -> {\n                                                    __helios__bytearray__show(self_14)\n                                                }\n                                            )())\n                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_235))));\n                                        __core__decodeUtf8(__core__unBData(d)))\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 1),\n                                        () -> {\n                                            (__lhs_0_234) -> {\n                                                __core__equalsInteger((self_24, assetClass_1) -> {\n                                                    __common29 = __core__unConstrData(assetClass_1);\n                                                    __common30 = __core__sndPair(__common29);\n                                                    mph_3 = __core__headList(__common30);\n                                                    tokenName_1 = __core__headList(__core__tailList(__common30));\n                                                    outer_1 = (outer, inner, map) -> {\n                                                        __core__chooseList(map, () -> {\n                                                            error()\n                                                        }, () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_3),\n                                                                () -> {\n                                                                    inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))\n                                                                },\n                                                                () -> {\n                                                                    outer(outer, inner, __core__tailList__safe(map))\n                                                                }\n                                                            )()\n                                                        })()\n                                                    };\n                                                    outer_1(outer_1, (inner_1, map_1) -> {\n                                                        __core__chooseList(map_1, () -> {\n                                                            error()\n                                                        }, () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),\n                                                                () -> {\n                                                                    __core__unIData(__core__sndPair(__core__headList__safe(map_1)))\n                                                                },\n                                                                () -> {\n                                                                    inner_1(inner_1, __core__tailList__safe(map_1))\n                                                                }\n                                                            )()\n                                                        })()\n                                                    }, self_24)\n                                                }(__helios__tx__minted(__helios__scriptcontext__tx), __helios__assetclass__new(__core__unBData(__core__headList(__core__tailList(dd))), __core__unBData(__core__headList(__core__tailList(__core__tailList(dd)))))), -1)\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0_232) -> {\n                                                error()\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(innerActivity)\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                            () -> {\n                                (__lhs_0_132) -> {\n                                    dCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_132)));\n                                    cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__withCharterInput_1(mph_25 = __core__unBData(__core__headList(__core__tailList(dd)));\n                                    __core__mkCons(__core__bData(mph_25), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(())))));\n                                    __common17 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);\n                                    __core__chooseUnit(__cond_105 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4);\n                                    __common28 = __core__fstPair(__core__unConstrData(__cond_105));\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__common28, 0),\n                                        () -> {\n                                            (__lhs_0_230) -> {\n                                                cCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_230)));\n                                                __core__ifThenElse(\n                                                    __core__equalsData(cCLA, dCLA),\n                                                    () -> {\n                                                        ()\n                                                    },\n                                                    () -> {\n                                                        error()\n                                                    }\n                                                )()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__common28, 5),\n                                                () -> {\n                                                    (__lhs_0_228) -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                                            () -> {\n                                                                (__lhs_0_229) -> {\n                                                                    ()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__72) -> {\n                                                                    error()\n                                                                }\n                                                            }\n                                                        )()(dCLA)\n                                                    }\n                                                },\n                                                () -> {\n                                                    (__71) -> {\n                                                        error()\n                                                    }\n                                                }\n                                            )()\n                                        }\n                                    )()(__cond_105), neededRole = __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 4),\n                                        () -> {\n                                            (__lhs_0_102) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                () -> {\n                                                    (__lhs_0_101) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                        () -> {\n                                                            (__lhs_0_100) -> {\n                                                                __core__constrData(1, __core__mkNilData(()))\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                                () -> {\n                                                                    (__lhs_0_99) -> {\n                                                                        __core__constrData(0, __core__mkNilData(()))\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                                        () -> {\n                                                                            (__lhs_0_98) -> {\n                                                                                __core__constrData(1, __core__mkNilData(()))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                                () -> {\n                                                                                    (__lhs_0_97) -> {\n                                                                                        __core__constrData(6, __core__mkNilData(()))\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    (__lhs_0_96) -> {\n                                                                                        __core__constrData(0, __core__mkNilData(()))\n                                                                                    }\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()(dCLA);\n                                    myCurrentRole = __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 7),\n                                        () -> {\n                                            (__lhs_0_136) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 1),\n                                                () -> {\n                                                    (__lhs_0_135) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 0),\n                                                        () -> {\n                                                            (__lhs_0_134) -> {\n                                                                error()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 6),\n                                                                () -> {\n                                                                    __common15 = __core__headList(cctx_4);\n                                                                    __common16 = __core__unBData(__common15);\n                                                                    (__lhs_0_133) -> {\n                                                                        __core__ifThenElse(\n                                                                            input_2 = __helios__scriptcontext__get_current_input();\n                                                                            acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__common17), __common16);\n                                                                            a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_2))));\n                                                                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), acMintDgt);\n                                                                            __core__ifThenElse(\n                                                                                __core__lessThanEqualsInteger(a_3, 0),\n                                                                                false,\n                                                                                true\n                                                                            ),\n                                                                            () -> {\n                                                                                __core__constrData(0, __core__mkNilData(()))\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    input_3 = __helios__scriptcontext__get_current_input();\n                                                                                    acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__common17)))), __common16);\n                                                                                    a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_3))));\n                                                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), acSpendDgt);\n                                                                                    __core__ifThenElse(\n                                                                                        __core__lessThanEqualsInteger(a_3, 0),\n                                                                                        false,\n                                                                                        true\n                                                                                    ),\n                                                                                    () -> {\n                                                                                        __core__constrData(1, __core__mkNilData(()))\n                                                                                    },\n                                                                                    () -> {\n                                                                                        error()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    (__41) -> {\n                                                                        error()\n                                                                    }\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()(neededRole);\n                                    __core__ifThenElse(\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                            () -> {\n                                                (__lhs_0_224) -> {\n                                                    seed_8 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_224)));\n                                                    (purpose_7) -> {\n                                                        mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                            () -> {\n                                                                (__lhs_0_225) -> {\n                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                        __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_8, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_7)), __core__mkNilData(())), true, mkTn_1, false, ()),\n                                                                        () -> {\n                                                                            ()\n                                                                        },\n                                                                        () -> {\n                                                                            ()\n                                                                        }\n                                                                    )(), (__cond_104) -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_104)), 1),\n                                                                            () -> {\n                                                                                (__lhs_0_227) -> {\n                                                                                    error()\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__lhs_0_226) -> {\n                                                                                    dgtLink_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_226))));\n                                                                                    __core__chooseUnit(cond = __core__equalsString(d = __core__headList(dgtLink_3);\n                                                                                    __core__decodeUtf8(__core__unBData(d)), mkTn_1(purpose_7));\n                                                                                    __core__ifThenElse(\n                                                                                        cond,\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3, __core__unBData(__core__headList(__core__tailList(dd)))))\n                                                                                }\n                                                                            }\n                                                                        )()(__cond_104)\n                                                                    }((self_203) -> {\n                                                                        __helios__common__map_get(self_203, __core__bData(__core__encodeUtf8(purpose_7)), (x_6) -> {\n                                                                            __core__constrData(0, __core__mkCons(x_6, __core__mkNilData(())))\n                                                                        }, () -> {\n                                                                            __core__constrData(1, __core__mkNilData(()))\n                                                                        })\n                                                                    }(self_164 = __module__CapoHelpers__CapoCtx[]__getNextCharterData((self_211) -> {\n                                                                        __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_211))\n                                                                    }, cctx_4);\n                                                                    __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_164)))))))))\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__70) -> {\n                                                                    error()\n                                                                }\n                                                            }\n                                                        )()(myCurrentRole)\n                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_224))));\n                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                    () -> {\n                                                        (__lhs_0_172) -> {\n                                                            charterData_4 = __helios__common__assert_constr_index(__common17, 0);\n                                                            __common0 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))));\n                                                            nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData((self_211) -> {\n                                                                __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_211))\n                                                            }, cctx_4);\n                                                            nextChangeList = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData_2)))));\n                                                            newChange = __core__headList(nextChangeList);\n                                                            __lhs_0_173 = __helios__common__assert_constr_index(newChange, 0);\n                                                            __lhs_0_0_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_173))));\n                                                            __common8 = __core__tailList(__lhs_0_0_2);\n                                                            action = __core__headList(__lhs_0_0_2);\n                                                            __common20 = __core__unConstrData(action);\n                                                            __common22 = __core__equalsInteger(__core__fstPair(__common20), 1);\n                                                            role_2 = __core__headList(__common8);\n                                                            __common3 = __core__equalsInteger(__core__fstPair(__core__unConstrData(role_2)), 4);\n                                                            OdgtLink = __core__headList(__core__tailList(__common8));\n                                                            newDgtRoleName = __core__ifThenElse(\n                                                                __common3,\n                                                                () -> {\n                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name\n                                                                },\n                                                                () -> {\n                                                                    (__54) -> {\n                                                                        error()\n                                                                    }\n                                                                }\n                                                            )()(role_2);\n                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                __common22,\n                                                                () -> {\n                                                                    (__lhs_0_222) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    (__68) -> {\n                                                                        ()\n                                                                    }\n                                                                }\n                                                            )()(action), __core__chooseUnit((cond) -> {\n                                                                __core__ifThenElse(\n                                                                    cond,\n                                                                    () -> {\n                                                                        ()\n                                                                    },\n                                                                    () -> {\n                                                                        error()\n                                                                    }\n                                                                )()\n                                                            }(self_261 = __core__tailList(nextChangeList);\n                                                            __core__equalsData(__core__listData(self_261), __core__listData(__common0))), __core__ifThenElse(\n                                                                __common22,\n                                                                () -> {\n                                                                    (__lhs_0_221) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                        () -> {\n                                                                            (__lhs_0_220) -> {\n                                                                                __common23 = __core__sndPair(__core__unConstrData(__lhs_0_220));\n                                                                                __common24 = __core__tailList(__common23);\n                                                                                seed_7 = __core__headList(__common23);\n                                                                                (purpose_6) -> {\n                                                                                    (idPrefix_9) -> {\n                                                                                        (callback_14) -> {\n                                                                                            callback_14(seed_7, purpose_6, idPrefix_9)\n                                                                                        }\n                                                                                    }(d = __core__headList(__core__tailList(__common24));\n                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                }(d = __core__headList(__common24);\n                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            (__lhs_0_219) -> {\n                                                                                seed_6 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_219)));\n                                                                                (purpose_5) -> {\n                                                                                    (idPrefix_8) -> {\n                                                                                        (callback_13) -> {\n                                                                                            callback_13(seed_6, purpose_5, idPrefix_8)\n                                                                                        }\n                                                                                    }(d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_219)))));\n                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_219))));\n                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                            }\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()(action)((seed_5, purpose_4, pendingActionIdPrefix) -> {\n                                                                possibleMintDgtVerifications = __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                    () -> {\n                                                                        (__lhs_0_191) -> {\n                                                                            true\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                            () -> {\n                                                                                (__lhs_0_175) -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 1),\n                                                                                        () -> {\n                                                                                            (__lhs_0_183) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__56) -> {\n                                                                                                mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);\n                                                                                                mintedDgTkn = __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_5, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_4)), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, ());\n                                                                                                dgtLink_2 = __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(OdgtLink)), 1),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_177) -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (self_202) -> {\n                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_202))))\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()(OdgtLink);\n                                                                                                (__common1) -> {\n                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                        __core__equalsString(__common1, mkTokenName_2(purpose_4)),\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), (delegateTakesOwnership) -> {\n                                                                                                        possibleExtraReplacementCheck = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_178) -> {\n                                                                                                                    __core__chooseUnit(__cond_86 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_86)), 0),\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_180) -> {\n                                                                                                                                dde = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_180)));\n                                                                                                                                entryType_1 = __helios__common__mStruct_field(dde, #747065);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_1)), 1),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_182) -> {\n                                                                                                                                            (idPrefix_7) -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __core__equalsString(idPrefix_7, pendingActionIdPrefix),\n                                                                                                                                                    () -> {\n                                                                                                                                                        ()\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_182))));\n                                                                                                                                            __core__decodeUtf8(__core__unBData(d)))\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__58) -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(entryType_1)\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_179) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(__cond_86), true)\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                (__57) -> {\n                                                                                                                    true\n                                                                                                                }\n                                                                                                            }\n                                                                                                        )()(action);\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__ifThenElse(\n                                                                                                                mintedDgTkn,\n                                                                                                                () -> {\n                                                                                                                    true\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    false\n                                                                                                                }\n                                                                                                            )(),\n                                                                                                            () -> {\n                                                                                                                possibleExtraReplacementCheck\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                false\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }(assertion_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2, __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                        assertion_2,\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), true)))\n                                                                                                }(d = __core__headList(dgtLink_2);\n                                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                                            }\n                                                                                        }\n                                                                                    )()(action)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__55) -> {\n                                                                                    error()\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()(myCurrentRole);\n                                                                otherPossibleVerifications = __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                    () -> {\n                                                                        (__lhs_0_218) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                            () -> {\n                                                                                (__lhs_0_192) -> {\n                                                                                    isNotADuplicate = __helios__common__all(__common0, (pdChange_2) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(pdChange_2)), 0),\n                                                                                            () -> {\n                                                                                                (__lhs_0_193) -> {\n                                                                                                    __lhs_0_0_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_193))));\n                                                                                                    pendingRole = __core__headList(__core__tailList(__lhs_0_0_3));\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(pendingRole)), 4),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_194) -> {\n                                                                                                                changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_194);\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsString(changingDgtName, newDgtRoleName),\n                                                                                                                    false,\n                                                                                                                    true\n                                                                                                                )\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__62) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()(pendingRole)\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__61) -> {\n                                                                                                    error()\n                                                                                                }\n                                                                                            }\n                                                                                        )()(pdChange_2)\n                                                                                    });\n                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                        isNotADuplicate,\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )(), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                    possibleReplacementIsCorrect = __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                                        () -> {\n                                                                                            (__lhs_0_216) -> {\n                                                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 0),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_217) -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__67) -> {\n                                                                                                            ()\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()(existingRoleEntryMaybe), true)\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                () -> {\n                                                                                                    __common18 = __core__unConstrData(role_2);\n                                                                                                    __common19 = __core__fstPair(__common18);\n                                                                                                    __common25 = __core__equalsInteger(__common19, 2);\n                                                                                                    (__lhs_0_197) -> {\n                                                                                                        replacesDgt = __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_197))))));\n                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                            __common25,\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_215) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(__common19, 3),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_214) -> {\n                                                                                                                            error()\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__common19, 7),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_213) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__66) -> {\n                                                                                                                                    ()\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(role_2), existingDgtLink_1 = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 1),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_200) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_198) -> {\n                                                                                                                    __lhs_0_0_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_198)));\n                                                                                                                    entryType_2 = __helios__common__mStruct_field(__lhs_0_0_4, #747065);\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_2)), 1),\n                                                                                                                        () -> {\n                                                                                                                            (self_156) -> {\n                                                                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_156))))\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__64) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(entryType_2)\n                                                                                                                }\n                                                                                                            }\n                                                                                                        )()(existingRoleEntryMaybe);\n                                                                                                        existingDgTkn = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__common19, 0),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_208) -> {\n                                                                                                                    some_5 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4), __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                                    __core__constrData(0, __core__mkCons(some_5, __core__mkNilData(())))\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(__common19, 1),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_207) -> {\n                                                                                                                            some_5 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_4)))), __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                                            __core__constrData(0, __core__mkCons(some_5, __core__mkNilData(())))\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __common3,\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_206) -> {\n                                                                                                                                    some_5 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1, __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                                                    __core__constrData(0, __core__mkCons(some_5, __core__mkNilData(())))\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__common19, 5),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_205) -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(__common19, 6),\n                                                                                                                                            () -> {\n                                                                                                                                                (__lhs_0_204) -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __common25,\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_203) -> {\n                                                                                                                                                            error()\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __core__equalsInteger(__common19, 3),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_202) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_201) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        )()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }\n                                                                                                                                        )()\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(role_2);\n                                                                                                        __core__chooseUnit(cond = __core__equalsData(replacesDgt, __core__headList(__core__sndPair(__core__unConstrData(existingDgTkn))));\n                                                                                                        __core__ifThenElse(\n                                                                                                            cond,\n                                                                                                            () -> {\n                                                                                                                ()\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        )(), true))\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__lhs_0_195) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(action);\n                                                                                    __core__ifThenElse(\n                                                                                        isNotADuplicate,\n                                                                                        () -> {\n                                                                                            possibleReplacementIsCorrect\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )())\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__60) -> {\n                                                                                    error()\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()(myCurrentRole);\n                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                    __core__equalsInteger(recurse_19 = (recurse_18, lst_4) -> {\n                                                                        __core__chooseList(lst_4, () -> {\n                                                                            0\n                                                                        }, () -> {\n                                                                            __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)\n                                                                        })()\n                                                                    };\n                                                                    recurse_19(recurse_19, __common0), 0),\n                                                                    () -> {\n                                                                        ()\n                                                                    },\n                                                                    () -> {\n                                                                        error()\n                                                                    }\n                                                                )(), __core__ifThenElse(\n                                                                    possibleMintDgtVerifications,\n                                                                    () -> {\n                                                                        otherPossibleVerifications\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )())\n                                                            })))\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                            () -> {\n                                                                (__lhs_0_171) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                    () -> {\n                                                                        (__lhs_0_148) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                                            () -> {\n                                                                                (__lhs_0_139) -> {\n                                                                                    manifestActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_139)));\n                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 0),\n                                                                                        () -> {\n                                                                                            (__lhs_0_147) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 1),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_146) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 2),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_141) -> {\n                                                                                                                (key_31) -> {\n                                                                                                                    tokenName_5 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_141)))));\n                                                                                                                    charterData_3 = __helios__common__assert_constr_index(__common17, 0);\n                                                                                                                    nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData((self_211) -> {\n                                                                                                                        __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_211))\n                                                                                                                    }, cctx_4);\n                                                                                                                    __common2 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData))));\n                                                                                                                    (refInput) -> {\n                                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                                            __core__equalsData(refInput, refInput),\n                                                                                                                            () -> {\n                                                                                                                                ()\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        )(), __core__chooseUnit(__cond_64 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__common2, key_31);\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_64)), 1),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_145) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_142) -> {\n                                                                                                                                    __lhs_0_0 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_142)));\n                                                                                                                                    entryType = __helios__common__mStruct_field(__lhs_0_0, #747065);\n                                                                                                                                    tn_4 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0, #746e));\n                                                                                                                                    mph_28 = __helios__common__mStruct_field(__lhs_0_0, #6d7068);\n                                                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                        __core__equalsByteString(tn_4, tokenName_5),\n                                                                                                                                        () -> {\n                                                                                                                                            ()\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    )(), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_28)), 0),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_144) -> {\n                                                                                                                                                error()\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__44) -> {\n                                                                                                                                                ()\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(mph_28), __core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType)), 0),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_143) -> {\n                                                                                                                                                ()\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__43) -> {\n                                                                                                                                                error()\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(entryType)))\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()(__cond_64), (cond) -> {\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                cond,\n                                                                                                                                () -> {\n                                                                                                                                    ()\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            )()\n                                                                                                                        }(self_278 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_3))));\n                                                                                                                        __core__equalsData(__core__mapData(self_278), __core__mapData(key_30 = __core__bData(__core__encodeUtf8(key_31));\n                                                                                                                        recurse_101 = (recurse_100, self_277) -> {\n                                                                                                                            __core__chooseList(self_277, () -> {\n                                                                                                                                self_277\n                                                                                                                            }, () -> {\n                                                                                                                                head_49 = __core__headList__safe(self_277);\n                                                                                                                                tail_6 = __core__tailList__safe(self_277);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsData(key_30, __core__fstPair(head_49)),\n                                                                                                                                    () -> {\n                                                                                                                                        recurse_100(recurse_100, tail_6)\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __core__mkCons(head_49, recurse_100(recurse_100, tail_6))\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            })()\n                                                                                                                        };\n                                                                                                                        recurse_101(recurse_101, __common2))))))\n                                                                                                                    }(hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_4, false, tokenName_5);\n                                                                                                                    recIdStr = __core__decodeUtf8(tokenName_5);\n                                                                                                                    (__cond_36) -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 1),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_68) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_67) -> {\n                                                                                                                                    __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_67)))\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()(__cond_36)\n                                                                                                                    }(self_143 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                                                                                                                    __helios__common__find_safe(self_143, hasDD)))\n                                                                                                                }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_141)));\n                                                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 3),\n                                                                                                                () -> {\n                                                                                                                    (__lhs_0_140) -> {\n                                                                                                                        error()\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    (__42) -> {\n                                                                                                                        ()\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(manifestActivity), true)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                                                    () -> {\n                                                                                        (__lhs_0_138) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__lhs_0_137) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()(dCLA),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )())\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 5),\n                                    () -> {\n                                        (__lhs_0_131) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 6),\n                                            () -> {\n                                                (__lhs_0_130) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 7),\n                                                    () -> {\n                                                        (__lhs_0_128) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),\n                                                            () -> {\n                                                                (__lhs_0_127) -> {\n                                                                    true\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),\n                                                                    () -> {\n                                                                        (__lhs_0_126) -> {\n                                                                            true\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__lhs_0_125) -> {\n                                                                            true\n                                                                        }\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()\n                            }\n                        )()\n                    }\n                )()\n            }\n        )()(activity_3);\n        __core__chooseUnit(__core__ifThenElse(\n            checkNonDelegatedActivities,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), __core__ifThenElse(\n            cctx = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1, baseCctx);\n            __core__ifThenElse(\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                    () -> {\n                        (__lhs_0_122) -> {\n                            true\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                            () -> {\n                                (__lhs_0_121) -> {\n                                    error()\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),\n                                    () -> {\n                                        __common26 = __core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx));\n                                        __common27 = __core__tailList(__common26);\n                                        __common31 = __core__headList(__common27);\n                                        (__lhs_0_119) -> {\n                                            VMA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_119)));\n                                            seed_3 = __core__headList(__core__sndPair(__core__unConstrData(VMA)));\n                                            mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);\n                                            __core__chooseUnit((cond) -> {\n                                                ()\n                                            }(self_227 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx);\n                                            true), (newReqt) -> {\n                                                reqtData_1 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(newReqt))))));\n                                                __core__chooseUnit(cond = __core__lessThanEqualsInteger(__core__subtractInteger(__helios__timerange__end(__common31), __helios__timerange__start(__common31)), 3600000);\n                                                __core__ifThenElse(\n                                                    cond,\n                                                    () -> {\n                                                        ()\n                                                    },\n                                                    () -> {\n                                                        error()\n                                                    }\n                                                )(), acceptableExpiry = __module__ReqtsPolicy__daysInFuture();\n                                                discountEnds = __core__unIData(__helios__common__mStruct_field(reqtData_1, #657870));\n                                                __core__chooseUnit((cond, msg_2) -> {\n                                                    __core__ifThenElse(\n                                                        cond,\n                                                        () -> {\n                                                            ()\n                                                        },\n                                                        () -> {\n                                                            error()\n                                                        }\n                                                    )()\n                                                }(__helios__timerange__contains(acceptableExpiry, discountEnds), __core__appendString("wrong discount expiry date too late seconds: ", __helios__int__show(__core__quotientInteger(__core__subtractInteger(discountEnds, __helios__timerange__end(acceptableExpiry)), 1000)))), __module__CapoMintHelpers__validateUutMinting(self_152 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(dgtionDatum))));\n                                                __core__unBData(__core__headList(__core__tailList(self_152))), seed_3, __core__mkCons(__core__bData(#72657174), __core__mkNilData(())), true, mkTn, false, ())))\n                                            }(recId_5 = __core__encodeUtf8(mkTn("reqt"));\n                                            recIdStr_3 = __core__decodeUtf8(recId_5);\n                                            ac_2 = __helios__assetclass__new(__core__unBData(__core__headList(cctx)), recId_5);\n                                            capoAddr_3 = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(cctx));\n                                            (__cond_41) -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_41)), 1),\n                                                    () -> {\n                                                        (__lhs_0_75) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        (__lhs_0_74) -> {\n                                                            __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_74)))\n                                                        }\n                                                    }\n                                                )()(__cond_41)\n                                            }(self_146 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                                            __helios__common__find_safe(self_146, (txout) -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txout))))), ac_2), 1),\n                                                    () -> {\n                                                        __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txout))), capoAddr_3)\n                                                    },\n                                                    () -> {\n                                                        false\n                                                    }\n                                                )()\n                                            }))))\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),\n                                            () -> {\n                                                (__lhs_0_115) -> {\n                                                    VSA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_115)));\n                                                    __core__chooseUnit(msg_1 = __core__appendString("capo mph: ", __helios__bytearray__show(self_152 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(dgtionDatum))));\n                                                    __core__unBData(__core__headList(__core__tailList(self_152)))));\n                                                    (), __core__chooseUnit((cond) -> {\n                                                        ()\n                                                    }(self_227 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx);\n                                                    true), __core__chooseUnit(msg_1 = __core__appendString("\ncapo addr", self_56 = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(cctx));\n                                                    __helios__data__show_constr_data((tag_5, fields_7) -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(tag_5, 0),\n                                                            () -> {\n                                                                __core__appendString("{spending_credential:", __core__appendString(__helios__data__show_field(0, (self_52) -> {\n                                                                    __helios__data__show_constr_data((tag_2, fields_3) -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(tag_2, 0),\n                                                                            () -> {\n                                                                                __core__appendString("PubKey{hash:", __core__appendString(__helios__data__show_field(0, __helios__data__show_bdata(__helios__bytearray__show), fields_3), "}"))\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(tag_2, 1),\n                                                                                    () -> {\n                                                                                        __core__appendString("Validator{hash:", __core__appendString(__helios__data__show_field(0, __helios__data__show_bdata(__helios__bytearray__show), fields_3), "}"))\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __helios__data__show(__core__constrData(tag_2, fields_3))()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }, self_52)\n                                                                }, fields_7), __core__appendString(",staking_credential:", __core__appendString(__helios__data__show_field(1, (self_55) -> {\n                                                                    __core__chooseData(self_55, () -> {\n                                                                        pair_6 = __core__unConstrData__safe(self_55);\n                                                                        fields_6 = __core__sndPair(pair_6);\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(pair_6), 0),\n                                                                            () -> {\n                                                                                __core__chooseList(fields_6, () -> {\n                                                                                    "Some{<missing>}"\n                                                                                }, () -> {\n                                                                                    value_2 = __core__headList__safe(fields_6);\n                                                                                    __core__appendString("Some{", __core__appendString(__helios__data__show_constr_data((tag_4, fields_5) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(tag_4, 0),\n                                                                                            () -> {\n                                                                                                __core__appendString("Hash{hash:", __core__appendString(__helios__data__show_field(0, (self_53) -> {\n                                                                                                    __helios__data__show_constr_data((tag_3, fields_4) -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__equalsInteger(tag_3, 0),\n                                                                                                            () -> {\n                                                                                                                __core__appendString("StakeKey{hash:", __core__appendString(__helios__data__show_field(0, __helios__data__show_bdata(__helios__bytearray__show), fields_4), "}"))\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(tag_3, 1),\n                                                                                                                    () -> {\n                                                                                                                        __core__appendString("Validator{hash:", __core__appendString(__helios__data__show_field(0, __helios__data__show_bdata(__helios__bytearray__show), fields_4), "}"))\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __helios__data__show(__core__constrData(tag_3, fields_4))()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }, self_53)\n                                                                                                }, fields_5), "}"))\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__equalsInteger(tag_4, 1),\n                                                                                                    () -> {\n                                                                                                        __common6 = __helios__data__show_field(2, (data_13) -> {\n                                                                                                            callback_nok_6 = __helios__data__show(data_13);\n                                                                                                            __core__chooseData(data_13, callback_nok_6, callback_nok_6, callback_nok_6, () -> {\n                                                                                                                __helios__int__show(__core__unIData__safe(data_13))\n                                                                                                            }, callback_nok_6)()\n                                                                                                        }, fields_5);\n                                                                                                        __core__appendString("Ptr{i:", __core__appendString(__common6, __core__appendString(",j:", __core__appendString(__common6, __core__appendString(",k:", __core__appendString(__common6, "}"))))))\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        __helios__data__show(value_2)()\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )()\n                                                                                    }, value_2), "}"))\n                                                                                })()\n                                                                            },\n                                                                            () -> {\n                                                                                "None"\n                                                                            }\n                                                                        )()\n                                                                    }, () -> {\n                                                                        __helios__data__show(self_55)()\n                                                                    }, () -> {\n                                                                        __helios__data__show(self_55)()\n                                                                    }, () -> {\n                                                                        __helios__data__show(self_55)()\n                                                                    }, () -> {\n                                                                        __helios__data__show(self_55)()\n                                                                    })()\n                                                                }, fields_7), "}"))))\n                                                            },\n                                                            () -> {\n                                                                __helios__data__show(self_56)()\n                                                            }\n                                                        )()\n                                                    }, self_56));\n                                                    (), recId_6 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(VSA))));\n                                                    hasDD_2 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx, true, recId_6);\n                                                    (hasDDOutput) -> {\n                                                        __core__chooseUnit((self_256) -> {\n                                                            recurse_95 = (recurse_94, lst_25) -> {\n                                                                __core__chooseList(lst_25, () -> {\n                                                                    ()\n                                                                }, () -> {\n                                                                    __core__chooseUnit(utxo_6 = __core__headList__safe(lst_25);\n                                                                    reqtData = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_6))));\n                                                                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                                                    updatedUtxo = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), hasDDOutput);\n                                                                    updatedReqt = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(updatedUtxo))))));\n                                                                    (__lhs_0_117) -> {\n                                                                        (__lhs_0_118) -> {\n                                                                            freshExpiry = __module__ReqtsPolicy__daysInFuture();\n                                                                            __core__ifThenElse(\n                                                                                (a_3, b_3) -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__lessThanEqualsInteger(a_3, b_3),\n                                                                                        false,\n                                                                                        true\n                                                                                    )\n                                                                                }(__helios__timerange__end(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))))), __core__unIData(__helios__common__mStruct_field(reqtData, #657870))),\n                                                                                () -> {\n                                                                                    cond = __helios__timerange__contains(freshExpiry, __core__unIData(__helios__common__mStruct_field(updatedReqt, #657870)));\n                                                                                    __core__ifThenElse(\n                                                                                        cond,\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )()\n                                                                                },\n                                                                                () -> {\n                                                                                    ()\n                                                                                }\n                                                                            )()\n                                                                        }(self_59 = __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(updatedUtxo)))));\n                                                                        __helios__value__get_safe(self_59, __core__constrData(0, __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(#), __core__mkNilData(()))))))\n                                                                    }((self_59) -> {\n                                                                        __helios__value__get_safe(self_59, __core__constrData(0, __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(#), __core__mkNilData(())))))\n                                                                    }(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_6))));\n                                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))))), recurse_94(recurse_94, __core__tailList__safe(lst_25)))\n                                                                })()\n                                                            };\n                                                            recurse_95(recurse_95, self_256)\n                                                        }(self_65 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                                                        __helios__common__filter(self_65, hasDD_2, __core__mkNilData(()))), true)\n                                                    }(capoAddr_2 = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(cctx));\n                                                    (txo_1) -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo_1))), capoAddr_2),\n                                                            () -> {\n                                                                data_162 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(txo_1))))));\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(data_162)), 2),\n                                                                    () -> {\n                                                                        (__lhs_0_72) -> {\n                                                                            x_8 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_162);\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_8), "Reqt"),\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsByteString(recId_6, #),\n                                                                                        () -> {\n                                                                                            true\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_8, #406964)), recId_6)\n                                                                                        }\n                                                                                    )()\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__32) -> {\n                                                                            false\n                                                                        }\n                                                                    }\n                                                                )()(data_162)\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    }))))\n                                                }\n                                            },\n                                            () -> {\n                                                (__39) -> {\n                                                    false\n                                                }\n                                            }\n                                        )()\n                                    }\n                                )()\n                            }\n                        )()\n                    }\n                )()(activity_3),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__equalsByteString(__core__serialiseData(__helios__scriptcontext__tx), __core__serialiseData(dgtionDatum))\n                }\n            )(),\n            () -> {\n                true\n            },\n            () -> {\n                error()\n            }\n        )())\n    };\n    __core__ifThenElse(\n        __core__ifThenElse(\n            __core__equalsInteger(__common7, 2),\n            () -> {\n                (__lhs_0_261) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__common7, 1),\n                    () -> {\n                        (isD) -> {\n                            dd_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(isD))));\n                            __core__chooseUnit((cond) -> {\n                                __core__ifThenElse(\n                                    cond,\n                                    () -> {\n                                        ()\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));\n                            __core__ifThenElse(\n                                __core__equalsByteString(self, #01),\n                                false,\n                                true\n                            )), __core__chooseUnit((cond) -> {\n                                __core__ifThenElse(\n                                    cond,\n                                    () -> {\n                                        ()\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));\n                            __core__ifThenElse(\n                                __core__equalsByteString(self, #67656e6572616c),\n                                false,\n                                true\n                            )), __core__chooseUnit((cond) -> {\n                                __core__ifThenElse(\n                                    cond,\n                                    () -> {\n                                        ()\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));\n                            __core__ifThenElse(\n                                __core__equalsByteString(self, #5265717473506f6c696379),\n                                false,\n                                true\n                            )), myDgTkn = __helios__value__show(self_20 = __helios__scriptcontext__get_current_input();\n                            self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_20))));\n                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))));\n                            cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1, mph_25 = __core__unBData(__core__headList(__core__tailList(dd_2)));\n                            __core__mkCons(__core__bData(mph_25), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));\n                            (govAuthorityCheck) -> {\n                                __module__BasicDelegate__checkOneActivity_1(__module__BasicDelegate__checkOneActivity_1, isD, __REDEEMER, dd_2, cctx_7)\n                            }(self_227 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_7);\n                            true))))\n                        }\n                    },\n                    () -> {\n                        __common11 = __core__unConstrData(__REDEEMER);\n                        __common12 = __core__fstPair(__common11);\n                        __common13 = __core__equalsInteger(__common12, 1);\n                        (__76) -> {\n                            __core__ifThenElse(\n                                __common13,\n                                () -> {\n                                    (__lhs_0_260) -> {\n                                        error()\n                                    }\n                                },\n                                () -> {\n                                    __common14 = __core__equalsInteger(__common12, 0);\n                                    __core__ifThenElse(\n                                        __common14,\n                                        () -> {\n                                            (__lhs_0_259) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            (__77) -> {\n                                                __core__ifThenElse(\n                                                    __common13,\n                                                    () -> {\n                                                        (__lhs_0_124) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __common14,\n                                                            () -> {\n                                                                (__lhs_0_123) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__40) -> {\n                                                                    false\n                                                                }\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(__REDEEMER)\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(__REDEEMER)\n                        }\n                    }\n                )()\n            }\n        )()(__DATUM),\n        () -> {\n            ()\n        },\n        () -> {\n            error()\n        }\n    )()\n}', "unoptimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __helios__error = (msg) -> {
        __core__trace(msg, () -> {
            error()
        })()
    };
    __helios__print = (msg_1) -> {
        __core__trace(msg_1, ())
    };
    __helios__string____add = __core__appendString;
    __helios__assert = (cond, msg_2) -> {
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                __core__trace(msg_2, () -> {
                    error()
                })()
            }
        )()
    };
    __helios__bool____not = (b) -> {
        __core__ifThenElse(
            b,
            false,
            true
        )
    };
    __helios__bytearray____eq = __core__equalsByteString;
    __helios__bytearray____neq = (self, other) -> {
        __helios__bool____not(__helios__bytearray____eq(self, other))
    };
    __helios__int____to_data = __core__iData;
    __helios__int__serialize = (self_1) -> {
        () -> {
            __core__serialiseData(__helios__int____to_data(self_1))
        }
    };
    __helios__string__encode_utf8 = (self_2) -> {
        () -> {
            __core__encodeUtf8(self_2)
        }
    };
    __helios__bool__and = (a, b_1) -> {
        __core__ifThenElse(
            a(),
            () -> {
                b_1()
            },
            () -> {
                false
            }
        )()
    };
    __helios__common__fold = (self_3, fn, z) -> {
        recurse_1 = (recurse, self_4, z_1) -> {
            __core__chooseList(self_4, () -> {
                z_1
            }, () -> {
                recurse(recurse, __core__tailList__safe(self_4), fn(z_1, __core__headList__safe(self_4)))
            })()
        };
        recurse_1(recurse_1, self_3, z)
    };
    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {
        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {
            callback_ok(__core__unBData__safe(data))
        })()
    };
    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;
    __helios__int__to_hex = (self_5) -> {
        () -> {
            recurse_3 = (recurse_2) -> {
                (self_6, bytes) -> {
                    digit = __core__modInteger(self_6, 16);
                    bytes_1 = __core__consByteString(__core__ifThenElse(
                        __core__lessThanInteger(digit, 10),
                        __core__addInteger(digit, 48),
                        __core__addInteger(digit, 87)
                    ), bytes);
                    __core__ifThenElse(
                        __core__lessThanInteger(self_6, 16),
                        () -> {
                            bytes_1
                        },
                        () -> {
                            recurse_2(recurse_2)(__core__divideInteger(self_6, 16), bytes_1)
                        }
                    )()
                }
            };
            __core__decodeUtf8__safe(__core__ifThenElse(
                __core__lessThanInteger(self_5, 0),
                () -> {
                    __core__consByteString(45, recurse_3(recurse_3)(__core__multiplyInteger(self_5, -1), #))
                },
                () -> {
                    recurse_3(recurse_3)(self_5, #)
                }
            )())
        }
    };
    __helios__bytearray__show = (self_7) -> {
        () -> {
            recurse_5 = (recurse_4, self_8) -> {
                n = __core__lengthOfByteString(self_8);
                __core__ifThenElse(
                    __core__lessThanInteger(0, n),
                    () -> {
                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_8, 0))());
                        __core__ifThenElse(
                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                            __core__consByteString(48, hex_bytes),
                            hex_bytes
                        )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_8)))
                    },
                    () -> {
                        ""
                    }
                )()
            };
            recurse_5(recurse_5, self_7)
        }
    };
    __helios__mintingpolicyhash__show = __helios__bytearray__show;
    __helios__common__unMapData__safe = (data_1, callback_ok_1, callback_nok_1) -> {
        __core__chooseData(data_1, callback_nok_1, () -> {
            callback_ok_1(__core__unMapData__safe(data_1))
        }, callback_nok_1, callback_nok_1, callback_nok_1)()
    };
    __helios__common__unIData__safe = (data_2, callback_ok_2, callback_nok_2) -> {
        __core__chooseData(data_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
            callback_ok_2(__core__unIData__safe(data_2))
        }, callback_nok_2)()
    };
    __helios__int__show_digit = (x) -> {
        __core__addInteger(__core__modInteger(x, 10), 48)
    };
    __helios__int__show = (self_9) -> {
        () -> {
            __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {
                bytes_3 = __core__consByteString(__helios__int__show_digit(i), bytes_2);
                __core__ifThenElse(
                    __core__lessThanInteger(i, 10),
                    () -> {
                        bytes_3
                    },
                    () -> {
                        recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)
                    }
                )()
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_9, 0),
                () -> {
                    __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_9, -1), #))
                },
                () -> {
                    recurse_7(recurse_7, self_9, #)
                }
            )())
        }
    };
    __helios__real__ONE = 1000000;
    __helios__real__floor = (self_10) -> {
        () -> {
            __core__divideInteger(self_10, __helios__real__ONE)
        }
    };
    __helios__int__abs = (self_11) -> {
        () -> {
            __core__ifThenElse(
                __core__lessThanInteger(self_11, 0),
                () -> {
                    __core__multiplyInteger(self_11, -1)
                },
                () -> {
                    self_11
                }
            )()
        }
    };
    __helios__real__abs = __helios__int__abs;
    __helios__int__show_padded = (self_12, n_1) -> {
        recurse_9 = (recurse_8, x_1, pos, bytes_4) -> {
            __core__ifThenElse(
                __core__equalsInteger(x_1, 0),
                () -> {
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(n_1, pos),
                        () -> {
                            bytes_4
                        },
                        () -> {
                            recurse_8(recurse_8, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_4))
                        }
                    )()
                },
                () -> {
                    recurse_8(recurse_8, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__helios__int__show_digit(x_1), bytes_4))
                }
            )()
        };
        recurse_9(recurse_9, self_12, 0, #)
    };
    __helios__int____mod = __core__modInteger;
    __helios__real__PRECISION = 6;
    __helios__real__show = (self_13) -> {
        () -> {
            show_positive = (x_2) -> {
                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_2)())())(), __helios__string____add(".", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_2, __helios__real__ONE), __helios__real__PRECISION))))
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_13, 0),
                () -> {
                    __helios__string____add("-", show_positive(__core__multiplyInteger(self_13, -1)))
                },
                () -> {
                    show_positive(self_13)
                }
            )()
        }
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes_5) -> {
        n_2 = __core__lengthOfByteString(bytes_5);
        recurse_11 = (recurse_10, i_1) -> {
            __core__ifThenElse(
                __core__equalsInteger(i_1, n_2),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes_5, i_1);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse_10(recurse_10, __core__addInteger(i_1, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i_1, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n_2),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __core__lessThanEqualsInteger(128, c_2)
                                                            }, () -> {
                                                                __core__lessThanEqualsInteger(c_2, 2047)
                                                            }),
                                                            () -> {
                                                                recurse_10(recurse_10, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i_1, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n_2),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __helios__bool__and(() -> {
                                                                                    __core__lessThanEqualsInteger(2048, c_1)
                                                                                }, () -> {
                                                                                    __core__lessThanEqualsInteger(c_1, 65535)
                                                                                }),
                                                                                () -> {
                                                                                    recurse_10(recurse_10, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i_1, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n_2),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __core__lessThanEqualsInteger(65536, c)
                                                                                                    }, () -> {
                                                                                                        __core__lessThanEqualsInteger(c, 2097151)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        recurse_10(recurse_10, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_11(recurse_11, 0)
    };
    __helios__bytearray__decode_utf8_safe = (self_14) -> {
        () -> {
            __core__ifThenElse(
                __helios__string__is_valid_utf8(self_14),
                () -> {
                    __core__decodeUtf8__safe(self_14)
                },
                () -> {
                    __helios__bytearray__show(self_14)()
                }
            )()
        }
    };
    __helios__value__show = (self_15) -> {
        (__useopt__ada, ada) -> {
            __helios__common__fold(self_15, (prev, pair) -> {
                mph_data = __core__fstPair(pair);
                tokens_data = __core__sndPair(pair);
                __helios__string____add(prev, __helios__common__unBData__safe(mph_data, (mph) -> {
                    __helios__string____add(__core__ifThenElse(
                        __helios__mintingpolicyhash____eq(mph, #),
                        () -> {
                            ""
                        },
                        () -> {
                            __helios__string____add(__helios__mintingpolicyhash__show(mph)(), "
")
                        }
                    )(), __helios__common__unMapData__safe(tokens_data, (tokens) -> {
                        __helios__common__fold(tokens, (prev_1, pair_1) -> {
                            token_name_data = __core__fstPair(pair_1);
                            qty_data = __core__sndPair(pair_1);
                            __helios__common__unBData__safe(token_name_data, (token_name) -> {
                                __helios__common__unIData__safe(qty_data, (qty) -> {
                                    __core__ifThenElse(
                                        __helios__mintingpolicyhash____eq(mph, #),
                                        () -> {
                                            __core__ifThenElse(
                                                __helios__bool__and(() -> {
                                                    __useopt__ada
                                                }, () -> {
                                                    ada
                                                }),
                                                () -> {
                                                    __helios__string____add("ada ", __helios__string____add(__helios__real__show(qty)(), "
"))
                                                },
                                                () -> {
                                                    __helios__string____add("lovelace ", __helios__string____add(__helios__int__show(qty)(), "
"))
                                                }
                                            )()
                                        },
                                        () -> {
                                            __helios__string____add("  .", __helios__string____add(__helios__bytearray__decode_utf8_safe(token_name)(), __helios__string____add(" ", __helios__string____add(__helios__int__show(qty)(), "
"))))
                                        }
                                    )()
                                }, () -> {
                                    ""
                                })
                            }, () -> {
                                ""
                            })
                        }, prev)
                    }, () -> {
                        ""
                    }))
                }, () -> {
                    ""
                }))
            }, "")
        }
    };
    __helios__common__enum_fields = (self_16) -> {
        __core__sndPair(__core__unConstrData(self_16))
    };
    __helios__common__enum_fields_after_0 = (self_17) -> {
        __core__tailList(__helios__common__enum_fields(self_17))
    };
    __helios__common__enum_field_1 = (self_18) -> {
        __core__headList(__helios__common__enum_fields_after_0(self_18))
    };
    __helios__txoutput__value = (self_19) -> {
        __core__unMapData(__helios__common__enum_field_1(self_19))
    };
    __helios__txinput__output = __helios__common__enum_field_1;
    __helios__txinput__value = (self_20) -> {
        __helios__txoutput__value(__helios__txinput__output(self_20))
    };
    __helios__common__enum_field_0 = (self_21) -> {
        __core__headList(__helios__common__enum_fields(self_21))
    };
    __helios__scriptcontext__data = __CONTEXT;
    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);
    __helios__scriptcontext__get_spending_purpose_output_id = () -> {
        __helios__common__enum_field_0(__helios__scriptcontext__purpose)
    };
    __helios__txinput__output_id = __helios__common__enum_field_0;
    __helios__tx__inputs = (self_22) -> {
        __core__unListData(__helios__common__enum_field_0(self_22))
    };
    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);
    __helios__scriptcontext__get_current_input = () -> {
        id = __helios__scriptcontext__get_spending_purpose_output_id();
        recurse_13 = (recurse_12, lst) -> {
            __core__chooseList(lst, () -> {
                __helios__error("not found")
            }, () -> {
                item = __core__headList__safe(lst);
                __core__ifThenElse(
                    __core__equalsData(__helios__txinput__output_id(item), id),
                    () -> {
                        item
                    },
                    () -> {
                        recurse_12(recurse_12, __core__tailList__safe(lst))
                    }
                )()
            })()
        };
        recurse_13(recurse_13, __helios__tx__inputs(__helios__scriptcontext__tx))
    };
    __helios__bool__or = (a_1, b_2) -> {
        __core__ifThenElse(
            a_1(),
            () -> {
                true
            },
            () -> {
                b_2()
            }
        )()
    };
    __helios__string____to_data = (s) -> {
        __core__bData(__core__encodeUtf8(s))
    };
    __helios__value__ZERO = __core__mkNilPairData(());
    __helios__value__new = (assetClass, i_2) -> {
        __core__ifThenElse(
            __core__equalsInteger(0, i_2),
            () -> {
                __helios__value__ZERO
            },
            () -> {
                mph_1 = __helios__common__enum_field_0(assetClass);
                tokenName = __helios__common__enum_field_1(assetClass);
                __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i_2)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
            }
        )()
    };
    __helios__common__list_0 = __core__mkNilData(());
    __helios__common__list_1 = (a_2) -> {
        __core__mkCons(a_2, __helios__common__list_0)
    };
    __helios__common__list_2 = (arg0, arg1) -> {
        __core__mkCons(arg0, __helios__common__list_1(arg1))
    };
    __helios__bytearray____to_data = __core__bData;
    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;
    __helios__assetclass__new = (mph_2, token_name_1) -> {
        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_2), __helios__bytearray____to_data(token_name_1)))
    };
    __helios__int____neg = (self_23) -> {
        __core__multiplyInteger(self_23, -1)
    };
    __helios__int____eq = __core__equalsInteger;
    __helios__value__get = (self_24) -> {
        (assetClass_1) -> {
            mph_3 = __helios__common__enum_field_0(assetClass_1);
            tokenName_1 = __helios__common__enum_field_1(assetClass_1);
            outer_1 = (outer, inner, map) -> {
                __core__chooseList(map, () -> {
                    __helios__error(__helios__string____add(__helios__string____add("policy ", __helios__mintingpolicyhash__show(__core__unBData(mph_3))()), " not found"))
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_3),
                        () -> {
                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                        },
                        () -> {
                            outer(outer, inner, __core__tailList__safe(map))
                        }
                    )()
                })()
            };
            inner_2 = (inner_1, map_1) -> {
                __core__chooseList(map_1, () -> {
                    __helios__error("tokenName not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                        },
                        () -> {
                            inner_1(inner_1, __core__tailList__safe(map_1))
                        }
                    )()
                })()
            };
            outer_1(outer_1, inner_2, self_24)
        }
    };
    __helios__common__enum_fields_after_1 = (self_25) -> {
        __core__tailList(__helios__common__enum_fields_after_0(self_25))
    };
    __helios__common__enum_fields_after_2 = (self_26) -> {
        __core__tailList(__helios__common__enum_fields_after_1(self_26))
    };
    __helios__common__enum_fields_after_3 = (self_27) -> {
        __core__tailList(__helios__common__enum_fields_after_2(self_27))
    };
    __helios__common__enum_field_4 = (self_28) -> {
        __core__headList(__helios__common__enum_fields_after_3(self_28))
    };
    __helios__tx__minted = (self_29) -> {
        __core__unMapData(__helios__common__enum_field_4(self_29))
    };
    __helios__common__assert_constr_index = (data_3, i_3) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_3)), i_3),
            () -> {
                data_3
            },
            () -> {
                __helios__error("unexpected constructor index")
            }
        )()
    };
    __helios__string____eq = __core__equalsString;
    __helios__common____eq = __core__equalsData;
    __helios__assetclass____eq = __helios__common____eq;
    __helios__data__show = (self_30) -> {
        () -> {
            show_data_list = (list, show_item) -> {
                __helios__common__fold(list, (prev_2, item_1) -> {
                    __core__ifThenElse(
                        __helios__string____eq(prev_2, ""),
                        () -> {
                            show_item(item_1)
                        },
                        () -> {
                            __helios__string____add(prev_2, __helios__string____add(",", show_item(item_1)))
                        }
                    )()
                }, "")
            };
            (recurse_15, data_5) -> {
                recurse_15(recurse_15, data_5)
            }((recurse_14, data_4) -> {
                __core__chooseData(data_4, () -> {
                    pair_3 = __core__unConstrData__safe(data_4);
                    tag = __core__fstPair(pair_3);
                    fields = __core__sndPair(pair_3);
                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add("{", __helios__string____add(show_data_list(fields, (item_3) -> {
                        recurse_14(recurse_14, item_3)
                    }), "}")))
                }, () -> {
                    map_2 = __core__unMapData__safe(data_4);
                    __helios__string____add("{", __helios__string____add(show_data_list(map_2, (pair_2) -> {
                        key = recurse_14(recurse_14, __core__fstPair(pair_2));
                        value_1 = recurse_14(recurse_14, __core__sndPair(pair_2));
                        __helios__string____add(key, __helios__string____add(":", value_1))
                    }), "}"))
                }, () -> {
                    lst_1 = __core__unListData__safe(data_4);
                    __helios__string____add("[", __helios__string____add(show_data_list(lst_1, (item_2) -> {
                        recurse_14(recurse_14, item_2)
                    }), "]"))
                }, () -> {
                    value = __core__unIData__safe(data_4);
                    __helios__int__show(value)()
                }, () -> {
                    bytes_6 = __core__unBData__safe(data_4);
                    __helios__bytearray__show(bytes_6)()
                })()
            }, self_30)
        }
    };
    __helios__data__show_constr_data = (callback_1) -> {
        (data_6) -> {
            callback_nok_3 = __helios__data__show(data_6);
            __core__chooseData(data_6, () -> {
                pair_4 = __core__unConstrData__safe(data_6);
                callback_1(__core__fstPair(pair_4), __core__sndPair(pair_4))
            }, callback_nok_3, callback_nok_3, callback_nok_3, callback_nok_3)()
        }
    };
    __helios__data__show_field = (index, callback_2) -> {
        (list_1) -> {
            recurse_17 = (recurse_16) -> {
                (lst_2, i_4) -> {
                    __core__chooseList(lst_2, () -> {
                        "<missing>"
                    }, () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(i_4, 0),
                            () -> {
                                head = __core__headList__safe(lst_2);
                                callback_2(head)
                            },
                            () -> {
                                recurse_16(recurse_16)(__core__tailList__safe(lst_2), __core__subtractInteger(i_4, 1))
                            }
                        )()
                    })()
                }
            };
            recurse_17(recurse_17)(list_1, index)
        }
    };
    __helios__data__show_bdata = (callback_3) -> {
        (data_7) -> {
            callback_nok_4 = __helios__data__show(data_7);
            __core__chooseData(data_7, callback_nok_4, callback_nok_4, callback_nok_4, callback_nok_4, () -> {
                callback_3(__core__unBData__safe(data_7))
            })()
        }
    };
    __helios__assetclass__show = (self_31) -> {
        () -> {
            __helios__data__show_constr_data((tag_1, fields_1) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_1, 0),
                    () -> {
                        mph_str = __helios__data__show_field(0, __helios__data__show_bdata((mph_4) -> {
                            __helios__bytearray__show(mph_4)()
                        }))(fields_1);
                        token_name_str = __helios__data__show_field(1, __helios__data__show_bdata((token_name_2) -> {
                            __helios__bytearray__show(token_name_2)()
                        }))(fields_1);
                        __core__appendString(mph_str, __core__appendString(".", token_name_str))
                    },
                    () -> {
                        __helios__data__show(self_31)()
                    }
                )()
            })(self_31)
        }
    };
    __helios__string____neq = (self_32, other_1) -> {
        __helios__bool____not(__helios__string____eq(self_32, other_1))
    };
    __helios__int____gt = (a_3, b_3) -> {
        __helios__bool____not(__core__lessThanEqualsInteger(a_3, b_3))
    };
    __helios__int____neq = (self_33, other_2) -> {
        __helios__bool____not(__helios__int____eq(self_33, other_2))
    };
    __helios__int____sub = __core__subtractInteger;
    __helios__value__to_map = (self_34) -> {
        () -> {
            self_34
        }
    };
    __helios__string__show = (self_35) -> {
        () -> {
            __core__appendString("'", __core__appendString(self_35, "'"))
        }
    };
    __helios__bool__show = (self_36) -> {
        () -> {
            __core__ifThenElse(
                self_36,
                "true",
                "false"
            )
        }
    };
    __helios__bool__trace = (self_37) -> {
        (prefix) -> {
            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_37)()), self_37)
        }
    };
    __helios__txinput____eq = __helios__common____eq;
    __helios__bytearray__from_data = __core__unBData;
    __helios__string__from_data = (d) -> {
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__common__length = (lst_3) -> {
        recurse_19 = (recurse_18, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_19(recurse_19, lst_3)
    };
    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {
        recurse_21 = (recurse_20, self_39, key_2) -> {
            __core__chooseList(self_39, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_39);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_38, key_1)
    };
    __helios__common__enum_tag_equals = (data_8, i_5) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_8)), i_5)
    };
    __helios__option__NONE_FUNC = (callback_4) -> {
        callback_4(false, ())
    };
    __helios__option__SOME_FUNC = (some) -> {
        (callback_5) -> {
            callback_5(true, some)
        }
    };
    __helios__bytearray__from_data_safe = (data_9) -> {
        __core__chooseData(data_9, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unBData__safe(data_9))
        })()
    };
    __helios__int__from_data_safe = (data_10) -> {
        __core__chooseData(data_10, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unIData__safe(data_10))
        }, () -> {
            __helios__option__NONE_FUNC
        })()
    };
    __helios__common__all = (self_40, fn_1) -> {
        recurse_23 = (recurse_22, self_41, fn_2) -> {
            __core__chooseList(self_41, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_41)),
                    () -> {
                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_23(recurse_23, self_40, fn_1)
    };
    __helios__common__identity = (self_42) -> {
        self_42
    };
    __helios__assetclass____to_data = __helios__common__identity;
    __helios__assetclass__from_data = __helios__common__identity;
    __helios__data__from_data = __helios__common__identity;
    __helios__bool__from_data = (d_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),
            false,
            true
        )
    };
    __helios__int__from_data = __core__unIData;
    __helios__int____leq = __core__lessThanEqualsInteger;
    __helios__duration____leq = __helios__int____leq;
    __helios__time____sub = __helios__int____sub;
    __helios__time__from_data = __helios__int__from_data;
    __helios__timerange__end = (self_43) -> {
        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_1(self_43))))
    };
    __helios__common__enum_fields_after_4 = (self_44) -> {
        __core__tailList(__helios__common__enum_fields_after_3(self_44))
    };
    __helios__common__enum_fields_after_5 = (self_45) -> {
        __core__tailList(__helios__common__enum_fields_after_4(self_45))
    };
    __helios__common__enum_fields_after_6 = (self_46) -> {
        __core__tailList(__helios__common__enum_fields_after_5(self_46))
    };
    __helios__common__enum_field_7 = (self_47) -> {
        __core__headList(__helios__common__enum_fields_after_6(self_47))
    };
    __helios__tx__time_range = __helios__common__enum_field_7;
    __helios__timerange__start = (self_48) -> {
        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_0(self_48))))
    };
    __helios__duration__HOUR = 3600000;
    __helios__timerange__contains = (self_49) -> {
        (t) -> {
            lower = __helios__common__enum_field_0(self_49);
            extended = __helios__common__enum_field_0(lower);
            closed = __helios__bool__from_data(__helios__common__enum_field_1(lower));
            lowerExtType = __core__fstPair(__core__unConstrData(extended));
            checkUpper = () -> {
                upper = __helios__common__enum_field_1(self_49);
                extended_1 = __helios__common__enum_field_0(upper);
                closed_1 = __helios__bool__from_data(__helios__common__enum_field_1(upper));
                upperExtType = __core__fstPair(__core__unConstrData(extended_1));
                __core__ifThenElse(
                    __core__equalsInteger(upperExtType, 0),
                    () -> {
                        false
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(upperExtType, 2),
                            () -> {
                                true
                            },
                            () -> {
                                __core__ifThenElse(
                                    __core__ifThenElse(
                                        closed_1,
                                        () -> {
                                            __core__lessThanEqualsInteger(t, __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended_1)))))
                                        },
                                        () -> {
                                            __core__lessThanInteger(t, __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended_1)))))
                                        }
                                    )(),
                                    true,
                                    false
                                )
                            }
                        )()
                    }
                )()
            };
            __core__ifThenElse(
                __core__equalsInteger(lowerExtType, 2),
                () -> {
                    false
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(lowerExtType, 0),
                        () -> {
                            checkUpper()
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__ifThenElse(
                                    closed,
                                    () -> {
                                        __core__lessThanEqualsInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)
                                    },
                                    () -> {
                                        __core__lessThanInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)
                                    }
                                )(),
                                () -> {
                                    checkUpper()
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __helios__int____div = __core__quotientInteger;
    __helios__duration____div1 = __helios__int____div;
    __helios__duration__SECOND = 1000;
    __helios__txoutputdatum__inline = (self_50) -> {
        pair_5 = __core__unConstrData(self_50);
        index_1 = __core__fstPair(pair_5);
        fields_2 = __core__sndPair(pair_5);
        __core__ifThenElse(
            __core__equalsInteger(index_1, 2),
            () -> {
                __core__headList(fields_2)
            },
            () -> {
                __helios__error("not an inline datum")
            }
        )()
    };
    __helios__common__enum_field_2 = (self_51) -> {
        __core__headList(__helios__common__enum_fields_after_1(self_51))
    };
    __helios__txoutput__datum = __helios__common__enum_field_2;
    __helios__spendingcredential__show = (self_52) -> {
        () -> {
            __helios__data__show_constr_data((tag_2, fields_3) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_2, 0),
                    () -> {
                        pkh_str = __helios__data__show_field(0, __helios__data__show_bdata((b_5) -> {
                            __helios__bytearray__show(b_5)()
                        }))(fields_3);
                        __core__appendString("PubKey{hash:", __core__appendString(pkh_str, "}"))
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(tag_2, 1),
                            () -> {
                                vh_str = __helios__data__show_field(0, __helios__data__show_bdata((b_4) -> {
                                    __helios__bytearray__show(b_4)()
                                }))(fields_3);
                                __core__appendString("Validator{hash:", __core__appendString(vh_str, "}"))
                            },
                            () -> {
                                __helios__data__show(__core__constrData(tag_2, fields_3))()
                            }
                        )()
                    }
                )()
            })(self_52)
        }
    };
    __helios__common__unConstrData__safe = (data_11, callback_ok_3, callback_nok_5) -> {
        __core__chooseData(data_11, () -> {
            pair_6 = __core__unConstrData__safe(data_11);
            callback_ok_3(__core__fstPair(pair_6), __core__sndPair(pair_6))
        }, callback_nok_5, callback_nok_5, callback_nok_5, callback_nok_5)()
    };
    __helios__stakingcredential__from_data_safe = (data_12) -> {
        __helios__option__SOME_FUNC(data_12)
    };
    __helios__stakinghash__show = (self_53) -> {
        () -> {
            __helios__data__show_constr_data((tag_3, fields_4) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_3, 0),
                    () -> {
                        pkh_str_1 = __helios__data__show_field(0, __helios__data__show_bdata((b_7) -> {
                            __helios__bytearray__show(b_7)()
                        }))(fields_4);
                        __core__appendString("StakeKey{hash:", __core__appendString(pkh_str_1, "}"))
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(tag_3, 1),
                            () -> {
                                vh_str_1 = __helios__data__show_field(0, __helios__data__show_bdata((b_6) -> {
                                    __helios__bytearray__show(b_6)()
                                }))(fields_4);
                                __core__appendString("Validator{hash:", __core__appendString(vh_str_1, "}"))
                            },
                            () -> {
                                __helios__data__show(__core__constrData(tag_3, fields_4))()
                            }
                        )()
                    }
                )()
            })(self_53)
        }
    };
    __helios__data__show_idata = (callback_6) -> {
        (data_13) -> {
            callback_nok_6 = __helios__data__show(data_13);
            __core__chooseData(data_13, callback_nok_6, callback_nok_6, callback_nok_6, () -> {
                callback_6(__core__unIData__safe(data_13))
            }, callback_nok_6)()
        }
    };
    __helios__stakingcredential__show = (self_54) -> {
        () -> {
            __helios__data__show_constr_data((tag_4, fields_5) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_4, 0),
                    () -> {
                        hash_str = __helios__data__show_field(0, (hash_data) -> {
                            __helios__stakinghash__show(hash_data)()
                        })(fields_5);
                        __core__appendString("Hash{hash:", __core__appendString(hash_str, "}"))
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(tag_4, 1),
                            () -> {
                                i_str = __helios__data__show_field(0, __helios__data__show_idata((i_6) -> {
                                    __helios__int__show(i_6)()
                                }))(fields_5);
                                j_str = __helios__data__show_field(1, __helios__data__show_idata((i_7) -> {
                                    __helios__int__show(i_7)()
                                }))(fields_5);
                                k_str = __helios__data__show_field(2, __helios__data__show_idata((i_8) -> {
                                    __helios__int__show(i_8)()
                                }))(fields_5);
                                __core__appendString("Ptr{i:", __core__appendString(i_str, __core__appendString(",j:", __core__appendString(j_str, __core__appendString(",k:", __core__appendString(k_str, "}"))))))
                            },
                            () -> {
                                __helios__data__show(self_54)()
                            }
                        )()
                    }
                )()
            })(self_54)
        }
    };
    __helios__option[__helios__stakingcredential]__show = (self_55) -> {
        () -> {
            __helios__common__unConstrData__safe(self_55, (index_2, fields_6) -> {
                __core__ifThenElse(
                    __core__equalsInteger(index_2, 0),
                    () -> {
                        __core__chooseList(fields_6, () -> {
                            "Some{<missing>}"
                        }, () -> {
                            some_data = __core__headList__safe(fields_6);
                            some_1 = __helios__stakingcredential__from_data_safe(some_data);
                            some_1((valid_6, value_2) -> {
                                __core__ifThenElse(
                                    valid_6,
                                    () -> {
                                        __core__appendString("Some{", __core__appendString(__helios__stakingcredential__show(value_2)(), "}"))
                                    },
                                    () -> {
                                        __core__appendString("Some{", __core__appendString(__helios__data__show(some_data)(), "}"))
                                    }
                                )()
                            })
                        })()
                    },
                    () -> {
                        "None"
                    }
                )()
            }, () -> {
                __helios__data__show(self_55)()
            })
        }
    };
    __helios__address__show = (self_56) -> {
        () -> {
            __helios__data__show_constr_data((tag_5, fields_7) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_5, 0),
                    () -> {
                        spending_cred_str = __helios__data__show_field(0, (cred_data) -> {
                            __helios__spendingcredential__show(cred_data)()
                        })(fields_7);
                        staking_cred_option_str = __helios__data__show_field(1, (option_data) -> {
                            __helios__option[__helios__stakingcredential]__show(option_data)()
                        })(fields_7);
                        __core__appendString("{spending_credential:", __core__appendString(spending_cred_str, __core__appendString(",staking_credential:", __core__appendString(staking_cred_option_str, "}"))))
                    },
                    () -> {
                        __helios__data__show(self_56)()
                    }
                )()
            })(self_56)
        }
    };
    __helios__txoutput__address = __helios__common__enum_field_0;
    __helios__txinput__address = (self_57) -> {
        __helios__txoutput__address(__helios__txinput__output(self_57))
    };
    __helios__time____gt = __helios__int____gt;
    __helios__value__get_safe = (self_58) -> {
        (assetClass_2) -> {
            mintingPolicyHash = __helios__common__enum_field_0(assetClass_2);
            tokenName_2 = __helios__common__enum_field_1(assetClass_2);
            outer_3 = (outer_2, inner_3, map_3) -> {
                __core__chooseList(map_3, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mintingPolicyHash),
                        () -> {
                            inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_3))))
                        },
                        () -> {
                            outer_2(outer_2, inner_3, __core__tailList__safe(map_3))
                        }
                    )()
                })()
            };
            inner_5 = (inner_4, map_4) -> {
                __core__chooseList(map_4, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), tokenName_2),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_4)))
                        },
                        () -> {
                            inner_4(inner_4, __core__tailList__safe(map_4))
                        }
                    )()
                })()
            };
            outer_3(outer_3, inner_5, self_58)
        }
    };
    __helios__assetclass__ADA = __helios__assetclass__new(#, #);
    __helios__value__get_lovelace = (self_59) -> {
        () -> {
            __helios__value__get_safe(self_59)(__helios__assetclass__ADA)
        }
    };
    __helios__tx__outputs = (self_60) -> {
        __core__unListData(__helios__common__enum_field_2(self_60))
    };
    __helios__txinput__datum = (self_61) -> {
        __helios__txoutput__datum(__helios__txinput__output(self_61))
    };
    __helios__common__serialize = (self_62) -> {
        () -> {
            __core__serialiseData(self_62)
        }
    };
    __helios__tx__serialize = __helios__common__serialize;
    __helios__common__filter = (self_63, fn_3, nil) -> {
        recurse_25 = (recurse_24, self_64, fn_4) -> {
            __core__chooseList(self_64, () -> {
                nil
            }, () -> {
                head_2 = __core__headList__safe(self_64);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__mkCons(head_2, recurse_24(recurse_24, __core__tailList__safe(self_64), fn_4))
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(self_64), fn_4)
                    }
                )()
            })()
        };
        recurse_25(recurse_25, self_63, fn_3)
    };
    __helios__common__filter_list = (self_65, fn_5) -> {
        __helios__common__filter(self_65, fn_5, __helios__common__list_0)
    };
    __helios__txinput__from_data = __helios__common__identity;
    __helios__string__is_valid_data = (data_14) -> {
        __core__chooseData(data_14, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__string__is_valid_utf8(__core__unBData__safe(data_14))
        })()
    };
    __helios__bytearray__is_valid_data = (data_15) -> {
        __core__chooseData(data_15, false, false, false, false, true)
    };
    __helios__txoutputid__from_data = __helios__common__identity;
    __helios__common__test_constr_data_2 = (data_16, index_3, test_a, test_b) -> {
        __core__chooseData(data_16, () -> {
            pair_7 = __core__unConstrData__safe(data_16);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_7), index_3),
                () -> {
                    fields_8 = __core__sndPair(pair_7);
                    __core__chooseList(fields_8, () -> {
                        false
                    }, () -> {
                        __core__ifThenElse(
                            test_a(__core__headList__safe(fields_8)),
                            () -> {
                                tail = __core__tailList__safe(fields_8);
                                __core__chooseList(tail, () -> {
                                    false
                                }, () -> {
                                    __core__ifThenElse(
                                        test_b(__core__headList__safe(tail)),
                                        () -> {
                                            __core__chooseList(__core__tailList__safe(tail), () -> {
                                                true
                                            }, () -> {
                                                false
                                            })()
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data_fixed_length = (n_3) -> {
        (data_17) -> {
            __core__chooseData(data_17, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_7 = __core__unBData__safe(data_17);
                __core__ifThenElse(
                    __core__equalsInteger(__core__lengthOfByteString(bytes_7), n_3),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__txid__is_valid_data = (data_18) -> {
        __core__chooseData(data_18, () -> {
            pair_8 = __core__unConstrData__safe(data_18);
            index_4 = __core__fstPair(pair_8);
            fields_9 = __core__sndPair(pair_8);
            __core__ifThenElse(
                __core__equalsInteger(0, index_4),
                () -> {
                    __core__chooseList(fields_9, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_9), () -> {
                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_9))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__int__is_valid_data = (data_19) -> {
        __core__chooseData(data_19, false, false, false, true, false)
    };
    __helios__txoutputid__is_valid_data = (data_20) -> {
        __helios__common__test_constr_data_2(data_20, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)
    };
    __helios__time____to_data = __helios__int____to_data;
    __helios__bool____to_data = (b_8) -> {
        __core__constrData(__core__ifThenElse(
            b_8,
            1,
            0
        ), __helios__common__list_0)
    };
    __helios__timerange__new = (a_4, b_9) -> {
        a_5 = __helios__time____to_data(a_4);
        b_10 = __helios__time____to_data(b_9);
        __core__constrData(0, __helios__common__list_2(__core__constrData(0, __helios__common__list_2(__core__constrData(1, __helios__common__list_1(a_5)), __helios__bool____to_data(true))), __core__constrData(0, __helios__common__list_2(__core__constrData(1, __helios__common__list_1(b_10)), __helios__bool____to_data(true)))))
    };
    __helios__int____add = __core__addInteger;
    __helios__time____add = __helios__int____add;
    __helios__int____mul = __core__multiplyInteger;
    __helios__duration____mul = __helios__int____mul;
    __helios__duration__DAY = 86400000;
    __helios__data__is_valid_data = (data_21) -> {
        true
    };
    __helios__common__mStruct_field_internal = (map_5, name) -> {
        name_data = __core__bData(name);
        recurse_27 = (recurse_26, map_6) -> {
            __core__chooseList(map_6, () -> {
                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name))), ": field not found"))
            }, () -> {
                head_3 = __core__headList__safe(map_6);
                key_3 = __core__fstPair(head_3);
                value_3 = __core__sndPair(head_3);
                __core__ifThenElse(
                    __core__equalsData(key_3, name_data),
                    () -> {
                        value_3
                    },
                    () -> {
                        recurse_26(recurse_26, __core__tailList__safe(map_6))
                    }
                )()
            })()
        };
        recurse_27(recurse_27, map_5)
    };
    __helios__common__mStruct_field = (self_66, name_1) -> {
        __helios__common__mStruct_field_internal(__core__unMapData(self_66), name_1)
    };
    __helios__common__test_mStruct_field = (self_67, name_2, inner_test) -> {
        __core__chooseData(self_67, () -> {
            false
        }, () -> {
            map_7 = __core__unMapData__safe(self_67);
            recurse_29 = (recurse_28, map_8) -> {
                __core__chooseList(map_8, () -> {
                    __core__trace(__core__appendString("Warning: field not found: ", __core__decodeUtf8__safe(__core__unBData__safe(name_2))), () -> {
                        false
                    })()
                }, () -> {
                    head_4 = __core__headList__safe(map_8);
                    key_4 = __core__fstPair(head_4);
                    value_4 = __core__sndPair(head_4);
                    __core__ifThenElse(
                        __core__equalsData(key_4, name_2),
                        () -> {
                            inner_test(value_4)
                        },
                        () -> {
                            recurse_28(recurse_28, __core__tailList__safe(map_8))
                        }
                    )()
                })()
            };
            recurse_29(recurse_29, map_7)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__time__is_valid_data = __helios__int__is_valid_data;
    __helios__value__contains_policy = (self_68) -> {
        (mph_5) -> {
            mph_6 = __helios__mintingpolicyhash____to_data(mph_5);
            recurse_31 = (recurse_30, map_9) -> {
                __core__chooseList(map_9, () -> {
                    false
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_6),
                        () -> {
                            true
                        },
                        () -> {
                            recurse_30(recurse_30, __core__tailList__safe(map_9))
                        }
                    )()
                })()
            };
            recurse_31(recurse_31, self_68)
        }
    };
    __helios__value__from_map = __helios__common__identity;
    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;
    __helios__value__is_zero_inner = (tokens_1) -> {
        recurse_33 = (recurse_32, tokens_2) -> {
            __core__chooseList(tokens_2, () -> {
                true
            }, () -> {
                __helios__bool__and(() -> {
                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)
                }, () -> {
                    recurse_32(recurse_32, __core__tailList__safe(tokens_2))
                })
            })()
        };
        recurse_33(recurse_33, tokens_1)
    };
    __helios__value__is_zero = (self_69) -> {
        () -> {
            recurse_35 = (recurse_34, map_10) -> {
                __core__chooseList(map_10, () -> {
                    true
                }, () -> {
                    __helios__bool__and(() -> {
                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_10))))
                    }, () -> {
                        recurse_34(recurse_34, __core__tailList__safe(map_10))
                    })
                })()
            };
            recurse_35(recurse_35, self_69)
        }
    };
    __helios__value__get_policy = (self_70) -> {
        (mph_7) -> {
            mph_8 = __helios__mintingpolicyhash____to_data(mph_7);
            recurse_37 = (recurse_36, map_11) -> {
                __core__chooseList(map_11, () -> {
                    __helios__error("policy not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), mph_8),
                        () -> {
                            __core__unMapData(__core__sndPair(__core__headList__safe(map_11)))
                        },
                        () -> {
                            recurse_36(recurse_36, __core__tailList__safe(map_11))
                        }
                    )()
                })()
            };
            recurse_37(recurse_37, self_70)
        }
    };
    __helios__value__get_inner_map_int = (map_12, key_5) -> {
        recurse_39 = (recurse_38, map_13, key_6) -> {
            __core__chooseList(map_13, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), key_6),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_13)))
                    },
                    () -> {
                        recurse_38(recurse_38, __core__tailList__safe(map_13), key_6)
                    }
                )()
            })()
        };
        recurse_39(recurse_39, map_12, key_5)
    };
    __helios__value__get_map_keys = (map_14) -> {
        recurse_41 = (recurse_40, map_15) -> {
            __core__chooseList(map_15, () -> {
                __helios__common__list_0
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_15)), recurse_40(recurse_40, __core__tailList__safe(map_15)))
            })()
        };
        recurse_41(recurse_41, map_14)
    };
    __helios__common__any = (self_71, fn_6) -> {
        recurse_43 = (recurse_42, self_72, fn_7) -> {
            __core__chooseList(self_72, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_7(__core__headList__safe(self_72)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_42(recurse_42, __core__tailList__safe(self_72), fn_7)
                    }
                )()
            })()
        };
        recurse_43(recurse_43, self_71, fn_6)
    };
    __helios__common__is_in_bytearray_list = (lst_5, key_7) -> {
        __helios__common__any(lst_5, (item_4) -> {
            __core__equalsData(item_4, key_7)
        })
    };
    __helios__common__concat = (a_6, b_11) -> {
        recurse_45 = (recurse_44, lst_6, rem) -> {
            __core__chooseList(rem, () -> {
                lst_6
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_44(recurse_44, lst_6, __core__tailList__safe(rem)))
            })()
        };
        recurse_45(recurse_45, b_11, a_6)
    };
    __helios__value__merge_map_keys = (a_7, b_12) -> {
        aKeys = __helios__value__get_map_keys(a_7);
        recurse_47 = (recurse_46, keys, map_16) -> {
            __core__chooseList(map_16, () -> {
                __helios__common__list_0
            }, () -> {
                key_8 = __core__fstPair(__core__headList__safe(map_16));
                __core__ifThenElse(
                    __helios__common__is_in_bytearray_list(aKeys, key_8),
                    () -> {
                        recurse_46(recurse_46, keys, __core__tailList__safe(map_16))
                    },
                    () -> {
                        __core__mkCons(key_8, recurse_46(recurse_46, keys, __core__tailList__safe(map_16)))
                    }
                )()
            })()
        };
        uniqueBKeys = recurse_47(recurse_47, aKeys, b_12);
        __helios__common__concat(aKeys, uniqueBKeys)
    };
    __helios__value__add_or_subtract_inner = (op) -> {
        (a_8, b_13) -> {
            recurse_49 = (recurse_48, keys_1, result) -> {
                __core__chooseList(keys_1, () -> {
                    result
                }, () -> {
                    key_9 = __core__headList__safe(keys_1);
                    tail_1 = recurse_48(recurse_48, __core__tailList__safe(keys_1), result);
                    sum = op(__helios__value__get_inner_map_int(a_8, key_9), __helios__value__get_inner_map_int(b_13, key_9));
                    __core__ifThenElse(
                        __core__equalsInteger(sum, 0),
                        () -> {
                            tail_1
                        },
                        () -> {
                            __core__mkCons(__core__mkPairData(key_9, __core__iData(sum)), tail_1)
                        }
                    )()
                })()
            };
            recurse_49(recurse_49, __helios__value__merge_map_keys(a_8, b_13), __core__mkNilPairData(()))
        }
    };
    __helios__value__get_inner_map = (map_17, mph_9) -> {
        recurse_51 = (recurse_50, map_18) -> {
            __core__chooseList(map_18, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_18)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_18)))
                    },
                    () -> {
                        recurse_50(recurse_50, __core__tailList__safe(map_18))
                    }
                )()
            })()
        };
        recurse_51(recurse_51, map_17)
    };
    __helios__value__add_or_subtract = (a_9, b_14, op_1) -> {
        recurse_53 = (recurse_52, keys_2, result_1) -> {
            __core__chooseList(keys_2, () -> {
                result_1
            }, () -> {
                key_10 = __core__headList__safe(keys_2);
                tail_2 = recurse_52(recurse_52, __core__tailList__safe(keys_2), result_1);
                item_5 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_9, key_10), __helios__value__get_inner_map(b_14, key_10));
                __core__chooseList(item_5, () -> {
                    tail_2
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_10, __core__mapData(item_5)), tail_2)
                })()
            })()
        };
        recurse_53(recurse_53, __helios__value__merge_map_keys(a_9, b_14), __core__mkNilPairData(()))
    };
    __helios__value____add = (a_10, b_15) -> {
        __helios__value__add_or_subtract(a_10, b_15, __core__addInteger)
    };
    __helios__common__map = (self_73, fn_8, init) -> {
        recurse_55 = (recurse_54, rem_1, lst_7) -> {
            __core__chooseList(rem_1, () -> {
                lst_7
            }, () -> {
                __core__mkCons(fn_8(__core__headList__safe(rem_1)), recurse_54(recurse_54, __core__tailList__safe(rem_1), lst_7))
            })()
        };
        recurse_55(recurse_55, self_73, init)
    };
    __helios__value____to_data = __core__mapData;
    __helios__value__value = __helios__common__identity;
    __helios__value__from_data = __core__unMapData;
    __helios__common__insert_in_sorted = (x_3, lst_8, comp) -> {
        recurse_57 = (recurse_56, lst_9) -> {
            __core__chooseList(lst_9, () -> {
                __core__mkCons(x_3, lst_9)
            }, () -> {
                head_5 = __core__headList__safe(lst_9);
                __core__ifThenElse(
                    comp(x_3, head_5),
                    () -> {
                        __core__mkCons(x_3, lst_9)
                    },
                    () -> {
                        __core__mkCons(head_5, recurse_56(recurse_56, __core__tailList__safe(lst_9)))
                    }
                )()
            })()
        };
        recurse_57(recurse_57, lst_8)
    };
    __helios__common__sort = (lst_10, comp_1) -> {
        recurse_59 = (recurse_58, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                (head_6, tail_3) -> {
                    __helios__common__insert_in_sorted(head_6, tail_3, comp_1)
                }(__core__headList__safe(lst_11), recurse_58(recurse_58, __core__tailList__safe(lst_11)))
            })()
        };
        recurse_59(recurse_59, lst_10)
    };
    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;
    __helios__common__filter_map = (self_74, fn_9) -> {
        __helios__common__filter(self_74, fn_9, __core__mkNilPairData(()))
    };
    __helios__bytearray____lt = __core__lessThanByteString;
    __helios__int__max = (a_11, b_16) -> {
        __core__ifThenElse(
            __core__lessThanInteger(a_11, b_16),
            b_16,
            a_11
        )
    };
    __helios__common__slice_bytearray = (self_75, selfLengthFn) -> {
        (start, end) -> {
            normalize = (pos_1) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(pos_1, 0),
                    () -> {
                        __core__addInteger(__core__addInteger(selfLengthFn(self_75), 1), pos_1)
                    },
                    () -> {
                        pos_1
                    }
                )()
            };
            fn_11 = (start_1) -> {
                fn_10 = (end_1) -> {
                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_75)
                };
                fn_10(normalize(end))
            };
            fn_11(normalize(start))
        }
    };
    __helios__bytearray__slice = (self_76) -> {
        __helios__common__slice_bytearray(self_76, __core__lengthOfByteString)
    };
    __helios__bytearray__blake2b = (self_77) -> {
        () -> {
            __core__blake2b_256(self_77)
        }
    };
    __helios__bytearray__length = __core__lengthOfByteString;
    __helios__bytearray____add = __core__appendByteString;
    __helios__txid__serialize = __helios__common__serialize;
    __helios__txoutputid__index = (self_78) -> {
        __helios__int__from_data(__helios__common__enum_field_1(self_78))
    };
    __helios__txoutputid__tx_id = __helios__common__enum_field_0;
    __helios__common__enum_fields_after_7 = (self_79) -> {
        __core__tailList(__helios__common__enum_fields_after_6(self_79))
    };
    __helios__common__enum_fields_after_8 = (self_80) -> {
        __core__tailList(__helios__common__enum_fields_after_7(self_80))
    };
    __helios__common__enum_field_9 = (self_81) -> {
        __core__headList(__helios__common__enum_fields_after_8(self_81))
    };
    __helios__tx__redeemers = (self_82) -> {
        __core__unMapData(__helios__common__enum_field_9(self_82))
    };
    __helios__scriptpurpose__spending____is = (data_22) -> {
        __helios__common__enum_tag_equals(data_22, 1)
    };
    __helios__txoutputid____eq = __helios__common____eq;
    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;
    __helios__scriptpurpose____to_data = __helios__common__identity;
    __helios__txid__show = (self_83) -> {
        () -> {
            __helios__data__show_constr_data((tag_6, fields_10) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_6, 0),
                    () -> {
                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_8) -> {
                            __helios__bytearray__show(bytes_8)()
                        }))(fields_10)
                    },
                    () -> {
                        __helios__data__show(self_83)()
                    }
                )()
            })(self_83)
        }
    };
    __helios__txoutputid__show = (self_84) -> {
        () -> {
            __helios__data__show_constr_data((tag_7, fields_11) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_7, 0),
                    () -> {
                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {
                            __helios__txid__show(tx_id_data)()
                        })(fields_11);
                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_9) -> {
                            __helios__int__show(i_9)()
                        }))(fields_11);
                        __core__appendString(tx_id_str, __core__appendString("#", index_str))
                    },
                    () -> {
                        __helios__data__show(self_84)()
                    }
                )()
            })(self_84)
        }
    };
    __helios__tx__ref_inputs = (self_85) -> {
        __core__unListData(__helios__common__enum_field_1(self_85))
    };
    __helios__address____eq = __helios__common____eq;
    __helios__bytearray__decode_utf8 = (self_86) -> {
        () -> {
            __core__decodeUtf8(self_86)
        }
    };
    __helios__string__serialize = (self_87) -> {
        () -> {
            __core__serialiseData(__helios__string____to_data(self_87))
        }
    };
    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);
    __helios__txoutput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_0 = __core__tailList;
    __helios__common__struct_field_1 = (self_88) -> {
        __core__headList(__helios__common__struct_fields_after_0(self_88))
    };
    __helios__common__struct_field_0 = __core__headList;
    __helios__struct____to_data = __core__listData;
    __helios__struct____eq = (self_89, other_3) -> {
        __core__equalsData(__helios__struct____to_data(self_89), __helios__struct____to_data(other_3))
    };
    __helios__value__compare_inner = (comp_2, a_12, b_17) -> {
        recurse_61 = (recurse_60, keys_3) -> {
            __core__chooseList(keys_3, () -> {
                true
            }, () -> {
                key_11 = __core__headList__safe(keys_3);
                __core__ifThenElse(
                    __helios__bool____not(comp_2(__helios__value__get_inner_map_int(a_12, key_11), __helios__value__get_inner_map_int(b_17, key_11))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_60(recurse_60, __core__tailList__safe(keys_3))
                    }
                )()
            })()
        };
        recurse_61(recurse_61, __helios__value__merge_map_keys(a_12, b_17))
    };
    __helios__value__compare = (a_13, b_18, comp_3) -> {
        recurse_63 = (recurse_62, keys_4) -> {
            __core__chooseList(keys_4, () -> {
                true
            }, () -> {
                key_12 = __core__headList__safe(keys_4);
                __core__ifThenElse(
                    __helios__bool____not(__helios__value__compare_inner(comp_3, __helios__value__get_inner_map(a_13, key_12), __helios__value__get_inner_map(b_18, key_12))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_62(recurse_62, __core__tailList__safe(keys_4))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, __helios__value__merge_map_keys(a_13, b_18))
    };
    __helios__value____geq = (a_14, b_19) -> {
        __helios__value__compare(a_14, b_19, (a_qty, b_qty) -> {
            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))
        })
    };
    __helios__value__contains = (self_90) -> {
        (value_5) -> {
            __helios__value____geq(self_90, value_5)
        }
    };
    __helios__txoutput__sum_values = (outputs) -> {
        __helios__common__fold(outputs, (prev_3, txOutput) -> {
            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))
        }, __helios__value__ZERO)
    };
    __helios__tx__filter_outputs = (self_91, fn_12) -> {
        __helios__common__filter_list(__helios__tx__outputs(self_91), fn_12)
    };
    __helios__address__credential = __helios__common__enum_field_0;
    __helios__spendingcredential__is_validator = (self_92) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_92)), 1)
    };
    __helios__validatorhash____eq = __helios__bytearray____eq;
    __helios__validatorhash__from_data = __helios__bytearray__from_data;
    __helios__spendingcredential__validator__hash = (self_93) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_93))
    };
    __helios__spendingcredential__validator__cast = (data_23) -> {
        __helios__common__assert_constr_index(data_23, 1)
    };
    __helios__txoutput__is_locked_by = (self_94) -> {
        (hash) -> {
            credential = __helios__address__credential(__helios__txoutput__address(self_94));
            __core__ifThenElse(
                __helios__spendingcredential__is_validator(credential),
                () -> {
                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))
                },
                () -> {
                    false
                }
            )()
        }
    };
    __helios__tx__outputs_locked_by = (self_95) -> {
        (vh) -> {
            __helios__tx__filter_outputs(self_95, (output) -> {
                __helios__txoutput__is_locked_by(output)(vh)
            })
        }
    };
    __helios__tx__value_locked_by = (self_96) -> {
        (vh_1) -> {
            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_96)(vh_1))
        }
    };
    __helios__txoutputdatum__serialize = __helios__common__serialize;
    __helios__data__constrdata____is = (data_24) -> {
        __core__chooseData(data_24, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__data__constrdata__fields = (data_25) -> {
        __core__sndPair(__core__unConstrData(data_25))
    };
    __helios__data__constrdata__tag = (data_26) -> {
        __core__fstPair(__core__unConstrData(data_26))
    };
    __helios__common__struct_fields_after_1 = (self_97) -> {
        __core__tailList(__helios__common__struct_fields_after_0(self_97))
    };
    __helios__common__struct_fields_after_2 = (self_98) -> {
        __core__tailList(__helios__common__struct_fields_after_1(self_98))
    };
    __helios__common__struct_fields_after_3 = (self_99) -> {
        __core__tailList(__helios__common__struct_fields_after_2(self_99))
    };
    __helios__common__struct_field_4 = (self_100) -> {
        __core__headList(__helios__common__struct_fields_after_3(self_100))
    };
    __helios__common__struct_field_3 = (self_101) -> {
        __core__headList(__helios__common__struct_fields_after_2(self_101))
    };
    __helios__common__struct_field_2 = (self_102) -> {
        __core__headList(__helios__common__struct_fields_after_1(self_102))
    };
    __helios__struct__serialize = (self_103) -> {
        () -> {
            __core__serialiseData(__helios__struct____to_data(self_103))
        }
    };
    __helios__txoutput__is_valid_data = (data_27) -> {
        __core__chooseData(data_27, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__txinput__is_valid_data = (data_28) -> {
        __helios__common__test_constr_data_2(data_28, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)
    };
    __helios__txinput____to_data = __helios__common__identity;
    __helios__common__enum_field_6 = (self_104) -> {
        __core__headList(__helios__common__enum_fields_after_5(self_104))
    };
    __helios__common__enum_field_5 = (self_105) -> {
        __core__headList(__helios__common__enum_fields_after_4(self_105))
    };
    __helios__common__enum_field_3 = (self_106) -> {
        __core__headList(__helios__common__enum_fields_after_2(self_106))
    };
    __helios__mintingpolicyhash__is_valid_data = (data_29) -> {
        __core__chooseData(data_29, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            bytes_9 = __core__unBData__safe(data_29);
            n_4 = __core__lengthOfByteString(bytes_9);
            __core__ifThenElse(
                __core__equalsInteger(n_4, 0),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(n_4, 28),
                        true,
                        false
                    )
                }
            )()
        })()
    };
    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__spendingcredential__is_valid_data = (data_30) -> {
        __core__chooseData(data_30, () -> {
            pair_9 = __core__unConstrData__safe(data_30);
            index_5 = __core__fstPair(pair_9);
            fields_12 = __core__sndPair(pair_9);
            __core__ifThenElse(
                __core__equalsInteger(index_5, 0),
                () -> {
                    __core__chooseList(fields_12, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_12), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_12))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_5, 1),
                        () -> {
                            __core__chooseList(fields_12, () -> {
                                false
                            }, () -> {
                                __core__chooseList(__core__tailList__safe(fields_12), () -> {
                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_12))
                                }, () -> {
                                    false
                                })()
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__common__test_list_head_data = (test_head, test_tail) -> {
        (list_2) -> {
            __core__chooseList(list_2, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    test_head(__core__headList(list_2)),
                    () -> {
                        test_tail(__core__tailList(list_2))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;
    __helios__common__test_list_empty = (list_3) -> {
        __core__chooseList(list_3, true, false)
    };
    __helios__stakingcredential__is_valid_data = (data_31) -> {
        __core__chooseData(data_31, () -> {
            pair_10 = __core__unConstrData__safe(data_31);
            tag_8 = __core__fstPair(pair_10);
            fields_13 = __core__sndPair(pair_10);
            __core__ifThenElse(
                __core__equalsInteger(tag_8, 0),
                () -> {
                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_13)
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(tag_8, 1),
                        () -> {
                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_13)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__stakingcredential]__is_valid_data = (data_32) -> {
        __core__chooseData(data_32, () -> {
            pair_11 = __core__unConstrData__safe(data_32);
            index_6 = __core__fstPair(pair_11);
            fields_14 = __core__sndPair(pair_11);
            __core__ifThenElse(
                __core__equalsInteger(index_6, 0),
                () -> {
                    __core__chooseList(fields_14, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_14), () -> {
                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_14))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_6, 1),
                        () -> {
                            __core__chooseList(fields_14, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__address__is_valid_data = (data_33) -> {
        __helios__common__test_constr_data_2(data_33, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)
    };
    __helios__validatorhash__show = __helios__bytearray__show;
    __helios__common__find_safe = (self_107, fn_13, callback_7) -> {
        recurse_65 = (recurse_64, self_108, fn_14) -> {
            __core__chooseList(self_108, () -> {
                __core__constrData(1, __helios__common__list_0)
            }, () -> {
                head_7 = __core__headList__safe(self_108);
                __core__ifThenElse(
                    fn_14(head_7),
                    () -> {
                        __core__constrData(0, __helios__common__list_1(callback_7(head_7)))
                    },
                    () -> {
                        recurse_64(recurse_64, __core__tailList__safe(self_108), fn_14)
                    }
                )()
            })()
        };
        recurse_65(recurse_65, self_107, fn_13)
    };
    __helios__spendingcredential____eq = __helios__common____eq;
    __helios__validatorhash____to_data = __helios__bytearray____to_data;
    __helios__spendingcredential__new_validator = (hash_1) -> {
        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))
    };
    __helios__bytearray__is_valid_data_max_length = (n_5) -> {
        (data_34) -> {
            __core__chooseData(data_34, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_10 = __core__unBData__safe(data_34);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_10), n_5),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__assetclass__is_valid_data = (data_35) -> {
        __helios__common__test_constr_data_2(data_35, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))
    };
    __helios__data__mapdata____is = (data_36) -> {
        __core__chooseData(data_36, () -> {
            false
        }, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__scriptpurpose__from_data = __helios__common__identity;
    __module__StellarHeliosHelpers__TODO = (task) -> {
        __helios__print(__helios__string____add(__helios__string____add("  \u{1F7E5}  \u{1F633}\u{1F4A6}  TODO: ", task), "
"))
    };
    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion) -> {
        assertion_1 = __core__ifThenElse(
            __useopt__assertion,
            () -> {
                assertion
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__helios__print(__helios__string____add("\u2757 ", reqt)), __helios__assert(assertion_1, __helios__string____add("  \u274C\u274C ^ failed: ", reqt)))
    };
    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2) -> {
        assertion_3 = __core__ifThenElse(
            __useopt__assertion_1,
            () -> {
                assertion_2
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3), true)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {
        tn_1 = __core__ifThenElse(
            __useopt__tn,
            () -> {
                tn
            },
            () -> {
                ""
            }
        )();
        tnBytes_1 = __core__ifThenElse(
            __useopt__tnBytes,
            () -> {
                tnBytes
            },
            () -> {
                __helios__string__encode_utf8(tn_1)()
            }
        )();
        count_1 = __core__ifThenElse(
            __useopt__count,
            () -> {
                count
            },
            () -> {
                1
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), "missing reqd tn or tnBytes"), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), count_1))
    };
    __helios__list[__helios__txoutput]__find = (self_109) -> {
        (fn_15) -> {
            recurse_67 = (recurse_66, lst_12) -> {
                __core__chooseList(lst_12, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_6 = __helios__txoutput__from_data(__core__headList__safe(lst_12));
                    __core__ifThenElse(
                        fn_15(item_6),
                        () -> {
                            item_6
                        },
                        () -> {
                            recurse_66(recurse_66, __core__tailList__safe(lst_12))
                        }
                    )()
                })()
            };
            recurse_67(recurse_67, self_109)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length = (self_110) -> {
        __helios__common__length(self_110)
    };
    __helios__map[__helios__bytearray@__helios__int]__length = (self_111) -> {
        __helios__common__length(self_111)
    };
    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_19) -> {
        recurse_69 = (recurse_68, map_20) -> {
            __core__chooseList(map_20, () -> {
                true
            }, () -> {
                head_8 = __core__headList__safe(map_20);
                __core__ifThenElse(
                    __helios__bytearray__is_valid_data(__core__fstPair(head_8)),
                    () -> {
                        __core__ifThenElse(
                            __helios__int__is_valid_data(__core__sndPair(head_8)),
                            () -> {
                                recurse_68(recurse_68, __core__tailList__safe(map_20))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_69(recurse_69, map_19)
    };
    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_37) -> {
        map_21 = __core__unMapData(data_37);
        _ = __core__ifThenElse(
            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_21),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_21
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_112) -> {
        (key_13) -> {
            __helios__common__map_get(self_112, __helios__scriptpurpose____to_data(key_13), (x_4) -> {
                __helios__data__from_data(x_4)
            }, () -> {
                __helios__error("key not found")
            })
        }
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_113) -> {
        (fn_16) -> {
            recurse_71 = (recurse_70, map_22) -> {
                __core__chooseList(map_22, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_7 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_22)));
                    __core__ifThenElse(
                        fn_16(item_7),
                        () -> {
                            item_7
                        },
                        () -> {
                            recurse_70(recurse_70, __core__tailList__safe(map_22))
                        }
                    )()
                })()
            };
            recurse_71(recurse_71, self_113)
        }
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __helios__txinput__output_id(txInput);
        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);
        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {
            __cond = purpose;
            __core__ifThenElse(
                __helios__scriptpurpose__spending____is(__cond),
                () -> {
                    (sp) -> {
                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)
                    }
                },
                () -> {
                    (__1) -> {
                        false
                    }
                }
            )()(__cond)
        });
        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)
    };
    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_38) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_38, __core__bData(#747065), __helios__string__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_38, __core__bData(#406964), __helios__bytearray__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid data in AnyData.@id", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in AnyData.tpe", () -> {
                    false
                })()
            }
        )()
    };
    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_39) -> {
        ignore = __core__ifThenElse(
            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_39),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", ())
            }
        )();
        data_39
    };
    __module__StellarHeliosHelpers__AnyData[]__id = (self_114) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_114, #406964))
    };
    __module__StellarHeliosHelpers__AnyData[]__type = (self_115) -> {
        __helios__string__from_data(__helios__common__mStruct_field(self_115, #747065))
    };
    __helios__list[__helios__data]__head = (self_116) -> {
        __helios__data__from_data(__core__headList(self_116))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_6) -> {
        __cond_1 = value_6;
        __core__ifThenElse(
            __helios__data__constrdata____is(__cond_1),
            () -> {
                (__lhs_0) -> {
                    fields_15 = __helios__data__constrdata__fields(__lhs_0);
                    __cond_2 = __helios__list[__helios__data]__head(fields_15);
                    __core__ifThenElse(
                        __helios__data__mapdata____is(__cond_2),
                        () -> {
                            (__lhs_0_1) -> {
                                __helios__list[__helios__data]__head(fields_15)
                            }
                        },
                        () -> {
                            (__3) -> {
                                __helios__error("bad cast from ConstrData{_, ...fields} to mStruct: first field must be a map")
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    __helios__error("bad cast to mStruct from non-ConstrData")
                }
            }
        )()(__cond_1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {
        (data_40) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_40),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_40),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_40),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {
        (data_41) -> {
            ignore_1 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_41),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateLifecycleActivity data", ())
                }
            )();
            data_41
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_42) -> {
        __helios__common__enum_tag_equals(data_42, 0)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_43) -> {
        __core__chooseData(data_43, () -> {
            pair_12 = __core__unConstrData__safe(data_43);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_12), 0),
                () -> {
                    data_44 = __core__listData(__core__sndPair(pair_12));
                    __core__chooseData(data_44, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_16 = __core__unListData__safe(data_44);
                        __core__chooseList(fields_16, () -> {
                            false
                        }, () -> {
                            head_9 = __core__headList__safe(fields_16);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_9),
                                () -> {
                                    fields_17 = __core__tailList__safe(fields_16);
                                    __core__chooseList(fields_17, () -> {
                                        false
                                    }, () -> {
                                        head_10 = __core__headList__safe(fields_17);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_10),
                                            () -> {
                                                fields_18 = __core__tailList__safe(fields_17);
                                                __core__chooseList(fields_18, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed = (self_117) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_117))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose = (self_118) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_118))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_45) -> {
        __helios__common__enum_tag_equals(data_45, 1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_46) -> {
        __core__chooseData(data_46, () -> {
            pair_13 = __core__unConstrData__safe(data_46);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_13), 1),
                () -> {
                    data_47 = __core__listData(__core__sndPair(pair_13));
                    __core__chooseData(data_47, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_19 = __core__unListData__safe(data_47);
                        __core__chooseList(fields_19, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is = (data_48) -> {
        __helios__common__enum_tag_equals(data_48, 2)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_49) -> {
        __core__chooseData(data_49, () -> {
            pair_14 = __core__unConstrData__safe(data_49);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_14), 2),
                () -> {
                    data_50 = __core__listData(__core__sndPair(pair_14));
                    __core__chooseData(data_50, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_20 = __core__unListData__safe(data_50);
                        __core__chooseList(fields_20, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {
        (data_51) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_51),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_51),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_51),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_51),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_51),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_51),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_51),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_51),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__from_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1) -> {
        (data_52) -> {
            ignore_2 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(data_52),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateRole data", ())
                }
            )();
            data_52
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_53) -> {
        __helios__common__enum_tag_equals(data_53, 0)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2 = (data_54) -> {
        __core__chooseData(data_54, () -> {
            pair_15 = __core__unConstrData__safe(data_54);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_15), 0),
                () -> {
                    data_55 = __core__listData(__core__sndPair(pair_15));
                    __core__chooseData(data_55, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_21 = __core__unListData__safe(data_55);
                        __core__chooseList(fields_21, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_56) -> {
        __helios__common__enum_tag_equals(data_56, 1)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2 = (data_57) -> {
        __core__chooseData(data_57, () -> {
            pair_16 = __core__unConstrData__safe(data_57);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_16), 1),
                () -> {
                    data_58 = __core__listData(__core__sndPair(pair_16));
                    __core__chooseData(data_58, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_22 = __core__unListData__safe(data_58);
                        __core__chooseList(fields_22, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is = (data_59) -> {
        __helios__common__enum_tag_equals(data_59, 2)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2 = (data_60) -> {
        __core__chooseData(data_60, () -> {
            pair_17 = __core__unConstrData__safe(data_60);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_17), 2),
                () -> {
                    data_61 = __core__listData(__core__sndPair(pair_17));
                    __core__chooseData(data_61, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_23 = __core__unListData__safe(data_61);
                        __core__chooseList(fields_23, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is = (data_62) -> {
        __helios__common__enum_tag_equals(data_62, 3)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2 = (data_63) -> {
        __core__chooseData(data_63, () -> {
            pair_18 = __core__unConstrData__safe(data_63);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_18), 3),
                () -> {
                    data_64 = __core__listData(__core__sndPair(pair_18));
                    __core__chooseData(data_64, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_24 = __core__unListData__safe(data_64);
                        __core__chooseList(fields_24, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is = (data_65) -> {
        __helios__common__enum_tag_equals(data_65, 4)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2 = (data_66) -> {
        __core__chooseData(data_66, () -> {
            pair_19 = __core__unConstrData__safe(data_66);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_19), 4),
                () -> {
                    data_67 = __core__listData(__core__sndPair(pair_19));
                    __core__chooseData(data_67, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_25 = __core__unListData__safe(data_67);
                        __core__chooseList(fields_25, () -> {
                            false
                        }, () -> {
                            head_11 = __core__headList__safe(fields_25);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_11),
                                () -> {
                                    fields_26 = __core__tailList__safe(fields_25);
                                    __core__chooseList(fields_26, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_119) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_119))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new = (self_120) -> {
        __core__constrData(4, __helios__common__list_1(__helios__string____to_data(self_120)))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is = (data_68) -> {
        __helios__common__enum_tag_equals(data_68, 5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2 = (data_69) -> {
        __core__chooseData(data_69, () -> {
            pair_20 = __core__unConstrData__safe(data_69);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_20), 5),
                () -> {
                    data_70 = __core__listData(__core__sndPair(pair_20));
                    __core__chooseData(data_70, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_27 = __core__unListData__safe(data_70);
                        __core__chooseList(fields_27, () -> {
                            false
                        }, () -> {
                            head_12 = __core__headList__safe(fields_27);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_12),
                                () -> {
                                    fields_28 = __core__tailList__safe(fields_27);
                                    __core__chooseList(fields_28, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_71) -> {
        __helios__common__enum_tag_equals(data_71, 6)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2 = (data_72) -> {
        __core__chooseData(data_72, () -> {
            pair_21 = __core__unConstrData__safe(data_72);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_21), 6),
                () -> {
                    data_73 = __core__listData(__core__sndPair(pair_21));
                    __core__chooseData(data_73, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_29 = __core__unListData__safe(data_73);
                        __core__chooseList(fields_29, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {
        __core__constrData(6, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_74) -> {
        __helios__common__enum_tag_equals(data_74, 7)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2 = (data_75) -> {
        __core__chooseData(data_75, () -> {
            pair_22 = __core__unConstrData__safe(data_75);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_22), 7),
                () -> {
                    data_76 = __core__listData(__core__sndPair(pair_22));
                    __core__chooseData(data_76, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_30 = __core__unListData__safe(data_76);
                        __core__chooseList(fields_30, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {
        (data_77) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_77),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_77),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_77),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_77),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_77),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__from_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1) -> {
        (data_78) -> {
            ignore_3 = __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(data_78),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestActivity data", ())
                }
            )();
            data_78
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is = (data_79) -> {
        __helios__common__enum_tag_equals(data_79, 0)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2 = (data_80) -> {
        __core__chooseData(data_80, () -> {
            pair_23 = __core__unConstrData__safe(data_80);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_23), 0),
                () -> {
                    data_81 = __core__listData(__core__sndPair(pair_23));
                    __core__chooseData(data_81, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_31 = __core__unListData__safe(data_81);
                        __core__chooseList(fields_31, () -> {
                            false
                        }, () -> {
                            head_13 = __core__headList__safe(fields_31);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_13),
                                () -> {
                                    fields_32 = __core__tailList__safe(fields_31);
                                    __core__chooseList(fields_32, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is = (data_82) -> {
        __helios__common__enum_tag_equals(data_82, 1)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2 = (data_83) -> {
        __core__chooseData(data_83, () -> {
            pair_24 = __core__unConstrData__safe(data_83);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_24), 1),
                () -> {
                    data_84 = __core__listData(__core__sndPair(pair_24));
                    __core__chooseData(data_84, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_33 = __core__unListData__safe(data_84);
                        __core__chooseList(fields_33, () -> {
                            false
                        }, () -> {
                            head_14 = __core__headList__safe(fields_33);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_14),
                                () -> {
                                    fields_34 = __core__tailList__safe(fields_33);
                                    __core__chooseList(fields_34, () -> {
                                        false
                                    }, () -> {
                                        head_15 = __core__headList__safe(fields_34);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_15),
                                            () -> {
                                                fields_35 = __core__tailList__safe(fields_34);
                                                __core__chooseList(fields_35, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is = (data_85) -> {
        __helios__common__enum_tag_equals(data_85, 2)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2 = (data_86) -> {
        __core__chooseData(data_86, () -> {
            pair_25 = __core__unConstrData__safe(data_86);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_25), 2),
                () -> {
                    data_87 = __core__listData(__core__sndPair(pair_25));
                    __core__chooseData(data_87, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_36 = __core__unListData__safe(data_87);
                        __core__chooseList(fields_36, () -> {
                            false
                        }, () -> {
                            head_16 = __core__headList__safe(fields_36);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_16),
                                () -> {
                                    fields_37 = __core__tailList__safe(fields_36);
                                    __core__chooseList(fields_37, () -> {
                                        false
                                    }, () -> {
                                        head_17 = __core__headList__safe(fields_37);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_17),
                                            () -> {
                                                fields_38 = __core__tailList__safe(fields_37);
                                                __core__chooseList(fields_38, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key = (self_121) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_121))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName = (self_122) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_122))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is = (data_88) -> {
        __helios__common__enum_tag_equals(data_88, 3)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2 = (data_89) -> {
        __core__chooseData(data_89, () -> {
            pair_26 = __core__unConstrData__safe(data_89);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_26), 3),
                () -> {
                    data_90 = __core__listData(__core__sndPair(pair_26));
                    __core__chooseData(data_90, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_39 = __core__unListData__safe(data_90);
                        __core__chooseList(fields_39, () -> {
                            false
                        }, () -> {
                            head_18 = __core__headList__safe(fields_39);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_18),
                                () -> {
                                    fields_40 = __core__tailList__safe(fields_39);
                                    __core__chooseList(fields_40, () -> {
                                        false
                                    }, () -> {
                                        head_19 = __core__headList__safe(fields_40);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_19),
                                            () -> {
                                                fields_41 = __core__tailList__safe(fields_40);
                                                __core__chooseList(fields_41, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2 = (data_91) -> {
        __core__chooseData(data_91, () -> {
            pair_27 = __core__unConstrData__safe(data_91);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_27), 4),
                () -> {
                    data_92 = __core__listData(__core__sndPair(pair_27));
                    __core__chooseData(data_92, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_42 = __core__unListData__safe(data_92);
                        __core__chooseList(fields_42, () -> {
                            false
                        }, () -> {
                            head_20 = __core__headList__safe(fields_42);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_20),
                                () -> {
                                    fields_43 = __core__tailList__safe(fields_42);
                                    __core__chooseList(fields_43, () -> {
                                        false
                                    }, () -> {
                                        head_21 = __core__headList__safe(fields_43);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_21),
                                            () -> {
                                                fields_44 = __core__tailList__safe(fields_43);
                                                __core__chooseList(fields_44, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {
        (data_93) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_93),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_93),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_93),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1) -> {
        (data_94) -> {
            ignore_4 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(data_94),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingDelegateAction data", ())
                }
            )();
            data_94
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is = (data_95) -> {
        __helios__common__enum_tag_equals(data_95, 0)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2 = (data_96) -> {
        __core__chooseData(data_96, () -> {
            pair_28 = __core__unConstrData__safe(data_96);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_28), 0),
                () -> {
                    data_97 = __core__listData(__core__sndPair(pair_28));
                    __core__chooseData(data_97, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_45 = __core__unListData__safe(data_97);
                        __core__chooseList(fields_45, () -> {
                            false
                        }, () -> {
                            head_22 = __core__headList__safe(fields_45);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_22),
                                () -> {
                                    fields_46 = __core__tailList__safe(fields_45);
                                    __core__chooseList(fields_46, () -> {
                                        false
                                    }, () -> {
                                        head_23 = __core__headList__safe(fields_46);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_23),
                                            () -> {
                                                fields_47 = __core__tailList__safe(fields_46);
                                                __core__chooseList(fields_47, () -> {
                                                    false
                                                }, () -> {
                                                    head_24 = __core__headList__safe(fields_47);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_24),
                                                        () -> {
                                                            fields_48 = __core__tailList__safe(fields_47);
                                                            __core__chooseList(fields_48, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed = (self_123) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_123))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose = (self_124) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_124))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_125) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_125))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is = (data_98) -> {
        __helios__common__enum_tag_equals(data_98, 1)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2 = (data_99) -> {
        __core__chooseData(data_99, () -> {
            pair_29 = __core__unConstrData__safe(data_99);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_29), 1),
                () -> {
                    data_100 = __core__listData(__core__sndPair(pair_29));
                    __core__chooseData(data_100, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_49 = __core__unListData__safe(data_100);
                        __core__chooseList(fields_49, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is = (data_101) -> {
        __helios__common__enum_tag_equals(data_101, 2)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2 = (data_102) -> {
        __core__chooseData(data_102, () -> {
            pair_30 = __core__unConstrData__safe(data_102);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_30), 2),
                () -> {
                    data_103 = __core__listData(__core__sndPair(pair_30));
                    __core__chooseData(data_103, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_50 = __core__unListData__safe(data_103);
                        __core__chooseList(fields_50, () -> {
                            false
                        }, () -> {
                            head_25 = __core__headList__safe(fields_50);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_25),
                                () -> {
                                    fields_51 = __core__tailList__safe(fields_50);
                                    __core__chooseList(fields_51, () -> {
                                        false
                                    }, () -> {
                                        head_26 = __core__headList__safe(fields_51);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_26),
                                            () -> {
                                                fields_52 = __core__tailList__safe(fields_51);
                                                __core__chooseList(fields_52, () -> {
                                                    false
                                                }, () -> {
                                                    head_27 = __core__headList__safe(fields_52);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_27),
                                                        () -> {
                                                            fields_53 = __core__tailList__safe(fields_52);
                                                            __core__chooseList(fields_53, () -> {
                                                                false
                                                            }, () -> {
                                                                head_28 = __core__headList__safe(fields_53);
                                                                __core__ifThenElse(
                                                                    __helios__assetclass__is_valid_data(head_28),
                                                                    () -> {
                                                                        fields_54 = __core__tailList__safe(fields_53);
                                                                        __core__chooseList(fields_54, true, false)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed = (self_126) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_126))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose = (self_127) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_127))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_128) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_128))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt = (self_129) -> {
        __helios__assetclass__from_data(__helios__common__enum_field_3(self_129))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {
        (data_104) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_104),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_104),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_104),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_104),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_104),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_104),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_104),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {
        (data_105) -> {
            ignore_5 = __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_105),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoLifecycleActivity data", ())
                }
            )();
            data_105
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_106) -> {
        __helios__common__enum_tag_equals(data_106, 0)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_107) -> {
        __core__chooseData(data_107, () -> {
            pair_31 = __core__unConstrData__safe(data_107);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_31), 0),
                () -> {
                    data_108 = __core__listData(__core__sndPair(pair_31));
                    __core__chooseData(data_108, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_55 = __core__unListData__safe(data_108);
                        __core__chooseList(fields_55, () -> {
                            false
                        }, () -> {
                            head_29 = __core__headList__safe(fields_55);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_29),
                                () -> {
                                    fields_56 = __core__tailList__safe(fields_55);
                                    __core__chooseList(fields_56, () -> {
                                        false
                                    }, () -> {
                                        head_30 = __core__headList__safe(fields_56);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_30),
                                            () -> {
                                                fields_57 = __core__tailList__safe(fields_56);
                                                __core__chooseList(fields_57, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed = (self_130) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_130))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose = (self_131) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_131))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_109) -> {
        __helios__common__enum_tag_equals(data_109, 1)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_110) -> {
        __core__chooseData(data_110, () -> {
            pair_32 = __core__unConstrData__safe(data_110);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_32), 1),
                () -> {
                    data_111 = __core__listData(__core__sndPair(pair_32));
                    __core__chooseData(data_111, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_58 = __core__unListData__safe(data_111);
                        __core__chooseList(fields_58, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_112) -> {
        __helios__common__enum_tag_equals(data_112, 2)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_113) -> {
        __core__chooseData(data_113, () -> {
            pair_33 = __core__unConstrData__safe(data_113);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_33), 2),
                () -> {
                    data_114 = __core__listData(__core__sndPair(pair_33));
                    __core__chooseData(data_114, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_59 = __core__unListData__safe(data_114);
                        __core__chooseList(fields_59, () -> {
                            false
                        }, () -> {
                            head_31 = __core__headList__safe(fields_59);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_31),
                                () -> {
                                    fields_60 = __core__tailList__safe(fields_59);
                                    __core__chooseList(fields_60, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_115) -> {
        __helios__common__enum_tag_equals(data_115, 3)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_116) -> {
        __core__chooseData(data_116, () -> {
            pair_34 = __core__unConstrData__safe(data_116);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_34), 3),
                () -> {
                    data_117 = __core__listData(__core__sndPair(pair_34));
                    __core__chooseData(data_117, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_61 = __core__unListData__safe(data_117);
                        __core__chooseList(fields_61, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_118) -> {
        __helios__common__enum_tag_equals(data_118, 4)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_119) -> {
        __core__chooseData(data_119, () -> {
            pair_35 = __core__unConstrData__safe(data_119);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_35), 4),
                () -> {
                    data_120 = __core__listData(__core__sndPair(pair_35));
                    __core__chooseData(data_120, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_62 = __core__unListData__safe(data_120);
                        __core__chooseList(fields_62, () -> {
                            false
                        }, () -> {
                            head_32 = __core__headList__safe(fields_62);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_32),
                                () -> {
                                    fields_63 = __core__tailList__safe(fields_62);
                                    __core__chooseList(fields_63, () -> {
                                        false
                                    }, () -> {
                                        head_33 = __core__headList__safe(fields_63);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_33),
                                            () -> {
                                                fields_64 = __core__tailList__safe(fields_63);
                                                __core__chooseList(fields_64, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_121) -> {
        __helios__common__enum_tag_equals(data_121, 5)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_122) -> {
        __core__chooseData(data_122, () -> {
            pair_36 = __core__unConstrData__safe(data_122);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_36), 5),
                () -> {
                    data_123 = __core__listData(__core__sndPair(pair_36));
                    __core__chooseData(data_123, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_65 = __core__unListData__safe(data_123);
                        __core__chooseList(fields_65, () -> {
                            false
                        }, () -> {
                            head_34 = __core__headList__safe(fields_65);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_34),
                                () -> {
                                    fields_66 = __core__tailList__safe(fields_65);
                                    __core__chooseList(fields_66, () -> {
                                        false
                                    }, () -> {
                                        head_35 = __core__headList__safe(fields_66);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_35),
                                            () -> {
                                                fields_67 = __core__tailList__safe(fields_66);
                                                __core__chooseList(fields_67, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_124) -> {
        __helios__common__enum_tag_equals(data_124, 6)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_125) -> {
        __core__chooseData(data_125, () -> {
            pair_37 = __core__unConstrData__safe(data_125);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_37), 6),
                () -> {
                    data_126 = __core__listData(__core__sndPair(pair_37));
                    __core__chooseData(data_126, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_68 = __core__unListData__safe(data_126);
                        __core__chooseList(fields_68, () -> {
                            false
                        }, () -> {
                            head_36 = __core__headList__safe(fields_68);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_36),
                                () -> {
                                    fields_69 = __core__tailList__safe(fields_68);
                                    __core__chooseList(fields_69, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity = (self_132) -> {
        __module__CapoDelegateHelpers__ManifestActivity[]__from_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(__helios__common__enum_field_0(self_132))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_127) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_127),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_127),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_127),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_127),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_127),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_127),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_127),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_127),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_127),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_128) -> {
            ignore_6 = __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1)(data_128),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid AbstractDelegateActivitiesEnum data", ())
                }
            )();
            data_128
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_129) -> {
        __core__chooseData(data_129, () -> {
            pair_38 = __core__unConstrData__safe(data_129);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_38), 0),
                () -> {
                    data_130 = __core__listData(__core__sndPair(pair_38));
                    __core__chooseData(data_130, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_70 = __core__unListData__safe(data_130);
                        __core__chooseList(fields_70, () -> {
                            false
                        }, () -> {
                            head_37 = __core__headList__safe(fields_70);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_37),
                                () -> {
                                    fields_71 = __core__tailList__safe(fields_70);
                                    __core__chooseList(fields_71, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_131) -> {
        __helios__common__enum_tag_equals(data_131, 1)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_132) -> {
        __core__chooseData(data_132, () -> {
            pair_39 = __core__unConstrData__safe(data_132);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_39), 1),
                () -> {
                    data_133 = __core__listData(__core__sndPair(pair_39));
                    __core__chooseData(data_133, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_72 = __core__unListData__safe(data_133);
                        __core__chooseList(fields_72, () -> {
                            false
                        }, () -> {
                            head_38 = __core__headList__safe(fields_72);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_38),
                                () -> {
                                    fields_73 = __core__tailList__safe(fields_72);
                                    __core__chooseList(fields_73, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_133) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_133))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_134) -> {
        __helios__common__enum_tag_equals(data_134, 2)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_135) -> {
        __core__chooseData(data_135, () -> {
            pair_40 = __core__unConstrData__safe(data_135);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_40), 2),
                () -> {
                    data_136 = __core__listData(__core__sndPair(pair_40));
                    __core__chooseData(data_136, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_74 = __core__unListData__safe(data_136);
                        __core__chooseList(fields_74, () -> {
                            false
                        }, () -> {
                            head_39 = __core__headList__safe(fields_74);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_39),
                                () -> {
                                    fields_75 = __core__tailList__safe(fields_74);
                                    __core__chooseList(fields_75, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_134) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_134))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_137) -> {
        __helios__common__enum_tag_equals(data_137, 3)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_138) -> {
        __core__chooseData(data_138, () -> {
            pair_41 = __core__unConstrData__safe(data_138);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_41), 3),
                () -> {
                    data_139 = __core__listData(__core__sndPair(pair_41));
                    __core__chooseData(data_139, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_76 = __core__unListData__safe(data_139);
                        __core__chooseList(fields_76, () -> {
                            false
                        }, () -> {
                            head_40 = __core__headList__safe(fields_76);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_40),
                                () -> {
                                    fields_77 = __core__tailList__safe(fields_76);
                                    __core__chooseList(fields_77, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity = (self_135) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_135))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_140) -> {
        __core__chooseData(data_140, () -> {
            pair_42 = __core__unConstrData__safe(data_140);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_42), 4),
                () -> {
                    data_141 = __core__listData(__core__sndPair(pair_42));
                    __core__chooseData(data_141, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_78 = __core__unListData__safe(data_141);
                        __core__chooseList(fields_78, () -> {
                            false
                        }, () -> {
                            head_41 = __core__headList__safe(fields_78);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_41),
                                () -> {
                                    fields_79 = __core__tailList__safe(fields_78);
                                    __core__chooseList(fields_79, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_142) -> {
        __helios__common__enum_tag_equals(data_142, 5)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_143) -> {
        __core__chooseData(data_143, () -> {
            pair_43 = __core__unConstrData__safe(data_143);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_43), 5),
                () -> {
                    data_144 = __core__listData(__core__sndPair(pair_43));
                    __core__chooseData(data_144, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_80 = __core__unListData__safe(data_144);
                        __core__chooseList(fields_80, () -> {
                            false
                        }, () -> {
                            head_42 = __core__headList__safe(fields_80);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_42),
                                () -> {
                                    fields_81 = __core__tailList__safe(fields_80);
                                    __core__chooseList(fields_81, () -> {
                                        false
                                    }, () -> {
                                        head_43 = __core__headList__safe(fields_81);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_43),
                                            () -> {
                                                fields_82 = __core__tailList__safe(fields_81);
                                                __core__chooseList(fields_82, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_145) -> {
        __helios__common__enum_tag_equals(data_145, 6)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_146) -> {
        __core__chooseData(data_146, () -> {
            pair_44 = __core__unConstrData__safe(data_146);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_44), 6),
                () -> {
                    data_147 = __core__listData(__core__sndPair(pair_44));
                    __core__chooseData(data_147, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_83 = __core__unListData__safe(data_147);
                        __core__chooseList(fields_83, () -> {
                            false
                        }, () -> {
                            head_44 = __core__headList__safe(fields_83);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_44),
                                () -> {
                                    fields_84 = __core__tailList__safe(fields_83);
                                    __core__chooseList(fields_84, () -> {
                                        false
                                    }, () -> {
                                        head_45 = __core__headList__safe(fields_84);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_45),
                                            () -> {
                                                fields_85 = __core__tailList__safe(fields_84);
                                                __core__chooseList(fields_85, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_148) -> {
        __helios__common__enum_tag_equals(data_148, 7)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_149) -> {
        __core__chooseData(data_149, () -> {
            pair_45 = __core__unConstrData__safe(data_149);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_45), 7),
                () -> {
                    data_150 = __core__listData(__core__sndPair(pair_45));
                    __core__chooseData(data_150, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_86 = __core__unListData__safe(data_150);
                        __core__chooseList(fields_86, () -> {
                            false
                        }, () -> {
                            head_46 = __core__headList__safe(fields_86);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_46),
                                () -> {
                                    fields_87 = __core__tailList__safe(fields_86);
                                    __core__chooseList(fields_87, () -> {
                                        false
                                    }, () -> {
                                        head_47 = __core__headList__safe(fields_87);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_47),
                                            () -> {
                                                fields_88 = __core__tailList__safe(fields_87);
                                                __core__chooseList(fields_88, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_151) -> {
        __helios__common__enum_tag_equals(data_151, 8)
    };
    __helios__list[__helios__data]__is_valid_data_internal = (lst_13) -> {
        recurse_73 = (recurse_72, lst_14) -> {
            __core__chooseList(lst_14, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__data__is_valid_data(__core__headList__safe(lst_14)),
                    () -> {
                        recurse_72(recurse_72, __core__tailList__safe(lst_14))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_73(recurse_73, lst_13)
    };
    __helios__list[__helios__data]__is_valid_data = (data_152) -> {
        __core__chooseData(data_152, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_152))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_153) -> {
        __core__chooseData(data_153, () -> {
            pair_46 = __core__unConstrData__safe(data_153);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_46), 8),
                () -> {
                    data_154 = __core__listData(__core__sndPair(pair_46));
                    __core__chooseData(data_154, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_89 = __core__unListData__safe(data_154);
                        __core__chooseList(fields_89, () -> {
                            false
                        }, () -> {
                            head_48 = __core__headList__safe(fields_89);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_48),
                                () -> {
                                    fields_90 = __core__tailList__safe(fields_89);
                                    __core__chooseList(fields_90, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__data]__from_data = (data_155) -> {
        lst_15 = __core__unListData(data_155);
        __4 = __core__ifThenElse(
            __helios__list[__helios__data]__is_valid_data_internal(lst_15),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_15
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_136) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_136))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_156) -> {
        __helios__common__enum_tag_equals(data_156, 0)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_157) -> {
        __helios__common__enum_tag_equals(data_157, 1)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __helios__option[__helios__validatorhash]__is_valid_data = (data_158) -> {
        __core__chooseData(data_158, () -> {
            pair_47 = __core__unConstrData__safe(data_158);
            index_7 = __core__fstPair(pair_47);
            fields_91 = __core__sndPair(pair_47);
            __core__ifThenElse(
                __core__equalsInteger(index_7, 0),
                () -> {
                    __core__chooseList(fields_91, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_91), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_91))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_7, 1),
                        () -> {
                            __core__chooseList(fields_91, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_159) -> {
        __core__chooseData(data_159, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_92 = __core__unListData__safe(data_159);
            __core__chooseList(fields_92, () -> {
                false
            }, () -> {
                head_49 = __core__headList__safe(fields_92);
                __core__ifThenElse(
                    __helios__string__is_valid_data(head_49),
                    () -> {
                        fields_93 = __core__tailList__safe(fields_92);
                        __core__chooseList(fields_93, () -> {
                            false
                        }, () -> {
                            head_50 = __core__headList__safe(fields_93);
                            __core__ifThenElse(
                                __helios__option[__helios__validatorhash]__is_valid_data(head_50),
                                () -> {
                                    fields_94 = __core__tailList__safe(fields_93);
                                    __core__chooseList(fields_94, () -> {
                                        false
                                    }, () -> {
                                        head_51 = __core__headList__safe(fields_94);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_51),
                                            () -> {
                                                fields_95 = __core__tailList__safe(fields_94);
                                                __core__chooseList(fields_95, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_160) -> {
        ignore_7 = __core__ifThenElse(
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_160),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid RelativeDelegateLink data", ())
            }
        )();
        __core__unListData(data_160)
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_137) -> {
        __helios__string__from_data(__helios__common__struct_field_0(self_137))
    };
    __helios__option[__helios__validatorhash]__from_data = (data_161) -> {
        __5 = __core__ifThenElse(
            __helios__option[__helios__validatorhash]__is_valid_data(data_161),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_161
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_138) -> {
        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_138))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken = (self_139) -> {
        (mph_11) -> {
            __module__StellarHeliosHelpers__mkTv(mph_11, true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_139), false, (), false, ())
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_140) -> {
        (mph_12) -> {
            __helios__assetclass__new(mph_12, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_140))())
        }
    };
    __helios__option[__helios__txinput]__none____is = (data_162) -> {
        __helios__common__enum_tag_equals(data_162, 1)
    };
    __helios__option[__helios__bool]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bool]__some____new = (some_2) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bool____to_data(some_2)))
    };
    __helios__option[__helios__txinput]__some__some = (self_141) -> {
        __helios__txinput__from_data(__helios__common__enum_field_0(self_141))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings = (__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput) -> {
        (self_142) -> {
            (inputs, mph_13, inputRequired) -> {
                __cond_3 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_142)(inputs, mph_13, true, inputRequired);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_3),
                    () -> {
                        (__lhs_0_5) -> {
                            __helios__option[__helios__bool]__none____new()
                        }
                    },
                    () -> {
                        (__lhs_0_2) -> {
                            spendDelegateInput = __helios__option[__helios__txinput]__some__some(__lhs_0_2);
                            (spendDelegateIsValid) -> {
                                __core__chooseUnit(__helios__assert(spendDelegateIsValid, "no way o"), __helios__option[__helios__bool]__some____new(spendDelegateIsValid))
                            }(__cond_4 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput));
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_4),
                                () -> {
                                    (__lhs_0_3) -> {
                                        a_15 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_3);
                                        __cond_5 = a_15;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is(__cond_5),
                                            () -> {
                                                (__lhs_0_4) -> {
                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_142)(mph_13, false, (), false, ())
                                                }
                                            },
                                            () -> {
                                                (__7) -> {
                                                    __helios__error(__helios__string____add("delegate not ValidatingSettings: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_142)))
                                                }
                                            }
                                        )()(__cond_5)
                                    }
                                },
                                () -> {
                                    (__6) -> {
                                        __helios__error("no way n")
                                    }
                                }
                            )()(__cond_4))
                        }
                    }
                )()(__cond_3)
            }
        }
    };
    __helios__option[__helios__validatorhash]__none____is = (data_163) -> {
        __helios__common__enum_tag_equals(data_163, 1)
    };
    __helios__option[__helios__txinput]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__txinput]__some____is = (data_164) -> {
        __helios__common__enum_tag_equals(data_164, 0)
    };
    __helios__list[__helios__txinput]__find_safe = (self_143) -> {
        (fn_17) -> {
            __helios__common__find_safe(self_143, (item_8) -> {
                fn_17(__helios__txinput__from_data(item_8))
            }, __helios__common__identity)
        }
    };
    __helios__option[__helios__validatorhash]__some__some = (self_144) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_144))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1 = (self_145) -> {
        (inputs_1, mph_14, __useopt__required, required) -> {
            required_1 = __core__ifThenElse(
                __useopt__required,
                () -> {
                    required
                },
                () -> {
                    true
                }
            )();
            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_145);
            __cond_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_145);
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__none____is(__cond_6),
                () -> {
                    (__lhs_0_8) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                __helios__error(__helios__string____add("\u274C\u274C \u27A1\uFE0F \u{1F481} missing required input with dgTkn ", uutName))
                            },
                            () -> {
                                () -> {
                                    __helios__option[__helios__txinput]__none____new()
                                }()
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0_6) -> {
                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_6);
                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);
                        ac = __helios__assetclass__new(mph_14, __helios__string__encode_utf8(uutName)());
                        __core__chooseUnit(__helios__print(__helios__string____add("  -- seeking input dgTkn: ", uutName)), __cond_7 = __helios__list[__helios__txinput]__find_safe(inputs_1)((i_10) -> {
                            __helios__bool__and(() -> {
                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_10)), needsAddrWithCred)
                            }, () -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(ac), 0)
                            })
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txinput]__some____is(__cond_7),
                            () -> {
                                (foundGood) -> {
                                    __core__chooseUnit(__helios__print("  \u2705 \u27A1\uFE0F  \u{1F481} found ^ input dgTkn"), foundGood)
                                }
                            },
                            () -> {
                                (__lhs_0_7) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            __helios__error(__helios__string____add("_\u274C \u27A1\uFE0F  \u{1F481} missing req'd input dgTkn (at script addr) ", uutName))
                                        },
                                        () -> {
                                            () -> {
                                                __core__chooseUnit(__helios__print(" <- \u{1F6AB} \u27A1\uFE0F \u{1F481} no input with ^ dgTkn; not req'd; returning false
"), __helios__option[__helios__txinput]__none____new())
                                            }()
                                        }
                                    )()
                                }
                            }
                        )()(__cond_7))
                    }
                }
            )()(__cond_6)
        }
    };
    __helios__option[__helios__validatorhash]__some____is = (data_165) -> {
        __helios__common__enum_tag_equals(data_165, 0)
    };
    __helios__option[__helios__txoutput]__some____is = (data_166) -> {
        __helios__common__enum_tag_equals(data_166, 0)
    };
    __helios__list[__helios__txoutput]__find_safe = (self_146) -> {
        (fn_18) -> {
            __helios__common__find_safe(self_146, (item_9) -> {
                fn_18(__helios__txoutput__from_data(item_9))
            }, __helios__common__identity)
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_147) -> {
        (mph_15, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {
            required_3 = __core__ifThenElse(
                __useopt__required_1,
                () -> {
                    required_2
                },
                () -> {
                    true
                }
            )();
            createdOrReturned_1 = __core__ifThenElse(
                __useopt__createdOrReturned,
                () -> {
                    createdOrReturned
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __lhs_0_9 = self_147;
            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_9);
            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_9);
            ac_1 = __helios__assetclass__new(mph_15, __helios__string__encode_utf8(uut)());
            (cOrR) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u{1F50E} \u{1F481} expect dgTkn ", cOrR), ": "), uut)), (hasDelegate) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__and(() -> {
                            __helios__bool____not(hasDelegate)
                        }, () -> {
                            required_3
                        }),
                        () -> {
                            __cond_11 = createdOrReturned_1;
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_11),
                                () -> {
                                    (__lhs_0_18) -> {
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not created: ", uut))
                                    }
                                },
                                () -> {
                                    (__lhs_0_16) -> {
                                        __lhs_0_17 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(self_147)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_15, true, true);
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not returned: ", uut))
                                    }
                                }
                            )()(__cond_11)
                        },
                        () -> {
                            () -> {
                                __core__ifThenElse(
                                    hasDelegate,
                                    () -> {
                                        __helios__print(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u2705 \u{1F481} ok:  ^ dgTkn has ", cOrR), " a valid output
"))
                                    },
                                    () -> {
                                        () -> {
                                            __helios__print(" \u2B05\uFE0F \u{1F6AB} \u{1F481} no delegate but not req'd; false")
                                        }()
                                    }
                                )()
                            }()
                        }
                    )(), hasDelegate)
                }(__cond_9 = validatorHash;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_9),
                    () -> {
                        (__lhs_0_15) -> {
                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_15);
                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("  ... ^ sent to validator: ", __helios__validatorhash__show(vh_3)()), "
")), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))
                        }
                    },
                    () -> {
                        (__lhs_0_12) -> {
                            __core__chooseUnit(__helios__print("   (to anywhere)"), __cond_10 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_10),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10))
                        }
                    }
                )()(__cond_9)))
            }(__cond_8 = createdOrReturned_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_8),
                () -> {
                    (__lhs_0_11) -> {
                        "returned"
                    }
                },
                () -> {
                    (__lhs_0_10) -> {
                        "created"
                    }
                }
            )()(__cond_8))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_167) -> {
        __core__chooseData(data_167, () -> {
            pair_48 = __core__unConstrData__safe(data_167);
            index_8 = __core__fstPair(pair_48);
            fields_96 = __core__sndPair(pair_48);
            __core__ifThenElse(
                __core__equalsInteger(index_8, 0),
                () -> {
                    __core__chooseList(fields_96, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_96), () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_96))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_8, 1),
                        () -> {
                            __core__chooseList(fields_96, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_168) -> {
        __core__chooseData(data_168, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_97 = __core__unListData__safe(data_168);
            __core__chooseList(fields_97, () -> {
                false
            }, () -> {
                head_52 = __core__headList__safe(fields_97);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(head_52),
                    () -> {
                        fields_98 = __core__tailList__safe(fields_97);
                        __core__chooseList(fields_98, () -> {
                            false
                        }, () -> {
                            head_53 = __core__headList__safe(fields_98);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_53),
                                () -> {
                                    fields_99 = __core__tailList__safe(fields_98);
                                    __core__chooseList(fields_99, () -> {
                                        false
                                    }, () -> {
                                        head_54 = __core__headList__safe(fields_99);
                                        __core__ifThenElse(
                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_54),
                                            () -> {
                                                fields_100 = __core__tailList__safe(fields_99);
                                                __core__chooseList(fields_100, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data = (data_169) -> {
        ignore_8 = __core__ifThenElse(
            __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(data_169),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid PendingDelegateChange data", ())
            }
        )();
        __core__unListData(data_169)
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__action = (self_148) -> {
        __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(__helios__common__struct_field_0(self_148))
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__role = (self_149) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_149))
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_170) -> {
        __8 = __core__ifThenElse(
            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(data_170),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_170
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink = (self_150) -> {
        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__struct_field_2(self_150))
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {
        (data_171) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_171),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_171),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__from_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1) -> {
        (data_172) -> {
            ignore_9 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(data_172),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingCharterChange data", ())
                }
            )();
            data_172
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is = (data_173) -> {
        __helios__common__enum_tag_equals(data_173, 0)
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2 = (data_174) -> {
        __core__chooseData(data_174, () -> {
            pair_49 = __core__unConstrData__safe(data_174);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_49), 0),
                () -> {
                    data_175 = __core__listData(__core__sndPair(pair_49));
                    __core__chooseData(data_175, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_101 = __core__unListData__safe(data_175);
                        __core__chooseList(fields_101, () -> {
                            false
                        }, () -> {
                            head_55 = __core__headList__safe(fields_101);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_55),
                                () -> {
                                    fields_102 = __core__tailList__safe(fields_101);
                                    __core__chooseList(fields_102, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change = (self_151) -> {
        __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data(__helios__common__enum_field_0(self_151))
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_16) -> {
        recurse_75 = (recurse_74, lst_17) -> {
            __core__chooseList(lst_17, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__core__headList__safe(lst_17)),
                    () -> {
                        recurse_74(recurse_74, __core__tailList__safe(lst_17))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_75(recurse_75, lst_16)
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_176) -> {
        __core__chooseData(data_176, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_176))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2 = (data_177) -> {
        __core__chooseData(data_177, () -> {
            pair_50 = __core__unConstrData__safe(data_177);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_50), 1),
                () -> {
                    data_178 = __core__listData(__core__sndPair(pair_50));
                    __core__chooseData(data_178, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_103 = __core__unListData__safe(data_178);
                        __core__chooseList(fields_103, () -> {
                            false
                        }, () -> {
                            head_56 = __core__headList__safe(fields_103);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_56),
                                () -> {
                                    fields_104 = __core__tailList__safe(fields_103);
                                    __core__chooseList(fields_104, () -> {
                                        false
                                    }, () -> {
                                        head_57 = __core__headList__safe(fields_104);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_57),
                                            () -> {
                                                fields_105 = __core__tailList__safe(fields_104);
                                                __core__chooseList(fields_105, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data = (data_179) -> {
        __core__chooseData(data_179, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_106 = __core__unListData__safe(data_179);
            __core__chooseList(fields_106, () -> {
                false
            }, () -> {
                head_58 = __core__headList__safe(fields_106);
                __core__ifThenElse(
                    __helios__address__is_valid_data(head_58),
                    () -> {
                        fields_107 = __core__tailList__safe(fields_106);
                        __core__chooseList(fields_107, () -> {
                            false
                        }, () -> {
                            head_59 = __core__headList__safe(fields_107);
                            __core__ifThenElse(
                                __helios__mintingpolicyhash__is_valid_data(head_59),
                                () -> {
                                    fields_108 = __core__tailList__safe(fields_107);
                                    __core__chooseList(fields_108, () -> {
                                        false
                                    }, () -> {
                                        head_60 = __core__headList__safe(fields_108);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_60),
                                            () -> {
                                                fields_109 = __core__tailList__safe(fields_108);
                                                __core__chooseList(fields_109, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__from_data = (data_180) -> {
        ignore_10 = __core__ifThenElse(
            __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(data_180),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid DelegationDetail data", ())
            }
        )();
        __core__unListData(data_180)
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__mph = (self_152) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_1(self_152))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__tn = (self_153) -> {
        __helios__bytearray__from_data(__helios__common__struct_field_2(self_153))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken = (self_154) -> {
        () -> {
            __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(self_154), __module__CapoDelegateHelpers__DelegationDetail[]__tn(self_154))
        }
    };
    __helios__list[__helios__txinput]__any = (self_155) -> {
        (fn_19) -> {
            __helios__common__any(self_155, (item_10) -> {
                fn_19(__helios__txinput__from_data(item_10))
            })
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {
        (data_181) -> {
            __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_181),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_181),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_181),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_181),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_181),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__from_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1) -> {
        (data_182) -> {
            ignore_11 = __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)(data_182),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestEntryType data", ())
                }
            )();
            data_182
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is = (data_183) -> {
        __helios__common__enum_tag_equals(data_183, 0)
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2 = (data_184) -> {
        __core__chooseData(data_184, () -> {
            pair_51 = __core__unConstrData__safe(data_184);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_51), 0),
                () -> {
                    data_185 = __core__listData(__core__sndPair(pair_51));
                    __core__chooseData(data_185, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_110 = __core__unListData__safe(data_185);
                        __core__chooseList(fields_110, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is = (data_186) -> {
        __helios__common__enum_tag_equals(data_186, 1)
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2 = (data_187) -> {
        __core__chooseData(data_187, () -> {
            pair_52 = __core__unConstrData__safe(data_187);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_52), 1),
                () -> {
                    data_188 = __core__listData(__core__sndPair(pair_52));
                    __core__chooseData(data_188, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_111 = __core__unListData__safe(data_188);
                        __core__chooseList(fields_111, () -> {
                            false
                        }, () -> {
                            head_61 = __core__headList__safe(fields_111);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_61),
                                () -> {
                                    fields_112 = __core__tailList__safe(fields_111);
                                    __core__chooseList(fields_112, () -> {
                                        false
                                    }, () -> {
                                        head_62 = __core__headList__safe(fields_112);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_62),
                                            () -> {
                                                fields_113 = __core__tailList__safe(fields_112);
                                                __core__chooseList(fields_113, () -> {
                                                    false
                                                }, () -> {
                                                    head_63 = __core__headList__safe(fields_113);
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(head_63),
                                                        () -> {
                                                            fields_114 = __core__tailList__safe(fields_113);
                                                            __core__chooseList(fields_114, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink = (self_156) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_156))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix = (self_157) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_157))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount = (self_158) -> {
        __helios__int__from_data(__helios__common__enum_field_2(self_158))
    };
    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2 = (data_189) -> {
        __core__chooseData(data_189, () -> {
            pair_53 = __core__unConstrData__safe(data_189);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_53), 2),
                () -> {
                    data_190 = __core__listData(__core__sndPair(pair_53));
                    __core__chooseData(data_190, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_115 = __core__unListData__safe(data_190);
                        __core__chooseList(fields_115, () -> {
                            false
                        }, () -> {
                            head_64 = __core__headList__safe(fields_115);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_64),
                                () -> {
                                    fields_116 = __core__tailList__safe(fields_115);
                                    __core__chooseList(fields_116, () -> {
                                        false
                                    }, () -> {
                                        head_65 = __core__headList__safe(fields_116);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_65),
                                            () -> {
                                                fields_117 = __core__tailList__safe(fields_116);
                                                __core__chooseList(fields_117, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2 = (data_191) -> {
        __core__chooseData(data_191, () -> {
            pair_54 = __core__unConstrData__safe(data_191);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_54), 3),
                () -> {
                    data_192 = __core__listData(__core__sndPair(pair_54));
                    __core__chooseData(data_192, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_118 = __core__unListData__safe(data_192);
                        __core__chooseList(fields_118, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2 = (data_193) -> {
        __core__chooseData(data_193, () -> {
            pair_55 = __core__unConstrData__safe(data_193);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_55), 4),
                () -> {
                    data_194 = __core__listData(__core__sndPair(pair_55));
                    __core__chooseData(data_194, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_119 = __core__unListData__safe(data_194);
                        __core__chooseList(fields_119, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_195) -> {
        __core__chooseData(data_195, () -> {
            pair_56 = __core__unConstrData__safe(data_195);
            index_9 = __core__fstPair(pair_56);
            fields_120 = __core__sndPair(pair_56);
            __core__ifThenElse(
                __core__equalsInteger(index_9, 0),
                () -> {
                    __core__chooseList(fields_120, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_120), () -> {
                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_120))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_9, 1),
                        () -> {
                            __core__chooseList(fields_120, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_196) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_196, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_196, __core__bData(#746e), __helios__bytearray__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_196, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)),
                            () -> {
                                true
                            },
                            () -> {
                                __core__trace("Warning: invalid data in CapoManifestEntry.tpe", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in CapoManifestEntry.tn", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in CapoManifestEntry.mph", () -> {
                    false
                })()
            }
        )()
    };
    __module__CapoHelpers__CapoManifestEntry[]__from_data = (data_197) -> {
        ignore_12 = __core__ifThenElse(
            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(data_197),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", ())
            }
        )();
        data_197
    };
    __module__CapoHelpers__CapoManifestEntry[]__entryType = (self_159) -> {
        __module__CapoHelpers__ManifestEntryType[]__from_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)(__helios__common__mStruct_field(self_159, #747065))
    };
    __module__CapoHelpers__CapoManifestEntry[]__tokenName = (self_160) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_160, #746e))
    };
    __helios__option[__helios__mintingpolicyhash]__from_data = (data_198) -> {
        __9 = __core__ifThenElse(
            __helios__option[__helios__mintingpolicyhash]__is_valid_data(data_198),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_198
    };
    __module__CapoHelpers__CapoManifestEntry[]__mph = (self_161) -> {
        __helios__option[__helios__mintingpolicyhash]__from_data(__helios__common__mStruct_field(self_161, #6d7068))
    };
    __helios__option[__helios__mintingpolicyhash]__some____is = (data_199) -> {
        __helios__common__enum_tag_equals(data_199, 0)
    };
    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {
        (data_200) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_200),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_200),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_200),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {
        (data_201) -> {
            ignore_13 = __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_201),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoDatum data", ())
                }
            )();
            data_201
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_18) -> {
        recurse_77 = (recurse_76, lst_19) -> {
            __core__chooseList(lst_19, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_19)),
                    () -> {
                        recurse_76(recurse_76, __core__tailList__safe(lst_19))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_77(recurse_77, lst_18)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_202) -> {
        __core__chooseData(data_202, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_202))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_23) -> {
        recurse_79 = (recurse_78, map_24) -> {
            __core__chooseList(map_24, () -> {
                true
            }, () -> {
                head_66 = __core__headList__safe(map_24);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_66)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_66)),
                            () -> {
                                recurse_78(recurse_78, __core__tailList__safe(map_24))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_79(recurse_79, map_23)
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_203) -> {
        __core__chooseData(data_203, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_203))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_25) -> {
        recurse_81 = (recurse_80, map_26) -> {
            __core__chooseList(map_26, () -> {
                true
            }, () -> {
                head_67 = __core__headList__safe(map_26);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_67)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_67)),
                            () -> {
                                recurse_80(recurse_80, __core__tailList__safe(map_26))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_81(recurse_81, map_25)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_204) -> {
        __core__chooseData(data_204, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_204))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_20) -> {
        recurse_83 = (recurse_82, lst_21) -> {
            __core__chooseList(lst_21, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList__safe(lst_21)),
                    () -> {
                        recurse_82(recurse_82, __core__tailList__safe(lst_21))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_83(recurse_83, lst_20)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_205) -> {
        __core__chooseData(data_205, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_205))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_206) -> {
        __core__chooseData(data_206, () -> {
            pair_57 = __core__unConstrData__safe(data_206);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_57), 0),
                () -> {
                    data_207 = __core__listData(__core__sndPair(pair_57));
                    __core__chooseData(data_207, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_121 = __core__unListData__safe(data_207);
                        __core__chooseList(fields_121, () -> {
                            false
                        }, () -> {
                            head_68 = __core__headList__safe(fields_121);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_68),
                                () -> {
                                    fields_122 = __core__tailList__safe(fields_121);
                                    __core__chooseList(fields_122, () -> {
                                        false
                                    }, () -> {
                                        head_69 = __core__headList__safe(fields_122);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_69),
                                            () -> {
                                                fields_123 = __core__tailList__safe(fields_122);
                                                __core__chooseList(fields_123, () -> {
                                                    false
                                                }, () -> {
                                                    head_70 = __core__headList__safe(fields_123);
                                                    __core__ifThenElse(
                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_70),
                                                        () -> {
                                                            fields_124 = __core__tailList__safe(fields_123);
                                                            __core__chooseList(fields_124, () -> {
                                                                false
                                                            }, () -> {
                                                                head_71 = __core__headList__safe(fields_124);
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_71),
                                                                    () -> {
                                                                        fields_125 = __core__tailList__safe(fields_124);
                                                                        __core__chooseList(fields_125, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            head_72 = __core__headList__safe(fields_125);
                                                                            __core__ifThenElse(
                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_72),
                                                                                () -> {
                                                                                    fields_126 = __core__tailList__safe(fields_125);
                                                                                    __core__chooseList(fields_126, () -> {
                                                                                        false
                                                                                    }, () -> {
                                                                                        head_73 = __core__headList__safe(fields_126);
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_73),
                                                                                            () -> {
                                                                                                fields_127 = __core__tailList__safe(fields_126);
                                                                                                __core__chooseList(fields_127, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    head_74 = __core__headList__safe(fields_127);
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_74),
                                                                                                        () -> {
                                                                                                            fields_128 = __core__tailList__safe(fields_127);
                                                                                                            __core__chooseList(fields_128, () -> {
                                                                                                                false
                                                                                                            }, () -> {
                                                                                                                head_75 = __core__headList__safe(fields_128);
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_75),
                                                                                                                    () -> {
                                                                                                                        fields_129 = __core__tailList__safe(fields_128);
                                                                                                                        __core__chooseList(fields_129, true, false)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })()
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_208) -> {
        ignore_14 = __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_208),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CharterData data", ())
            }
        )();
        data_208
    };
    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;
    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_162) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_162))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_209) -> {
        lst_22 = __core__unListData(data_209);
        __10 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_22),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_22
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_163) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_163))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_210) -> {
        map_27 = __core__unMapData(data_210);
        __11 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_27),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_27
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_164) -> {
        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_164))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_165) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_165))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_166) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_166))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_167) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_167))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_211) -> {
        map_28 = __core__unMapData(data_211);
        __12 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_28),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_28
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_168) -> {
        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_168))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_212) -> {
        lst_23 = __core__unListData(data_212);
        __13 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_23
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_169) -> {
        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_169))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;
    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_213) -> {
        __core__chooseData(data_213, () -> {
            pair_58 = __core__unConstrData__safe(data_213);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_58), 1),
                () -> {
                    data_214 = __core__listData(__core__sndPair(pair_58));
                    __core__chooseData(data_214, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_130 = __core__unListData__safe(data_214);
                        __core__chooseList(fields_130, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_215) -> {
        __helios__common__enum_tag_equals(data_215, 2)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_29) -> {
        recurse_85 = (recurse_84, map_30) -> {
            __core__chooseList(map_30, () -> {
                true
            }, () -> {
                head_76 = __core__headList__safe(map_30);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_76)),
                    () -> {
                        __core__ifThenElse(
                            __helios__data__is_valid_data(__core__sndPair(head_76)),
                            () -> {
                                recurse_84(recurse_84, __core__tailList__safe(map_30))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_85(recurse_85, map_29)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_216) -> {
        __core__chooseData(data_216, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_216))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_217) -> {
        __core__chooseData(data_217, () -> {
            pair_59 = __core__unConstrData__safe(data_217);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_59), 2),
                () -> {
                    data_218 = __core__listData(__core__sndPair(pair_59));
                    __core__chooseData(data_218, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_131 = __core__unListData__safe(data_218);
                        __core__chooseList(fields_131, () -> {
                            false
                        }, () -> {
                            head_77 = __core__headList__safe(fields_131);
                            __core__ifThenElse(
                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_77),
                                () -> {
                                    fields_132 = __core__tailList__safe(fields_131);
                                    __core__chooseList(fields_132, () -> {
                                        false
                                    }, () -> {
                                        head_78 = __core__headList__safe(fields_132);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_78),
                                            () -> {
                                                fields_133 = __core__tailList__safe(fields_132);
                                                __core__chooseList(fields_133, () -> {
                                                    false
                                                }, () -> {
                                                    head_79 = __core__headList__safe(fields_133);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_79),
                                                        () -> {
                                                            fields_134 = __core__tailList__safe(fields_133);
                                                            __core__chooseList(fields_134, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;
    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {
        (data_219) -> {
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_219),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_219),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_219),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {
        (data_220) -> {
            ignore_15 = __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_220),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid cctx_CharterInputType data", ())
                }
            )();
            data_220
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_221) -> {
        __helios__common__enum_tag_equals(data_221, 0)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_222) -> {
        __core__chooseData(data_222, () -> {
            pair_60 = __core__unConstrData__safe(data_222);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_60), 0),
                () -> {
                    data_223 = __core__listData(__core__sndPair(pair_60));
                    __core__chooseData(data_223, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_135 = __core__unListData__safe(data_223);
                        __core__chooseList(fields_135, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_224) -> {
        __helios__common__enum_tag_equals(data_224, 1)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_225) -> {
        __core__chooseData(data_225, () -> {
            pair_61 = __core__unConstrData__safe(data_225);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_61), 1),
                () -> {
                    data_226 = __core__listData(__core__sndPair(pair_61));
                    __core__chooseData(data_226, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_136 = __core__unListData__safe(data_226);
                        __core__chooseList(fields_136, () -> {
                            false
                        }, () -> {
                            head_80 = __core__headList__safe(fields_136);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_80),
                                () -> {
                                    fields_137 = __core__tailList__safe(fields_136);
                                    __core__chooseList(fields_137, () -> {
                                        false
                                    }, () -> {
                                        head_81 = __core__headList__safe(fields_137);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_81),
                                            () -> {
                                                fields_138 = __core__tailList__safe(fields_137);
                                                __core__chooseList(fields_138, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_170) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_170))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_171) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_171))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo) -> {
        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo), __core__mkNilData(()))))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_227) -> {
        __helios__common__enum_tag_equals(data_227, 2)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_228) -> {
        __core__chooseData(data_228, () -> {
            pair_62 = __core__unConstrData__safe(data_228);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_62), 2),
                () -> {
                    data_229 = __core__listData(__core__sndPair(pair_62));
                    __core__chooseData(data_229, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_139 = __core__unListData__safe(data_229);
                        __core__chooseList(fields_139, () -> {
                            false
                        }, () -> {
                            head_82 = __core__headList__safe(fields_139);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_82),
                                () -> {
                                    fields_140 = __core__tailList__safe(fields_139);
                                    __core__chooseList(fields_140, () -> {
                                        false
                                    }, () -> {
                                        head_83 = __core__headList__safe(fields_140);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_83),
                                            () -> {
                                                fields_141 = __core__tailList__safe(fields_140);
                                                __core__chooseList(fields_141, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_172) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_172))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_173) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_173))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_1) -> {
        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))
    };
    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {
        (data_230) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_230),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_230),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_230),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_230),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_230),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_230),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {
        (data_231) -> {
            ignore_16 = __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_231),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoActivity data", ())
                }
            )();
            data_231
        }
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_232) -> {
        __helios__common__enum_tag_equals(data_232, 0)
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_233) -> {
        __core__chooseData(data_233, () -> {
            pair_63 = __core__unConstrData__safe(data_233);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_63), 0),
                () -> {
                    data_234 = __core__listData(__core__sndPair(pair_63));
                    __core__chooseData(data_234, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_142 = __core__unListData__safe(data_234);
                        __core__chooseList(fields_142, () -> {
                            false
                        }, () -> {
                            head_84 = __core__headList__safe(fields_142);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_84),
                                () -> {
                                    fields_143 = __core__tailList__safe(fields_142);
                                    __core__chooseList(fields_143, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_174) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_174))
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_235) -> {
        __helios__common__enum_tag_equals(data_235, 1)
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_236) -> {
        __core__chooseData(data_236, () -> {
            pair_64 = __core__unConstrData__safe(data_236);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_64), 1),
                () -> {
                    data_237 = __core__listData(__core__sndPair(pair_64));
                    __core__chooseData(data_237, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_144 = __core__unListData__safe(data_237);
                        __core__chooseList(fields_144, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_238) -> {
        __helios__common__enum_tag_equals(data_238, 2)
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_239) -> {
        __core__chooseData(data_239, () -> {
            pair_65 = __core__unConstrData__safe(data_239);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_65), 2),
                () -> {
                    data_240 = __core__listData(__core__sndPair(pair_65));
                    __core__chooseData(data_240, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_145 = __core__unListData__safe(data_240);
                        __core__chooseList(fields_145, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_241) -> {
        __helios__common__enum_tag_equals(data_241, 3)
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_242) -> {
        __core__chooseData(data_242, () -> {
            pair_66 = __core__unConstrData__safe(data_242);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_66), 3),
                () -> {
                    data_243 = __core__listData(__core__sndPair(pair_66));
                    __core__chooseData(data_243, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_146 = __core__unListData__safe(data_243);
                        __core__chooseList(fields_146, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_244) -> {
        __helios__common__enum_tag_equals(data_244, 4)
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_245) -> {
        __core__chooseData(data_245, () -> {
            pair_67 = __core__unConstrData__safe(data_245);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_67), 4),
                () -> {
                    data_246 = __core__listData(__core__sndPair(pair_67));
                    __core__chooseData(data_246, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_147 = __core__unListData__safe(data_246);
                        __core__chooseList(fields_147, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_247) -> {
        __helios__common__enum_tag_equals(data_247, 5)
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_248) -> {
        __core__chooseData(data_248, () -> {
            pair_68 = __core__unConstrData__safe(data_248);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_68), 5),
                () -> {
                    data_249 = __core__listData(__core__sndPair(pair_68));
                    __core__chooseData(data_249, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_148 = __core__unListData__safe(data_249);
                        __core__chooseList(fields_148, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__getRefCharterUtxo = (mph_16) -> {
        charterAc = __helios__assetclass__new(mph_16, __helios__string__encode_utf8("charter")());
        hasCharter = (txin) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)
        };
        __core__chooseUnit(__helios__print("getting ref_input for charter
"), (charterUtxo) -> {
            charterUtxo
        }(__cond_12 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_12),
            () -> {
                (__lhs_0_20) -> {
                    ch = __helios__option[__helios__txinput]__some__some(__lhs_0_20);
                    ch
                }
            },
            () -> {
                (__lhs_0_19) -> {
                    __helios__error("Missing charter in required ref_inputs (use tcxWithCharterRef(tcx) in txn building functions)")
                }
            }
        )()(__cond_12)))
    };
    __module__CapoHelpers__getTxCharterData = (mph_17, __useopt__refInputs, refInputs) -> {
        refInputs_1 = __core__ifThenElse(
            __useopt__refInputs,
            () -> {
                refInputs
            },
            () -> {
                __helios__tx__ref_inputs(__helios__scriptcontext__tx)
            }
        )();
        charterAc_1 = __helios__assetclass__new(mph_17, __helios__string__encode_utf8("charter")());
        hasCharter_1 = (txin_1) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)
        };
        (charterUtxo_1) -> {
            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);
            ctd
        }(__cond_13 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter_1);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_13),
            () -> {
                (__lhs_0_24) -> {
                    ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_24);
                    ch_2
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_1);
                    __core__ifThenElse(
                        __helios__option[__helios__txinput]__some____is(__cond_14),
                        () -> {
                            (__lhs_0_23) -> {
                                ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_23);
                                ch_1
                            }
                        },
                        () -> {
                            (__lhs_0_22) -> {
                                __helios__error("Missing charter inputs / ref_inputs")
                            }
                        }
                    )()(__cond_14)
                }
            }
        )()(__cond_13))
    };
    __helios__option[__helios__string]__is_valid_data = (data_250) -> {
        __core__chooseData(data_250, () -> {
            pair_69 = __core__unConstrData__safe(data_250);
            index_10 = __core__fstPair(pair_69);
            fields_149 = __core__sndPair(pair_69);
            __core__ifThenElse(
                __core__equalsInteger(index_10, 0),
                () -> {
                    __core__chooseList(fields_149, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_149), () -> {
                            __helios__string__is_valid_data(__core__headList__safe(fields_149))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_10, 1),
                        () -> {
                            __core__chooseList(fields_149, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__txinput]__is_valid_data = (data_251) -> {
        __core__chooseData(data_251, () -> {
            pair_70 = __core__unConstrData__safe(data_251);
            index_11 = __core__fstPair(pair_70);
            fields_150 = __core__sndPair(pair_70);
            __core__ifThenElse(
                __core__equalsInteger(index_11, 0),
                () -> {
                    __core__chooseList(fields_150, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_150), () -> {
                            __helios__txinput__is_valid_data(__core__headList__safe(fields_150))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_11, 1),
                        () -> {
                            __core__chooseList(fields_150, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__DelegateInput[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__DelegateInput[]__link = (self_175) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_175))
    };
    __module__CapoHelpers__DelegateInput[]__role = (self_176) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_176))
    };
    __helios__option[__helios__string]__from_data = (data_252) -> {
        __14 = __core__ifThenElse(
            __helios__option[__helios__string]__is_valid_data(data_252),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_252
    };
    __module__CapoHelpers__DelegateInput[]__idPrefix = (self_177) -> {
        __helios__option[__helios__string]__from_data(__helios__common__struct_field_2(self_177))
    };
    __helios__option[__helios__txinput]__from_data = (data_253) -> {
        __15 = __core__ifThenElse(
            __helios__option[__helios__txinput]__is_valid_data(data_253),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_253
    };
    __module__CapoHelpers__DelegateInput[]__input = (self_178) -> {
        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_178))
    };
    __module__CapoHelpers__DelegateInput[]__mph = (self_179) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_179))
    };
    __helios__option[__helios__string]____to_data = __helios__common__identity;
    __helios__option[__helios__txinput]____to_data = __helios__common__identity;
    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_18) -> {
        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_18), __core__mkNilData(()))))))
    };
    __helios__option[__helios__txinput]__unwrap = (self_180) -> {
        () -> {
            __helios__txinput__from_data(__helios__common__enum_field_0(self_180))
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_181) -> {
        () -> {
            i_11 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_181))();
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_11);
            __core__chooseUnit(__cond_15 = inputData;
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_15),
                () -> {
                    (__lhs_0_25) -> {
                        index_12 = __helios__data__constrdata__tag(__lhs_0_25);
                        fields_151 = __helios__data__constrdata__fields(__lhs_0_25);
                        __core__chooseUnit(__helios__print(__helios__string____add("    --\u{1F41E} generic delegate activity at index ", __helios__int__show(index_12)())), __cond_16 = __helios__list[__helios__data]__head(fields_151);
                        __core__ifThenElse(
                            __helios__data__constrdata____is(__cond_16),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __helios__data__constrdata__tag(__lhs_0_26);
                                    __helios__print(__helios__string____add("    --\u{1F41E} nested activity at index ", __helios__int__show(index2)()))
                                }
                            },
                            () -> {
                                (__17) -> {
                                    ()
                                }
                            }
                        )()(__cond_16))
                    }
                },
                () -> {
                    (__16) -> {
                        ()
                    }
                }
            )()(__cond_15), inputData)
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {
        (self_182) -> {
            () -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_182)())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__assert = (__module__CapoHelpers__DelegateInput[]__error) -> {
        (self_183) -> {
            (assertionOk, msg_3) -> {
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    true
                }, () -> {
                    __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_183)(), __module__CapoHelpers__DelegateInput[]__serialize(self_183)())
                }), msg_3), __core__ifThenElse(
                    assertionOk,
                    () -> {
                        __helios__assert(true, "")
                    },
                    () -> {
                        () -> {
                            __module__CapoHelpers__DelegateInput[]__error(self_183)(msg_3)
                        }()
                    }
                )())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__error_1 = (self_184) -> {
        (msg_4) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_184)(), __module__CapoHelpers__DelegateInput[]__serialize(self_184)())
            }), msg_4), __core__chooseUnit(__helios__print(__helios__string____add("\u26A0\uFE0F \u26A0\uFE0F \u26A0\uFE0F error executing policy for dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__DelegateInput[]__link(self_184)))), __core__chooseUnit(__helios__print(__helios__string____add("     ---- with input value: ", __helios__value__show(__helios__txinput__value(__helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_184))()))(false, ()))), __core__chooseUnit(__helios__print("
"), __helios__assert(false, msg_4)))))
        }
    };
    __helios__list[__helios__data]__get = (self_185) -> {
        (index_13) -> {
            recurse_87 = (recurse_86, self_186, i_12) -> {
                __core__chooseList(self_186, () -> {
                    __helios__error("index out of range")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_13, i_12),
                        () -> {
                            __core__headList__safe(self_186)
                        },
                        () -> {
                            recurse_86(recurse_86, __core__tailList__safe(self_186), __core__addInteger(i_12, 1))
                        }
                    )()
                })()
            };
            recurse_87(recurse_87, self_185, 0)
        }
    };
    __helios__list[__helios__data]__length = __helios__common__length;
    __helios__list[__helios__data]__filter = (self_187) -> {
        (fn_20) -> {
            __helios__common__filter_list(self_187, (item_11) -> {
                fn_20(__helios__data__from_data(item_11))
            })
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged) -> {
        (self_188) -> {
            (seed) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqSeededMinting: ensures the delegate is unchanged, so callers needn't.", false, ()), __cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_188)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_17),
                    () -> {
                        (__lhs_0_30) -> {
                            ma_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_30);
                            __core__chooseUnit(__cond_20 = ma_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_20),
                                () -> {
                                    (__lhs_0_31) -> {
                                        fields_153 = __helios__data__constrdata__fields(__lhs_0_31);
                                        __helios__assert(__helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__get(fields_153)(0))), "seed mismatch")
                                    }
                                },
                                () -> {
                                    (__21) -> {
                                        __helios__error("no way")
                                    }
                                }
                            )()(__cond_20), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_188)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_17),
                            () -> {
                                (__lhs_0_27) -> {
                                    activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_27);
                                    __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__list[__helios__data]__length(activities), 0), "no minting activities found"), foundWithThisSeed = __helios__list[__helios__data]__filter(activities)((a_16) -> {
                                        __cond_18 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_16);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_18),
                                            () -> {
                                                (__lhs_0_28) -> {
                                                    ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_28);
                                                    __cond_19 = ma;
                                                    __core__ifThenElse(
                                                        __helios__data__constrdata____is(__cond_19),
                                                        () -> {
                                                            (__lhs_0_29) -> {
                                                                index_14 = __helios__data__constrdata__tag(__lhs_0_29);
                                                                fields_152 = __helios__data__constrdata__fields(__lhs_0_29);
                                                                __core__chooseUnit(__helios__assert(__helios__int____eq(index_14, index_14), "no way c"), __helios__bool__and(() -> {
                                                                    __helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__head(fields_152)))
                                                                }, () -> {
                                                                    true
                                                                }))
                                                            }
                                                        },
                                                        () -> {
                                                            (__20) -> {
                                                                __helios__error("no way d")
                                                            }
                                                        }
                                                    )()(__cond_19)
                                                }
                                            },
                                            () -> {
                                                (__19) -> {
                                                    false
                                                }
                                            }
                                        )()(__cond_18)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate multi-activities must be minting with this seed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_188)(__helios__int____gt(__helios__list[__helios__data]__length(foundWithThisSeed), 0), "no minting activity found for seed!"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given seed is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_188)(__helios__int____eq(__helios__list[__helios__data]__length(foundWithThisSeed), 1), "multiple minting activities found for seed"), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_188)())))))
                                }
                            },
                            () -> {
                                (__18) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_188)("non-mint activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_17))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1) -> {
        (self_189) -> {
            (recId) -> {
                __core__chooseUnit(__cond_25 = __module__CapoHelpers__DelegateInput[]__role(self_189);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_25),
                    () -> {
                        (__lhs_0_40) -> {
                            __helios__print("ok, checking spending activity for a DgData Policy")
                        }
                    },
                    () -> {
                        (__26) -> {
                            __helios__error("withUniqueDDSpendingActivity: only valid for DgDataPolicy")
                        }
                    }
                )()(__cond_25), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqueDDSpendingActivity: checks presence of delegated-data controller's spending activity for recId", false, ()), strId = __helios__bytearray__decode_utf8(recId)();
                __core__chooseUnit(__helios__print(__helios__string____add("    -- recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("TEST THIS v"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spendDgt must be acting on the matching record-id", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the delegate is unchanged, so callers needn't also check that", false, ()), __cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_189)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_21),
                    () -> {
                        (__lhs_0_38) -> {
                            sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_38);
                            __core__chooseUnit(__cond_24 = sa_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_24),
                                () -> {
                                    (__lhs_0_39) -> {
                                        index_16 = __helios__data__constrdata__tag(__lhs_0_39);
                                        fields_155 = __helios__data__constrdata__fields(__lhs_0_39);
                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_16, index_16), "no way e"), foundRecId_1 = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_155));
                                        __core__ifThenElse(
                                            __helios__bytearray____neq(recId, foundRecId_1),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending:", strId)), __core__chooseUnit(__helios__print(__helios__string____add("  -- actual: Spending:", __helios__bytearray__show(foundRecId_1)())), __module__CapoHelpers__DelegateInput[]__error_1(self_189)("recId mismatch")))
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__print(__helios__string____add("  -- ok: DD controller spending activity for ", strId))
                                                }()
                                            }
                                        )())
                                    }
                                },
                                () -> {
                                    (__25) -> {
                                        __helios__error("no way f")
                                    }
                                }
                            )()(__cond_24), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_189)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_21),
                            () -> {
                                (__lhs_0_32) -> {
                                    activities_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_32);
                                    __core__chooseUnit(__helios__print("    -- multiple activities found
"), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_189)(__helios__int____gt(__helios__list[__helios__data]__length(activities_1), 0), "no spending activities found"), actsOnThisRecord = __helios__list[__helios__data]__filter(activities_1)((a_17) -> {
                                        __cond_22 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_17);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_22),
                                            () -> {
                                                (__lhs_0_37) -> {
                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("dgInput: withSpendingActivity: CreatingDelegatedData invalid"), __helios__error(""))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_22),
                                                    () -> {
                                                        (__lhs_0_36) -> {
                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("dgInput: withSpendingActivity: UpdatingDgData invalid; use a Spending variant in the delegated-data policy"), __helios__error(""))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_22),
                                                            () -> {
                                                                (__lhs_0_35) -> {
                                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("dgInput: withSpendingActivity: DeletingDelegatedData invalid"), __helios__error(""))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_22),
                                                                    () -> {
                                                                        (__lhs_0_33) -> {
                                                                            sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_33);
                                                                            __cond_23 = sa;
                                                                            __core__ifThenElse(
                                                                                __helios__data__constrdata____is(__cond_23),
                                                                                () -> {
                                                                                    (__lhs_0_34) -> {
                                                                                        index_15 = __helios__data__constrdata__tag(__lhs_0_34);
                                                                                        fields_154 = __helios__data__constrdata__fields(__lhs_0_34);
                                                                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_15, index_15), "no way h"), foundRecId = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_154));
                                                                                        __core__ifThenElse(
                                                                                            __helios__bytearray____neq(recId, foundRecId),
                                                                                            () -> {
                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending: ", strId)), __core__chooseUnit(__helios__print(__helios__string____add("
  -- actual: Spending: ", __helios__bytearray__show(foundRecId)())), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("recId mismatch"), __helios__error(""))))
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    true
                                                                                                }()
                                                                                            }
                                                                                        )())
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__24) -> {
                                                                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("wrong structure for spending activity"), __helios__error(""))
                                                                                    }
                                                                                }
                                                                            )()(__cond_23)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__23) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(__cond_22)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate data-controller multi-activities must treat this recId", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_189)(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(actsOnThisRecord), 0))("dgt acting on this recId? "), __helios__string____add("no spending activity found for recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given recId is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_189)(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(actsOnThisRecord), 1))("exactly one activity? "), __helios__string____add("multiple spending activities found for recId: ", strId)), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_189)()))))))
                                }
                            },
                            () -> {
                                (__22) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("non-spend activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_21)))))))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_190) -> {
        () -> {
            __lhs_0_41 = self_190;
            link_1 = __module__CapoHelpers__DelegateInput[]__link(__lhs_0_41);
            input_1 = __module__CapoHelpers__DelegateInput[]__input(__lhs_0_41);
            mph_19 = __module__CapoHelpers__DelegateInput[]__mph(__lhs_0_41);
            __lhs_0_42 = link_1;
            uut_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_42);
            validatorHash_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_42);
            targetValue = __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken(link_1)(mph_19);
            (returnedUnchanged) -> {
                __core__chooseUnit(__helios__assert(returnedUnchanged, "no"), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1)(mph_19, false, (), false, ()), "no"), self_190))
            }(__cond_26 = validatorHash_1;
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__some____is(__cond_26),
                () -> {
                    (__lhs_0_44) -> {
                        vh_4 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_44);
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_190)(__helios__value__contains(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_4))(targetValue), __helios__string____add("dgTkn not returned: ", uut_1)), __cond_27 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o_1) -> {
                            __helios__bytearray____eq(__helios__txoutputdatum__serialize(__helios__txoutput__datum(o_1))(), __helios__txoutputdatum__serialize(__helios__txinput__datum(__helios__option[__helios__txinput]__unwrap(input_1)()))())
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txoutput]__some____is(__cond_27),
                            () -> {
                                (__lhs_0_46) -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add(" -- good, the dgTkn is unchanged: ", uut_1)), true)
                                }
                            },
                            () -> {
                                (__lhs_0_45) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_190)("dgt modified"), __helios__error(""))
                                }
                            }
                        )()(__cond_27))
                    }
                },
                () -> {
                    (__lhs_0_43) -> {
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_190)("unchOut - no vh"), __helios__error(""))
                    }
                }
            )()(__cond_26))
        }
    };
    __module__CapoHelpers__DelegateInput[]__orFail = (self_191) -> {
        () -> {
            __lhs_0_47 = self_191;
            true
        }
    };
    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;
    __module__CapoHelpers__CapoCtx[]__mph = (self_192) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_192))
    };
    __module__CapoHelpers__CapoCtx[]__charter = (self_193) -> {
        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_193))
    };
    __module__CapoHelpers__CapoCtx[]____new = (mph_20, charter) -> {
        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_20), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_194) -> {
        () -> {
            e = "requires charter as input";
            __cond_28 = __module__CapoHelpers__CapoCtx[]__charter(self_194);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_28),
                () -> {
                    (__lhs_0_56) -> {
                        __helios__error(e)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_28),
                        () -> {
                            (__lhs_0_55) -> {
                                __helios__error(e)
                            }
                        },
                        () -> {
                            (__lhs_0_48) -> {
                                utxo_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_48);
                                activity = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2));
                                wrongActivity = () -> {
                                    __core__ifThenElse(
                                        true,
                                        () -> {
                                            __helios__error("non-CharterData activity")
                                        },
                                        () -> {
                                            () -> {
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()
                                            }()
                                        }
                                    )()
                                };
                                __cond_29 = activity;
                                __core__ifThenElse(
                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_29),
                                    () -> {
                                        (__lhs_0_54) -> {
                                            wrongActivity()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_29),
                                            () -> {
                                                (__lhs_0_53) -> {
                                                    wrongActivity()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_29),
                                                    () -> {
                                                        (__lhs_0_52) -> {
                                                            activity
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_29),
                                                            () -> {
                                                                (__lhs_0_51) -> {
                                                                    activity
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_29),
                                                                    () -> {
                                                                        (__lhs_0_50) -> {
                                                                            activity
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_49) -> {
                                                                            activity
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_29)
                            }
                        }
                    )()
                }
            )()(__cond_28)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_195) -> {
        (key_14) -> {
            __helios__common__map_get(self_195, __helios__string____to_data(key_14), (x_5) -> {
                __core__constrData(0, __helios__common__list_1(x_5))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__findManifestEntry = (__module__CapoHelpers__CapoCtx[]__getCharterData) -> {
        (self_196) -> {
            (key_15) -> {
                __core__chooseUnit(__helios__print(__helios__string____add("    -- looking for capo's manifest entry: ", key_15)), charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData(self_196)(), 0);
                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData))(key_15))
            }
        }
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is = (data_254) -> {
        __helios__common__enum_tag_equals(data_254, 0)
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some = (self_197) -> {
        __module__CapoHelpers__CapoManifestEntry[]__from_data(__helios__common__enum_field_0(self_197))
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is = (data_255) -> {
        __helios__common__enum_tag_equals(data_255, 1)
    };
    __helios__option[__helios__bytearray]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bytearray]__some____new = (some_3) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bytearray____to_data(some_3)))
    };
    __module__CapoHelpers__CapoCtx[]__findManifestTokenName = (__module__CapoHelpers__CapoCtx[]__getCharterData_1) -> {
        (self_198) -> {
            (key_16, __useopt__required_2, required_4) -> {
                required_5 = __core__ifThenElse(
                    __useopt__required_2,
                    () -> {
                        required_4
                    },
                    () -> {
                        true
                    }
                )();
                oe = __module__CapoHelpers__CapoCtx[]__findManifestEntry(__module__CapoHelpers__CapoCtx[]__getCharterData_1)(self_198)(key_16);
                __cond_30 = oe;
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_30),
                    () -> {
                        (__lhs_0_58) -> {
                            __core__chooseUnit(__helios__assert(__helios__bool____not(required_5), __helios__string____add("missing required manifest entry: ", key_16)), __helios__option[__helios__bytearray]__none____new())
                        }
                    },
                    () -> {
                        (__lhs_0_57) -> {
                            e_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_57);
                            __helios__option[__helios__bytearray]__some____new(__module__CapoHelpers__CapoManifestEntry[]__tokenName(e_1))
                        }
                    }
                )()(__cond_30)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getSettingsId = (__module__CapoHelpers__CapoCtx[]__getCharterData_2) -> {
        (self_199) -> {
            (__useopt__required_3, required_6) -> {
                required_7 = __core__ifThenElse(
                    __useopt__required_3,
                    () -> {
                        required_6
                    },
                    () -> {
                        true
                    }
                )();
                __module__CapoHelpers__CapoCtx[]__findManifestTokenName(__module__CapoHelpers__CapoCtx[]__getCharterData_2)(self_199)("currentSettings", true, required_7)
            }
        }
    };
    __helios__option[__helios__txoutput]__some__some = (self_200) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_200))
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3) -> {
        (self_201) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must have the Capo's govAuthority approval", false, ()), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData_3(self_201)()))(__module__CapoHelpers__CapoCtx[]__mph(self_201), false, (), false, ()), "no way m"), self_201))
            }
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_256) -> {
        __helios__common__enum_tag_equals(data_256, 1)
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_202) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_202))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_203) -> {
        (key_17) -> {
            __helios__common__map_get(self_203, __helios__string____to_data(key_17), (x_6) -> {
                __core__constrData(0, __helios__common__list_1(x_6))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__option[__helios__string]__some____new = (some_4) -> {
        __core__constrData(0, __helios__common__list_1(__helios__string____to_data(some_4)))
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput) -> {
        (self_204) -> {
            (typeName, __useopt__required_4, required_8) -> {
                required_9 = __core__ifThenElse(
                    __useopt__required_4,
                    () -> {
                        required_8
                    },
                    () -> {
                        true
                    }
                )();
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- requiresDgDataPolicyInput(): locates the manifest's data-policy for this record-type", false, ()), __cond_31 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_4(self_204)()))(typeName);
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_31),
                    () -> {
                        (__lhs_0_61) -> {
                            __helios__error(__helios__string____add(__helios__string____add("missing data-policy manifest for record-type '", typeName), "'"))
                        }
                    },
                    () -> {
                        (__lhs_0_59) -> {
                            entry = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_59);
                            __cond_32 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry);
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_32),
                                () -> {
                                    (__lhs_0_60) -> {
                                        policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_60);
                                        idPrefix_2 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_60);
                                        (callback_8) -> {
                                            callback_8(policyLink, idPrefix_2)
                                        }
                                    }
                                },
                                () -> {
                                    (__27) -> {
                                        __helios__error(__helios__string____add("manifest entry is not a data policy: ", typeName))
                                    }
                                }
                            )()(__cond_32)((dgtLink, idPrefix_1) -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(__helios__string____add("requires the delegated-data policy for type=", typeName), false, ()), __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_204)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new(typeName), true, required_9, true, __helios__option[__helios__string]__some____new(idPrefix_1)))
                            })
                        }
                    }
                )()(__cond_31))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5) -> {
        (self_205) -> {
            (__useopt__required_5, required_10) -> {
                required_11 = __core__ifThenElse(
                    __useopt__required_5,
                    () -> {
                        required_10
                    },
                    () -> {
                        true
                    }
                )();
                input_2 = __helios__scriptcontext__get_current_input();
                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_205)()))(__module__CapoHelpers__CapoCtx[]__mph(self_205));
                isUsingMintDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_2))(acMintDgt), 0))("    -- acting on mintDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingMintDgt
                }, () -> {
                    __helios__bool____not(required_11)
                }), "not acting as mint delegate!"), isUsingMintDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6) -> {
        (self_206) -> {
            (__useopt__required_6, required_12) -> {
                required_13 = __core__ifThenElse(
                    __useopt__required_6,
                    () -> {
                        required_12
                    },
                    () -> {
                        true
                    }
                )();
                input_3 = __helios__scriptcontext__get_current_input();
                acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_6(self_206)()))(__module__CapoHelpers__CapoCtx[]__mph(self_206));
                isUsingSpendDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_3))(acSpendDgt), 0))("    -- acting on spendDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingSpendDgt
                }, () -> {
                    __helios__bool____not(required_13)
                }), "not acting as spend delegate!"), isUsingSpendDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_207) -> {
        () -> {
            __cond_33 = __module__CapoHelpers__CapoCtx[]__charter(self_207);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_33),
                () -> {
                    (__lhs_0_63) -> {
                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_63);
                        datum_3
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_33),
                        () -> {
                            (__lhs_0_62) -> {
                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_62);
                                datum_2
                            }
                        },
                        () -> {
                            (__28) -> {
                                __helios__error("CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first")
                            }
                        }
                    )()
                }
            )()(__cond_33)
        }
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address) -> {
        (self_208) -> {
            () -> {
                charterAc_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_208), __helios__string__encode_utf8("charter")());
                capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_208)();
                __cond_34 = __module__CapoHelpers__CapoCtx[]__charter(self_208);
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_34),
                    () -> {
                        (__lhs_0_64) -> {
                            charterData_1 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo) -> {
                                __helios__bool__and(() -> {
                                    __helios__address____eq(__helios__txoutput__address(txo), capoAddr)
                                }, () -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo))(charterAc_2), 0)
                                })
                            })))), 0);
                            charterData_1
                        }
                    },
                    () -> {
                        (__29) -> {
                            __helios__error("CapoCtx.getNextCharterData(): invalid except with charter strategy Input")
                        }
                    }
                )()(__cond_34)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1 = (self_209) -> {
        () -> {
            __cond_35 = __module__CapoHelpers__CapoCtx[]__charter(self_209);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_35),
                () -> {
                    (__lhs_0_66) -> {
                        utxo_4 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_66);
                        utxo_4
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_35),
                        () -> {
                            (__lhs_0_65) -> {
                                utxo_3 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_65);
                                utxo_3
                            }
                        },
                        () -> {
                            (__30) -> {
                                __helios__error("CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first")
                            }
                        }
                    )()
                }
            )()(__cond_35)
        }
    };
    __helios__option[__helios__string]__none____new = () -> {
        __helios__option__NONE
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_210) -> {
        (dgtLink_1, role_1, __useopt__required_7, required_14, __useopt__idPrefix, idPrefix_3) -> {
            required_15 = __core__ifThenElse(
                __useopt__required_7,
                () -> {
                    required_14
                },
                () -> {
                    true
                }
            )();
            idPrefix_4 = __core__ifThenElse(
                __useopt__idPrefix,
                () -> {
                    idPrefix_3
                },
                () -> {
                    __helios__option[__helios__string]__none____new()
                }
            )();
            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_4, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_210), true, required_15), __module__CapoHelpers__CapoCtx[]__mph(self_210))
        }
    };
    __module__CapoHelpers__CapoCtx[]__address_1 = (self_211) -> {
        () -> {
            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_211)());
            addr
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataRef = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate) -> {
        (self_212) -> {
            (__useopt__recId, recId_1, __useopt__recIdBytes, recIdBytes) -> {
                recId_2 = __core__ifThenElse(
                    __useopt__recId,
                    () -> {
                        recId_1
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_1 = __core__ifThenElse(
                    __useopt__recIdBytes,
                    () -> {
                        recIdBytes
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_2)()
                    }
                )();
                hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate(self_212)(false, (), true, recIdBytes_1);
                recIdStr = __helios__bytearray__decode_utf8(recIdBytes_1)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting refDD ", recIdStr)), __cond_36 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasDD);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_36),
                    () -> {
                        (__lhs_0_68) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ refDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_67) -> {
                            txin_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_67);
                            __core__chooseUnit(__helios__print("\u2705 \u{1F4CE} ^ refDD: ok
"), txin_2)
                        }
                    }
                )()(__cond_36))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1) -> {
        (self_213) -> {
            (__useopt__recId_1, recId_3, __useopt__recIdBytes_1, recIdBytes_2) -> {
                recId_4 = __core__ifThenElse(
                    __useopt__recId_1,
                    () -> {
                        recId_3
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_3 = __core__ifThenElse(
                    __useopt__recIdBytes_1,
                    () -> {
                        recIdBytes_2
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_4)()
                    }
                )();
                hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1(self_213)(false, (), true, recIdBytes_3);
                recIdStr_1 = __helios__bytearray__decode_utf8(recIdBytes_3)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting inDD ", recIdStr_1)), __cond_37 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_1);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_37),
                    () -> {
                        (__lhs_0_70) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ inDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_69) -> {
                            txin_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_69);
                            __core__chooseUnit(__helios__print("    \u2705 \u{1F4CE} ^ inDD: ok
"), txin_3)
                        }
                    }
                )()(__cond_37))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_214) -> {
        (__useopt__typeName, typeName_1, __useopt__id, id_1) -> {
            typeName_2 = __core__ifThenElse(
                __useopt__typeName,
                () -> {
                    typeName_1
                },
                () -> {
                    ""
                }
            )();
            id_2 = __core__ifThenElse(
                __useopt__id,
                () -> {
                    id_1
                },
                () -> {
                    #
                }
            )();
            capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_1(self_214)();
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                __helios__int____gt(__helios__bytearray__length(id_2), 0)
            }, () -> {
                __helios__int____gt(__helios__bytearray__length(__helios__string__serialize(typeName_2)()), 0)
            }), "data predicate must have id or typeName"), (txin_4) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txinput__address(txin_4), capoAddr_1),
                    () -> {
                        data_257 = __helios__txoutputdatum__inline(__helios__txinput__datum(txin_4));
                        __cond_38 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_257);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_38),
                            () -> {
                                (__lhs_0_71) -> {
                                    x_7 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_257));
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            true
                                        }, () -> {
                                            __helios__bool__or(() -> {
                                                __helios__string____eq(typeName_2, "")
                                            }, () -> {
                                                __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_7), typeName_2)
                                            })
                                        })
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_2, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_7), id_2)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__31) -> {
                                    false
                                }
                            }
                        )()(__cond_38)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate = (self_215) -> {
        (typeName_3, __useopt__id_1, id_3) -> {
            id_4 = __core__ifThenElse(
                __useopt__id_1,
                () -> {
                    id_3
                },
                () -> {
                    #
                }
            )();
            capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_1(self_215)();
            (txo_1) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txoutput__address(txo_1), capoAddr_2),
                    () -> {
                        data_258 = __helios__txoutputdatum__inline(__helios__txoutput__datum(txo_1));
                        __cond_39 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_258);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_39),
                            () -> {
                                (__lhs_0_72) -> {
                                    x_8 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_258));
                                    __helios__bool__and(() -> {
                                        __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_8), typeName_3)
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_4, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_8), id_4)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__32) -> {
                                    false
                                }
                            }
                        )()(__cond_39)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput) -> {
        (self_216) -> {
            (newDataId, dataTypePurpose) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record is stored in the Capo address", false, ()), dgData = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_216)(newDataId)));
                dgDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(dgData);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record matches the type-name indicated in the dgDataPolicy manifest", false, ()), __cond_40 = dgDatum;
                __core__ifThenElse(
                    __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_40),
                    () -> {
                        (__lhs_0_73) -> {
                            data_259 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(dgData));
                            recIdStr_2 = __helios__bytearray__decode_utf8(newDataId)();
                            __core__ifThenElse(
                                __helios__bytearray____neq(__module__StellarHeliosHelpers__AnyData[]__id(data_259), newDataId),
                                () -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- expected id: ", recIdStr_2)), actualIdStr = __helios__bytearray__decode_utf8(__module__StellarHeliosHelpers__AnyData[]__id(data_259))();
                                    __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: wrong id: ", actualIdStr)))
                                },
                                () -> {
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__string____neq(__module__StellarHeliosHelpers__AnyData[]__type(data_259), dataTypePurpose),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected type: ", dataTypePurpose)), __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: bad type: ", __module__StellarHeliosHelpers__AnyData[]__type(data_259))))
                                            },
                                            () -> {
                                                () -> {
                                                    __core__chooseUnit(__helios__print(__helios__string____add("\u2705 \u{1F4CE} outDD: ok: ^ outDD to Capo: ", recIdStr_2)), true)
                                                }()
                                            }
                                        )()
                                    }()
                                }
                            )()
                        }
                    },
                    () -> {
                        (__33) -> {
                            __helios__error("output not delegated data")
                        }
                    }
                )()(__cond_40)))
            }
        }
    };
    __helios__option[__helios__txoutput]__none____is = (data_260) -> {
        __helios__common__enum_tag_equals(data_260, 1)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1 = (self_217) -> {
        (recId_5) -> {
            recIdStr_3 = __helios__bytearray__decode_utf8(recId_5)();
            ac_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_217), recId_5);
            capoAddr_3 = __module__CapoHelpers__CapoCtx[]__address_1(self_217)();
            __cond_41 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((txout) -> {
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        true
                    }, () -> {
                        __helios__bool__trace(__helios__int____eq(__helios__value__get_safe(__helios__txoutput__value(txout))(ac_2), 1))("  -- output has value? ")
                    })
                }, () -> {
                    __helios__bool__trace(__helios__address____eq(__helios__txoutput__address(txout), capoAddr_3))("     -- found output... is it at the right capoAddr? ")
                })
            });
            __core__ifThenElse(
                __helios__option[__helios__txoutput]__none____is(__cond_41),
                () -> {
                    (__lhs_0_75) -> {
                        __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} ^ outDD: not found: ", recIdStr_3))
                    }
                },
                () -> {
                    (__lhs_0_74) -> {
                        txout_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_74);
                        __core__chooseUnit(__helios__print(__helios__string____add("     \u2705 \u{1F4CE} ^ outDD: found ", recIdStr_3)), txout_1)
                    }
                }
            )()(__cond_41)
        }
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {
        (self_218) -> {
            () -> {
                charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_218);
                __cond_42 = charter_1;
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_42),
                    () -> {
                        (__lhs_0_81) -> {
                            __core__chooseUnit(__helios__print("      -- needs charter, anywhere in the tx (already found as ref : )"), self_218)
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_42),
                            () -> {
                                (__lhs_0_80) -> {
                                    __core__chooseUnit(__helios__print("      -- needs charter, anywhere in the tx (already found as input : )"), self_218)
                                }
                            },
                            () -> {
                                (__lhs_0_76) -> {
                                    __lhs_0_77 = self_218;
                                    mph_21 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_77);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be available in the transaction (input or ref)", false, ()), charterAc_3 = __helios__assetclass__new(mph_21, __helios__string__encode_utf8("charter")());
                                    hasCharter_2 = (txin_5) -> {
                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_5))(charterAc_3), 0)
                                    };
                                    __cond_43 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_2);
                                    __core__ifThenElse(
                                        __helios__option[__helios__txinput]__none____is(__cond_43),
                                        () -> {
                                            (__lhs_0_79) -> {
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): no charter ref; must be in inputs...
"), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_218)())
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_78) -> {
                                                charterUtxo_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_78);
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): found charter ref
"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);
                                                __module__CapoHelpers__CapoCtx[]____new(mph_21, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_2)))
                                            }
                                        }
                                    )()(__cond_43))
                                }
                            }
                        )()
                    }
                )()(__cond_42)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_219) -> {
        () -> {
            charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_219);
            __cond_44 = charter_2;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_44),
                () -> {
                    (__lhs_0_87) -> {
                        __core__chooseUnit(__helios__print("      -- needs charter spent in inputs (already checked : )"), self_219)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_44),
                        () -> {
                            (__lhs_0_86) -> {
                                __helios__error("CapoCtx.withCharterInput(): charter is from ref!")
                            }
                        },
                        () -> {
                            (__lhs_0_82) -> {
                                __lhs_0_83 = self_219;
                                mph_22 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_83);
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be spent in the inputs", false, ()), charterAc_4 = __helios__assetclass__new(mph_22, __helios__string__encode_utf8("charter")());
                                hasCharter_3 = (txin_6) -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_6))(charterAc_4), 0)
                                };
                                __core__chooseUnit(__helios__print("    -- CapoCtx finding charter in inputs
"), (charterUtxo_3) -> {
                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_3))), 0);
                                    __module__CapoHelpers__CapoCtx[]____new(mph_22, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_3))
                                }(__cond_45 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_3);
                                __core__ifThenElse(
                                    __helios__option[__helios__txinput]__some____is(__cond_45),
                                    () -> {
                                        (__lhs_0_85) -> {
                                            ch_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_85);
                                            ch_3
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_84) -> {
                                            __helios__error("Missing required charter input")
                                        }
                                    }
                                )()(__cond_45))))
                            }
                        }
                    )()
                }
            )()(__cond_44)
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_220) -> {
        () -> {
            charter_3 = __module__CapoHelpers__CapoCtx[]__charter(self_220);
            __cond_46 = charter_3;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_46),
                () -> {
                    (__lhs_0_91) -> {
                        __core__chooseUnit(__helios__print("      -- needs charter ref (already checked : )"), self_220)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_46),
                        () -> {
                            (__lhs_0_90) -> {
                                __helios__error("CapoCtx.withCharterRef(): charter is from inputs!")
                            }
                        },
                        () -> {
                            (__lhs_0_88) -> {
                                __lhs_0_89 = self_220;
                                mph_23 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_89);
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be referenced in the txn, but unspent", false, ()), utxo_5 = __module__CapoHelpers__getRefCharterUtxo(mph_23);
                                datum_6 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_5))), 0);
                                __module__CapoHelpers__CapoCtx[]____new(mph_23, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_6, utxo_5)))
                            }
                        }
                    )()
                }
            )()(__cond_46)
        }
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_221) -> {
        (fn_21, z_2) -> {
            __helios__common__fold(self_221, (z_3, pair_71) -> {
                fn_21(z_3, __helios__string__from_data(__core__fstPair(pair_71)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_71)))
            }, z_2)
        }
    };
    __helios__option[__helios__bool]__unwrap = (self_222) -> {
        () -> {
            __helios__bool__from_data(__helios__common__enum_field_0(self_222))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all = (self_223) -> {
        (fn_22) -> {
            fn_23 = (pair_72) -> {
                fn_22(__helios__string__from_data(__core__fstPair(pair_72)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(pair_72)))
            };
            __helios__common__all(self_223, fn_23)
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all = (self_224) -> {
        (fn_24) -> {
            __helios__common__all(self_224, (item_12) -> {
                fn_24(__module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(item_12))
            })
        }
    };
    __helios__option[__helios__bool]__some____is = (data_261) -> {
        __helios__common__enum_tag_equals(data_261, 0)
    };
    __module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings = (self_225) -> {
        () -> {
            charterData_2 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_225)();
            mph_24 = __module__CapoHelpers__CapoCtx[]__mph(self_225);
            __lhs_0_92 = __helios__common__assert_constr_index(charterData_2, 0);
            spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_92);
            otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_92);
            mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_92);
            govDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_92);
            manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_92);
            inputs_2 = __helios__tx__inputs(__helios__scriptcontext__tx);
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- only the spend delegate calls this function", false, ()), spendDelegateIsValidating = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(self_225)(false, ());
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- spend delegate requires the other delegates validate (except mint delegate == same as spend delegate)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("govDelegate MAY contribute to settings validation", false, ()), (govDelegateMaybeValidating) -> {
                checkOneInvariant = (oneDgt) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariant must validate settings", false, ()), __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(oneDgt)(inputs_2, mph_24, true))())
                };
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spend invariants must validate settings", false, ()), spendInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(spendInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("mint invariants must validate settings", false, ()), mintInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(mintInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("dgDataControllers must validate settings", false, ()), dgDataPoliciesAreValidating = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all(manifest)((key_18, entry_1) -> {
                    __cond_48 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry_1);
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_48),
                        () -> {
                            (__lhs_0_95) -> {
                                policyLink_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_95);
                                __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(policyLink_1)(inputs_2, mph_24, true))()
                            }
                        },
                        () -> {
                            (__34) -> {
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ignoring manifest entry (not a data policy): ", key_18)), true)
                            }
                        }
                    )()(__cond_48)
                });
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("named delegates must validate settings", false, ()), namedDelegatesAreValidating = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)(__core__chooseUnit(__module__StellarHeliosHelpers__REQT("  - each other-named-delegate must validate settings", false, ()), (ok, key_19, dgt) -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("  - other-named-delegate: ", key_19)), __core__chooseUnit(__helios__print("
"), __helios__bool__and(() -> {
                        ok
                    }, () -> {
                        __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(dgt)(inputs_2, mph_24, true))()
                    })))
                }), true);
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        __helios__bool__and(() -> {
                            __helios__bool__and(() -> {
                                __helios__bool__and(() -> {
                                    dgDataPoliciesAreValidating
                                }, () -> {
                                    spendDelegateIsValidating
                                })
                            }, () -> {
                                govDelegateMaybeValidating
                            })
                        }, () -> {
                            spendInvariantsAreValidating
                        })
                    }, () -> {
                        mintInvariantsAreValidating
                    })
                }, () -> {
                    namedDelegatesAreValidating
                })))))
            }(__cond_47 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(govDelegate)(inputs_2, mph_24, false);
            __core__ifThenElse(
                __helios__option[__helios__bool]__some____is(__cond_47),
                () -> {
                    (__lhs_0_94) -> {
                        true
                    }
                },
                () -> {
                    (__lhs_0_93) -> {
                        __core__chooseUnit(__helios__print("  -- govAuthority isn't a script-based validator; doesn't validate new settings
"), true)
                    }
                }
            )()(__cond_47)))))
        }
    };
    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_226) -> {
        (activity_1) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__CapoHelpers__CapoCtx[]____eq(self_226, self_226)
            }), "prevent unused var"), __cond_49 = activity_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_49),
                () -> {
                    (__lhs_0_102) -> {
                        __helios__error("the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_49),
                        () -> {
                            (__lhs_0_101) -> {
                                __helios__error("the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo")
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_49),
                                () -> {
                                    (__lhs_0_100) -> {
                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for updating the Capo manifest...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_49),
                                        () -> {
                                            (__lhs_0_99) -> {
                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for queuing a pending dgt-change...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_49),
                                                () -> {
                                                    (__lhs_0_98) -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for removing a pending dgt-change entry...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_49),
                                                        () -> {
                                                            (__lhs_0_97) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for committing pending dgt-changes...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_96) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for creating a new delegate (deprecated path)...", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("deprecate use of CLA::CreatingDelegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()(__cond_49))
        }
    };
    __module__CapoHelpers__CapoCtx[]__orFail = (self_227) -> {
        () -> {
            __lhs_0_103 = self_227;
            true
        }
    };
    __module__CapoHelpers__mkCapoCtx = (mph_25) -> {
        __module__CapoHelpers__CapoCtx[]____new(mph_25, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())
    };
    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo) -> {
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It must spend the indicated seed UTXO", false, ()), __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_4) -> {
                __helios__txoutputid____eq(__helios__txinput__output_id(input_4), seedUtxo)
            })),
            () -> {
                __core__chooseUnit(__helios__print(" - expected seedUtxo: "), __core__chooseUnit(__helios__print(__helios__txoutputid__show(seedUtxo)()), __core__chooseUnit(__helios__print("
"), __helios__assert(false, "missing expected seed input for minting"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__helios__print("  -- has seed -> ok
"), true)))
    };
    __module__CapoMintHelpers__noOtherActivitiesSupported = (__35) -> {
        __core__chooseUnit(__helios__print("yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...
"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("   -- note: for other cases, a context-specific check via validateUutMinting's (
", "  ...
  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)
"), ") option can be used to steer around this failure.
")), __core__chooseUnit(__helios__assert(false, "unexpected delegate activity"), false)))
    };
    __helios__option[__helios__data]__none____is = (data_262) -> {
        __helios__common__enum_tag_equals(data_262, 1)
    };
    __helios__option[__helios__data]__some__some = (self_228) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_228))
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_229) -> {
        (key_20) -> {
            __helios__common__map_get(self_229, __helios__scriptpurpose____to_data(key_20), (x_9) -> {
                __core__constrData(0, __helios__common__list_1(x_9))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_26, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {
        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck,
            () -> {
                extraMintDelegateRedeemerCheck
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_1 = __core__ifThenElse(
            __useopt__checkMintDgtActivity,
            () -> {
                checkMintDgtActivity
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_26);
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter's mint-delegate to authorize this mint activity", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- finding input dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {
            __core__chooseUnit(__helios__print("    -- \u2705 \u27A1\uFE0F  \u{1F481}found dgTkn ^"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {
                __cond_51 = purpose_1;
                __core__ifThenElse(
                    __helios__scriptpurpose__spending____is(__cond_51),
                    () -> {
                        (sp_1) -> {
                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)
                        }
                    },
                    () -> {
                        (__36) -> {
                            false
                        }
                    }
                )()(__cond_51)
            });
            err = __helios__string____add(__helios__string____add("dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), " not being spent as expected");
            (maybeCheckedMintDelegateAuthority) -> {
                delegateDidAuthorize = true;
                __helios__bool__and(() -> {
                    delegateDidAuthorize
                }, () -> {
                    maybeCheckedMintDelegateAuthority
                })
            }(__cond_52 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);
            __core__ifThenElse(
                __helios__option[__helios__data]__none____is(__cond_52),
                () -> {
                    (__lhs_0_111) -> {
                        __helios__error(err)
                    }
                },
                () -> {
                    (__lhs_0_106) -> {
                        x_11 = __helios__option[__helios__data]__some__some(__lhs_0_106);
                        activity_2 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(x_11);
                        __cond_53 = activity_2;
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_53),
                            () -> {
                                (__lhs_0_107) -> {
                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_107);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY we ---------------- don't need the funny redeemer-check skipping"), __core__chooseUnit(__core__ifThenElse(
                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),
                                        () -> {
                                            __core__chooseUnit(__helios__print(" vvv wherever it is, probably best it uses the checkMintDgtActivity option"), __helios__error("where is extraMintDelegateRedeemerCheck=false really needed?"))
                                        },
                                        () -> {
                                            () -> {
                                                ()
                                            }()
                                        }
                                    )(), __cond_54 = DLA;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_54),
                                        () -> {
                                            (__lhs_0_110) -> {
                                                __core__chooseUnit(__helios__print("  -- ok, dgTkn spent
"), true)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_54),
                                                () -> {
                                                    (__lhs_0_109) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_108) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_54)))
                                }
                            },
                            () -> {
                                (__37) -> {
                                    checkMintDgtActivity_1(activity_2)
                                }
                            }
                        )()(__cond_53)
                    }
                }
            )()(__cond_52)))
        }(__cond_50 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_13) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_13))(authzAc), 0)
        });
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_50),
            () -> {
                (__lhs_0_105) -> {
                    x_10 = __helios__option[__helios__txinput]__some__some(__lhs_0_105);
                    __helios__txinput__output_id(x_10)
                }
            },
            () -> {
                (__lhs_0_104) -> {
                    __helios__error(__helios__string____add("  \u274C\u274C missing dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))
                }
            }
        )()(__cond_50))))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __helios__txoutputid__tx_id(seed_1);
        seedIdx = __helios__txoutputid__index(seed_1);
        idxBytes = __helios__int__serialize(seedIdx)();
        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);
        txoInfo = __core__ifThenElse(
            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),
            () -> {
                __core__chooseUnit(__helios__assert(false, "cbor(txoId) len > 9 !!"), idxBytes)
            },
            () -> {
                () -> {
                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8("@")()), idxBytes)
                }()
            }
        )();
        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);
        mhs = __helios__bytearray__show(miniHash)();
        (p) -> {
            __helios__string____add(__helios__string____add(p, "-"), mhs)
        }
    };
    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {
        __helios__bytearray____lt(k1, k2)
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_230) -> {
        (fn_25) -> {
            recurse_89 = (recurse_88, map_31) -> {
                __core__chooseList(map_31, () -> {
                    ()
                }, () -> {
                    head_85 = __core__headList__safe(map_31);
                    __core__chooseUnit(fn_25(__helios__bytearray__from_data(__core__fstPair(head_85)), __helios__int__from_data(__core__sndPair(head_85))), recurse_88(recurse_88, __core__tailList__safe(map_31)))
                })()
            };
            recurse_89(recurse_89, self_230)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_231) -> {
        (fn_26) -> {
            __helios__common__filter_map(self_231, (pair_73) -> {
                fn_26(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_73)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_73)))
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_232) -> {
        (fn_27) -> {
            recurse_91 = (recurse_90, map_32) -> {
                __core__chooseList(map_32, () -> {
                    ()
                }, () -> {
                    head_86 = __core__headList__safe(map_32);
                    __core__chooseUnit(fn_27(__helios__mintingpolicyhash__from_data(__core__fstPair(head_86)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_86))), recurse_90(recurse_90, __core__tailList__safe(map_32)))
                })()
            };
            recurse_91(recurse_91, self_232)
        }
    };
    __helios__option[__helios__int]__none____is = (data_263) -> {
        __helios__common__enum_tag_equals(data_263, 1)
    };
    __helios__option[__helios__int]__some__some = (self_233) -> {
        __helios__int__from_data(__helios__common__enum_field_0(self_233))
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_234) -> {
        (key_21) -> {
            __helios__common__map_get(self_234, __helios__bytearray____to_data(key_21), (x_12) -> {
                __core__constrData(0, __helios__common__list_1(x_12))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_235) -> {
        (key_22) -> {
            key_23 = __helios__mintingpolicyhash____to_data(key_22);
            recurse_93 = (recurse_92, self_236) -> {
                __core__chooseList(self_236, () -> {
                    self_236
                }, () -> {
                    head_87 = __core__headList__safe(self_236);
                    tail_4 = __core__tailList__safe(self_236);
                    __core__ifThenElse(
                        __core__equalsData(key_23, __core__fstPair(head_87)),
                        () -> {
                            recurse_92(recurse_92, tail_4)
                        },
                        () -> {
                            __core__mkCons(head_87, recurse_92(recurse_92, tail_4))
                        }
                    )()
                })()
            };
            recurse_93(recurse_93, self_235)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;
    __helios__map[__helios__bytearray@__helios__int]____eq = (self_237, other_4) -> {
        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_237), __helios__map[__helios__bytearray@__helios__int]____to_data(other_4))
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_238) -> {
        (comp_4) -> {
            __helios__common__sort(self_238, (a_18, b_20) -> {
                comp_4(__helios__bytearray__from_data(__core__fstPair(a_18)), __helios__int__from_data(__core__sndPair(a_18)), __helios__bytearray__from_data(__core__fstPair(b_20)), __helios__int__from_data(__core__sndPair(b_20)))
            })
        }
    };
    __helios__value__sum[__helios__value] = (self_239) -> {
        recurse_95 = (recurse_94, lst_24) -> {
            __core__chooseList(lst_24, () -> {
                __helios__value__ZERO
            }, () -> {
                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_24))), recurse_94(recurse_94, __core__tailList__safe(lst_24)))
            })()
        };
        recurse_95(recurse_95, self_239)
    };
    __helios__list[__helios__string]__map[__helios__value] = (self_240) -> {
        (fn_28) -> {
            __helios__common__map(self_240, (item_13) -> {
                __helios__value____to_data(fn_28(__helios__string__from_data(item_13)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_27, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        bootstrapCharter_1 = __core__ifThenElse(
            __useopt__bootstrapCharter,
            () -> {
                bootstrapCharter
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        needsMintDelegateApproval_1 = __core__ifThenElse(
            __useopt__needsMintDelegateApproval,
            () -> {
                needsMintDelegateApproval
            },
            () -> {
                true
            }
        )();
        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck_1,
            () -> {
                extraMintDelegateRedeemerCheck_2
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_3 = __core__ifThenElse(
            __useopt__checkMintDgtActivity_1,
            () -> {
                checkMintDgtActivity_2
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());
        delegateApproval = __core__ifThenElse(
            isBootstrapping,
            () -> {
                true
            },
            () -> {
                () -> {
                    __lhs_0_112 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_27, false, ()), 0);
                    mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_112);
                    __core__ifThenElse(
                        needsMintDelegateApproval_1,
                        () -> {
                            __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_27, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3)
                        },
                        () -> {
                            () -> {
                                true
                            }()
                        }
                    )()
                }()
            }
        )();
        valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
        expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](purposes)((purpose_2) -> {
            __module__StellarHeliosHelpers__mkTv(mph_27, true, mkTokenName_1(purpose_2), false, (), false, ())
        })));
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_27)),
            () -> {
                mphStr = __helios__mintingpolicyhash__show(mph_27)();
                valStr = __helios__value__show(valueMinted)(false, ());
                __core__chooseUnit(__helios__print(__helios__string____add("  -- no mint from our policy ", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print("^^  value minted"), __helios__error("\u274C\u274C validateUutMinting(): no mint from our policy"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_27))(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_3, i_15) -> {
            tnStr_1 = __helios__bytearray__decode_utf8_safe(tn_3)();
            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E} expected: ", __helios__int__show(i_15)()), "x "), tnStr_1))
        }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_27);
        actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__core__ifThenElse(
            true,
            () -> {
                __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_2, i_14) -> {
                    tnStr = __helios__bytearray__decode_utf8_safe(tn_2)();
                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E}   actual: ", __helios__int__show(i_14)()), "x "), tnStr))
                }), __core__chooseUnit(__helios__print("other policy values minted: 
"), __helios__print(__helios__value__show(__helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_21, __38) -> {
                    __helios__mintingpolicyhash____neq(b_21, mph_27)
                })))(false, ()))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the mint for this policy-id is exactly the expected value", false, ()), thisPolicyMintOK = __helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted);
        __core__chooseUnit(__helios__assert(thisPolicyMintOK, "mismatch in UUT mint"), __core__chooseUnit(__helios__print("  -- this-policy mint ok"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_2), "no seed"), __core__chooseUnit(__helios__print("  -- ok: has seed and expected this-policy mint value"), otherPoliciesMintOk = __core__ifThenElse(
            __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),
            () -> {
                true
            },
            () -> {
                () -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with an additional mint-value indicated", false, ()), remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue)(mph_27),
                        () -> {
                            __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_27))
                        },
                        () -> {
                            () -> {
                                expectedValue
                            }()
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint)(),
                        () -> {
                            true
                        },
                        () -> {
                            () -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...with other-policy values expected: ", false, ()), __core__chooseUnit(__helios__print(__helios__string____add(__helios__value__show(remainingExpectedMint)(false, ()), "^ other-mint value expected")), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It should mint exactly the indicated token names", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Doesn't constrain any mentioned policy's minting of any other tokens", false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {
                                    mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);
                                    __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_3, expectedCount) -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__cond_55 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_3);
                                            __core__ifThenElse(
                                                __helios__option[__helios__int]__none____is(__cond_55),
                                                () -> {
                                                    (__lhs_0_114) -> {
                                                        false
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_113) -> {
                                                        actualCount = __helios__option[__helios__int]__some__some(__lhs_0_113);
                                                        __helios__int____eq(actualCount, expectedCount)
                                                    }
                                                }
                                            )()(__cond_55)),
                                            () -> {
                                                tnString = __helios__bytearray__decode_utf8_safe(tokenName_3)();
                                                __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C validateUutMinting(): wrong mint for ", __helios__mintingpolicyhash__show(otherMph)()), ":"), tnString))
                                            },
                                            () -> {
                                                () -> {
                                                    ()
                                                }()
                                            }
                                        )()
                                    })
                                }), true)))))
                            }()
                        }
                    )())
                }()
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)("  -- other-expected-mints ok? "), "unreachable exception: otherPoliciesMintOk"), __core__chooseUnit(__helios__print(" \u2705 validateUutMinting:  ok!
"), __helios__bool__and(() -> {
            __helios__bool__and(() -> {
                delegateApproval
            }, () -> {
                thisPolicyMintOK
            })
        }, () -> {
            otherPoliciesMintOk
        })))))))))))
    };
    __helios__list[__helios__string]__is_valid_data_internal = (lst_25) -> {
        recurse_97 = (recurse_96, lst_26) -> {
            __core__chooseList(lst_26, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__headList__safe(lst_26)),
                    () -> {
                        recurse_96(recurse_96, __core__tailList__safe(lst_26))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_97(recurse_97, lst_25)
    };
    __helios__list[__helios__string]__is_valid_data = (data_264) -> {
        __core__chooseData(data_264, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__string]__is_valid_data_internal(__core__unListData__safe(data_264))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__ReqtData[]__is_valid_data = (data_265) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_265, __core__bData(#7265717569726573), __helios__list[__helios__string]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_265, __core__bData(#696d706c), __helios__string__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_265, __core__bData(#6d656368), __helios__list[__helios__string]__is_valid_data),
                            () -> {
                                __core__ifThenElse(
                                    __helios__common__test_mStruct_field(data_265, __core__bData(#64746c73), __helios__list[__helios__string]__is_valid_data),
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__common__test_mStruct_field(data_265, __core__bData(#70727073), __helios__string__is_valid_data),
                                            () -> {
                                                __core__ifThenElse(
                                                    __helios__common__test_mStruct_field(data_265, __core__bData(#746774), __helios__bytearray__is_valid_data),
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __helios__common__test_mStruct_field(data_265, __core__bData(#657870), __helios__time__is_valid_data),
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __helios__common__test_mStruct_field(data_265, __core__bData(#6465736372697074696f6e), __helios__string__is_valid_data),
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __helios__common__test_mStruct_field(data_265, __core__bData(#696d616765), __helios__string__is_valid_data),
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __helios__common__test_mStruct_field(data_265, __core__bData(#6e616d65), __helios__string__is_valid_data),
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __helios__common__test_mStruct_field(data_265, __core__bData(#636174), __helios__string__is_valid_data),
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __helios__common__test_mStruct_field(data_265, __core__bData(#747065), __helios__string__is_valid_data),
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __helios__common__test_mStruct_field(data_265, __core__bData(#406964), __helios__bytearray__is_valid_data),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__trace("Warning: invalid data in ReqtData.@id", () -> {
                                                                                                                    false
                                                                                                                })()
                                                                                                            }
                                                                                                        )()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__trace("Warning: invalid data in ReqtData.tpe", () -> {
                                                                                                            false
                                                                                                        })()
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                __core__trace("Warning: invalid data in ReqtData.cat", () -> {
                                                                                                    false
                                                                                                })()
                                                                                            }
                                                                                        )()
                                                                                    },
                                                                                    () -> {
                                                                                        __core__trace("Warning: invalid data in ReqtData.name", () -> {
                                                                                            false
                                                                                        })()
                                                                                    }
                                                                                )()
                                                                            },
                                                                            () -> {
                                                                                __core__trace("Warning: invalid data in ReqtData.image", () -> {
                                                                                    false
                                                                                })()
                                                                            }
                                                                        )()
                                                                    },
                                                                    () -> {
                                                                        __core__trace("Warning: invalid data in ReqtData.description", () -> {
                                                                            false
                                                                        })()
                                                                    }
                                                                )()
                                                            },
                                                            () -> {
                                                                __core__trace("Warning: invalid data in ReqtData.exp", () -> {
                                                                    false
                                                                })()
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        __core__trace("Warning: invalid data in ReqtData.tgt", () -> {
                                                            false
                                                        })()
                                                    }
                                                )()
                                            },
                                            () -> {
                                                __core__trace("Warning: invalid data in ReqtData.prps", () -> {
                                                    false
                                                })()
                                            }
                                        )()
                                    },
                                    () -> {
                                        __core__trace("Warning: invalid data in ReqtData.dtls", () -> {
                                            false
                                        })()
                                    }
                                )()
                            },
                            () -> {
                                __core__trace("Warning: invalid data in ReqtData.mech", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in ReqtData.impl", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in ReqtData.requires", () -> {
                    false
                })()
            }
        )()
    };
    __module__ReqtsData__ReqtData[]__serialize = __helios__common__serialize;
    __module__ReqtsData__ReqtData[]__from_data = (data_266) -> {
        ignore_17 = __core__ifThenElse(
            __module__ReqtsData__ReqtData[]__is_valid_data(data_266),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid ReqtData data", ())
            }
        )();
        data_266
    };
    __module__ReqtsData__ReqtData[]__mustFreshenBy = (self_241) -> {
        __helios__time__from_data(__helios__common__mStruct_field(self_241, #657870))
    };
    __module__ReqtsData__ReqtData[]__validate = (self_242) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__ReqtsData__ReqtData[]__serialize(self_242)(), __module__ReqtsData__ReqtData[]__serialize(self_242)())
            }), "no"), true)
        }
    };
    __module__ReqtsData__DelegateDatum[]__is_valid_data = (__module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data, __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data, __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data) -> {
        (data_267) -> {
            __core__ifThenElse(
                __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data(data_267),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data(data_267),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data(data_267),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__ReqtsData__DelegateDatum[]__from_data = (__module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data_1) -> {
        (data_268) -> {
            ignore_18 = __core__ifThenElse(
                __module__ReqtsData__DelegateDatum[]__is_valid_data(__module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data_1)(data_268),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateDatum data", ())
                }
            )();
            data_268
        }
    };
    __module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data_2 = (data_269) -> {
        __core__chooseData(data_269, () -> {
            pair_74 = __core__unConstrData__safe(data_269);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_74), 0),
                () -> {
                    data_270 = __core__listData(__core__sndPair(pair_74));
                    __core__chooseData(data_270, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_156 = __core__unListData__safe(data_270);
                        __core__chooseList(fields_156, () -> {
                            false
                        }, () -> {
                            head_88 = __core__headList__safe(fields_156);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_88),
                                () -> {
                                    fields_157 = __core__tailList__safe(fields_156);
                                    __core__chooseList(fields_157, () -> {
                                        false
                                    }, () -> {
                                        head_89 = __core__headList__safe(fields_157);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_89),
                                            () -> {
                                                fields_158 = __core__tailList__safe(fields_157);
                                                __core__chooseList(fields_158, () -> {
                                                    false
                                                }, () -> {
                                                    head_90 = __core__headList__safe(fields_158);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_90),
                                                        () -> {
                                                            fields_159 = __core__tailList__safe(fields_158);
                                                            __core__chooseList(fields_159, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__DelegateDatum[]__IsDelegation__serialize = __helios__common__serialize;
    __module__ReqtsData__DelegateDatum[]__IsDelegation____is = (data_271) -> {
        __helios__common__enum_tag_equals(data_271, 1)
    };
    __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data_2 = (data_272) -> {
        __core__chooseData(data_272, () -> {
            pair_75 = __core__unConstrData__safe(data_272);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_75), 1),
                () -> {
                    data_273 = __core__listData(__core__sndPair(pair_75));
                    __core__chooseData(data_273, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_160 = __core__unListData__safe(data_273);
                        __core__chooseList(fields_160, () -> {
                            false
                        }, () -> {
                            head_91 = __core__headList__safe(fields_160);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(head_91),
                                () -> {
                                    fields_161 = __core__tailList__safe(fields_160);
                                    __core__chooseList(fields_161, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__DelegateDatum[]__IsDelegation__dd = (self_243) -> {
        __module__CapoDelegateHelpers__DelegationDetail[]__from_data(__helios__common__enum_field_0(self_243))
    };
    __module__ReqtsData__DelegateDatum[]__capoStoredData____is = (data_274) -> {
        __helios__common__enum_tag_equals(data_274, 2)
    };
    __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data_2 = (data_275) -> {
        __core__chooseData(data_275, () -> {
            pair_76 = __core__unConstrData__safe(data_275);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_76), 2),
                () -> {
                    data_276 = __core__listData(__core__sndPair(pair_76));
                    __core__chooseData(data_276, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_162 = __core__unListData__safe(data_276);
                        __core__chooseList(fields_162, () -> {
                            false
                        }, () -> {
                            head_92 = __core__headList__safe(fields_162);
                            __core__ifThenElse(
                                __module__ReqtsData__ReqtData[]__is_valid_data(head_92),
                                () -> {
                                    fields_163 = __core__tailList__safe(fields_162);
                                    __core__chooseList(fields_163, () -> {
                                        false
                                    }, () -> {
                                        head_93 = __core__headList__safe(fields_163);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_93),
                                            () -> {
                                                fields_164 = __core__tailList__safe(fields_163);
                                                __core__chooseList(fields_164, () -> {
                                                    false
                                                }, () -> {
                                                    head_94 = __core__headList__safe(fields_164);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_94),
                                                        () -> {
                                                            fields_165 = __core__tailList__safe(fields_164);
                                                            __core__chooseList(fields_165, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__MintingActivity[]__is_valid_data = (__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data) -> {
        (data_277) -> {
            __core__ifThenElse(
                __module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data(data_277),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__ReqtsData__MintingActivity[]__from_data = (__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_1) -> {
        (data_278) -> {
            ignore_19 = __core__ifThenElse(
                __module__ReqtsData__MintingActivity[]__is_valid_data(__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_1)(data_278),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid MintingActivity data", ())
                }
            )();
            data_278
        }
    };
    __module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_2 = (data_279) -> {
        __core__chooseData(data_279, () -> {
            pair_77 = __core__unConstrData__safe(data_279);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_77), 0),
                () -> {
                    data_280 = __core__listData(__core__sndPair(pair_77));
                    __core__chooseData(data_280, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_166 = __core__unListData__safe(data_280);
                        __core__chooseList(fields_166, () -> {
                            false
                        }, () -> {
                            head_95 = __core__headList__safe(fields_166);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_95),
                                () -> {
                                    fields_167 = __core__tailList__safe(fields_166);
                                    __core__chooseList(fields_167, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__MintingActivity[]__CreatingRecord__seed = (self_244) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_244))
    };
    __module__ReqtsData__SpendingActivity[]__is_valid_data = (__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data) -> {
        (data_281) -> {
            __core__ifThenElse(
                __module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data(data_281),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__ReqtsData__SpendingActivity[]__from_data = (__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_1) -> {
        (data_282) -> {
            ignore_20 = __core__ifThenElse(
                __module__ReqtsData__SpendingActivity[]__is_valid_data(__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_1)(data_282),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid SpendingActivity data", ())
                }
            )();
            data_282
        }
    };
    __module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_2 = (data_283) -> {
        __core__chooseData(data_283, () -> {
            pair_78 = __core__unConstrData__safe(data_283);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_78), 0),
                () -> {
                    data_284 = __core__listData(__core__sndPair(pair_78));
                    __core__chooseData(data_284, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_168 = __core__unListData__safe(data_284);
                        __core__chooseList(fields_168, () -> {
                            false
                        }, () -> {
                            head_96 = __core__headList__safe(fields_168);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_96),
                                () -> {
                                    fields_169 = __core__tailList__safe(fields_168);
                                    __core__chooseList(fields_169, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__SpendingActivity[]__UpdatingRecord__id = (self_245) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_0(self_245))
    };
    __module__ReqtsData__BurningActivity[]__is_valid_data = (__module__ReqtsData__BurningActivity[]__DeletingRecord__is_valid_data) -> {
        (data_285) -> {
            __core__ifThenElse(
                __module__ReqtsData__BurningActivity[]__DeletingRecord__is_valid_data(data_285),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__ReqtsData__BurningActivity[]__DeletingRecord__is_valid_data_1 = (data_286) -> {
        __core__chooseData(data_286, () -> {
            pair_79 = __core__unConstrData__safe(data_286);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_79), 0),
                () -> {
                    data_287 = __core__listData(__core__sndPair(pair_79));
                    __core__chooseData(data_287, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_170 = __core__unListData__safe(data_287);
                        __core__chooseList(fields_170, () -> {
                            false
                        }, () -> {
                            head_97 = __core__headList__safe(fields_170);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_97),
                                () -> {
                                    fields_171 = __core__tailList__safe(fields_170);
                                    __core__chooseList(fields_171, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__ensureConstrainedTxValidity = () -> {
        __helios__assert(__helios__duration____leq(__helios__time____sub(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), __helios__timerange__start(__helios__tx__time_range(__helios__scriptcontext__tx))), __helios__duration__HOUR), "txn duration err")
    };
    __module__ReqtsPolicy__daysInFuture = (nowPlusDays) -> {
        __core__chooseUnit(__module__ReqtsPolicy__ensureConstrainedTxValidity(), expiryDuration = __helios__duration____mul(__helios__duration__DAY, nowPlusDays);
        leeway = __helios__duration____mul(__helios__duration__HOUR, 1);
        latestAcceptable = __helios__time____add(__helios__time____add(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), expiryDuration), leeway);
        __helios__timerange__new(__helios__time____add(__helios__timerange__start(__helios__tx__time_range(__helios__scriptcontext__tx)), expiryDuration), latestAcceptable))
    };
    __module__ReqtsPolicy__DelegateActivity[]__is_valid_data = (__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_288) -> {
            __core__ifThenElse(
                __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data(data_288),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data(data_288),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data(data_288),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data(data_288),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data(data_288),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data(data_288),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data(data_288),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data(data_288),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data(data_288),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__ReqtsPolicy__DelegateActivity[]__from_data = (__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_289) -> {
            ignore_21 = __core__ifThenElse(
                __module__ReqtsPolicy__DelegateActivity[]__is_valid_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1)(data_289),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateActivity data", ())
                }
            )();
            data_289
        }
    };
    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is = (data_290) -> {
        __helios__common__enum_tag_equals(data_290, 0)
    };
    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2 = (data_291) -> {
        __core__chooseData(data_291, () -> {
            pair_80 = __core__unConstrData__safe(data_291);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_80), 0),
                () -> {
                    data_292 = __core__listData(__core__sndPair(pair_80));
                    __core__chooseData(data_292, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_172 = __core__unListData__safe(data_292);
                        __core__chooseList(fields_172, () -> {
                            false
                        }, () -> {
                            head_98 = __core__headList__safe(fields_172);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_98),
                                () -> {
                                    fields_173 = __core__tailList__safe(fields_172);
                                    __core__chooseList(fields_173, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__activity = (self_246) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_246))
    };
    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is = (data_293) -> {
        __helios__common__enum_tag_equals(data_293, 1)
    };
    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2 = (data_294) -> {
        __core__chooseData(data_294, () -> {
            pair_81 = __core__unConstrData__safe(data_294);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_81), 1),
                () -> {
                    data_295 = __core__listData(__core__sndPair(pair_81));
                    __core__chooseData(data_295, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_174 = __core__unListData__safe(data_295);
                        __core__chooseList(fields_174, () -> {
                            false
                        }, () -> {
                            head_99 = __core__headList__safe(fields_174);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_99),
                                () -> {
                                    fields_175 = __core__tailList__safe(fields_174);
                                    __core__chooseList(fields_175, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity = (self_247) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_247))
    };
    __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities____is = (data_296) -> {
        __helios__common__enum_tag_equals(data_296, 2)
    };
    __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2 = (data_297) -> {
        __core__chooseData(data_297, () -> {
            pair_82 = __core__unConstrData__safe(data_297);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_82), 2),
                () -> {
                    data_298 = __core__listData(__core__sndPair(pair_82));
                    __core__chooseData(data_298, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_176 = __core__unListData__safe(data_298);
                        __core__chooseList(fields_176, () -> {
                            false
                        }, () -> {
                            head_100 = __core__headList__safe(fields_176);
                            __core__ifThenElse(
                                __module__ReqtsData__SpendingActivity[]__is_valid_data(__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(head_100),
                                () -> {
                                    fields_177 = __core__tailList__safe(fields_176);
                                    __core__chooseList(fields_177, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__activity = (self_248) -> {
        __module__ReqtsData__SpendingActivity[]__from_data(__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_248))
    };
    __module__ReqtsPolicy__DelegateActivity[]__MintingActivities____is = (data_299) -> {
        __helios__common__enum_tag_equals(data_299, 3)
    };
    __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2 = (data_300) -> {
        __core__chooseData(data_300, () -> {
            pair_83 = __core__unConstrData__safe(data_300);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_83), 3),
                () -> {
                    data_301 = __core__listData(__core__sndPair(pair_83));
                    __core__chooseData(data_301, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_178 = __core__unListData__safe(data_301);
                        __core__chooseList(fields_178, () -> {
                            false
                        }, () -> {
                            head_101 = __core__headList__safe(fields_178);
                            __core__ifThenElse(
                                __module__ReqtsData__MintingActivity[]__is_valid_data(__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_2)(head_101),
                                () -> {
                                    fields_179 = __core__tailList__safe(fields_178);
                                    __core__chooseList(fields_179, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__activity = (self_249) -> {
        __module__ReqtsData__MintingActivity[]__from_data(__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_249))
    };
    __module__ReqtsPolicy__DelegateActivity[]__BurningActivities____is = (data_302) -> {
        __helios__common__enum_tag_equals(data_302, 4)
    };
    __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2 = (data_303) -> {
        __core__chooseData(data_303, () -> {
            pair_84 = __core__unConstrData__safe(data_303);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_84), 4),
                () -> {
                    data_304 = __core__listData(__core__sndPair(pair_84));
                    __core__chooseData(data_304, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_180 = __core__unListData__safe(data_304);
                        __core__chooseList(fields_180, () -> {
                            false
                        }, () -> {
                            head_102 = __core__headList__safe(fields_180);
                            __core__ifThenElse(
                                __module__ReqtsData__BurningActivity[]__is_valid_data(__module__ReqtsData__BurningActivity[]__DeletingRecord__is_valid_data_1)(head_102),
                                () -> {
                                    fields_181 = __core__tailList__safe(fields_180);
                                    __core__chooseList(fields_181, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is = (data_305) -> {
        __helios__common__enum_tag_equals(data_305, 5)
    };
    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2 = (data_306) -> {
        __core__chooseData(data_306, () -> {
            pair_85 = __core__unConstrData__safe(data_306);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_85), 5),
                () -> {
                    data_307 = __core__listData(__core__sndPair(pair_85));
                    __core__chooseData(data_307, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_182 = __core__unListData__safe(data_307);
                        __core__chooseList(fields_182, () -> {
                            false
                        }, () -> {
                            head_103 = __core__headList__safe(fields_182);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_103),
                                () -> {
                                    fields_183 = __core__tailList__safe(fields_182);
                                    __core__chooseList(fields_183, () -> {
                                        false
                                    }, () -> {
                                        head_104 = __core__headList__safe(fields_183);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_104),
                                            () -> {
                                                fields_184 = __core__tailList__safe(fields_183);
                                                __core__chooseList(fields_184, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__seed = (self_250) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_250))
    };
    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__dataType = (self_251) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_251))
    };
    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is = (data_308) -> {
        __helios__common__enum_tag_equals(data_308, 6)
    };
    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2 = (data_309) -> {
        __core__chooseData(data_309, () -> {
            pair_86 = __core__unConstrData__safe(data_309);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_86), 6),
                () -> {
                    data_310 = __core__listData(__core__sndPair(pair_86));
                    __core__chooseData(data_310, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_185 = __core__unListData__safe(data_310);
                        __core__chooseList(fields_185, () -> {
                            false
                        }, () -> {
                            head_105 = __core__headList__safe(fields_185);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_105),
                                () -> {
                                    fields_186 = __core__tailList__safe(fields_185);
                                    __core__chooseList(fields_186, () -> {
                                        false
                                    }, () -> {
                                        head_106 = __core__headList__safe(fields_186);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_106),
                                            () -> {
                                                fields_187 = __core__tailList__safe(fields_186);
                                                __core__chooseList(fields_187, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_252) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_252))
    };
    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__recId = (self_253) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_253))
    };
    __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is = (data_311) -> {
        __helios__common__enum_tag_equals(data_311, 7)
    };
    __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2 = (data_312) -> {
        __core__chooseData(data_312, () -> {
            pair_87 = __core__unConstrData__safe(data_312);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_87), 7),
                () -> {
                    data_313 = __core__listData(__core__sndPair(pair_87));
                    __core__chooseData(data_313, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_188 = __core__unListData__safe(data_313);
                        __core__chooseList(fields_188, () -> {
                            false
                        }, () -> {
                            head_107 = __core__headList__safe(fields_188);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_107),
                                () -> {
                                    fields_189 = __core__tailList__safe(fields_188);
                                    __core__chooseList(fields_189, () -> {
                                        false
                                    }, () -> {
                                        head_108 = __core__headList__safe(fields_189);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_108),
                                            () -> {
                                                fields_190 = __core__tailList__safe(fields_189);
                                                __core__chooseList(fields_190, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__recId = (self_254) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_254))
    };
    __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities____is = (data_314) -> {
        __helios__common__enum_tag_equals(data_314, 8)
    };
    __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2 = (data_315) -> {
        __core__chooseData(data_315, () -> {
            pair_88 = __core__unConstrData__safe(data_315);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_88), 8),
                () -> {
                    data_316 = __core__listData(__core__sndPair(pair_88));
                    __core__chooseData(data_316, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_191 = __core__unListData__safe(data_316);
                        __core__chooseList(fields_191, () -> {
                            false
                        }, () -> {
                            head_109 = __core__headList__safe(fields_191);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_109),
                                () -> {
                                    fields_192 = __core__tailList__safe(fields_191);
                                    __core__chooseList(fields_192, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__activities = (self_255) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_255))
    };
    __helios__list[__helios__txinput]__for_each = (self_256) -> {
        (fn_29) -> {
            recurse_99 = (recurse_98, lst_27) -> {
                __core__chooseList(lst_27, () -> {
                    ()
                }, () -> {
                    __core__chooseUnit(fn_29(__helios__txinput__from_data(__core__headList__safe(lst_27))), recurse_98(recurse_98, __core__tailList__safe(lst_27)))
                })()
            };
            recurse_99(recurse_99, self_256)
        }
    };
    __helios__list[__helios__txinput]__filter = (self_257) -> {
        (fn_30) -> {
            __helios__common__filter_list(self_257, (item_14) -> {
                fn_30(__helios__txinput__from_data(item_14))
            })
        }
    };
    __module__ReqtsPolicy__DelegateActivity[]__additionalDelegateValidation = (self_258) -> {
        (priorMddd, cctx) -> {
            __core__chooseUnit(__helios__print("  -- addl dgt validity check"), __helios__bool__or(() -> {
                __cond_56 = self_258;
                __core__ifThenElse(
                    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_56),
                    () -> {
                        (__lhs_0_122) -> {
                            true
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_56),
                            () -> {
                                (__lhs_0_121) -> {
                                    __helios__error("unreachable")
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __module__ReqtsPolicy__DelegateActivity[]__MintingActivities____is(__cond_56),
                                    () -> {
                                        (__lhs_0_119) -> {
                                            VMA = __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__activity(__lhs_0_119);
                                            __cond_58 = VMA;
                                            __lhs_0_120 = __cond_58;
                                            seed_3 = __module__ReqtsData__MintingActivity[]__CreatingRecord__seed(__lhs_0_120);
                                            __core__chooseUnit(__helios__print("creating reqt record...
"), mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);
                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "can't"), tokenName_4 = mkTn("reqt");
                                            newReqt = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1(cctx)(__helios__string__encode_utf8(tokenName_4)());
                                            reqtData_1 = __module__ReqtsData__ReqtData[]__from_data(__helios__txoutputdatum__inline(__helios__txoutput__datum(newReqt)));
                                            __core__chooseUnit(__helios__assert(__helios__duration____leq(__helios__time____sub(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), __helios__timerange__start(__helios__tx__time_range(__helios__scriptcontext__tx))), __helios__duration__HOUR), "txn duration err"), acceptableExpiry = __module__ReqtsPolicy__daysInFuture(73);
                                            discountEnds = __module__ReqtsData__ReqtData[]__mustFreshenBy(reqtData_1);
                                            __core__chooseUnit(__helios__assert(__helios__timerange__contains(acceptableExpiry)(discountEnds), __helios__string____add("wrong discount expiry date too late seconds: ", __helios__int__show(__helios__duration____div1(__helios__time____sub(discountEnds, __helios__timerange__end(acceptableExpiry)), __helios__duration__SECOND))())), __helios__bool__and(() -> {
                                                __module__ReqtsData__ReqtData[]__validate(reqtData_1)()
                                            }, () -> {
                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__ReqtsData__DelegateDatum[]__IsDelegation__dd(priorMddd)), seed_3, __core__mkCons(__helios__string____to_data("reqt"), __core__mkNilData(())), true, mkTn, false, (), false, (), true, false, false, (), false, ())
                                            })))))
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities____is(__cond_56),
                                            () -> {
                                                (__lhs_0_115) -> {
                                                    VSA = __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__activity(__lhs_0_115);
                                                    __core__chooseUnit(__helios__print(__helios__string____add("capo mph: ", __helios__mintingpolicyhash__show(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__ReqtsData__DelegateDatum[]__IsDelegation__dd(priorMddd)))())), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "can't"), __core__chooseUnit(__helios__print(__helios__string____add("
capo addr", __helios__address__show(__helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(cctx)()))())), __core__chooseUnit(__helios__print("
"), __cond_57 = VSA;
                                                    __lhs_0_116 = __cond_57;
                                                    recId_6 = __module__ReqtsData__SpendingActivity[]__UpdatingRecord__id(__lhs_0_116);
                                                    hasDD_2 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx)(true, "Reqt", true, recId_6);
                                                    hasDDOutput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate(cctx)("Reqt", true, recId_6);
                                                    __core__chooseUnit(__helios__list[__helios__txinput]__for_each(__helios__list[__helios__txinput]__filter(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_2))((utxo_6) -> {
                                                        reqtData = __module__ReqtsData__ReqtData[]__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_6)));
                                                        updatedUtxo = __helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))(hasDDOutput);
                                                        updatedReqt = __module__ReqtsData__ReqtData[]__from_data(__helios__txoutputdatum__inline(__helios__txoutput__datum(updatedUtxo)));
                                                        __lhs_0_117 = __helios__value__get_lovelace(__helios__txinput__value(utxo_6))();
                                                        __lhs_0_118 = __helios__value__get_lovelace(__helios__txoutput__value(updatedUtxo))();
                                                        freshExpiry = __module__ReqtsPolicy__daysInFuture(73);
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("changes the expiration date on each update", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("uses the expiration-date policy from settings", false, ()), __core__ifThenElse(
                                                            __helios__time____gt(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), __module__ReqtsData__ReqtData[]__mustFreshenBy(reqtData)),
                                                            () -> {
                                                                __core__chooseUnit(__helios__print("  -- reqt expired.  freshening.
"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("updates the expiration date if it's expired", false, ()), __helios__assert(__helios__timerange__contains(freshExpiry)(__module__ReqtsData__ReqtData[]__mustFreshenBy(updatedReqt)), "wrong expiry date @expired")))
                                                            },
                                                            () -> {
                                                                () -> {
                                                                    ()
                                                                }()
                                                            }
                                                        )()))
                                                    }), true)))))
                                                }
                                            },
                                            () -> {
                                                (__39) -> {
                                                    false
                                                }
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()
                    }
                )()(__cond_56)
            }, () -> {
                __helios__bytearray____eq(__helios__tx__serialize(__helios__scriptcontext__tx)(), __module__ReqtsData__DelegateDatum[]__IsDelegation__serialize(priorMddd)())
            }))
        }
    };
    __module__ReqtsPolicy__DelegateActivity[]__otherDatumValidation = (self_259) -> {
        (_priorMdd) -> {
            neverTriggered = () -> {
                __helios__error("never called")
            };
            __cond_59 = self_259;
            __core__ifThenElse(
                __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_59),
                () -> {
                    (__lhs_0_124) -> {
                        neverTriggered()
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_59),
                        () -> {
                            (__lhs_0_123) -> {
                                neverTriggered()
                            }
                        },
                        () -> {
                            (__40) -> {
                                false
                            }
                        }
                    )()
                }
            )()(__cond_59)
        }
    };
    __module__BasicDelegate__rev = __helios__int__from_data(__core__iData(1));
    __module__BasicDelegate__instance = #67656e6572616c;
    __module__BasicDelegate__delegateName = __helios__string__from_data(__core__bData(#5265717473506f6c696379));
    __module__BasicDelegate__isMintDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isSpendDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isDgDataPolicy = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__requiresGovAuthority = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __helios__list[__helios__data]__all = (self_260) -> {
        (fn_31) -> {
            __helios__common__all(self_260, (item_15) -> {
                fn_31(__helios__data__from_data(item_15))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq = (self_261, other_5) -> {
        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_261), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(other_5))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail = __core__tailList;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;
    __helios__option[__helios__assetclass]__unwrap = (self_262) -> {
        () -> {
            __helios__assetclass__from_data(__helios__common__enum_field_0(self_262))
        }
    };
    __helios__option[__helios__assetclass]__some____new = (some_5) -> {
        __core__constrData(0, __helios__common__list_1(__helios__assetclass____to_data(some_5)))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all = (self_263) -> {
        (fn_32) -> {
            __helios__common__all(self_263, (item_16) -> {
                fn_32(__module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_16))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head = (self_264) -> {
        __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList(self_264))
    };
    __helios__map[__helios__bytearray@__helios__int]__show = (self_265) -> {
        () -> {
            recurse_101 = (recurse_100, self_266, first) -> {
                __core__chooseList(self_266, () -> {
                    ""
                }, () -> {
                    __core__appendString(__core__ifThenElse(
                        first,
                        "",
                        ","
                    ), head_110 = __core__headList__safe(self_266);
                    key_data = __core__fstPair(head_110);
                    key_24 = __helios__bytearray__from_data_safe(key_data);
                    value_data = __core__sndPair(head_110);
                    value_7 = __helios__int__from_data_safe(value_data);
                    __core__appendString(__core__appendString(__core__appendString(key_24((valid_8, key_25) -> {
                        __core__ifThenElse(
                            valid_8,
                            () -> {
                                __helios__bytearray__show(key_25)()
                            },
                            () -> {
                                __helios__data__show(key_data)()
                            }
                        )()
                    }), ":"), value_7((valid_7, value_8) -> {
                        __core__ifThenElse(
                            valid_7,
                            () -> {
                                __helios__int__show(value_8)()
                            },
                            () -> {
                                __helios__data__show(value_data)()
                            }
                        )()
                    })), recurse_100(recurse_100, __core__tailList__safe(self_266), false)))
                })()
            };
            __core__appendString("{", __core__appendString(recurse_101(recurse_101, self_265, true), "}"))
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]] = (self_267) -> {
        (fn_33, a0) -> {
            __helios__common__fold(self_267, (prev_4, item_17) -> {
                fn_33(prev_4, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_17))
            }, a0)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__delete = (self_268) -> {
        (key_26) -> {
            key_27 = __helios__bytearray____to_data(key_26);
            recurse_103 = (recurse_102, self_269) -> {
                __core__chooseList(self_269, () -> {
                    self_269
                }, () -> {
                    head_111 = __core__headList__safe(self_269);
                    tail_5 = __core__tailList__safe(self_269);
                    __core__ifThenElse(
                        __core__equalsData(key_27, __core__fstPair(head_111)),
                        () -> {
                            recurse_102(recurse_102, tail_5)
                        },
                        () -> {
                            __core__mkCons(head_111, recurse_102(recurse_102, tail_5))
                        }
                    )()
                })()
            };
            recurse_103(recurse_103, self_268)
        }
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is = (data_317) -> {
        __helios__common__enum_tag_equals(data_317, 0)
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some = (self_270) -> {
        __helios__map[__helios__bytearray@__helios__int]__from_data(__helios__common__enum_field_0(self_270))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe = (self_271) -> {
        (key_28) -> {
            __helios__common__map_get(self_271, __helios__mintingpolicyhash____to_data(key_28), (x_13) -> {
                __core__constrData(0, __helios__common__list_1(x_13))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]] = (self_272) -> {
        (fn_34, a0_1, b0_1) -> {
            __helios__common__fold(self_272, (prev_5, item_18) -> {
                prev_5((a_19, b_22) -> {
                    fn_34(a_19, b_22, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_18))
                })
            }, (callback_9) -> {
                callback_9(a0_1, b0_1)
            })
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_273) -> {
        __helios__common__length(self_273)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head = (self_274) -> {
        head_112 = __core__headList(self_274);
        (callback_10) -> {
            callback_10(__helios__string__from_data(__core__fstPair(head_112)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(head_112)))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail = __core__tailList;
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap = (self_275) -> {
        () -> {
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_275))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_276) -> {
        (key_29) -> {
            key_30 = __helios__string____to_data(key_29);
            recurse_105 = (recurse_104, self_277) -> {
                __core__chooseList(self_277, () -> {
                    self_277
                }, () -> {
                    head_113 = __core__headList__safe(self_277);
                    tail_6 = __core__tailList__safe(self_277);
                    __core__ifThenElse(
                        __core__equalsData(key_30, __core__fstPair(head_113)),
                        () -> {
                            recurse_104(recurse_104, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_113, recurse_104(recurse_104, tail_6))
                        }
                    )()
                })()
            };
            recurse_105(recurse_105, self_276)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq = (self_278, other_6) -> {
        __core__equalsData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_278), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(other_6))
    };
    __helios__option[__helios__string]__unwrap = (self_279) -> {
        () -> {
            __helios__string__from_data(__helios__common__enum_field_0(self_279))
        }
    };
    __helios__option[__helios__bytearray]__unwrap = (self_280) -> {
        () -> {
            __helios__bytearray__from_data(__helios__common__enum_field_0(self_280))
        }
    };
    __module__BasicDelegate__checkOneActivity_1 = (__module__BasicDelegate__checkOneActivity) -> {
        (dgtionDatum, activity_3, __useopt__dd, dd, __useopt__baseCctx, baseCctx) -> {
            dd_1 = __core__ifThenElse(
                __useopt__dd,
                () -> {
                    dd
                },
                () -> {
                    __module__ReqtsData__DelegateDatum[]__IsDelegation__dd(dgtionDatum)
                }
            )();
            baseCctx_1 = __core__ifThenElse(
                __useopt__baseCctx,
                () -> {
                    baseCctx
                },
                () -> {
                    __module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1))
                }
            )();
            __core__chooseUnit(__helios__print("\u{1F3D2} checking activity:
"), result_2 = __core__ifThenElse(
                true,
                () -> {
                    __core__ifThenElse(
                        true,
                        () -> {
                            (checkNonDelegatedActivities) -> {
                                __core__chooseUnit(__helios__assert(checkNonDelegatedActivities, "checkNonDelegatedActivities failed"), __core__ifThenElse(
                                    __helios__bool__and(() -> {
                                        __module__StellarHeliosHelpers__bREQT("... additionalDelegateValidation", false, ())
                                    }, () -> {
                                        __module__ReqtsPolicy__DelegateActivity[]__additionalDelegateValidation(activity_3)(dgtionDatum, __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(baseCctx_1)())
                                    }),
                                    () -> {
                                        __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation ok!
")), true)
                                    },
                                    () -> {
                                        () -> {
                                            __helios__error(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation returned false (without any thrown error)"))
                                        }()
                                    }
                                )())
                            }(__cond_60 = activity_3;
                            __core__ifThenElse(
                                __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_60),
                                () -> {
                                    (__lhs_0_237) -> {
                                        activities_2 = __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__activities(__lhs_0_237);
                                        cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                        mintDgtCheck_1 = __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                    () -> {
                                                        true
                                                    },
                                                    () -> {
                                                        () -> {
                                                            __helios__list[__helios__data]__all(activities_2)((rawActivity) -> {
                                                                a_20 = __module__ReqtsPolicy__DelegateActivity[]__from_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity);
                                                                __core__chooseUnit(__helios__print("  -- mintDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the mint delegate, only {Create,Delete}DelegatedData activities are valid in multi-activities", false, ()), __cond_109 = a_20;
                                                                __core__ifThenElse(
                                                                    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_109),
                                                                    () -> {
                                                                        (__lhs_0_243) -> {
                                                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_20, true, dd_1, true, cctx_6)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_109),
                                                                            () -> {
                                                                                (__lhs_0_242) -> {
                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_20, true, dd_1, true, cctx_6)
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_109),
                                                                                    () -> {
                                                                                        (__lhs_0_241) -> {
                                                                                            __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_109),
                                                                                            () -> {
                                                                                                (__lhs_0_240) -> {
                                                                                                    __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_109),
                                                                                                    () -> {
                                                                                                        (__lhs_0_239) -> {
                                                                                                            __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_109),
                                                                                                            () -> {
                                                                                                                (__lhs_0_238) -> {
                                                                                                                    __helios__error("multi:multi: nesting not ok")
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__74) -> {
                                                                                                                    __helios__error("multi:non-minting activities are invalid for mintDgt")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(__cond_109)))
                                                            })
                                                        }()
                                                    }
                                                )()
                                            }
                                        )();
                                        spendDgtCheck_1 = __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                    () -> {
                                                        true
                                                    },
                                                    () -> {
                                                        () -> {
                                                            __helios__list[__helios__data]__all(activities_2)((rawActivity_1) -> {
                                                                a_21 = __module__ReqtsPolicy__DelegateActivity[]__from_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_1);
                                                                __core__chooseUnit(__helios__print("  -- spendDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities", false, ()), __cond_110 = a_21;
                                                                __core__ifThenElse(
                                                                    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_110),
                                                                    () -> {
                                                                        (__lhs_0_249) -> {
                                                                            __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                __module__BasicDelegate__isSpendDelegate
                                                                            }, () -> {
                                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(false, ())
                                                                            }), "UpdatingDelegatedData only ok at level-1 spendDgt"), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_21, true, dd_1, true, cctx_6))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_110),
                                                                            () -> {
                                                                                (__lhs_0_248) -> {
                                                                                    __helios__error("CreatingDelegatedData only ok in mintDgt")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_110),
                                                                                    () -> {
                                                                                        (__lhs_0_247) -> {
                                                                                            __helios__error("TODO: validate spending the datum for burn")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_110),
                                                                                            () -> {
                                                                                                (__lhs_0_246) -> {
                                                                                                    __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_110),
                                                                                                    () -> {
                                                                                                        (__lhs_0_245) -> {
                                                                                                            __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_110),
                                                                                                            () -> {
                                                                                                                (__lhs_0_244) -> {
                                                                                                                    __helios__error("multi:multi: nesting not ok")
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__75) -> {
                                                                                                                    __helios__error("multi: non-spending activities are invalid for spendDgt")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(__cond_110)))
                                                            })
                                                        }()
                                                    }
                                                )()
                                            }
                                        )();
                                        dgDataPolicyCheck = __core__ifThenElse(
                                            __helios__bool__or(() -> {
                                                __module__BasicDelegate__isMintDelegate
                                            }, () -> {
                                                __module__BasicDelegate__isSpendDelegate
                                            }),
                                            () -> {
                                                __core__chooseUnit(__helios__assert(__helios__bool____not(__module__BasicDelegate__isDgDataPolicy), "ack! mint/spend delegate can't be a delegated-data policy!"), true)
                                            },
                                            () -> {
                                                () -> {
                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("assert isDgDataPolicy"), __helios__list[__helios__data]__all(activities_2)((rawActivity_2) -> {
                                                        a_22 = __module__ReqtsPolicy__DelegateActivity[]__from_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_2);
                                                        __core__chooseUnit(__helios__print("  -- dgDataPolicy checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in DgDataPolicy, only Minting/Burning/Spending activities are valid", false, ()), __cond_111 = a_22;
                                                        __core__ifThenElse(
                                                            __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_111),
                                                            () -> {
                                                                (__lhs_0_258) -> {
                                                                    __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt (use a SpendingActivity in dgDataPolicy)")
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_111),
                                                                    () -> {
                                                                        (__lhs_0_257) -> {
                                                                            __helios__error("CreatingDelegatedData only ok in mintDgt (use a MintingActivity in dgDataPolicy)")
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_111),
                                                                            () -> {
                                                                                (__lhs_0_256) -> {
                                                                                    __helios__error("DeletingDelegatedData only ok at mint/spend dgt (use BurningActivity in dgDataPolicy)")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities____is(__cond_111),
                                                                                    () -> {
                                                                                        (__lhs_0_255) -> {
                                                                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_22, true, dd_1, true, cctx_6)
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__ReqtsPolicy__DelegateActivity[]__MintingActivities____is(__cond_111),
                                                                                            () -> {
                                                                                                (__lhs_0_254) -> {
                                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_22, true, dd_1, true, cctx_6)
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__ReqtsPolicy__DelegateActivity[]__BurningActivities____is(__cond_111),
                                                                                                    () -> {
                                                                                                        (__lhs_0_253) -> {
                                                                                                            __core__chooseUnit(__helios__assert(false, "TODO: support multi:BurningActivities for dgDataPolicy or other delegate"), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_22, true, dd_1, true, cctx_6))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_111),
                                                                                                            () -> {
                                                                                                                (__lhs_0_252) -> {
                                                                                                                    __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_111),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_251) -> {
                                                                                                                            __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_250) -> {
                                                                                                                            __helios__error("multi:multi: nesting not ok")
                                                                                                                        }
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()(__cond_111)))
                                                    }))
                                                }()
                                            }
                                        )();
                                        __helios__bool__and(() -> {
                                            __helios__bool__and(() -> {
                                                mintDgtCheck_1
                                            }, () -> {
                                                spendDgtCheck_1
                                            })
                                        }, () -> {
                                            dgDataPolicyCheck
                                        })
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_60),
                                        () -> {
                                            (__lhs_0_231) -> {
                                                innerActivity = __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity(__lhs_0_231);
                                                __cond_107 = innerActivity;
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_107),
                                                    () -> {
                                                        (__lhs_0_235) -> {
                                                            seed_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed(__lhs_0_235);
                                                            purpose_8 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose(__lhs_0_235);
                                                            BURNED = __helios__int____neg(1);
                                                            otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), __module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_1)), BURNED);
                                                            tnStr_3 = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_1))();
                                                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("checking ReplacingMe on ", purpose_8), ": "), tnStr_3)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("needs the charter to be approving the the new mint-delegate", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("  ^^^ should queue the new delegate in pendingChanges"), cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(baseCctx_1)();
                                                            (isUpdatingCharter) -> {
                                                                isMintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_9, __core__mkCons(__helios__string____to_data(purpose_8), __core__mkNilData(())), false, (), false, (), true, otherMintedValue_2, true, false, true, false, false, ());
                                                                __helios__bool__and(() -> {
                                                                    isMintingOk
                                                                }, () -> {
                                                                    isUpdatingCharter
                                                                })
                                                            }(__cond_108 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5)();
                                                            __core__ifThenElse(
                                                                __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_108),
                                                                () -> {
                                                                    (__lhs_0_236) -> {
                                                                        true
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__73) -> {
                                                                        false
                                                                    }
                                                                }
                                                            )()(__cond_108)))))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_107),
                                                            () -> {
                                                                (__lhs_0_234) -> {
                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... Retiring delegate authority token", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- must burn the indicated authority token", false, ()), __helios__int____eq(__helios__value__get(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken(dd_1)()), __helios__int____neg(1))))
                                                                }
                                                            },
                                                            () -> {
                                                                (__lhs_0_232) -> {
                                                                    __lhs_0_233 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), false, ()), 0);
                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("import settings from delegate and validate them"), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                        false
                                                                    }, () -> {
                                                                        true
                                                                    }), "ValidateSettings temporarily disabled"), false))
                                                                }
                                                            }
                                                        )()
                                                    }
                                                )()(__cond_107)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_60),
                                                () -> {
                                                    (__lhs_0_132) -> {
                                                        dCLA = __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_132);
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with any CapoLifecycle activity: ", false, ()), cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))())();
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the Capo's CharterData activity to match this delegate's activity", false, ()), __core__chooseUnit(__cond_105 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4)();
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_105),
                                                            () -> {
                                                                (__lhs_0_230) -> {
                                                                    cCLA = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_230);
                                                                    __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cCLA, dCLA), "activity mismatch with Capo's CharterData activity"), __helios__print("  -- ok, CharterData capoLifecycleActivity matches ours
"))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_105),
                                                                    () -> {
                                                                        (__lhs_0_228) -> {
                                                                            __cond_106 = dCLA;
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_106),
                                                                                () -> {
                                                                                    (__lhs_0_229) -> {
                                                                                        __helios__print("ok, Capo:updatingCharter works for now with CreatingDelegate
")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__72) -> {
                                                                                        __helios__error("when Capo is UpdatingCharter, the mintDelegate must be CreatingDelegate")
                                                                                    }
                                                                                }
                                                                            )()(__cond_106)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__71) -> {
                                                                            __helios__error("this activity must match the capo's own CharterData activity")
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()(__cond_105), neededRole = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx_4)(dCLA);
                                                        (myCurrentRole) -> {
                                                            __helios__bool__and(() -> {
                                                                __cond_62 = dCLA;
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_62),
                                                                    () -> {
                                                                        (__lhs_0_224) -> {
                                                                            seed_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_224);
                                                                            purpose_7 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_224);
                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("XXX it should output the new delegate token to the Capo as a PendingDelegate datum"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... here in the MintDgt: validates creation of UUT for the new delegate, aligned to the purpose indicated", false, ()), mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                            __cond_103 = myCurrentRole;
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_103),
                                                                                () -> {
                                                                                    (__lhs_0_225) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates the new delegate's UUT is minted", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                            __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_8, __core__mkCons(__helios__string____to_data(purpose_7), __core__mkNilData(())), true, mkTn_1, false, (), false, (), true, false, false, (), false, ()),
                                                                                            () -> {
                                                                                                __helios__print("  -- ok, minted the new delegate's UUT
")
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    ()
                                                                                                }()
                                                                                            }
                                                                                        )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the UUT must have the right disposition (is it checked somewhere else?!?)", false, ()), __cond_104 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)()))(purpose_7);
                                                                                        __core__ifThenElse(
                                                                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_104),
                                                                                            () -> {
                                                                                                (__lhs_0_227) -> {
                                                                                                    __helios__error("the new delegate is not present in the Capo's named-delegates list")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_226) -> {
                                                                                                    dgtLink_3 = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_226);
                                                                                                    __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_3), mkTn_1(purpose_7)), "uutName mismatch"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_104))))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__70) -> {
                                                                                        __helios__error("unreachable wrong role for CreatingDelegate")
                                                                                    }
                                                                                }
                                                                            )()(__cond_103)))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_62),
                                                                            () -> {
                                                                                (__lhs_0_172) -> {
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for the addingPendingDgt activity:", false, ()), charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new pending-delegate action is found at the head of the new change-list", false, ()), oldPendingChanges = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4);
                                                                                    nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                    nextChangeList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_2);
                                                                                    newChange = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head(nextChangeList);
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support otherManifestChange here"), __lhs_0_173 = __helios__common__assert_constr_index(newChange, 0);
                                                                                    __lhs_0_0_2 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_173);
                                                                                    action = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(__lhs_0_0_2);
                                                                                    role_2 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_2);
                                                                                    OdgtLink = __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(__lhs_0_0_2);
                                                                                    (newDgtRoleName) -> {
                                                                                        __core__chooseUnit(__cond_101 = action;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_101),
                                                                                            () -> {
                                                                                                (__lhs_0_222) -> {
                                                                                                    __core__chooseUnit(__helios__print("   -- another delegate-role check would be redundant."), __cond_102 = myCurrentRole;
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_102),
                                                                                                        () -> {
                                                                                                            (__lhs_0_223) -> {
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that the delegate queued for removal is present in the Capo's charterData", false, ()), __helios__error("implement me"))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__69) -> {
                                                                                                                __helios__error("unreachable")
                                                                                                            }
                                                                                                        }
                                                                                                    )()(__cond_102))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__68) -> {
                                                                                                    __helios__assert(true, "no way l")
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_101), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the change-list should be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail(nextChangeList), oldPendingChanges), "invalid update of pendingChanges; the new action must be prepended to the existing list."), __cond_100 = action;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_100),
                                                                                            () -> {
                                                                                                (__lhs_0_221) -> {
                                                                                                    __helios__error("unreachable")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_100),
                                                                                                    () -> {
                                                                                                        (__lhs_0_220) -> {
                                                                                                            seed_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed(__lhs_0_220);
                                                                                                            purpose_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose(__lhs_0_220);
                                                                                                            idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_220);
                                                                                                            (callback_14) -> {
                                                                                                                callback_14(seed_7, purpose_6, idPrefix_9)
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__lhs_0_219) -> {
                                                                                                            seed_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed(__lhs_0_219);
                                                                                                            purpose_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose(__lhs_0_219);
                                                                                                            idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_219);
                                                                                                            (callback_13) -> {
                                                                                                                callback_13(seed_6, purpose_5, idPrefix_8)
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()(__cond_100)((seed_5, purpose_4, pendingActionIdPrefix) -> {
                                                                                            (possibleMintDgtVerifications) -> {
                                                                                                (otherPossibleVerifications) -> {
                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("TEMPORARY: only one pending change is allowed", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(oldPendingChanges), 0), "only one pending change is allowed for now (avoids resource-exhaustion)"), __helios__bool__and(() -> {
                                                                                                        __helios__bool__and(() -> {
                                                                                                            true
                                                                                                        }, () -> {
                                                                                                            possibleMintDgtVerifications
                                                                                                        })
                                                                                                    }, () -> {
                                                                                                        otherPossibleVerifications
                                                                                                    })))
                                                                                                }(__cond_89 = myCurrentRole;
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_89),
                                                                                                    () -> {
                                                                                                        (__lhs_0_218) -> {
                                                                                                            __helios__error(__helios__string____add(__helios__string____add("this block had been run by spendDgt, but
", "... it's much cheaper to let the MintDgt do it ...
"), "... since it's already involved anyway"))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_89),
                                                                                                            () -> {
                                                                                                                (__lhs_0_192) -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a queued change to duplicate any other pending entry for the same delegate name", false, ()), isNotADuplicate = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4))((pdChange_2) -> {
                                                                                                                        __cond_90 = pdChange_2;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_90),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_193) -> {
                                                                                                                                    __lhs_0_0_3 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_193);
                                                                                                                                    pendingRole = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_3);
                                                                                                                                    __cond_91 = pendingRole;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_91),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_194) -> {
                                                                                                                                                changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_194);
                                                                                                                                                __helios__string____neq(changingDgtName, newDgtRoleName)
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__62) -> {
                                                                                                                                                __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_91)
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__61) -> {
                                                                                                                                    __helios__error("otherManifestChange not yet supported")
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_90)
                                                                                                                    });
                                                                                                                    __core__chooseUnit(__helios__assert(isNotADuplicate, __helios__string____add("already has a pending change for this delegate: ", newDgtRoleName)), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                    (possibleReplacementIsCorrect) -> {
                                                                                                                        __helios__bool__and(() -> {
                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                true
                                                                                                                            }, () -> {
                                                                                                                                isNotADuplicate
                                                                                                                            })
                                                                                                                        }, () -> {
                                                                                                                            possibleReplacementIsCorrect
                                                                                                                        })
                                                                                                                    }(__cond_92 = action;
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_92),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_216) -> {
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow an Add for an existing policy name", false, ()), __core__chooseUnit(__cond_99 = existingRoleEntryMaybe;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_99),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_217) -> {
                                                                                                                                            __helios__error(__helios__string____add("queuing Add failed: already has a delegate for policy name: ", newDgtRoleName))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__67) -> {
                                                                                                                                            ()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_99), true))
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_92),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_197) -> {
                                                                                                                                        replacesDgt = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt(__lhs_0_197);
                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("For Replace on an existing delegate... ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: invariants cannot be replaced", false, ()), __core__chooseUnit(__cond_98 = role_2;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_98),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_215) -> {
                                                                                                                                                    __helios__error("cannot Replace role: MintInvariant")
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_98),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_214) -> {
                                                                                                                                                            __helios__error("cannot Replace role: SpendInvariant")
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_98),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_213) -> {
                                                                                                                                                                    __helios__error("HandledByCapoOnly role is not applicable in delegate context")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__66) -> {
                                                                                                                                                                    __helios__print("  -- ok (not trying to replace an invariant)")
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()
                                                                                                                                            }
                                                                                                                                        )()(__cond_98), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- doesn't allow a Replace if the policy-name doesn't already exist", false, ()), (existingDgtLink_1) -> {
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: the PendingDelegateAction's role + replacesDgt must match the existing delegate's authority token", false, ()), (existingDgTkn) -> {
                                                                                                                                                __core__chooseUnit(__helios__assert(__helios__assetclass____eq(replacesDgt, __helios__option[__helios__assetclass]__unwrap(existingDgTkn)()), __helios__string____add(__helios__string____add(__helios__string____add("the current ", __cond_97 = role_2;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_97),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_212) -> {
                                                                                                                                                            "mint"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_97),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_211) -> {
                                                                                                                                                                    "spend"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_97),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_210) -> {
                                                                                                                                                                            "dgDataPolicy"
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_97),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_209) -> {
                                                                                                                                                                                    "named"
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__65) -> {
                                                                                                                                                                                    "\u2039incontheeiieivable\u203A"
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()(__cond_97)), " delegate's authority token doesn't match the queued action's token name "), __helios__assetclass__show(replacesDgt)())), true)
                                                                                                                                            }(__cond_96 = role_2;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_96),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_208) -> {
                                                                                                                                                        __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_96),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_207) -> {
                                                                                                                                                                __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_96),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_206) -> {
                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: dgDataPolicy: the named policy must be present in the Capo manifest", false, ()), __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1))))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_96),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_205) -> {
                                                                                                                                                                                __helios__error("unreachable: OtherNamedDgt deprecated")
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_96),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_204) -> {
                                                                                                                                                                                        __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_96),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_203) -> {
                                                                                                                                                                                                __helios__error("unreachable")
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_96),
                                                                                                                                                                                                () -> {
                                                                                                                                                                                                    (__lhs_0_202) -> {
                                                                                                                                                                                                        __helios__error("unreachable")
                                                                                                                                                                                                    }
                                                                                                                                                                                                },
                                                                                                                                                                                                () -> {
                                                                                                                                                                                                    (__lhs_0_201) -> {
                                                                                                                                                                                                        __helios__error("unreachable")
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            )()
                                                                                                                                                                                        }
                                                                                                                                                                                    )()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_96)))
                                                                                                                                        }(__cond_94 = existingRoleEntryMaybe;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_94),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_200) -> {
                                                                                                                                                    __helios__error(__helios__string____add("queuing Replace failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_198) -> {
                                                                                                                                                    __lhs_0_0_4 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_198);
                                                                                                                                                    entryType_2 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_4);
                                                                                                                                                    __cond_95 = entryType_2;
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_95),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_199) -> {
                                                                                                                                                                existingDgtLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_199);
                                                                                                                                                                existingDgtLink
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__64) -> {
                                                                                                                                                                __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_95)
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_94))))))
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_195) -> {
                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove if the policy-name doesn't already exist", false, ()), __core__chooseUnit(__cond_93 = existingRoleEntryMaybe;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_93),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_196) -> {
                                                                                                                                                    __helios__error(__helios__string____add("queuing Remove failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__63) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_93), __helios__error("unreachable: Remove not yet supported")))
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }
                                                                                                                    )()(__cond_92))))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__60) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()(__cond_89))
                                                                                            }(__cond_82 = myCurrentRole;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_82),
                                                                                                () -> {
                                                                                                    (__lhs_0_191) -> {
                                                                                                        true
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_82),
                                                                                                        () -> {
                                                                                                            (__lhs_0_175) -> {
                                                                                                                __helios__bool__and(() -> {
                                                                                                                    __module__StellarHeliosHelpers__bREQT("(general) the mintDgt checks everything about the mint", false, ())
                                                                                                                }, () -> {
                                                                                                                    __cond_83 = action;
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_83),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_183) -> {
                                                                                                                                __core__chooseUnit(__cond_88 = role_2;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_88),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_190) -> {
                                                                                                                                            __helios__error("cannot Remove role: MintDgt")
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_88),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_189) -> {
                                                                                                                                                    __helios__error("cannot Remove role: SpendDgt")
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_88),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_188) -> {
                                                                                                                                                            __helios__error("cannot Remove role: MintInvariant")
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_88),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_187) -> {
                                                                                                                                                                    __helios__error("cannot Remove role: SpendInvariant")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_88),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_186) -> {
                                                                                                                                                                            __helios__assert(false, "todo")
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_88),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_185) -> {
                                                                                                                                                                                    __helios__assert(false, "todo")
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_88),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_184) -> {
                                                                                                                                                                                            __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__59) -> {
                                                                                                                                                                                            ()
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                )()
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()(__cond_88), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove to duplicate an Add or Replace or Remove entry", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("^^^"), __core__chooseUnit(__helios__assert(false, "what else should be checked here?"), false))))
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__56) -> {
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    false,
                                                                                                                                    () -> {
                                                                                                                                        __helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't")
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        () -> {
                                                                                                                                            ()
                                                                                                                                        }()
                                                                                                                                    }
                                                                                                                                )(), mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                                dgTknName = mkTokenName_2(purpose_4);
                                                                                                                                mintedDgTkn = __helios__bool__and(() -> {
                                                                                                                                    __module__StellarHeliosHelpers__bREQT("the new delegate is created with the indicated authority token", false, ())
                                                                                                                                }, () -> {
                                                                                                                                    __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_5, __core__mkCons(__helios__string____to_data(purpose_4), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, (), false, (), true, false, false, (), false, ())
                                                                                                                                });
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new policy-token must match the seed", false, ()), (dgtLink_2) -> {
                                                                                                                                    __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2), dgTknName), __helios__string____add(__helios__string____add(__helios__string____add("uutName mismatch; expected ", dgTknName), " but found "), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2))), delegateTakesOwnership = __module__StellarHeliosHelpers__bREQT("the new policy-delegate-script must take ownership of the dgTkn", true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()));
                                                                                                                                    (possibleExtraReplacementCheck) -> {
                                                                                                                                        __helios__bool__and(() -> {
                                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                                mintedDgTkn
                                                                                                                                            }, () -> {
                                                                                                                                                delegateTakesOwnership
                                                                                                                                            })
                                                                                                                                        }, () -> {
                                                                                                                                            possibleExtraReplacementCheck
                                                                                                                                        })
                                                                                                                                    }(__cond_85 = action;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_85),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_178) -> {
                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Replace: the queued change must match the idPrefix of the current delegate ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VALIDATE this through a unit-test ^"), __core__chooseUnit(__cond_86 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_86),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_180) -> {
                                                                                                                                                            dde = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_180);
                                                                                                                                                            __lhs_0_181 = dde;
                                                                                                                                                            entryType_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_181);
                                                                                                                                                            __cond_87 = entryType_1;
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_87),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_182) -> {
                                                                                                                                                                        idPrefix_7 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_182);
                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("expects the queued idPrefix to match the existing policy's idPrefix", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("   -- expected: ", idPrefix_7)), __core__chooseUnit(__helios__print(__helios__string____add("   --   actual: ", pendingActionIdPrefix)), __helios__assert(__helios__string____eq(idPrefix_7, pendingActionIdPrefix), "idPrefix mismatch"))))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__58) -> {
                                                                                                                                                                        __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_87)
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_179) -> {
                                                                                                                                                            __helios__error(__helios__string____add("no existing dgDataPolicy found with key: ", newDgtRoleName))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_86), true)))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__57) -> {
                                                                                                                                                true
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_85)))
                                                                                                                                }(__cond_84 = OdgtLink;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_84),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_177) -> {
                                                                                                                                            __helios__error("missing required delegate link in pending dgt change")
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_176) -> {
                                                                                                                                            dl = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_176);
                                                                                                                                            dl
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_84))))
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(__cond_83)
                                                                                                                })
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__55) -> {
                                                                                                                __helios__error("unreachable")
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(__cond_82))
                                                                                        }))))
                                                                                    }(__cond_81 = role_2;
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_81),
                                                                                        () -> {
                                                                                            (__lhs_0_174) -> {
                                                                                                dgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_174);
                                                                                                dgtName
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__54) -> {
                                                                                                __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                            }
                                                                                        }
                                                                                    )()(__cond_81)))))
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_62),
                                                                                    () -> {
                                                                                        (__lhs_0_171) -> {
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement removePendDgt"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("allows the removal of a queued pending-delegate-change that can't be completed", false, ()), __core__chooseUnit(__helios__assert(false, "not yet implemented"), false)))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_62),
                                                                                            () -> {
                                                                                                (__lhs_0_148) -> {
                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... To commit pending changes:", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariants cannot be replaced", false, ()), pendingChangesList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                    previousManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                    nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                    nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData_1);
                                                                                                    __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                                        __module__StellarHeliosHelpers__bREQT("the next-changes list must be empty", false, ())
                                                                                                    }, () -> {
                                                                                                        __helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_1)), 0)
                                                                                                    }), "pendingChanges must be emptied"), spendDgtCheck = __core__ifThenElse(
                                                                                                        __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                                        () -> {
                                                                                                            true
                                                                                                        },
                                                                                                        () -> {
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                    () -> {
                                                                                                                        true
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        () -> {
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...spendDgt: validates that all the pending delegates are installed", false, ()), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]](pendingChangesList)((prevManifestRemainder_1, nextCMEs, pcChange) -> {
                                                                                                                                (pdChange) -> {
                                                                                                                                    (pendingTypeName) -> {
                                                                                                                                        __core__chooseUnit(__cond_70 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_70),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_157) -> {
                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Remove: verifies that the delegate queued for removal is now removed from the Capo manifest", false, ()), __cond_73 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(nextCMEs)(pendingTypeName);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_73),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_158) -> {
                                                                                                                                                                __helios__error(__helios__string____add("queued Remove failed: name still present in next-manifest item: ", pendingTypeName))
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__50) -> {
                                                                                                                                                                ()
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_73))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__47) -> {
                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- verifies that added & replaced entries are present in the updated map (at its next position)", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                        __helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(nextCMEs), 0),
                                                                                                                                                        () -> {
                                                                                                                                                            __helios__error("queued Add/Replace failed: no more items in next-manifest map")
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            () -> {
                                                                                                                                                                ()
                                                                                                                                                            }()
                                                                                                                                                        }
                                                                                                                                                    )(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head(nextCMEs)((CME_key, __lhs_1) -> {
                                                                                                                                                        ME_type = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_1);
                                                                                                                                                        __core__chooseUnit(__helios__print(__helios__string____add("vv @CME entry: ", CME_key)), __lhs_0_153 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                        ME_policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_153);
                                                                                                                                                        ME_idPrefix = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_153);
                                                                                                                                                        refCount = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_153);
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support minting multiple threads of a dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__int____eq(refCount, 1), "refCount must be 1 when adding a new dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__string____eq(pendingTypeName, CME_key), "queued change: name mismatch with next-manifest item"), ME_name = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(ME_policyLink))();
                                                                                                                                                        __core__chooseUnit(__helios__print(__helios__string____add("    -- ME policy link ", ME_name)), pendingLink = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange))();
                                                                                                                                                        pendingName = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(pendingLink))();
                                                                                                                                                        __core__chooseUnit(__helios__print(__helios__string____add("    -- pdChange policy link ", pendingName)), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(ME_policyLink, pendingLink), "queued change: policyLink mismatch with next-manifest item"), (nextIdPrefix) -> {
                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- @each manifest entry: next-manifest's idPrefix must match the queued change", false, ()), __helios__assert(__helios__string____eq(nextIdPrefix, ME_idPrefix), "idPrefix mismatch with next-manifest's dgDataPolicy"))
                                                                                                                                                        }(__cond_71 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_71),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_155) -> {
                                                                                                                                                                    idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_155);
                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- Replace: verifies that the next-manifest no longer has the replaced entry", false, ()), __core__chooseUnit(__cond_72 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))(pendingTypeName);
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_72),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_156) -> {
                                                                                                                                                                                __helios__error(__helios__string____add("queued Replace failed: duplicate name remaining in next-manifest map: ", pendingTypeName))
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__49) -> {
                                                                                                                                                                                ()
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    )()(__cond_72), idPrefix_6))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_71),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_154) -> {
                                                                                                                                                                            idPrefix_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_154);
                                                                                                                                                                            idPrefix_5
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__48) -> {
                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_71)))))))))
                                                                                                                                                    })))
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_70), __cond_69 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_69),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_152) -> {
                                                                                                                                                    (callback_12) -> {
                                                                                                                                                        callback_12(prevManifestRemainder_1, __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__46) -> {
                                                                                                                                                    (callback_11) -> {
                                                                                                                                                        callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(prevManifestRemainder_1)(pendingTypeName), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_69))
                                                                                                                                    }(__cond_68 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_68),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_151) -> {
                                                                                                                                                typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_151);
                                                                                                                                                __core__chooseUnit(__helios__print("  -- ok: DgDataPolicy in commitPendingChanges"), typeName_4)
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__45) -> {
                                                                                                                                                __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_68))
                                                                                                                                }(__cond_67 = pcChange;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_67),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_150) -> {
                                                                                                                                            dgtChange = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_150);
                                                                                                                                            dgtChange
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_149) -> {
                                                                                                                                            __helios__error("otherManifestChange not yet supported")
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_67))
                                                                                                                            }, previousManifest, nextManifest)((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(nextManifestRemainder, prevManifestRemainder)
                                                                                                                            }))
                                                                                                                        }()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }()
                                                                                                        }
                                                                                                    )();
                                                                                                    mintDgtCheck = __core__ifThenElse(
                                                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                                        () -> {
                                                                                                            true
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                () -> {
                                                                                                                    true
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    () -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... mintDgt: validates that all the removed dgTkns are burned", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the txn must have all the expected burns", false, ()), mint = __helios__value__to_map(__helios__tx__minted(__helios__scriptcontext__tx))();
                                                                                                                        mintThisPolicy = __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe(mint)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1));
                                                                                                                        len = __helios__int____sub(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(mint), 1);
                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                            __helios__int____gt(len, 1),
                                                                                                                            () -> {
                                                                                                                                __core__chooseUnit(__helios__print(__helios__value__show(__helios__tx__minted(__helios__scriptcontext__tx))(false, ())), __helios__error(__helios__string____add("currently supporting only one minting policy being burned in the tx ", __helios__int__show(len)())))
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                () -> {
                                                                                                                                    ()
                                                                                                                                }()
                                                                                                                            }
                                                                                                                        )(), (observedTokenBurn) -> {
                                                                                                                            remainingMint = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]](pendingChangesList)((foldingBurn, pcChange_1) -> {
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS the spendDgt to check details of Replace activities", false, ()), (pdChange_1) -> {
                                                                                                                                    __cond_76 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange_1);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_76),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_163) -> {
                                                                                                                                                typeName_5 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_163);
                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ok: DgDataPolicy in commitPendingChanges: ", typeName_5)), __cond_77 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_77),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_170) -> {
                                                                                                                                                            foldingBurn
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__52) -> {
                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that a delegate queued for removal or replacement is burned", false, ()), __cond_78 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest)(typeName_5);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_78),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_169) -> {
                                                                                                                                                                        __helios__error(__helios__string____add("queued Remove failed: not present in previous-manifest map: ", typeName_5))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_164) -> {
                                                                                                                                                                        __lhs_0_0_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_164);
                                                                                                                                                                        ME_type_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_1);
                                                                                                                                                                        tn_5 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0_1);
                                                                                                                                                                        mph_29 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0_1);
                                                                                                                                                                        __cond_79 = mph_29;
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __helios__option[__helios__mintingpolicyhash]__some____is(__cond_79),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_168) -> {
                                                                                                                                                                                    __core__chooseUnit(__helios__print("    -- TODO: manifest entry with other-mph: allow optional burn"), foldingBurn)
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__53) -> {
                                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("each pending change must have a name recognized by the manifest", false, ()), __lhs_0_165 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                                                    refCount_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_165);
                                                                                                                                                                                    tnStr_2 = __helios__bytearray__decode_utf8_safe(tn_5)();
                                                                                                                                                                                    __cond_80 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn)(tn_5);
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __helios__option[__helios__int]__none____is(__cond_80),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_167) -> {
                                                                                                                                                                                                __helios__error(__helios__string____add("queued Remove/Replace failed: no burn, or double-burn: ", tnStr_2))
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_166) -> {
                                                                                                                                                                                                burningCount = __helios__option[__helios__int]__some__some(__lhs_0_166);
                                                                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    -- ok: BURN \u{1F525}", __helios__int__show(burningCount)()), "\xD7\u{1F4B4} "), tnStr_2)), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                                    __helios__int____neq(__helios__int____sub(0, refCount_1), burningCount),
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("queued Remove/Replace failed: expected burn of ", __helios__int__show(refCount_1)()), "\xD7\u{1F4B4} "), tnStr_2))
                                                                                                                                                                                                    },
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            ()
                                                                                                                                                                                                        }()
                                                                                                                                                                                                    }
                                                                                                                                                                                                )(), __helios__map[__helios__bytearray@__helios__int]__delete(foldingBurn)(tn_5)))
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()(__cond_80))
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()(__cond_79)
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_78))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_77))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__51) -> {
                                                                                                                                                __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_76)
                                                                                                                                }(__cond_75 = pcChange_1;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_75),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_162) -> {
                                                                                                                                            dgtChange_1 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_162);
                                                                                                                                            dgtChange_1
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_161) -> {
                                                                                                                                            __helios__error("otherManifestChange not yet supported")
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_75)))
                                                                                                                            }, observedTokenBurn);
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires all the burns of our policy-id to be accounted for", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(remainingMint), 0), __helios__string____add("extra burns found in the transaction: 
", __helios__map[__helios__bytearray@__helios__int]__show(remainingMint)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... -- end of commitPendingChanges", false, ()), true)))
                                                                                                                        }(__cond_74 = mintThisPolicy;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is(__cond_74),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_160) -> {
                                                                                                                                    minted = __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some(__lhs_0_160);
                                                                                                                                    minted
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_159) -> {
                                                                                                                                    __core__mkNilPairData(())
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_74)))))
                                                                                                                    }()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )();
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __helios__bool__and(() -> {
                                                                                                            __helios__bool____not(__module__BasicDelegate__isMintDelegate)
                                                                                                        }, () -> {
                                                                                                            __helios__bool____not(__module__BasicDelegate__isSpendDelegate)
                                                                                                        }),
                                                                                                        () -> {
                                                                                                            __helios__error("unreachable? not mintDgt or spendDgt")
                                                                                                        },
                                                                                                        () -> {
                                                                                                            () -> {
                                                                                                                ()
                                                                                                            }()
                                                                                                        }
                                                                                                    )(), __helios__bool__and(() -> {
                                                                                                        mintDgtCheck
                                                                                                    }, () -> {
                                                                                                        spendDgtCheck
                                                                                                    })))))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_62),
                                                                                                    () -> {
                                                                                                        (__lhs_0_139) -> {
                                                                                                            manifestActivity = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity(__lhs_0_139);
                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow updating anything except the manifest", false, ()), __core__chooseUnit(__cond_63 = manifestActivity;
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is(__cond_63),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_147) -> {
                                                                                                                        __core__chooseUnit(__helios__assert(false, "TODO: support retirement activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't remove a dgDataPolicy entry from the manifest (use queuePendingChange instead)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("removes the indicated key from the manifest", false, ()), __module__StellarHeliosHelpers__REQT("delegates MUST be allowed to validate that this doesn't drop something they need", false, ()))))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is(__cond_63),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_146) -> {
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("if delegates need a hook to validate that the updte is acceptable, that might be enforced here"), __core__chooseUnit(__helios__assert(false, "TODO: support updatingEntry activity"), __module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ())))
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is(__cond_63),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_141) -> {
                                                                                                                                        key_31 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key(__lhs_0_141);
                                                                                                                                        tokenName_5 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName(__lhs_0_141);
                                                                                                                                        charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                                                                        nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), refInput = __module__CapoHelpers__CapoCtx[]__delegatedDataRef(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_4)(false, (), true, tokenName_5);
                                                                                                                                        __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__txinput____eq(refInput, refInput))(__helios__string____add(__helios__string____add("  -- found refInput: ", __helios__bytearray__decode_utf8_safe(tokenName_5)()), "?")), "refInput must be found"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry MUST be found in the new manifest", false, ()), __core__chooseUnit(__cond_64 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_64),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_145) -> {
                                                                                                                                                    __helios__error(__helios__string____add("the new manifest entry is missing: ", key_31))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_142) -> {
                                                                                                                                                    __lhs_0_0 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_142);
                                                                                                                                                    entryType = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0);
                                                                                                                                                    tn_4 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0);
                                                                                                                                                    mph_28 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0);
                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("   -- ok, found the manifest entry for ", key_31)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry must have the right token-name", false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(tn_4, tokenName_5), "token-name mismatch"), __core__chooseUnit(__cond_66 = mph_28;
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __helios__option[__helios__mintingpolicyhash]__some____is(__cond_66),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_144) -> {
                                                                                                                                                                __helios__error("other-mph not yet supported")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__44) -> {
                                                                                                                                                                ()
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_66), __cond_65 = entryType;
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is(__cond_65),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_143) -> {
                                                                                                                                                                __helios__print("   -- ok: matching name, with NamedTokenRef added in updatingManifest")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__43) -> {
                                                                                                                                                                __helios__error("addingEntry: the new manifest entry must be a NamedTokenRef for now")
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_65)))))
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_64), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the manifest must be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_3), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31)), "manifest modified in an unexpected way"), __helios__print("  -- ok! new manifest as expected")))))))
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is(__cond_63),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_140) -> {
                                                                                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__assert(false, "TODO: support forkingThreadToken activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates that another copy of the token name is minted", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("when the key is a DgDataPolicy, the existing manifest entry is updated", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("for mint/spend delegates and otherNamedDelegates, a new manifest entry is created with refCount=1+newThreadCount, if it doesn't exist", false, ()), __module__StellarHeliosHelpers__REQT("when the manifest already has the entry, the refCount is incremented by newThreadCount", false, ())))))))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__42) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()(__cond_63), true))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_62),
                                                                                                            () -> {
                                                                                                                (__lhs_0_138) -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the minter is instructed to force a new delegate"))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__lhs_0_137) -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the spender is instructed to force a new delegate"))
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(__cond_62)
                                                            }, () -> {
                                                                __core__ifThenElse(
                                                                    true,
                                                                    () -> {
                                                                        __core__chooseUnit(__helios__print("BasicDelegate harness deferring to specialization for CapoLifecycleActivities
"), true)
                                                                    },
                                                                    () -> {
                                                                        () -> {
                                                                            false
                                                                        }()
                                                                    }
                                                                )()
                                                            })
                                                        }(__cond_61 = neededRole;
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_61),
                                                            () -> {
                                                                (__lhs_0_136) -> {
                                                                    __helios__error("delegate invoked with invalid escape-hatch activity (always handled directly by the Capo)")
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_61),
                                                                    () -> {
                                                                        (__lhs_0_135) -> {
                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on spend delegate", true, __module__BasicDelegate__isSpendDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: spendDgt checking CapoLifecycleActivity"), neededRole)))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_61),
                                                                            () -> {
                                                                                (__lhs_0_134) -> {
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on mint delegate", true, __module__BasicDelegate__isMintDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: mintDgt checking CapoLifecycleActivity"), neededRole)))
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_61),
                                                                                    () -> {
                                                                                        (__lhs_0_133) -> {
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It EXPECTS the Capo to enforce the presence of the mintDgt (to check the right mint) and spendDgt (to validate the charter-update logic)", false, ()), __core__ifThenElse(
                                                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                () -> {
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                        () -> {
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            () -> {
                                                                                                                __helios__error(__helios__string____add("this Capo lifecycle activity is only valid on mint/spend delegate, not ", __module__BasicDelegate__delegateName))
                                                                                                            }()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )())
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__41) -> {
                                                                                            __helios__error("no way k")
                                                                                        }
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()(__cond_61)))))
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_60),
                                                        () -> {
                                                            (__lhs_0_131) -> {
                                                                seed_4 = __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__seed(__lhs_0_131);
                                                                dDataTypeName_1 = __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_131);
                                                                __core__ifThenElse(
                                                                    __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                    () -> {
                                                                        __helios__error("CreatingDelegatedData activity is only allowed in the mint delegate")
                                                                    },
                                                                    () -> {
                                                                        () -> {
                                                                            cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_3)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("context: CreatingDelegatedData", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- ensures the data-controller is invoked with its minting activity for the indicated recId", false, ()), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_3)(dDataTypeName_1, false, ());
                                                                            tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);
                                                                            purpose_3 = __helios__option[__helios__string]__unwrap(__module__CapoHelpers__DelegateInput[]__idPrefix(policyDelegateInput))();
                                                                            newDataId_1 = __helios__string__encode_utf8(tnFactory(purpose_3))();
                                                                            __helios__bool__and(() -> {
                                                                                __helios__bool__and(() -> {
                                                                                    __helios__bool__and(() -> {
                                                                                        __helios__bool__and(() -> {
                                                                                            __helios__bool__and(() -> {
                                                                                                true
                                                                                            }, () -> {
                                                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_4, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())
                                                                                            })
                                                                                        }, () -> {
                                                                                            __module__StellarHeliosHelpers__bREQT("it outputs the new delegated-data record to the Capo address", false, ())
                                                                                        })
                                                                                    }, () -> {
                                                                                        __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_3)(newDataId_1, dDataTypeName_1)
                                                                                    })
                                                                                }, () -> {
                                                                                    __module__StellarHeliosHelpers__bREQT("ensures the data-controller is invoked with ONE minting activity for the indicated recId", false, ())
                                                                                })
                                                                            }, () -> {
                                                                                __module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(policyDelegateInput)(seed_4))()
                                                                            }))))
                                                                        }()
                                                                    }
                                                                )()
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_60),
                                                                () -> {
                                                                    (__lhs_0_130) -> {
                                                                        dDataTypeName = __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_130);
                                                                        recId_8 = __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__recId(__lhs_0_130);
                                                                        __core__ifThenElse(
                                                                            __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                            () -> {
                                                                                __helios__error("UpdatingDelegatedData activity is only allowed in the spend delegate")
                                                                            },
                                                                            () -> {
                                                                                () -> {
                                                                                    cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                                                                    __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedData activity", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("implements a generic data-controller re-delegation convention based on the capo's manifest (those with type= DgDataPolicy)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the data-controller is invoked with ONE spending activity for the indicated recId", false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_2)(dDataTypeName, false, ()))(recId_8))(), "^^^ those can fail, this assert won't."), inputDD = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_2)(false, (), true, recId_8);
                                                                                    __core__chooseUnit(__helios__assert(__helios__txinput____eq(inputDD, inputDD), "no way m"), __core__chooseUnit(__core__ifThenElse(
                                                                                        __helios__string____eq("settings", dDataTypeName),
                                                                                        () -> {
                                                                                            curSettingsId = __helios__option[__helios__bytearray]__unwrap(__module__CapoHelpers__CapoCtx[]__getSettingsId(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(true, true))();
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO(__helios__string____add("when updating the current Capo settings, the delegates must all ", "have a chance to ensure the settings are valid for their needs")), __core__ifThenElse(
                                                                                                false,
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__bytearray____eq(curSettingsId, recId_8),
                                                                                                        () -> {
                                                                                                            __core__chooseUnit(__helios__print(" -> "), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings(cctx_2)(), "no way jose"), __helios__print(" <- ")))
                                                                                                        },
                                                                                                        () -> {
                                                                                                            () -> {
                                                                                                                recIdStr_4 = __helios__bytearray__decode_utf8_safe(recId_8)();
                                                                                                                curSettingsIdStr = __helios__bytearray__decode_utf8_safe(curSettingsId)();
                                                                                                                __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  -- NOTE: updating ", recIdStr_4), ", which isn't currentSettings="), curSettingsIdStr))
                                                                                                            }()
                                                                                                        }
                                                                                                    )()
                                                                                                },
                                                                                                () -> {
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    }()
                                                                                                }
                                                                                            )())
                                                                                        },
                                                                                        () -> {
                                                                                            () -> {
                                                                                                ()
                                                                                            }()
                                                                                        }
                                                                                    )(), __helios__bool__and(() -> {
                                                                                        __helios__bool__trace(__module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_2)(recId_8, dDataTypeName))("  -- did output delegated data? ")
                                                                                    }, () -> {
                                                                                        true
                                                                                    }))))))))
                                                                                }()
                                                                            }
                                                                        )()
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_60),
                                                                        () -> {
                                                                            (__lhs_0_128) -> {
                                                                                recId_7 = __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__recId(__lhs_0_128);
                                                                                __core__ifThenElse(
                                                                                    __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                    () -> {
                                                                                        __helios__error("DeletingDelegatedData activity is only allowed in the mint delegate")
                                                                                    },
                                                                                    () -> {
                                                                                        () -> {
                                                                                            cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                                                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_1)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("this code is triggered by both the mintDgt and spendDgt, with each doing their parts of the job", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the spendDgt allows the spending of the utxo", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the mintDgt requires the burning of its UUT", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must not delete a record that's still referenced by the Capo manifest", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a matching manifest entry has to be changed or removed prior to deletion", false, ()), __lhs_0_129 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_1)(false, (), true, recId_7);
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("verify the input was found ^"), __core__chooseUnit(__helios__assert(false, "Delete not supported yet"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement the generic data-controller re-delegation convention here"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("ensure that the right delegate is consulted with its BurningActivities.*"), false))))))))))
                                                                                        }()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities____is(__cond_60),
                                                                                () -> {
                                                                                    (__lhs_0_127) -> {
                                                                                        true
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__ReqtsPolicy__DelegateActivity[]__MintingActivities____is(__cond_60),
                                                                                        () -> {
                                                                                            (__lhs_0_126) -> {
                                                                                                true
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__lhs_0_125) -> {
                                                                                                true
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()(__cond_60))
                        },
                        () -> {
                            () -> {
                                false
                            }()
                        }
                    )()
                },
                () -> {
                    () -> {
                        false
                    }()
                }
            )();
            result_2)
        }
    };
    __module__BasicDelegate__main = (mdd, activity_4) -> {
        __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(" \u{1F6A5}\u2753delegate: ", __module__BasicDelegate__delegateName), "
")), (result_3) -> {
            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("\u{1F6A5}\u{1F7E2} delegate: ", __module__BasicDelegate__delegateName), ": ok!
")), result_3)
        }(__cond_112 = mdd;
        __core__ifThenElse(
            __module__ReqtsData__DelegateDatum[]__capoStoredData____is(__cond_112),
            () -> {
                (__lhs_0_261) -> {
                    __helios__error("Data Delegates must never store the capoStoredData variant in the script; used only for data-structuring capo-stored utxo datum")
                }
            },
            () -> {
                __core__ifThenElse(
                    __module__ReqtsData__DelegateDatum[]__IsDelegation____is(__cond_112),
                    () -> {
                        (isD) -> {
                            dd_2 = __module__ReqtsData__DelegateDatum[]__IsDelegation__dd(isD);
                            __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __helios__int__serialize(__module__BasicDelegate__rev)()), "param/script-hash uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __module__BasicDelegate__instance), "param/script-hash uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __helios__string__encode_utf8(__module__BasicDelegate__delegateName)()), "param/script-hash uniqueness"), myDgTkn = __helios__value__show(__helios__txinput__value(__helios__scriptcontext__get_current_input()))(false, ());
                            __core__chooseUnit(__helios__print(__helios__string____add("  -- is spending dgTkn ", myDgTkn)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... final checks:", false, ()), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_2)))();
                            govAuthorityCheck = __core__ifThenElse(
                                __helios__bool____not(__module__BasicDelegate__isDgDataPolicy),
                                () -> {
                                    true
                                },
                                () -> {
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__requiresGovAuthority),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                () -> {
                                                    __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_7)())()
                                                }()
                                            }
                                        )()
                                    }()
                                }
                            )();
                            __helios__bool__and(() -> {
                                govAuthorityCheck
                            }, () -> {
                                __module__BasicDelegate__checkOneActivity_1(__module__BasicDelegate__checkOneActivity_1)(isD, activity_4, true, dd_2, true, cctx_7)
                            }))))))
                        }
                    },
                    () -> {
                        (__76) -> {
                            kaboomInvalidRedeemer = () -> {
                                __helios__error("wrong Actvy/dtm")
                            };
                            __cond_113 = activity_4;
                            __core__ifThenElse(
                                __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_113),
                                () -> {
                                    (__lhs_0_260) -> {
                                        kaboomInvalidRedeemer()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_113),
                                        () -> {
                                            (__lhs_0_259) -> {
                                                kaboomInvalidRedeemer()
                                            }
                                        },
                                        () -> {
                                            (__77) -> {
                                                __module__ReqtsPolicy__DelegateActivity[]__otherDatumValidation(activity_4)(mdd)
                                            }
                                        }
                                    )()
                                }
                            )()(__cond_113)
                        }
                    }
                )()
            }
        )()(__cond_112)))
    };
    __core__ifThenElse(
        __module__BasicDelegate__main(__module__ReqtsData__DelegateDatum[]__from_data(__module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data_2)(__DATUM), __module__ReqtsPolicy__DelegateActivity[]__from_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(__REDEEMER)),
        () -> {
            ()
        },
        () -> {
            __helios__error("validation returned false")
        }
    )()
}`, "optimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/CapoMintHelpers.hl", "src/delegation/BasicDelegate.hl", "src/reqts/ReqtsPolicy.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f186d001905850c1879011901450a188502190593041886021905930419013c0219057e182d19013e001907f808190256001907f8081902ec0019069e081902f0001906a0081903db001907f80819057e0319012518231905800319012618181905870319012a18291905af03190138181c19060d03190130183919071b0319012618381908bc0219016e1829190b0a021902301846190b270219022d183b1911510219024118561912ed001905b1181f19140f00190535182c19145500190548182d1914b6021901e718251914cb021901e718251914e0021901e718251914f5021901e7182519150a021901e7182519151f021901e71825191527021901e71825191668011901a104191688011901b11824191689011901b11824191733011901db1820191791011901ec18411917d6011901f21841191803011901db184219185801190144183d19185901190144183d19185a01190144183d19185b01190144183d19186e01190144183d19186f01190144183d19187001190144183d19187101190144183d1918c10119019a0d1918e9041832181a191904011901710c191905011901810c19190d001901b502191998001901bc13191abb0119011104191abf0119011804191ac10119011a04191acd0119013108191ace0119012d12191ad60119012a1822191af80119012513191aff01190118181a191b330019073b0f191b480019073b0f191b9b001907461818191b9d001901931830191c130019073b0f191c2e0019070f0f191c430019070f0f191d0400190719183e191d0b0019070f0f191d27001906e80f191d3c001906e80f191e02001906f5183e191e09001906e80f191f5e0019057b1836ff", "variableNames": "", "termDescriptions": "b31902ec6872656349645374721902f0686361706f4164647219058065686173444419168862746e19168962746e191858626b32191859626b3219185a626b3219185b626b3219186e626b3219186f626b32191870626b32191871626b321918c167707572706f736519190d7067657454784368617274657244617461191abb6773656564496478191abf6772617754784964191ac16774786f496e666f191b9d71676574526566436861727465725574786f" }, "unoptimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/CapoMintHelpers.hl", "src/delegation/BasicDelegate.hl", "src/reqts/ReqtsPolicy.hl", "src/reqts/ReqtsData.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f19041b00190195183b19043b001901ee1619046f001905090819047f0019056c0c190483001905850c1904bf011901450a190599021905930419059a02190593041905c60219055e021905c70219055e021905ca0219055f182e1905cb0219055f182e1905cc0219055f091905cd0219055f041905ce0219055f18271905d00219055f18271905d10219055f18191905d30219055f18191905d40219055f0a1905e1021905910a1905e40219059118291905e502190591181a1906780219057d101906860219057e18361906880219057e182d1907f00219014d185719080b0219014e185619082f0219015118451908d80219012418451909970218f918451909b2021901001845190ab00219016e1829190af7021901921828190c2b0219021f1824190c2c0219021f1824190c56021902301846190c6e0219022d183b190d9a02190359183f191256021902ae18311912e802190241185619137b0219043b181c1913e3021903f4187319140a02190435183f19148302190410185c1914dc0219041e187c1914e20219041f1850191583021903f11826191589021903f018351915910219037918201915ae0219037918291915af02190379183d19161a021903ab1834191627021903ab184b1917e902190446182b1918220219044d182b1918660219045718611918a202190460185d1918a302190460185d1919000219045d18461919010219045d184619191d0219046d186319192a02190454183319195e02190473182f19196902190474182b191a1d021901f11827191a4d021901fa1827191a7c021902021824191a7d021902021837191a8f02190204182b191a9002190204183f191aa9021901e71825191aea0219049c181f191b47021904c61833191b5b021904cb181b191b66021904d01837191b89021904a0182e191ba5021904e21835191bc6021904e6181f191bf1021904ee1835191c03021904ec1820191c1b021904fd14191c340219050f1818191c780219051a1830191c8a021904fe182c191c8b021904fe183a191c9e021905211818191c9f021905211831191cac021904f3182c191cc7021905261832191ce80219052a181f191d3302190536181b191d4c02190532182d191d7e0218c318241920270318e2182e19209a0319011918331920b10318ea182d1920ef03190120182a19210f0319012518231921110319012618181921180319012a182919214503190138181c1921810319013018391921a303190128183f1921ad0319012618381921ae03190126185119274e0318720019293a04185c001929e004185600192c1104182500192c710418201854192c7a040c00192e3801190169181e192e44011901a104192e8b011901b11824192e8c011901b11824192e8e011901b208192e9f011901b31827192f4e011901db1820192fca011901ec1841192ffa011901f4184c193004011901f21841193019011901db184219304a011901990819304e0119019a0d193072011901710c193073011901810c1930830119017b181e19324901190144183d19324a01190144183d19324b01190144183d19324c01190144183d19324f011901441857193256011901110419325a011901180419325c0119011a0419326a011901310819326b0119012d121932730119012a182219329d011901250919329f01190125131932a401190118181a1932aa0119011418221932bf011840041933070118620c19336601186d171933700118631419338c01185d0519339901185a131933bc01184d182e1933e1011847061933f0011846181919345201181d181919345301181d1819193487011826161934ac001907f8081934b1001907d0182c193560001907d310193572001907600c1935ff001907ba17193600001907ba17193601001907ba1719362b001907a41834193664001907a6181f1936700019078e183b1936ac001907870d19377d0019074618181937860019073b0f1938030019071d184619381800190719183e1938210019070f0f1938a9001906f818331938be001906f5183e1938c7001906e80f1938ce0019069e081938d2001906a0081938f7001906b0183219394c0019067a18321939ba0019068818371939d400190690101939e30019067a1833193a82001905d817193a83001905d8182d193b19001905c608193b2e001905ca10193b3b001905cd10193b55001905c11824193b7c001905b1181f193b80001905af182b193b81001905af182b193b9e001905b6182a193bb3001905b11820193bdd001905a208193c830019057a1830193c8f0019057b1836193c990019057b181b193cf50019055309193cf6001905500e193d0400190548182d193d3b0019054009193d3c0019053d0e193d4a00190535182c193d7e0019051d1869193dcb0019052212193dcc0019052212193dd400190526184d193e4100190500183d193e4b0019050709193e5e0019050414193e770019049f1823193e8b001904950a193ea100190497184c193ef200190487183f193ffc001903041834194001001903050819400800190322182719400a001903220f19401100190323182e19401c00190323131940390019030e1119404700190309182719405d00190313184719406c0019031718321940970019031d182d1940dd0019028818781940e1001902900c1940e80019028a18261940ed0019028a181e1940f30019028c181b1940fc0019028d18411941070019028e185519413700190294183819413800190294182419415100190297184319415c00190298184d1941a0001902a3183d1941aa001902a418521941ad001902a4182e1941be001902d418621941ca001902d8111941d0001902d6182d1941d6001902d6151941e4001902d918511941f0001902dd111941f6001902db182d1941fc001902db15194220001902ab181d194238001902b1181d194250001902b9181d19427c001902c1184419427d001902c11830194296001902c418501942a1001902c5185c1942b0001902c618441942b4001902c618331942b8001902c7182e1942cd001902cb18571942fc001902e1183119430b001902900819431200190250182f19431300190250182f19431700190253185d19437300190264184c19437400190264182919437d001902651019438500190274185b1943910019027518601943940019027518351943a30019027618501943af0019027718681943b20019027718351943eb0019026a18441943ec0019026a18301943f20019026b184f1944350019027c1830194491001902171856194492001902170e1944a900190219184f1944b80019021a184f1944ca0019021a18321944cd0019021a183f1944ce0019021a183f1944d00019021f131944e10019020d18561944e20019020d0e194545001901f3185319454d001901f3184b19454f001901f3184519457f001901ff081946ee001901b5021946f5001901c504194736001901bc1819194738001901bc1319476300190193183019476f0019019e051959db0519013b091959dc0519013b09195a1205190152183d195a1d051901551819195a20051901551837195a3105190151181d195a430519015b15195a440519015b1836195a470519015b1837195a760519014010195b8705190114181d195c9e0518c304195cba0518bc04195deb0518b10819612a051895081961ae0518920819623505188f081963f50518810819670e051866081967140518650819684405185e0819684a05185808196850051857081968560518560819699e05184f081969a405184e081969aa05184d08196bf805183f08196bfe05183e08196f7205182c081972c1051820081972c705181f081975600618320419756106183204197562061832041975630618320419756406183204197565061832041975660618320419759a061832181aff", "variableNames": "", "termDescriptions": "b82e1905c6646d61696e1905c7646d61696e192111656861734444192e8b62746e192e8c62746e192e8e65746e53747219304e67707572706f7365193249626b3219324a626b3219324b626b3219324c626b3219324f781b736f7274506f6c69637956616c7565735072656469637461626c79193256677365656449647819325a677261775478496419325c6774786f496e666f1932bf67617574687a416319330768616374697669747919345268736565645574786f19345368736565645574786f1934b16861637469766974791935ff636b6579193600636b6579193601636b65791938ce6872656349645374721938d2686361706f41646472193b80683c61737369676e3e193b81683c61737369676e3e193bdd6461646472193dcb676467744c696e6b193dcc676467744c696e6b1940017172657475726e6564556e6368616e6765641943126473656564194313647365656419437d71666f756e645769746854686973536565641946ee706765745478436861727465724461746119476371676574526566436861727465725574786f19476f683c61737369676e3e1959db683c61737369676e3e1959dc683c61737369676e3e19756067746e427974657319756167746e427974657319756267746e427974657319756367746e427974657319756467746e427974657319756567746e427974657319756667746e4279746573" } },
      scriptHash: "58cf425d255429bd87abf49da56618b24bd54eba8822cdece91e5395",
      config: { "rev": "1", "delegateName": "ReqtsPolicy", "isMintDelegate": false, "isSpendDelegate": false, "isDgDataPolicy": true, "requiresGovAuthority": true }
    }
  };
  specializedDelegateModule = ReqtsPolicy_hl;
  requiresGovAuthority = true;
}

export { ReqtsConcreteBundle as default };
//# sourceMappingURL=Reqts.concrete.hlb.mjs.map
