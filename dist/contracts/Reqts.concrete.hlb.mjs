import '@helios-lang/compiler-utils';
import { C as CapoHeliosBundle } from '../CapoHeliosBundle2.mjs';
import '../HeliosBundle.mjs';
import '../BasicDelegate.mjs';
import { R as ReqtsPolicy_hl, a as ReqtsData_hl } from '../ReqtsData.mjs';
import { DelegatedDataBundle } from '../DelegatedDataBundle.mjs';
import '../DefaultCapo.mjs';
import '@helios-lang/ledger';
import '@helios-lang/uplc';
import '@donecollectively/stellar-contracts/HeliosProgramWithCacheAPI';
import '@helios-lang/compiler';
import '@helios-lang/codec-utils';
import '@helios-lang/crypto';
import '@helios-lang/contract-utils';
import '../environment.mjs';
import '../CapoDelegateHeliosBundle.mjs';

class ReqtsBundle extends DelegatedDataBundle {
  specializedDelegateModule = ReqtsPolicy_hl;
  get modules() {
    return [
      ...super.modules,
      ReqtsData_hl
    ];
  }
}

class ReqtsConcreteBundle extends ReqtsBundle.usingCapoBundleClass(CapoHeliosBundle) {
  preCompiled = {
    singleton: {
      programBundle: { "programElements": { "src/delegation/BasicDelegate.hl": "027afd9f75063ea33dddf672afda9b8e0a09cb60b8856246e2d924f1f96b0f55", "src/CapoMintHelpers.hl": "3fca50bb43a69ff20b3d1c38a2d861763b960bbec1f36a4e56d4fc09b9c93299", "src/delegation/CapoDelegateHelpers.hl": "3c7ed244361870b62c0b40ac3faece6ce8d87985937e3142939634b04f341b10", "src/StellarHeliosHelpers.hl": "3761577f61419fc37d8b8df0d3d6cbd24217db0702031af15c043b02a541cbb6", "src/CapoHelpers.hl": "fb03f3b74232c0aa160824b8a6440ce84425551cd1b0a457e7829acbde991535", "src/reqts/ReqtsData.hl": "3a187537ec07c985fe82ddd3f8c62d3365c34f900b5b7a4058cb7cf3e705106d", "generatedSpecializedDelegateModule": "098031ee2f026f1261eb399fbf411996363246b88d7eea4f20588f3285540812", "src/reqts/ReqtsPolicy.hl": "a8b8872eb483a09495e60679be4366124ef8162bdfd592565a9a0d6621d51bf8", "params": { "BasicDelegate::rev": "const rev: Int = ##01;", "BasicDelegate::instance": "const instance: ByteArray = #67656e6572616c;", "BasicDelegate::delegateName": "const delegateName: String = ##4b5265717473506f6c696379;", "BasicDelegate::isMintDelegate": "const isMintDelegate: Bool = ##d87980;", "BasicDelegate::isSpendDelegate": "const isSpendDelegate: Bool = ##d87980;", "BasicDelegate::isDgDataPolicy": "const isDgDataPolicy: Bool = ##d87a80;", "BasicDelegate::requiresGovAuthority": "const requiresGovAuthority: Bool = ##d87a80;" } }, "version": "PlutusV2", "optimized": "592cd3592cd00100002223232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232533357346a666ae68cdc38212400824c2a666ae68cdc382124004246466ae6cc94ccd5cd0008a4c2c64666ae68cdc7800a4410101004a0944dd71aba1357446ae88004cd5cd992999ab9a001149858c8ccd5cd19b8f0014890767656e6572616c004a0944dd71aba1357446ae88004cd5cd992999ab9a001149858c8ccd5cd19b8f0014890b5265717473506f6c696379004a0944dd71aba1357446ae88004cd5cd9924c607a64646eacd5d09aba235573c6ea8004d5d09aba235573c6ea800540e8c8c8ccccc01401401012800c008c92899808808000998058051919aba0375200297ae1103d87980001bae357426ae88004dd61aba135573c6ea80044c8c8c88d4ccd5cd0010930992999ab9a0011261235333573400824c2a666ae68008498492802619b8700348000128cdc3800a40046aae74004dd50230238a4c2c444446466ae6d4ccd5cd0008a4c2c6466ae6d4ccd5cd0008a4c2c00264a666ae68d4ccd5cd19b8735573a6ea80152002124a22a666ae68cdc39aab9d375400a90000930a999ab9a3370e6aae74dd5002a400c2646464464646466ae6cc926324a26028010646466ae6cc94ccd5cd0008a4c2c66e24cdc0981d003981c003a4101756e06646466ae6ccc894ccd5cd0010a4c2c6607200400266e592412d77726f6e6720646973636f756e7420657870697279206461746520746f6f206c617465207365636f6e64733a2000304f3370866e04004c0f000920d00f333333301432375c6ae84d5d10009bac357426aae78dd500880325eb85054472657174002510054a0931bad33033002489036578700050113035357426ae88d5d11aab9e37540026464646a666ae68cdc39aab9d37540029001093091aba135573c6ea8004004c8cc0a400494ccd5cd19b873303637566ae84d5d11aab9e37540020089001099baf357426aae78dd50008018a5037586ae84d5d11aba235573c6ea8120c0d0c064024cc10cdd71aba10083730600292010472657174003012001357426aae78dd50009aba135573c6ea8004d5d08009aba200135744606007e2a666ae68cdc39aab9d375400a9002091919ab9b32498cdcb24810a6361706f206d70683a2000304732375c6ae84d5d10009bac357426aae78dd500419ab9b32498c928980780199ab9b32498cdcb24810a0a6361706f206164647200323303b225333573466e1c009200013372c921157b7370656e64696e675f63726564656e7469616c3a003372c666078900011981f112999ab9a3370e0049000099b964910c5075624b65797b686173683a003372c66607e9000181f026800a49017d0015333573466e1c009200213372c9210f56616c696461746f727b686173683a003372c66607e9000181f026800a49017d001530413374a00400200200266e592401142c7374616b696e675f63726564656e7469616c3a003372c666078900112999999aba4001132325333573466e1cd55ce801240002a666aae7c00452410f536f6d657b3c6d697373696e673e7d001323372c920105536f6d657b003372c6608244a666ae68cdc380124000266e5924010a486173687b686173683a003372c6660849000119822112999ab9a3370e0049000099b964910e5374616b654b65797b686173683a003372c66608a90001822029800a49017d0015333573466e1c009200213372c9210f56616c696461746f727b686173683a003372c66608a90001822029800a49017d001530473374a004002002002921017d0015333573466e1c00920021323372c921065074727b693a003372c00266e59241032c6a3a003372c00266e59241032c6b3a003372c0029201017d00333042480108c94cccccd5d2001000800800898289bad0020013045001001153044003001491017d00357420022921044e6f6e650035573c0026ea800454c0fc00454c0fc00454c0fc00454c0fc004005241017d0015303e003001302e301300332323233573664646600200200444a666aae7c004526133573664646464646464a666ae68cc88ccd5cd19b890020014a0944c100d5d09aba235744607e09c6eb4cc0e001922010365787000132533357340022930b1981e8009bad33038004489036578700014994058c8cc0e4005300106d8799f4040ff0037566ae84d5d11aab9e37540066466070002980106d8799f4040ff003237566ae84d5d11aab9e37540026ae84d5d11aab9e375400860706ae84d5d11aba235573c6ea8004cc0a0dd61aba1357446ae88d55cf1baa049006303632357426ae88d5d11aab9e37540026ae84d5d11aab9e37540026ae84004cc008008d5d100099199818000801a5eb80dd61aba135573c6ea8111289912999ab9a3375e6ae84d55cf1baa00100213235333573466e1cd55ce9baa0014801048c94ccd5cd19b97302600149104526571740015333573466e3c01d2210014a2266e3cdd719819000a45034069640000714a0604800424940004c0ccd5d09aba2357446aae78dd50008a50303030150053330130044a20026eb8d5d09aab9e37540026ae84d55cf1baa00115333573466e1cd55ce9baa0054804849849280028a5113371e6ecc0fcdd9803198070068011a999ab9a3370e6aae74dd5001a40202464646466ae6d4ccd5cd0008a4c2c0026606800446a666ae68cdc39aab9d375400290060930a999ab9a3370e6aae74dd5000a401424c2a666ae68cdc39aab9d375400290070930a999ab9a3370e6aae74dd5000a4008246666601401401200400e0062a666ae68cdc39aab9d3754002900309199998050050048010038018a999ab9a3370e6aae74dd5000a401024c2a666ae68cdc39aab9d3754002900909199998050050048010038018a999ab9a3370e6aae74dd5000a400424c2a666ae68cdc39aab9d3754002900009309300098068019bac357426aae78dd50008a999ab9a3370e6aae74dd5001a400424646a666ae68cdc39aab9d3754002900009191919191919192999ab9a001100214a066666660206eb8d5d09aba200b0063357406ea4dcc002a5eb812824c944010c8d4ccd5cd19b8735573a6ea8005200a124a224940004c070004c04c020c94ccd5cd182380089b990011304a001375c6ae84d5d11aba2008330403303f375c6ae84d5d10039bae357426ae88d5d1003a4002646e64dd70009aba1357446aae78dd50011aba135573c6ea800454ccd5cd19b8735573a6ea80052002123370e6644646464646466600200244a666aae7c0045854ccd5cd19baf35573a6ae840040104dd69aab9e357420022660040046ae8800401c8894ccd55cf8008b0a999ab9a3375e6aae74d5d08008028998010011bab35573c6ae840044ccc00c00c008d5d10009aba1357440046ae84004d55cf0009baa001303c0403303d375c6ae84d5d10029bae357426ae88d5d1002a400224c0026ae84d55cf1baa00115333573466e1cd55ce9baa0034800048c8c8c8cd5cd99191a999ab9a3370e002900009192999ab9a3375e00200e2930b1aba135573c6ea800454ccd5cd19b870014802848d4ccd5cd19b8735573a6ea8019200012498498018498008d55ce9baa00130180023232533357346a666ae68cdc39aab9d375400a9000091919191a999ab9a3370e6aae74dd5002a40002466ae6d4ccd5cd19999998091bae357426ae88034010cd5d01ba9373000697ae04a20049412614985263235333573466e1cd55ce9baa0014800849848c8cd5cd992999ab9a001149858cdcb991b99375c0026ae84004c014018cc090004dd71aba1357440206eb0d5d09aab9e375400200264666607c0026ea4dcc002119ba548000cd5d0000a5eb805300103d87a80003237566ae84d5d11aba235573c6ea8004cc06c8c0d8c06c004024498014c04c008c8dcc9bae001357426ae88d55cf1baa002357426aae78dd50008a999ab9a3370e6aae74dd5002a40042464646464646464646464646464646466ae6cd4ccd5cd0028930924c00e66ae6cc94ccd5cd0008a4c2c6466ebcdd38009ba700f3574401866a666ae6801449854ccd5cd19b8735573a6ea801d200012323232323223330010040030023237326eb8004d5d09aba20033237326eb8004d5d08011aba1002357440026aae78dd5000891919191199800802001801191b99375c0026ae84d5d11aba235573c6ea800cc8dcc9bae001357426ae88d55cf1baa002357426aae78dd5000803911191919ab9b5333573466e1cc13804d20001498594ccd5cd00108008a5035333573466e1cd55ce9baa0154800849854ccd5cd19b8735573a6ea805520001232335736a666ae680045261632325333573400620022940d4ccd5cd19b8735573a6ea80392000123357366a666ae68cdc39aab9d375400490000930924c00494454ccd5cd19b8735573a6ea8039200413232322323357366a666ae6800c49854ccd5cd19b870044801849854ccd5cd19b87004480384984926010323233573664a666ae68004526163375e0066ae84d55cf1baa0014a26a666ae68cdc3802a4000246466e95200033574000297ae03303b303901d375c6ae84d5d10130a999ab9a3370e00a9001091919ba548000cd5d0000a5eb80cc0ecdd61aba135573c6ea8074dd71aba13574404c2a666ae6804048c8cdd2a400066ae800052f5c0660760046eb8d5d09aba202615333573466e1c015200a12615333573466e1c015200c12615333573400824c2a666ae68cdc3802a400c24c24c0226a666ae68cdc39aab9d375400c90010930919191a999ab9a3370e6aae74dd5000a4004246eb0d5d09aab9e375400224c002660960029110374706500357426aae78dd50008031aba1357446ae88d5d11aab9e375400266e1c005200435573a0026ea802c498038cc0bcdd59aba135744609402a00e6609802646a666ae68cdc39aab9d375400290000919191a999ab9a3370e6aae74dd5000a40102464666ae68cdcb8008062504a2607200224c0026ae84d5d10009bac357426aae78dd500089300089300a9a999ab9a3370e6aae74dd500a240042494454ccd5cd19b8735573a6ea805120001235333573466e1cd55ce9baa00b4800849848c8c8c8c8cd5cda999ab9a3372e00260080102930b19192999ab9a5333573400a294452808008a5035333573466e1cd55ce9baa0114801048cd5cd991a999ab9a3370e6aae74dd5000a40002464646a666ae68cdc39aab9d3754002900109192999ab9a3372e00201e2930b191b99375c0026ae84d5d11aab9e375400224c0026609600291010374706500357426aae78dd50008930009981a1bab357426ae88c13c068031288925101132335736a666ae68004526164a26606a0046eb8d5d09aba20213237326eb8004d5d08009a999ab9a3370e6aae74dd5004a400424c246eb0d5d09aab9e375400201266666660466eb8d5d09aba201e0063357406ea4dcc002a5eb81289813003250498c09401402c498050d4ccd5cd00108170930019aba13574400c66e1cd55ce9baa00148020d5d080219b8735573a00290011baa001357420046ae88004dd61aba135573c6ea8004cc1100052000357420026eb0d5d09aba23574460700026603246068603200200e6eb0d5d09aba235744606c0026607e00890000a999ab9a3370e6aae74dd5002a400824c2a666ae68cdc39aab9d375400a90030930a999ab9a3370e6aae74dd5002a4018246466ae6cd4ccd5cd19b8735573a6ea8005200012615333573466e1cd55ce9baa0014800849854ccd5cd19b8735573a6ea8005200412323232323232335736a666ae68cdd78008008a4c2c66ae6cc8d4ccd5cd19b8735573a6ea800520021261232323232335736a666ae68cdc78010058a4c2c66ae6cd4ccd5cd19b8735573a6ea8005200012612498004d4ccd5cd19b8735573a6ea800d20001249849800ccc0ec00d2201036d706800375c66074004910102746e003303900148810374706500357426aae78dd500080099811001003192999ab9a001149858c8cdd79ba6001374c64646600200200a44a666aae7c00440044c8c94ccd5cd19baf00535573a004266008008002266ae80008cc010010004d5d10011aba100137526e6001cdd59aba135744607a00864646a666ae68cdc39aab9d37540029001093091aba135573c6ea8004004c8cc0b4004008dd61aba1357446aae78dd502619980e00625000437566ae84d5d1181d8009980e1181b980e00080519821804240006eb8d5d09aba235573c6ea8008c8dcc9bae001357426aae78dd50008a999ab9a3370e6aae74dd5000a400c24c2493000a51357426aae78dd50008a999ab9a3370e6aae74dd5002a401424c24c00a29445281a999ab9a3370e6aae74dd5000a401c24c2a666ae68cdc39aab9d375400290010930a999ab9a3370e6aae74dd5000a400024c2a666ae68cdc39aab9d375400290060991912999ab9a323232333573466e2400520004a0944cc0ccc8dd59aba1357446aae78dd50009aba1357446aae78dd500100099810180f003001a8220a60103d8798000153335734646464666ae68cdc4800a40009412899819991bab357426ae88d55cf1baa001357426ae88d55cf1baa0020013302037586ae84d55cf1baa006003504414c103d87a800016375c0026ae8400c498004d4ccd5cd19b8735573a6ea800d200812615333573466e1cd55ce9baa0034802849854ccd5cd19b8735573a6ea800d200c124c0103d87a800015333573466e1cd55ce9baa003480084930103d879800015333573466e1cd55ce9baa003480104930103d87a800015333573466e1cd55ce9baa003480184930103d87f8000126003301400133014013300e323357406ea40052f5c2103d87980001bae357426ae88010d5d09aab9e37540022a666ae68cdc39aab9d375400690050930a999ab9a3370e6aae74dd5001a401824c2a666ae68cdc39aab9d375400690070930a999ab9a3370e6aae74dd5001a40082494454ccd5cd19b8735573a6ea800d2006124a22a666ae68cdc39aab9d3754006900409251124a2006266ae6cc94ccd5cd0008a4c2c66e24cdc098149aba1357446ae88c0a00dcc09cd5d09aba235744605006e90405d5b81991919ba548000cd5d019ba548000cd5d019ba548008cd5d01ba80014bd7025eb8503d87a800019aba03374a900019aba03374a900119aba0375000497ae04bd70903d87a800025eb80cdc018141aba1357446ae88c0a40e12080f081ff2e3370066e00c0a4d5d09aba235744605006e90407840ff9724101756e06444444464646466ae6d4ccd5cd0008a4c2c00266ae6cc9263372c921112d2d2075757420707572706f7365733a2000301a00732323232335736a666ae68ccd5cd19816001806a504a22c2931919ab9b3301000122498c8c8cd5cd99ab9b3301200122498c94ccd5cd19199ab9a0014a0944c0bc0044c926304933303200123233357340029412899b8f375c6aae740052201004bd6f7b6300a4c66606200c46644666ae68cdc7801009a504a26eb8d55ce8009bab35573c00297adef6c603232335736a666ae6800452616335736a666ae68ccd5cd19b89303e0104800928251132498cdcb19b963372c920116e29c85206f6b3a206d696e74656420757574733a207b003023010491017d00300b490100132498cdcb248114e29c85206f6b3a206d696e746564207575743a20003237326eb8004d5d0803800a999ab9a3233357340029412898178048a5113253335734606000229444c92899ab9b32330010010022253335573e00229309919ab9b3322323301a002225333573464666ae68005282513235333573466e1cd55ce9baa001480084928091919b87001004375a6ae84d55cf1baa00100133330450033752004466e95200033574000297ae014c0103d87a8000161498cc0d0034008dd71aab9d00137566aae78004cc00c00cd5d10011aba10014a2a666ae68cc0c00140444c8c8cc00400401c894ccd55cf8008800899192999ab9a3375e00a6aae740084cc0100100044cd5d0001198020020009aba2002357420026ea40444014c92899ab9b5333573466ebcdd30009ba6003149858cd5cd9924c64944cd5cda999ab9a32333573400294128998159bac357426aae78dd5023119baf357426aae78dd50008080b0a4c9452899808000911119b900040023302b00400e3300e3302a00100d222233720008004660486604897adef6c600043232330010010022253335573e002297adef6c6013302737566ae84004cc008008d5d10009981180091ba63232335736a666ae68ccd5cd19b89371a00290002504a22930b1982199821007800a40046e60004dcc9bae0013302200923237526e60004c014dcc9bae001303c04032324a2603000266074646464646607c646607e00290001818991aba1357446ae88d55cf1baa001357426ae88d55cf1baa00148000c8d4ccd5cd19b8735573a6ea8005200012357426aae78dd500089191a999ab9a3370e6aae74dd5000a4000246ae84d55cf1baa001126001323302500100437586ae84d55cf1baa04400133022003001232333573466e2400520004a0944cc0b8c8dd59aba1357446aae78dd50009aba1357446aae78dd50008011981e80524507636861727465720037586ae84d5d11aab9e375407e90002999ab9a003100214bd6f7b6302999ab9a00410031300a0062232330010010032253335573e002200226464646600200200644a666aae7c0044cd5d00018008992999ab9a3333008375c6aae74010dd69aab9e004375c6aae74004dd69aab9e0011335740008004266ae80004cc00c00cd5d10011aba100135742004660040046ae8800488c8cc00400400c894ccd55cf8008a4c26466ae6ccc010dd71aab9d001375a6aae78004cc00c00cd5d10011aba1001232323232323223372c66e58005241012d00002303f3337189000240186e500054ccd5cd199ab9a337126e3400920124a0944584cdc519b8a00148810140000023337189005240806ecc00cdd99ba8001375a6ae84d5d11aab9e37540046ae84d55cf1baa00123235333573466e1cd55ce9baa001480084800c54ccd5cd19b8735573a6ea80052004126123232323357406ea400ccd5d019ba548008cd5d000099aba00024bd7025eb80cc0c8c8cc0cc0052000302532357426ae88d5d11aab9e37540026ae84d5d11aab9e3754002900019191a999ab9a3370e6aae74dd5000a4000246ae84d55cf1baa0011260013233018001232333573466e2400520004a0944cc094c8dd59aba1357446aae78dd50009aba1357446aae78dd50008019bac357426ae88d55cf1baa03733033001489076368617274657200375c6ae8400c004d5d09aba200123235333573466e1cd55ce9baa001480104800c54ccd5cd19b8735573a6ea8005200212612323232323357406ea4010cd5d019ba548010cd5d000099aba00024bd7025eb80cc0c8c8cc0cc0052000302532357426ae88d5d11aab9e37540026ae84d5d11aab9e37540029000191a999ab9a3370e6aae74dd5000a4000246ae84d55cf1baa0011260013233017001232333573466e2400520004a0944cc090c8dd59aba1357446aae78dd50009aba1357446aae78dd50008019bac357426aae78dd501b19819000a45076368617274657200375c6ae8400c004d5d09aba2001223235333573466e1cd55ce9baa001480084800c54ccd5cd19b8735573a6ea80052004120031232323235333573466e1cd55ce9baa0014800848c02001c48c8c8cd5d01ba900633574066e95200233574000266ae800092f5c097ae033034323303500148000c09cc8d5d09aba2357446aae78dd50009aba1357446aae78dd5000a40006ae84d55cf1baa0010013233017001232333573466e2400520004a0944cc090c8dd59aba1357446aae78dd50009aba1357446aae78dd50008019bac357426ae88d55cf1baa03633032001489076368617274657200375c6ae8400c004d5d09aba2001222323225333573466ebcc0880040084c8d4ccd5cd19b8735573a6ea80052004123253335734a666ae68cdcb80324810014a2266e5cc05800524104526571740015333573466e3c01d2210014a2266e3cdd719811000a45034069640000714a0602800424940004c08cc8d5d09aba2357446aae78dd50009aba1357446aae78dd50008a503020300500453335734004292104526571740014910023235333573466e1cd55ce9baa0014800848d5d09aba235573c6ea800454ccd5cd19b8735573a6ea8005200412357426ae88d55cf1baa001126001357426ae8800488c8c8c8d4ccd5cd19b8735573a6ea80052004123302e302132357426ae88d5d11aab9e3754002660246eb0d5d09aba2357446aae78dd501992999ab9a3375e6ae84d55cf1baa001004132333573466e2400520004a0944cc080dd59aba1357446aae78dd50008028a5048000498004d5d09aba200330030023302c375c6ae84005220107636861727465720023235333573466e1cd55ce9baa0014800848c8cc0ac0052000357426aae78dd50008a999ab9a3370e6aae74dd5000a400824646605600290001aba135573c6ea8004498004d5d09aba20012233573664a666ae6800452616330063237586ae84c07c004c008004dd71aba100100122333302100237526e600048cdd2a400066ae800052f5c02980103d87a800023235333573466e1cd55ce9baa0014800049854ccd5cd19b8735573a6ea8005200212612323235333573466e1cd55ce9baa0014801049854ccd5cd19b8735573a6ea8005200812615333573466e1cd55ce9baa001480084800854ccd5cd19b8735573a6ea8005200a1200215333573466e1cd55ce9baa001480184800848008004c8c8c8cccc094008004800458c8cc004004008894ccd55cf8008b0992999ab9a35333573466e1cd55ce9baa0014800848cdd79aba135573c6ea8004018492800088008998018019aba200235573a6ae84004dd59aba1357446ae88d5d11aba2301f02e357426aae78dd50009aba1357446aae78dd50008009aba13574400246eb0d5d09aba2357446ae88d55cf1baa0012232323232335736a666ae694ccd5cd199ab9a0014a09445288a50161498004d4ccd5cd19b8735573a6ea80092000123232333573466e2400520004a0944cc068c8ccc0dc00488cc04c008dd59aba1357446aae78dd5000a5eb7bdb180c8ccc0680048c94ccd5cd19b8735573a6ea8005200213371e008646eb8d5d09aab9e37540026605800290010a5032357426aae78dd50009aba135573c6ea80052f5c06eb0d5d09aba2357446aae78dd50170019bae357426aae78dd500089191a999ab9a3370e6aae74dd5000a40002494449280009919807000919199ab9a3371200290002504a2660366eacd5d09aba235573c6ea8004010dd61aba1357446ae88d55cf1baa02d0023302800337300046ae84d5d1001991b99375c0026ae8400888cc094004dcc191b99375c0026ae840088c8ccc0040040092410022253335573e004292010013372c66e58004dcc9bae357420046660060066ae880092401022c200023237326eb8004d5d09aab9e375400246a666ae694cccccd5d20008a5114a029405280a50123232353335734a666666ae900045280a5114a02940528091aba1003126001357420026aae78dd50008930009191b99375c0026601a002910103747065002232330010010032253335573e0022c264a666ae68c01000440044cc00c00cd5d10011aba1001223233300100100300222253335573e0042980103d87a8000132533357346004002266e95200033574000297ae01333004004357440060046ae8400888c8cc00400400c894ccd55cf8008a5eb804cd5d018019aba100133002002357440024464660020026600a00600444a666aae7c00452f5bded8c02646464a666aae7c00440084cd5d019bb0003374c002004664464660020026601600600444a666aae7c00452f5bded8c02646464a666ae68cdc3800a40002004266ae80cdd80019ba8001002337006602000c0046602000a004660060066ae88008d5d08009980380300119803802801198018019aba20023574200244646600200200644a666aae7c00452f5bded8c02a666ae68cdd79aab9d3574200200626eacd55cf1aba1001133002002357440024464646464666002002004008444a666aae7c00440084cd5d01aba100133300300300235744002666002002004006444a666aae7c00452f5c0264a666ae68cc0200148cdd780080109998020020019aba200213357400026660080080066ae88008d55ce9aba100132330010010032253335573e002297ae013357406aae74d5d0800998010011aba2001223233300100100300222253335573e004294054ccd5cd18009aba100214a226660060066ae8800800488c8ccc00400400c0088894ccd55cf8010a40002a666ae68cdd79aab9d3574200400226eb4d55cf1aba10021333003003357440040024464646600200200844a666aae7c0045854ccd5cd19baf35573a6ae8400400c4dd59aab9e357420022660040046ae88004dd480091919800800801112999aab9f00114a22a666ae68c8c8cc004004008894ccd55cf8008a5115333573466e1cdd69aab9e3574200290000998010011aba200114a06eacd55cf1aba100113300200235744002294088c8c8cc004004010894ccd55cf8008a5015333573466ebcd55ce9aba100100314a22660040046ae88004dd48009119191919800800801912999aab9f0011613232325333573466ebc00801840044cc014014d5d10021aab9e00235573a0026ae84004dd48011bab0022223233300100100400322253335573e0042008264a666ae68c0080044cd5d00009998020021aba20030021333004004357440060046ae8400888c8c8c8ccc004004894ccd55cf8008a40002a666ae68cdd79aab9d3574200200826eb4d55cf1aba10011330020023574400200a444a666aae7c0045200015333573466ebcd55ce9aba100100513300200237566aae78d5d080089998018018011aba2001357426ae88d55cf1baa002357426aae78dd50009191aba135573c6ea8004d5d09aba235573c6ea80048c8c8c94ccd5cd19b87002480104d5d08008b1aab9e00235573a0026ea800488c8c8c8c8c94ccd5cd19b87002480105280a999ab9a3370e00490000008a999ab9a53335734006266e24dd69aba135573c6ea80100184cdc41bad357426aae78dd50020030008a501323232323232325333573466e1c005200014a02a666ae68cdc3800a400829444ccd5cd2999ab9a0021337120186eb4d5d09aab9e0031337100186eb4d5d09aab9e0034a2940d55ce80118079aba1357440066ea8004d5d08009aab9e00137540026ae84d5d11aab9e375400c6aae74dd500118041aba1357446aae78dd50011aba135573c6ea8004d5d09aab9e375400446eb4c8d5d09aab9e3754002646ae84d55cf1baa001357426aae78dd500091aba2357446ae88d5d11aba235573c6ea80048dd6991aba135573c6ea8004c8d5d09aab9e37540026ae84d5d11aab9e37540024666ae68cdc39aab9d375400290002504a24464666002002006004444a666aae7c0085288a999ab9a30013574200426660060066ae880080045281111191998008008028021112999aab9f0020041325333573466ebc008d55ce800898031aab9e0011333004004357440060046ae840088c8cc004004008894ccd55cf8008a4000266e00cc008008d5d1000a40044464a666666ae900080040040040044c00cdd70011802800911191998008008010021112999aab9f00214901093c6d697373696e673e0015333573466e1c0052000130053574200426660060066ae88008cdc0800a40044464a666666ae900084c8cc010d55ce8009aab9e001375400400200200200260060024264646600200200644a666666ae900044c8cdcb18081aab9d0013372c921017b003372c660086aae780048cc010010005241017d003754002266e59241017b003372c660066eac0048cdcb198018019aab9d0013372c9201013a003300300335573c002921017d0013372c9201015b003372c660066eb00048cc00c00c005241015d001300f375a002260206eb800488ccc044008894ccd5cd19b970024901001300300113372c00466e592401012c00300300149100225333573466e1cd55ce9baa002001100216237566ae84d5d11aba2357446ae88d55cf1baa001223374a900019aba0375200466ae80dd4800a5eb8088c8c8cd5d019bb0002374c66ae80cdd80009ba80034bd6f7b63025eb7bdb180d5d09aba235573c6ea800cd5d09aab9e375400426464660020026eb0d5d09aab9e375400644a666aae7c004584c94ccd5cd19baf357426aae78dd500080208008998018019aba2002357420026ae84d55cf1baa002357420146ae84d5d1004919980380091191919b9600433300a00223372ca666ae68cdc7800a450014910013372c6014002921010a0053333335748004292100133300c375600444646466601e0044a666666ae900085241001491001491001325333573466e3c01d2210013372c9201096c6f76656c61636520003372c601e0029201010a0013372c92010320202e003372ca666ae68c0340084dcc8010980800119b9649010120003372c601e0029201010a00375a004292010014910035573c0046aae74004014524010014910014910014910035573c0046aae74005240100232323300100148000894ccd5cd19b8700100314a2264a666ae68cdc4800a41fc0226600600666e00009200215333573466e1ccdc1800a408090060992999ab9a3371200200a26600e66e38018cdc0001a400444a666ae680084c94ccd5cd2999ab9a33712904001000899b89001483f87c5280998038038020a503370066e08cdc3002240809040008008a5014a066e00009200415333573466e1ccdc1800a4040900e0992999ab9a3371200200a26600e66e38018cdc0001a400444a666ae680084cc024cdc700419b8000548010894ccd5cd0010992999ab9a5333573466e25208020001133712002907f7f838a5013300900900614a066e00cdc119b86006480812080403370066e0800d20800100114a0294052819b800024801854ccd5cd19b8733706002900824078264a666ae68cdc480080289980399b8e006337000069001112999ab9a0021330093371c01066e000152004225333573400426601666e38028cdc0003a400c44a666ae680084c94ccd5cd2999ab9a3371290404004000899b89001483fbfffc045280998058058040a503370066e08cdc3004240209040401019b803370400a90402019b80337040069040008008a5014a0294052819b800024802052819b8e004001371a00244a666ae68cdc399b83002482000520041330014a266e180092080011330014a0900011b99325333573466e200092000133716902d19980080099b820024800522100133300100100248900222325333573466e2000d20141001133300400433706006900a00099b8b3370066e180092014481800048c8cc00400400888c94ccd5cd19b88480000044cdcb1b9932333573466e1cdc6800a400466e2d2060001001373064646e654ccd5cd19b88002480004cdc5a40b466600200266e08009200148810013330010010024890022232325333573466e2001120201001133300500533706008901000099b8b333573466e20005201433700002903019b80001482b804008cdc30012404066e3800920003300300333371890010008010a4900371a002444a666666ae9000c0040040040044c008dd7001911191998008008020011112999aab9f00210011333003003357440046600a0026ae84008d55ce9baa00535573c0026ea8005", "unoptimized": "", "optimizedIR": '(__DATUM, __REDEEMER, __CONTEXT) -> {\n    __common9 = __core__unConstrData(__CONTEXT);\n    __common10 = __core__sndPair(__common9);\n    __common7 = __core__fstPair(__core__unConstrData(__DATUM));\n    __helios__common__fold = (self_3, fn, z) -> {\n        recurse_1 = (recurse, self_4, z_1) -> {\n            __core__chooseList(self_4, () -> {\n                z_1\n            }, () -> {\n                recurse(recurse, __core__tailList__safe(self_4), fn(z_1, __core__headList__safe(self_4)))\n            })()\n        };\n        recurse_1(recurse_1, self_3, z)\n    };\n    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {\n        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {\n            callback_ok(__core__unBData__safe(data))\n        })()\n    };\n    __helios__bytearray__show = (self_7) -> {\n        recurse_5 = (recurse_4, self_8) -> {\n            n = __core__lengthOfByteString(self_8);\n            __core__ifThenElse(\n                __core__lessThanInteger(0, n),\n                () -> {\n                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_5 = __core__indexByteString__safe(self_8, 0);\n                    recurse_3 = (recurse_2, self_6, bytes) -> {\n                        digit = __core__modInteger(self_6, 16);\n                        bytes_1 = __core__consByteString(__core__ifThenElse(\n                            __core__lessThanInteger(digit, 10),\n                            __core__addInteger(digit, 48),\n                            __core__addInteger(digit, 87)\n                        ), bytes);\n                        __core__ifThenElse(\n                            __core__lessThanInteger(self_6, 16),\n                            () -> {\n                                bytes_1\n                            },\n                            () -> {\n                                recurse_2(recurse_2, __core__divideInteger(self_6, 16), bytes_1)\n                            }\n                        )()\n                    };\n                    __core__decodeUtf8__safe(__core__ifThenElse(\n                        __core__lessThanInteger(self_5, 0),\n                        () -> {\n                            __core__consByteString(45, recurse_3(recurse_3, __core__multiplyInteger(self_5, -1), #))\n                        },\n                        () -> {\n                            recurse_3(recurse_3, self_5, #)\n                        }\n                    )()));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),\n                        __core__consByteString(48, hex_bytes),\n                        hex_bytes\n                    )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_8)))\n                },\n                () -> {\n                    ""\n                }\n            )()\n        };\n        recurse_5(recurse_5, self_7)\n    };\n    __helios__int__show = (self_9) -> {\n        __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {\n            bytes_3 = __core__consByteString(__core__addInteger(__core__modInteger(i, 10), 48), bytes_2);\n            __core__ifThenElse(\n                __core__lessThanInteger(i, 10),\n                () -> {\n                    bytes_3\n                },\n                () -> {\n                    recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)\n                }\n            )()\n        };\n        __core__ifThenElse(\n            __core__lessThanInteger(self_9, 0),\n            () -> {\n                __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_9, -1), #))\n            },\n            () -> {\n                recurse_7(recurse_7, self_9, #)\n            }\n        )())\n    };\n    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__divideInteger(byte, 64), 2),\n            () -> {\n                callback(true, __core__modInteger(byte, 64))\n            },\n            () -> {\n                callback(false, 0)\n            }\n        )()\n    };\n    __helios__string__is_valid_utf8 = (bytes_5) -> {\n        n_2 = __core__lengthOfByteString(bytes_5);\n        recurse_11 = (recurse_10, i_1) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(i_1, n_2),\n                () -> {\n                    true\n                },\n                () -> {\n                    b0 = __core__indexByteString__safe(bytes_5, i_1);\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(b0, 127),\n                        () -> {\n                            recurse_10(recurse_10, __core__addInteger(i_1, 1))\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),\n                                () -> {\n                                    inext_2 = __core__addInteger(i_1, 2);\n                                    __core__ifThenElse(\n                                        __core__lessThanEqualsInteger(inext_2, n_2),\n                                        () -> {\n                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {\n                                                __core__ifThenElse(\n                                                    valid_5,\n                                                    () -> {\n                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);\n                                                        __core__ifThenElse(\n                                                            __core__ifThenElse(\n                                                                __core__lessThanEqualsInteger(128, c_2),\n                                                                () -> {\n                                                                    __core__lessThanEqualsInteger(c_2, 2047)\n                                                                },\n                                                                () -> {\n                                                                    false\n                                                                }\n                                                            )(),\n                                                            () -> {\n                                                                recurse_10(recurse_10, inext_2)\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    },\n                                                    () -> {\n                                                        false\n                                                    }\n                                                )()\n                                            })\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )()\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),\n                                        () -> {\n                                            inext_1 = __core__addInteger(i_1, 3);\n                                            __core__ifThenElse(\n                                                __core__lessThanEqualsInteger(inext_1, n_2),\n                                                () -> {\n                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {\n                                                        __core__ifThenElse(\n                                                            valid_3,\n                                                            () -> {\n                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {\n                                                                    __core__ifThenElse(\n                                                                        valid_4,\n                                                                        () -> {\n                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));\n                                                                            __core__ifThenElse(\n                                                                                __core__ifThenElse(\n                                                                                    __core__lessThanEqualsInteger(2048, c_1),\n                                                                                    () -> {\n                                                                                        __core__lessThanEqualsInteger(c_1, 65535)\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )(),\n                                                                                () -> {\n                                                                                    recurse_10(recurse_10, inext_1)\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        },\n                                                                        () -> {\n                                                                            false\n                                                                        }\n                                                                    )()\n                                                                })\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    })\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),\n                                                () -> {\n                                                    inext = __core__addInteger(i_1, 4);\n                                                    __core__ifThenElse(\n                                                        __core__lessThanEqualsInteger(inext, n_2),\n                                                        () -> {\n                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {\n                                                                __core__ifThenElse(\n                                                                    valid,\n                                                                    () -> {\n                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {\n                                                                            __core__ifThenElse(\n                                                                                valid_1,\n                                                                                () -> {\n                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            valid_2,\n                                                                                            () -> {\n                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__lessThanEqualsInteger(65536, c),\n                                                                                                        () -> {\n                                                                                                            __core__lessThanEqualsInteger(c, 2097151)\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )(),\n                                                                                                    () -> {\n                                                                                                        recurse_10(recurse_10, inext)\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    })\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        })\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        };\n        recurse_11(recurse_11, 0)\n    };\n    __helios__value__show = (self_15) -> {\n        __helios__common__fold(self_15, (prev, pair) -> {\n            mph_data = __core__fstPair(pair);\n            tokens_data = __core__sndPair(pair);\n            __core__appendString(prev, __helios__common__unBData__safe(mph_data, (mph) -> {\n                __core__appendString(__core__ifThenElse(\n                    __core__equalsByteString(mph, #),\n                    () -> {\n                        ""\n                    },\n                    () -> {\n                        __core__appendString(__helios__bytearray__show(mph), "\n")\n                    }\n                )(), __core__chooseData(tokens_data, () -> {\n                    ""\n                }, () -> {\n                    __helios__common__fold(__core__unMapData__safe(tokens_data), (prev_1, pair_1) -> {\n                        token_name_data = __core__fstPair(pair_1);\n                        qty_data = __core__sndPair(pair_1);\n                        __helios__common__unBData__safe(token_name_data, (token_name) -> {\n                            __core__chooseData(qty_data, () -> {\n                                ""\n                            }, () -> {\n                                ""\n                            }, () -> {\n                                ""\n                            }, () -> {\n                                qty = __core__unIData__safe(qty_data);\n                                __core__ifThenElse(\n                                    __core__equalsByteString(mph, #),\n                                    () -> {\n                                        __core__appendString("lovelace ", __core__appendString(__helios__int__show(qty), "\n"))\n                                    },\n                                    () -> {\n                                        __core__appendString("  .", __core__appendString(__core__ifThenElse(\n                                            __helios__string__is_valid_utf8(token_name),\n                                            () -> {\n                                                __core__decodeUtf8__safe(token_name)\n                                            },\n                                            () -> {\n                                                __helios__bytearray__show(token_name)\n                                            }\n                                        )(), __core__appendString(" ", __core__appendString(__helios__int__show(qty), "\n"))))\n                                    }\n                                )()\n                            }, () -> {\n                                ""\n                            })()\n                        }, () -> {\n                            ""\n                        })\n                    }, prev)\n                }, () -> {\n                    ""\n                }, () -> {\n                    ""\n                }, () -> {\n                    ""\n                })())\n            }, () -> {\n                ""\n            }))\n        }, "")\n    };\n    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common10));\n    __helios__scriptcontext__tx = __core__headList(__common10);\n    __helios__scriptcontext__get_current_input = () -> {\n        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));\n        recurse_13 = (recurse_12, lst) -> {\n            __core__chooseList(lst, () -> {\n                error()\n            }, () -> {\n                item = __core__headList__safe(lst);\n                __core__ifThenElse(\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item))), id),\n                    () -> {\n                        item\n                    },\n                    () -> {\n                        recurse_12(recurse_12, __core__tailList__safe(lst))\n                    }\n                )()\n            })()\n        };\n        recurse_13(recurse_13, __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))\n    };\n    __helios__value__new = (assetClass, i_2) -> {\n        mph_1 = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));\n        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));\n        __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i_2)), __core__mkNilPairData(())))), __core__mkNilPairData(()))\n    };\n    __helios__assetclass__new = (mph_2, token_name_1) -> {\n        __core__constrData(0, __core__mkCons(__core__bData(mph_2), __core__mkCons(__core__bData(token_name_1), __core__mkNilData(()))))\n    };\n    __helios__tx__minted = (self_29) -> {\n        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))))))\n    };\n    __helios__common__assert_constr_index = (data_3, i_3) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_3)), i_3),\n            () -> {\n                data_3\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__data__show = (self_30) -> {\n        () -> {\n            show_data_list = (list, show_item) -> {\n                __helios__common__fold(list, (prev_2, item_1) -> {\n                    __core__ifThenElse(\n                        __core__equalsString(prev_2, ""),\n                        () -> {\n                            show_item(item_1)\n                        },\n                        () -> {\n                            __core__appendString(prev_2, __core__appendString(",", show_item(item_1)))\n                        }\n                    )()\n                }, "")\n            };\n            recurse_15 = (recurse_14, data_4) -> {\n                __core__chooseData(data_4, () -> {\n                    pair_3 = __core__unConstrData__safe(data_4);\n                    __core__appendString(__helios__int__show(__core__fstPair(pair_3)), __core__appendString("{", __core__appendString(show_data_list(__core__sndPair(pair_3), (item_3) -> {\n                        recurse_14(recurse_14, item_3)\n                    }), "}")))\n                }, () -> {\n                    __core__appendString("{", __core__appendString(show_data_list(__core__unMapData__safe(data_4), (pair_2) -> {\n                        __core__appendString(recurse_14(recurse_14, __core__fstPair(pair_2)), __core__appendString(":", recurse_14(recurse_14, __core__sndPair(pair_2))))\n                    }), "}"))\n                }, () -> {\n                    __core__appendString("[", __core__appendString(show_data_list(__core__unListData__safe(data_4), (item_2) -> {\n                        recurse_14(recurse_14, item_2)\n                    }), "]"))\n                }, () -> {\n                    __helios__int__show(__core__unIData__safe(data_4))\n                }, () -> {\n                    __helios__bytearray__show(__core__unBData__safe(data_4))\n                })()\n            };\n            recurse_15(recurse_15, self_30)\n        }\n    };\n    __helios__data__show_constr_data = (callback_1, data_6) -> {\n        callback_nok_3 = __helios__data__show(data_6);\n        __core__chooseData(data_6, () -> {\n            pair_4 = __core__unConstrData__safe(data_6);\n            callback_1(__core__fstPair(pair_4), __core__sndPair(pair_4))\n        }, callback_nok_3, callback_nok_3, callback_nok_3, callback_nok_3)()\n    };\n    __helios__data__show_field = (index, callback_2, list_1) -> {\n        recurse_17 = (recurse_16, lst_2, i_4) -> {\n            __core__chooseList(lst_2, () -> {\n                "<missing>"\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(i_4, 0),\n                    () -> {\n                        callback_2(__core__headList__safe(lst_2))\n                    },\n                    () -> {\n                        recurse_16(recurse_16, __core__tailList__safe(lst_2), __core__subtractInteger(i_4, 1))\n                    }\n                )()\n            })()\n        };\n        recurse_17(recurse_17, list_1, index)\n    };\n    __helios__data__show_bdata = (callback_3) -> {\n        (data_7) -> {\n            callback_nok_4 = __helios__data__show(data_7);\n            __core__chooseData(data_7, callback_nok_4, callback_nok_4, callback_nok_4, callback_nok_4, () -> {\n                callback_3(__core__unBData__safe(data_7))\n            })()\n        }\n    };\n    __helios__common__length = (lst_3) -> {\n        recurse_19 = (recurse_18, lst_4) -> {\n            __core__chooseList(lst_4, () -> {\n                0\n            }, () -> {\n                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)\n            })()\n        };\n        recurse_19(recurse_19, lst_3)\n    };\n    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {\n        recurse_21 = (recurse_20, self_39, key_2) -> {\n            __core__chooseList(self_39, fnNotFound, () -> {\n                head_1 = __core__headList__safe(self_39);\n                __core__ifThenElse(\n                    __core__equalsData(key_2, __core__fstPair(head_1)),\n                    () -> {\n                        fnFound(__core__sndPair(head_1))\n                    },\n                    () -> {\n                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)\n                    }\n                )()\n            })()\n        };\n        recurse_21(recurse_21, self_38, key_1)\n    };\n    __helios__common__all = (self_40, fn_1) -> {\n        recurse_23 = (recurse_22, self_41, fn_2) -> {\n            __core__chooseList(self_41, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    fn_2(__core__headList__safe(self_41)),\n                    () -> {\n                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_23(recurse_23, self_40, fn_1)\n    };\n    __helios__bool__from_data = (d_1) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),\n            false,\n            true\n        )\n    };\n    __helios__timerange__end = (self_43) -> {\n        __core__unIData((self_21) -> {\n            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n        }(self_21 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_43))));\n        __core__headList(__core__sndPair(__core__unConstrData(self_21)))))\n    };\n    __helios__common__enum_fields_after_4 = (self_44) -> {\n        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44)))))))\n    };\n    __helios__timerange__start = (self_48) -> {\n        __core__unIData((self_21) -> {\n            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n        }(self_21 = __core__headList(__core__sndPair(__core__unConstrData(self_48)));\n        __core__headList(__core__sndPair(__core__unConstrData(self_21)))))\n    };\n    __helios__timerange__contains = (self_49, t) -> {\n        lower = __core__headList(__core__sndPair(__core__unConstrData(self_49)));\n        extended = __core__headList(__core__sndPair(__core__unConstrData(lower)));\n        closed = __helios__bool__from_data(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(lower)))));\n        lowerExtType = __core__fstPair(__core__unConstrData(extended));\n        checkUpper = () -> {\n            upper = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_49))));\n            __common32 = __core__unConstrData(upper);\n            __common33 = __core__sndPair(__common32);\n            extended_1 = __core__headList(__common33);\n            __common5 = __core__unConstrData(extended_1);\n            closed_1 = __helios__bool__from_data(__core__headList(__core__tailList(__common33)));\n            upperExtType = __core__fstPair(__common5);\n            __core__ifThenElse(\n                __core__equalsInteger(upperExtType, 0),\n                () -> {\n                    false\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(upperExtType, 2),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __core__ifThenElse(\n                                    closed_1,\n                                    () -> {\n                                        __core__lessThanEqualsInteger(t, __core__unIData(__core__headList(__core__sndPair(__common5))))\n                                    },\n                                    () -> {\n                                        __core__lessThanInteger(t, __core__unIData(__core__headList(__core__sndPair(__common5))))\n                                    }\n                                )(),\n                                true,\n                                false\n                            )\n                        }\n                    )()\n                }\n            )()\n        };\n        __core__ifThenElse(\n            __core__equalsInteger(lowerExtType, 2),\n            () -> {\n                false\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(lowerExtType, 0),\n                    checkUpper,\n                    () -> {\n                        __core__ifThenElse(\n                            __core__ifThenElse(\n                                closed,\n                                () -> {\n                                    __core__lessThanEqualsInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)\n                                },\n                                () -> {\n                                    __core__lessThanInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)\n                                }\n                            )(),\n                            checkUpper,\n                            () -> {\n                                false\n                            }\n                        )()\n                    }\n                )()\n            }\n        )()\n    };\n    __helios__txoutputdatum__inline = (self_50) -> {\n        pair_5 = __core__unConstrData(self_50);\n        index_1 = __core__fstPair(pair_5);\n        fields_2 = __core__sndPair(pair_5);\n        __core__ifThenElse(\n            __core__equalsInteger(index_1, 2),\n            () -> {\n                __core__headList(fields_2)\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__txinput__address = (self_57) -> {\n        self_21 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_57))));\n        __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n    };\n    __helios__value__get_safe = (self_58, assetClass_2) -> {\n        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_2)));\n        tokenName_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_2))));\n        outer_3 = (outer_2, inner_3, map_3) -> {\n            __core__chooseList(map_3, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mintingPolicyHash),\n                    () -> {\n                        inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_3))))\n                    },\n                    () -> {\n                        outer_2(outer_2, inner_3, __core__tailList__safe(map_3))\n                    }\n                )()\n            })()\n        };\n        outer_3(outer_3, (inner_4, map_4) -> {\n            __core__chooseList(map_4, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), tokenName_2),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_4)))\n                    },\n                    () -> {\n                        inner_4(inner_4, __core__tailList__safe(map_4))\n                    }\n                )()\n            })()\n        }, self_58)\n    };\n    __helios__common__filter = (self_63, fn_3, nil) -> {\n        recurse_25 = (recurse_24, self_64, fn_4) -> {\n            __core__chooseList(self_64, () -> {\n                nil\n            }, () -> {\n                head_2 = __core__headList__safe(self_64);\n                __core__ifThenElse(\n                    fn_4(head_2),\n                    () -> {\n                        __core__mkCons(head_2, recurse_24(recurse_24, __core__tailList__safe(self_64), fn_4))\n                    },\n                    () -> {\n                        recurse_24(recurse_24, __core__tailList__safe(self_64), fn_4)\n                    }\n                )()\n            })()\n        };\n        recurse_25(recurse_25, self_63, fn_3)\n    };\n    __helios__common__mStruct_field = (self_66, name_1) -> {\n        map_5 = __core__unMapData(self_66);\n        name_data = __core__bData(name_1);\n        recurse_27 = (recurse_26, map_6) -> {\n            __core__chooseList(map_6, () -> {\n                error()\n            }, () -> {\n                head_3 = __core__headList__safe(map_6);\n                key_3 = __core__fstPair(head_3);\n                value_3 = __core__sndPair(head_3);\n                __core__ifThenElse(\n                    __core__equalsData(key_3, name_data),\n                    () -> {\n                        value_3\n                    },\n                    () -> {\n                        recurse_26(recurse_26, __core__tailList__safe(map_6))\n                    }\n                )()\n            })()\n        };\n        recurse_27(recurse_27, map_5)\n    };\n    __helios__value__contains_policy = (self_67, mph_5) -> {\n        mph_6 = __core__bData(mph_5);\n        recurse_29 = (recurse_28, map_7) -> {\n            __core__chooseList(map_7, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), mph_6),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_28(recurse_28, __core__tailList__safe(map_7))\n                    }\n                )()\n            })()\n        };\n        recurse_29(recurse_29, self_67)\n    };\n    __helios__value__is_zero = (self_68) -> {\n        recurse_33 = (recurse_32, map_8) -> {\n            __core__chooseList(map_8, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_8)));\n                    recurse_31 = (recurse_30, tokens_2) -> {\n                        __core__chooseList(tokens_2, () -> {\n                            true\n                        }, () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),\n                                () -> {\n                                    recurse_30(recurse_30, __core__tailList__safe(tokens_2))\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_31(recurse_31, tokens_1),\n                    () -> {\n                        recurse_32(recurse_32, __core__tailList__safe(map_8))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_33(recurse_33, self_68)\n    };\n    __helios__value__get_policy = (self_71, mph_7) -> {\n        mph_8 = __core__bData(mph_7);\n        recurse_35 = (recurse_34, map_9) -> {\n            __core__chooseList(map_9, () -> {\n                error()\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_8),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_9)))\n                    },\n                    () -> {\n                        recurse_34(recurse_34, __core__tailList__safe(map_9))\n                    }\n                )()\n            })()\n        };\n        recurse_35(recurse_35, self_71)\n    };\n    __helios__value__get_inner_map_int = (map_10, key_4) -> {\n        recurse_37 = (recurse_36, map_11, key_5) -> {\n            __core__chooseList(map_11, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), key_5),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_11)))\n                    },\n                    () -> {\n                        recurse_36(recurse_36, __core__tailList__safe(map_11), key_5)\n                    }\n                )()\n            })()\n        };\n        recurse_37(recurse_37, map_10, key_4)\n    };\n    __helios__common__any = (self_72, fn_7) -> {\n        recurse_41 = (recurse_40, self_73, fn_8) -> {\n            __core__chooseList(self_73, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    fn_8(__core__headList__safe(self_73)),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_40(recurse_40, __core__tailList__safe(self_73), fn_8)\n                    }\n                )()\n            })()\n        };\n        recurse_41(recurse_41, self_72, fn_7)\n    };\n    __helios__value__merge_map_keys = (a_7, b_12) -> {\n        (aKeys) -> {\n            recurse_45 = (recurse_44, keys, map_14) -> {\n                __core__chooseList(map_14, () -> {\n                    __core__mkNilData(())\n                }, () -> {\n                    key_7 = __core__fstPair(__core__headList__safe(map_14));\n                    __core__ifThenElse(\n                        __helios__common__any(aKeys, (item_4) -> {\n                            __core__equalsData(item_4, key_7)\n                        }),\n                        () -> {\n                            recurse_44(recurse_44, keys, __core__tailList__safe(map_14))\n                        },\n                        () -> {\n                            __core__mkCons(key_7, recurse_44(recurse_44, keys, __core__tailList__safe(map_14)))\n                        }\n                    )()\n                })()\n            };\n            b_11 = recurse_45(recurse_45, aKeys, b_12);\n            recurse_43 = (recurse_42, lst_6, rem) -> {\n                __core__chooseList(rem, () -> {\n                    lst_6\n                }, () -> {\n                    __core__mkCons(__core__headList__safe(rem), recurse_42(recurse_42, lst_6, __core__tailList__safe(rem)))\n                })()\n            };\n            recurse_43(recurse_43, b_11, aKeys)\n        }(recurse_39 = (recurse_38, map_13) -> {\n            __core__chooseList(map_13, () -> {\n                __core__mkNilData(())\n            }, () -> {\n                __core__mkCons(__core__fstPair(__core__headList__safe(map_13)), recurse_38(recurse_38, __core__tailList__safe(map_13)))\n            })()\n        };\n        recurse_39(recurse_39, a_7))\n    };\n    __helios__value__get_inner_map = (map_15, mph_9) -> {\n        recurse_49 = (recurse_48, map_16) -> {\n            __core__chooseList(map_16, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_16)), mph_9),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_16)))\n                    },\n                    () -> {\n                        recurse_48(recurse_48, __core__tailList__safe(map_16))\n                    }\n                )()\n            })()\n        };\n        recurse_49(recurse_49, map_15)\n    };\n    __helios__value____add = (a_10, b_15) -> {\n        recurse_51 = (recurse_50, keys_2) -> {\n            __core__chooseList(keys_2, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                key_9 = __core__headList__safe(keys_2);\n                tail_1 = recurse_50(recurse_50, __core__tailList__safe(keys_2));\n                item_5 = (a_8, b_13) -> {\n                    recurse_47 = (recurse_46, keys_1) -> {\n                        __core__chooseList(keys_1, () -> {\n                            __core__mkNilPairData(())\n                        }, () -> {\n                            key_8 = __core__headList__safe(keys_1);\n                            tail = recurse_46(recurse_46, __core__tailList__safe(keys_1));\n                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_8, key_8), __helios__value__get_inner_map_int(b_13, key_8));\n                            __core__ifThenElse(\n                                __core__equalsInteger(sum, 0),\n                                () -> {\n                                    tail\n                                },\n                                () -> {\n                                    __core__mkCons(__core__mkPairData(key_8, __core__iData(sum)), tail)\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_47(recurse_47, __helios__value__merge_map_keys(a_8, b_13))\n                }(__helios__value__get_inner_map(a_10, key_9), __helios__value__get_inner_map(b_15, key_9));\n                __core__chooseList(item_5, () -> {\n                    tail_1\n                }, () -> {\n                    __core__mkCons(__core__mkPairData(key_9, __core__mapData(item_5)), tail_1)\n                })()\n            })()\n        };\n        recurse_51(recurse_51, __helios__value__merge_map_keys(a_10, b_15))\n    };\n    __helios__common__map = (self_74, fn_9) -> {\n        recurse_53 = (recurse_52, rem_1) -> {\n            __core__chooseList(rem_1, () -> {\n                __core__mkNilData(())\n            }, () -> {\n                __core__mkCons(fn_9(__core__headList__safe(rem_1)), recurse_52(recurse_52, __core__tailList__safe(rem_1)))\n            })()\n        };\n        recurse_53(recurse_53, self_74)\n    };\n    __helios__common__find_safe = (self_107, fn_13) -> {\n        recurse_65 = (recurse_64, self_108, fn_14) -> {\n            __core__chooseList(self_108, () -> {\n                __core__constrData(1, __core__mkNilData(()))\n            }, () -> {\n                head_7 = __core__headList__safe(self_108);\n                __core__ifThenElse(\n                    fn_14(head_7),\n                    () -> {\n                        __core__constrData(0, __core__mkCons(head_7, __core__mkNilData(())))\n                    },\n                    () -> {\n                        recurse_64(recurse_64, __core__tailList__safe(self_108), fn_14)\n                    }\n                )()\n            })()\n        };\n        recurse_65(recurse_65, self_107, fn_13)\n    };\n    __helios__list[__helios__txoutput]__find = (self_109, fn_15) -> {\n        recurse_67 = (recurse_66, lst_12) -> {\n            __core__chooseList(lst_12, () -> {\n                error()\n            }, () -> {\n                item_6 = __core__headList__safe(lst_12);\n                __core__ifThenElse(\n                    fn_15(item_6),\n                    () -> {\n                        item_6\n                    },\n                    () -> {\n                        recurse_66(recurse_66, __core__tailList__safe(lst_12))\n                    }\n                )()\n            })()\n        };\n        recurse_67(recurse_67, self_109)\n    };\n    __module__StellarHeliosHelpers__AnyData[]__type = (self_115) -> {\n        d = __helios__common__mStruct_field(self_115, #747065);\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_6) -> {\n        __core__ifThenElse(\n            __core__chooseData(value_6, () -> {\n                true\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            })(),\n            () -> {\n                (__lhs_0) -> {\n                    fields_12 = __core__sndPair(__core__unConstrData(__lhs_0));\n                    __cond_2 = __core__headList(fields_12);\n                    __core__ifThenElse(\n                        __core__chooseData(__cond_2, () -> {\n                            false\n                        }, () -> {\n                            true\n                        }, () -> {\n                            false\n                        }, () -> {\n                            false\n                        }, () -> {\n                            false\n                        })(),\n                        () -> {\n                            (__lhs_0_1) -> {\n                                __core__headList(fields_12)\n                            }\n                        },\n                        () -> {\n                            (__3) -> {\n                                error()\n                            }\n                        }\n                    )()(__cond_2)\n                }\n            },\n            () -> {\n                (__2) -> {\n                    error()\n                }\n            }\n        )()(value_6)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_119) -> {\n        d = __core__headList(__core__sndPair(__core__unConstrData(self_119)));\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __helios__list[__helios__string]__join = (self_133) -> {\n        recurse_73 = (recurse_72, lst_13, sep) -> {\n            __core__chooseList(lst_13, () -> {\n                ""\n            }, () -> {\n                __core__appendString(__core__appendString(sep, __core__decodeUtf8(__core__unBData(__core__headList__safe(lst_13)))), recurse_72(recurse_72, __core__tailList__safe(lst_13), ", "))\n            })()\n        };\n        recurse_73(recurse_73, self_133, "")\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_141, mph_12) -> {\n        __helios__assetclass__new(mph_12, __core__encodeUtf8(d = __core__headList(self_141);\n        __core__decodeUtf8(__core__unBData(d))))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_148, mph_15) -> {\n        (uut) -> {\n            validatorHash = __core__headList(__core__tailList(self_148));\n            ac_1 = __helios__assetclass__new(mph_15, __core__encodeUtf8(uut));\n            hasDelegate = __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),\n                () -> {\n                    (__lhs_0_15) -> {\n                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_15))));\n                        a_3 = __helios__value__get_safe((outputs) -> {\n                            __helios__common__fold(outputs, (prev_3, txOutput) -> {\n                                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))\n                            }, __core__mkNilPairData(()))\n                        }(self_65 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__filter(self_65, (output) -> {\n                            (credential) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),\n                                    () -> {\n                                        __core__equalsByteString(vh_3, self_92 = __helios__common__assert_constr_index(credential, 1);\n                                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_92)))))\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }(self_21 = __core__headList(__core__sndPair(__core__unConstrData(output)));\n                            __core__headList(__core__sndPair(__core__unConstrData(self_21))))\n                        }, __core__mkNilData(()))), ac_1);\n                        __core__ifThenElse(\n                            __core__lessThanEqualsInteger(a_3, 0),\n                            false,\n                            true\n                        )\n                    }\n                },\n                () -> {\n                    (__lhs_0_12) -> {\n                        (__cond_10) -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_10)), 0),\n                                () -> {\n                                    (__lhs_0_14) -> {\n                                        true\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_13) -> {\n                                        false\n                                    }\n                                }\n                            )()(__cond_10)\n                        }(self_147 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__find_safe(self_147, (o) -> {\n                            a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);\n                            __core__ifThenElse(\n                                __core__lessThanEqualsInteger(a_3, 0),\n                                false,\n                                true\n                            )\n                        }))\n                    }\n                }\n            )()(validatorHash);\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __core__ifThenElse(\n                        hasDelegate,\n                        false,\n                        true\n                    ),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        false\n                    }\n                )(),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), hasDelegate)\n        }(d = __core__headList(self_148);\n        __core__decodeUtf8(__core__unBData(d)))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_166) -> {\n        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_166)))))))\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_197) -> {\n        __cond_28 = __core__headList(__core__tailList(self_197));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 0),\n            () -> {\n                (__lhs_0_57) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 1),\n                    () -> {\n                        (__lhs_0_56) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_49) -> {\n                            utxo_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_49))));\n                            (activity) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 2),\n                                    () -> {\n                                        (__lhs_0_55) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 4),\n                                            () -> {\n                                                (__lhs_0_54) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 1),\n                                                    () -> {\n                                                        (__lhs_0_53) -> {\n                                                            activity\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 5),\n                                                            () -> {\n                                                                (__lhs_0_52) -> {\n                                                                    activity\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 3),\n                                                                    () -> {\n                                                                        (__lhs_0_51) -> {\n                                                                            activity\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__lhs_0_50) -> {\n                                                                            activity\n                                                                        }\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()(activity)\n                            }(targetId = __core__headList(__core__sndPair(__core__unConstrData(utxo_2)));\n                            redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));\n                            (spendsExpectedInput) -> {\n                                __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {\n                                    x_4\n                                }, () -> {\n                                    error()\n                                })\n                            }(recurse_71 = (recurse_70, map_22) -> {\n                                __core__chooseList(map_22, () -> {\n                                    error()\n                                }, () -> {\n                                    item_7 = __core__fstPair(__core__headList__safe(map_22));\n                                    __core__ifThenElse(\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(item_7)), 1),\n                                            () -> {\n                                                (sp) -> {\n                                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)\n                                                }\n                                            },\n                                            () -> {\n                                                (__1) -> {\n                                                    false\n                                                }\n                                            }\n                                        )()(item_7),\n                                        () -> {\n                                            item_7\n                                        },\n                                        () -> {\n                                            recurse_70(recurse_70, __core__tailList__safe(map_22))\n                                        }\n                                    )()\n                                })()\n                            };\n                            recurse_71(recurse_71, redeemers)))\n                        }\n                    }\n                )()\n            }\n        )()(__cond_28)\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_198, key_16) -> {\n        __helios__common__map_get(self_198, __core__bData(__core__encodeUtf8(key_16)), (x_5) -> {\n            __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))\n        }, () -> {\n            __core__constrData(1, __core__mkNilData(()))\n        })\n    };\n    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3, self_204) -> {\n        __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(self_168 = __module__CapoHelpers__CapoCtx[]__getCharterData_3(self_204);\n        __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_168))), __core__unBData(__core__headList(self_204)));\n        __core__ifThenElse(\n            cond,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), self_204)\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_210) -> {\n        __cond_34 = __core__headList(__core__tailList(self_210));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_34)), 1),\n            () -> {\n                (self_171) -> {\n                    data_140 = __core__headList(__core__sndPair(__core__unConstrData(self_171)));\n                    __helios__common__assert_constr_index(data_140, 0)\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_34)), 2),\n                    () -> {\n                        (self_173) -> {\n                            data_140 = __core__headList(__core__sndPair(__core__unConstrData(self_173)));\n                            __helios__common__assert_constr_index(data_140, 0)\n                        }\n                    },\n                    () -> {\n                        (__28) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_34)\n    };\n    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__address, self_211) -> {\n        charterAc_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_211)), #63686172746572);\n        capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_211);\n        __cond_35 = __core__headList(__core__tailList(self_211));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 2),\n            () -> {\n                (__lhs_0_67) -> {\n                    __helios__common__assert_constr_index(__helios__txoutputdatum__inline(self_51 = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), (txo) -> {\n                        __core__ifThenElse(\n                            __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo))), capoAddr),\n                            () -> {\n                                a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txo))))), charterAc_2);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    });\n                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51)))))), 0)\n                }\n            },\n            () -> {\n                (__29) -> {\n                    error()\n                }\n            }\n        )()(__cond_35)\n    };\n    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1 = (self_212) -> {\n        __cond_36 = __core__headList(__core__tailList(self_212));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 1),\n            () -> {\n                (self_18) -> {\n                    __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 2),\n                    () -> {\n                        (self_18) -> {\n                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))\n                        }\n                    },\n                    () -> {\n                        (__30) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_36)\n    };\n    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_217, __useopt__typeName, id_1) -> {\n        typeName_2 = __core__ifThenElse(\n            __useopt__typeName,\n            () -> {\n                "Reqt"\n            },\n            () -> {\n                ""\n            }\n        )();\n        capoAddr_1 = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_217));\n        (txin_4) -> {\n            __core__ifThenElse(\n                __core__equalsData(__helios__txinput__address(txin_4), capoAddr_1),\n                () -> {\n                    data_162 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_4))));\n                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_162)), 2),\n                        () -> {\n                            (__lhs_0_74) -> {\n                                x_7 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_162);\n                                __core__ifThenElse(\n                                    __core__ifThenElse(\n                                        __core__equalsString(typeName_2, ""),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_7), "Reqt")\n                                        }\n                                    )(),\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsByteString(id_1, #),\n                                            () -> {\n                                                true\n                                            },\n                                            () -> {\n                                                __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_7, #406964)), id_1)\n                                            }\n                                        )()\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }\n                        },\n                        () -> {\n                            (__31) -> {\n                                false\n                            }\n                        }\n                    )()(data_162)\n                },\n                () -> {\n                    false\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput, self_221) -> {\n        charter_1 = __core__headList(__core__tailList(self_221));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 1),\n            () -> {\n                (__lhs_0_84) -> {\n                    self_221\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 2),\n                    () -> {\n                        (__lhs_0_83) -> {\n                            self_221\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_79) -> {\n                            mph_21 = __core__unBData(__core__headList(self_221));\n                            charterAc_3 = __helios__assetclass__new(mph_21, #63686172746572);\n                            (__cond_44) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_44)), 1),\n                                    () -> {\n                                        (__lhs_0_82) -> {\n                                            __module__CapoHelpers__CapoCtx[]__withCharterInput(self_221)\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_81) -> {\n                                            charterUtxo_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_81)));\n                                            datum_4 = __helios__common__assert_constr_index(data_140 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));\n                                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                            __helios__common__assert_constr_index(data_140, 0), 0);\n                                            __core__mkCons(__core__bData(mph_21), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))\n                                        }\n                                    }\n                                )()(__cond_44)\n                            }(self_144 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                            __helios__common__find_safe(self_144, (txin_5) -> {\n                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_5))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_3);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            }))\n                        }\n                    }\n                )()\n            }\n        )()(charter_1)\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_222) -> {\n        charter_2 = __core__headList(__core__tailList(self_222));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),\n            () -> {\n                (__lhs_0_90) -> {\n                    self_222\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),\n                    () -> {\n                        (__lhs_0_89) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_85) -> {\n                            mph_22 = __core__unBData(__core__headList(self_222));\n                            charterAc_4 = __helios__assetclass__new(mph_22, #63686172746572);\n                            (charterUtxo_3) -> {\n                                datum_5 = __helios__common__assert_constr_index(data_140 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_3))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                __helios__common__assert_constr_index(data_140, 0), 0);\n                                __core__mkCons(__core__bData(mph_22), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_3, __core__mkNilData(())))), __core__mkNilData(())))\n                            }((__cond_46) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_46)), 0),\n                                    () -> {\n                                        (self_21) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_87) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_46)\n                            }(self_144 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                            __helios__common__find_safe(self_144, (txin_6) -> {\n                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_6))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_4);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_2)\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_223) -> {\n        charter_3 = __core__headList(__core__tailList(self_223));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 1),\n            () -> {\n                (__lhs_0_94) -> {\n                    self_223\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 2),\n                    () -> {\n                        (__lhs_0_93) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_91) -> {\n                            mph_23 = __core__unBData(__core__headList(self_223));\n                            (utxo_5) -> {\n                                datum_6 = __helios__common__assert_constr_index(data_140 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_5))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                __helios__common__assert_constr_index(data_140, 0), 0);\n                                __core__mkCons(__core__bData(mph_23), __core__mkCons(__core__constrData(1, __core__mkCons(datum_6, __core__mkCons(utxo_5, __core__mkNilData(())))), __core__mkNilData(())))\n                            }(charterAc = __helios__assetclass__new(mph_23, #63686172746572);\n                            (__cond_12) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 0),\n                                    () -> {\n                                        (self_21) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_19) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_12)\n                            }(self_144 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                            __helios__common__find_safe(self_144, (txin) -> {\n                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_3)\n    };\n    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {\n        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed_1)));\n        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed_1)))));\n        idxBytes = __core__serialiseData(__core__iData(seedIdx));\n        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));\n        txoInfo = __core__ifThenElse(\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),\n                false,\n                true\n            ),\n            () -> {\n                error()\n            },\n            () -> {\n                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)\n            }\n        )();\n        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));\n        (p) -> {\n            __core__appendString(__core__appendString(p, "-"), mhs)\n        }\n    };\n    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_233, fn_25) -> {\n        recurse_91 = (recurse_90, map_29) -> {\n            __core__chooseList(map_29, () -> {\n                ()\n            }, () -> {\n                head_44 = __core__headList__safe(map_29);\n                __core__chooseUnit(fn_25(__core__unBData(__core__fstPair(head_44)), __core__unIData(__core__sndPair(head_44))), recurse_90(recurse_90, __core__tailList__safe(map_29)))\n            })()\n        };\n        recurse_91(recurse_91, self_233)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__sort = (self_242, comp_4) -> {\n        recurse_57 = (recurse_56, lst_11) -> {\n            __core__chooseList(lst_11, () -> {\n                lst_11\n            }, () -> {\n                tail_2 = recurse_56(recurse_56, __core__tailList__safe(lst_11));\n                x_3 = __core__headList__safe(lst_11);\n                recurse_55 = (recurse_54, lst_9) -> {\n                    __core__chooseList(lst_9, () -> {\n                        __core__mkCons(x_3, lst_9)\n                    }, () -> {\n                        head_4 = __core__headList__safe(lst_9);\n                        __core__ifThenElse(\n                            comp_4(__core__unBData(__core__fstPair(x_3)), __core__unIData(__core__sndPair(x_3)), __core__unBData(__core__fstPair(head_4)), __core__unIData(__core__sndPair(head_4))),\n                            () -> {\n                                __core__mkCons(x_3, lst_9)\n                            },\n                            () -> {\n                                __core__mkCons(head_4, recurse_54(recurse_54, __core__tailList__safe(lst_9)))\n                            }\n                        )()\n                    })()\n                };\n                recurse_55(recurse_55, tail_2)\n            })()\n        };\n        recurse_57(recurse_57, self_242)\n    };\n    __module__CapoMintHelpers__validateUutMinting = (mph_27, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__otherMintedValue, otherMintedValue) -> {\n        mkTokenName_1 = __core__ifThenElse(\n            __useopt__mkTokenName,\n            () -> {\n                mkTokenName\n            },\n            () -> {\n                __module__CapoMintHelpers__mkUutTnFactory(seed_2)\n            }\n        )();\n        otherMintedValue_1 = __core__ifThenElse(\n            __useopt__otherMintedValue,\n            () -> {\n                otherMintedValue\n            },\n            () -> {\n                __core__mkNilPairData(())\n            }\n        )();\n        result_3 = __core__chooseUnit(msg_1 = __core__appendString("-- uut purposes: ", __helios__list[__helios__string]__join(purposes));\n        (), (delegateApproval) -> {\n            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);\n            tokenNames = __helios__common__map(purposes, (item_14) -> {\n                s = mkTokenName_1(__core__decodeUtf8(__core__unBData(item_14)));\n                __core__bData(__core__encodeUtf8(s))\n            });\n            expectedValue = __helios__value____add(__helios__value____add(__core__mkNilPairData(()), otherMintedValue_1), self_243 = __helios__common__map(tokenNames, (item_13) -> {\n                __core__mapData(tn_2 = __core__decodeUtf8(__core__unBData(item_13));\n                tnBytes_1 = __core__encodeUtf8(tn_2);\n                __core__chooseUnit(__core__ifThenElse(\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),\n                        false,\n                        true\n                    ),\n                    () -> {\n                        ()\n                    },\n                    () -> {\n                        error()\n                    }\n                )(), __helios__value__new(__helios__assetclass__new(mph_27, tnBytes_1), 1)))\n            });\n            recurse_97 = (recurse_96, lst_25) -> {\n                __core__chooseList(lst_25, () -> {\n                    __core__mkNilPairData(())\n                }, () -> {\n                    __helios__value____add(__core__unMapData(__core__headList__safe(lst_25)), recurse_96(recurse_96, __core__tailList__safe(lst_25)))\n                })()\n            };\n            recurse_97(recurse_97, self_243));\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __helios__value__contains_policy(valueMinted, mph_27),\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_27), (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_4, i_15) -> {\n                ()\n            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, mph_27);\n            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_3, i_14) -> {\n                ()\n            }), filteredOtherMint = __helios__common__filter(valueMinted, (pair_40) -> {\n                (b_21, __38) -> {\n                    __core__ifThenElse(\n                        __core__equalsByteString(b_21, mph_27),\n                        false,\n                        true\n                    )\n                }(__core__unBData(__core__fstPair(pair_40)), __core__unMapData(__core__sndPair(pair_40)))\n            }, __core__mkNilPairData(()));\n            __core__ifThenElse(\n                b = __helios__value__is_zero(filteredOtherMint);\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    msg_1 = __helios__value__show(__helios__common__filter(filteredOtherMint, (pair_7) -> {\n                        b = __core__equalsByteString(__core__unBData(__core__fstPair(pair_7)), #);\n                        __core__ifThenElse(\n                            b,\n                            false,\n                            true\n                        )\n                    }, __core__mkNilPairData(())));\n                    ()\n                },\n                () -> {\n                    ()\n                }\n            )()), (thisPolicyMintOK) -> {\n                otherPoliciesMintOk = __core__ifThenElse(\n                    b = __helios__value__is_zero(otherMintedValue_1);\n                    __core__ifThenElse(\n                        b,\n                        false,\n                        true\n                    ),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        remainingExpectedMint = __core__ifThenElse(\n                            __helios__value__contains_policy(expectedValue, mph_27),\n                            () -> {\n                                key_25 = __core__bData(mph_27);\n                                recurse_95 = (recurse_94, self_240) -> {\n                                    __core__chooseList(self_240, () -> {\n                                        self_240\n                                    }, () -> {\n                                        head_46 = __core__headList__safe(self_240);\n                                        tail_4 = __core__tailList__safe(self_240);\n                                        __core__ifThenElse(\n                                            __core__equalsData(key_25, __core__fstPair(head_46)),\n                                            () -> {\n                                                recurse_94(recurse_94, tail_4)\n                                            },\n                                            () -> {\n                                                __core__mkCons(head_46, recurse_94(recurse_94, tail_4))\n                                            }\n                                        )()\n                                    })()\n                                };\n                                recurse_95(recurse_95, expectedValue)\n                            },\n                            () -> {\n                                expectedValue\n                            }\n                        )();\n                        __core__ifThenElse(\n                            __helios__value__is_zero(remainingExpectedMint),\n                            () -> {\n                                true\n                            },\n                            () -> {\n                                result_3 = __core__chooseUnit(recurse_93 = (recurse_92, map_30) -> {\n                                    __core__chooseList(map_30, () -> {\n                                        ()\n                                    }, () -> {\n                                        head_45 = __core__headList__safe(map_30);\n                                        __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {\n                                            mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);\n                                            __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_3, expectedCount) -> {\n                                                __core__ifThenElse(\n                                                    (b) -> {\n                                                        __core__ifThenElse(\n                                                            b,\n                                                            false,\n                                                            true\n                                                        )\n                                                    }(__cond_56 = __helios__common__map_get(mintedThisPolicy, __core__bData(tokenName_3), (x_12) -> {\n                                                        __core__constrData(0, __core__mkCons(x_12, __core__mkNilData(())))\n                                                    }, () -> {\n                                                        __core__constrData(1, __core__mkNilData(()))\n                                                    });\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_56)), 1),\n                                                        () -> {\n                                                            (__lhs_0_117) -> {\n                                                                false\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__lhs_0_116) -> {\n                                                                actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_116))));\n                                                                __core__equalsInteger(actualCount, expectedCount)\n                                                            }\n                                                        }\n                                                    )()(__cond_56)),\n                                                    () -> {\n                                                        error()\n                                                    },\n                                                    () -> {\n                                                        ()\n                                                    }\n                                                )()\n                                            })\n                                        }(__core__unBData(__core__fstPair(head_45)), __core__unMapData(__core__sndPair(head_45))), recurse_92(recurse_92, __core__tailList__safe(map_30)))\n                                    })()\n                                };\n                                recurse_93(recurse_93, remainingExpectedMint), true);\n                                true\n                            }\n                        )()\n                    }\n                )();\n                __core__chooseUnit(__core__ifThenElse(\n                    otherPoliciesMintOk,\n                    () -> {\n                        ()\n                    },\n                    () -> {\n                        error()\n                    }\n                )(), __core__chooseUnit(__core__ifThenElse(\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(__helios__common__length(purposes), 1),\n                        false,\n                        true\n                    ),\n                    () -> {\n                        msg_1 = __core__appendString(__core__appendString(__core__appendString("\u2705 ok: minted uuts: {", __helios__list[__helios__string]__join(purposes)), "}"), mkTokenName_1(""));\n                        ()\n                    },\n                    () -> {\n                        msg_1 = __core__appendString("\u2705 ok: minted uut: ", d = __core__headList(tokenNames);\n                        __core__decodeUtf8(__core__unBData(d)));\n                        ()\n                    }\n                )(), otherPoliciesMintOk))\n            }(result_3 = __core__chooseUnit(__core__ifThenElse(\n                __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted)),\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__chooseUnit((cond) -> {\n                ()\n            }(result_3 = __core__chooseUnit(__core__ifThenElse(\n                b = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), (input_4) -> {\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_4))), seed_2)\n                });\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), true);\n            true), true));\n            true))))\n        }(__lhs_0_115 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n        charterAc_1 = __helios__assetclass__new(mph_27, #63686172746572);\n        hasCharter_1 = (txin_1) -> {\n            a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));\n            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_1);\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(a_3, 0),\n                false,\n                true\n            )\n        };\n        (charterUtxo_1) -> {\n            __helios__common__assert_constr_index(data_140 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));\n            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n            __helios__common__assert_constr_index(data_140, 0), 0)\n        }(__cond_13 = __helios__common__find_safe(refInputs_1, hasCharter_1);\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_13)), 0),\n            () -> {\n                (self_21) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                }\n            },\n            () -> {\n                (__lhs_0_21) -> {\n                    (__cond_14) -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 0),\n                            () -> {\n                                (self_21) -> {\n                                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                }\n                            },\n                            () -> {\n                                (__lhs_0_22) -> {\n                                    error()\n                                }\n                            }\n                        )()(__cond_14)\n                    }(self_144 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                    __helios__common__find_safe(self_144, hasCharter_1))\n                }\n            }\n        )()(__cond_13)), 0);\n        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_115);\n        true));\n        __core__chooseUnit(__core__ifThenElse(\n            result_3,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), result_3)\n    };\n    __module__ReqtsPolicy__daysInFuture = () -> {\n        __core__chooseUnit(cond = __core__lessThanEqualsInteger(__core__subtractInteger(__helios__timerange__end(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))))), __helios__timerange__start(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))), 3600000);\n        __core__ifThenElse(\n            cond,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), latestAcceptable = __core__addInteger(__core__addInteger(__helios__timerange__end(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))))), 6307200000), 3600000);\n        a_4 = __core__addInteger(__helios__timerange__start(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))))), 6307200000);\n        __core__constrData(0, __core__mkCons(__core__constrData(0, __core__mkCons(__core__constrData(1, __core__mkCons(__core__iData(a_4), __core__mkNilData(()))), __core__mkCons(__core__constrData(1, __core__mkNilData(())), __core__mkNilData(())))), __core__mkCons(__core__constrData(0, __core__mkCons(__core__constrData(1, __core__mkCons(__core__iData(latestAcceptable), __core__mkNilData(()))), __core__mkCons(__core__constrData(1, __core__mkNilData(())), __core__mkNilData(())))), __core__mkNilData(())))))\n    };\n    __module__BasicDelegate__checkOneActivity_1 = (__module__BasicDelegate__checkOneActivity, dgtionDatum, activity_3, dd, baseCctx) -> {\n        checkNonDelegatedActivities = __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 8),\n            () -> {\n                (__lhs_0_242) -> {\n                    activities_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_242))));\n                    cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx);\n                    result_3 = __helios__common__all(activities_2, (rawActivity_2) -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 6),\n                            () -> {\n                                (__lhs_0_264) -> {\n                                    error()\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 5),\n                                    () -> {\n                                        (__lhs_0_263) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 7),\n                                            () -> {\n                                                (__lhs_0_262) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 2),\n                                                    () -> {\n                                                        (__lhs_0_261) -> {\n                                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity_2, dd, cctx_6)\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 3),\n                                                            () -> {\n                                                                (__lhs_0_260) -> {\n                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity_2, dd, cctx_6)\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 4),\n                                                                    () -> {\n                                                                        (__lhs_0_259) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 9),\n                                                                            () -> {\n                                                                                (__lhs_0_258) -> {\n                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity_2, dd, cctx_6)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 1),\n                                                                                    () -> {\n                                                                                        (__lhs_0_257) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 0),\n                                                                                            () -> {\n                                                                                                (__lhs_0_256) -> {\n                                                                                                    error()\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__lhs_0_255) -> {\n                                                                                                    error()\n                                                                                                }\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()\n                            }\n                        )()(rawActivity_2)\n                    });\n                    __core__chooseUnit(__core__ifThenElse(\n                        result_3,\n                        () -> {\n                            ()\n                        },\n                        () -> {\n                            error()\n                        }\n                    )(), result_3)\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                    () -> {\n                        (__lhs_0_236) -> {\n                            innerActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_236)));\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 0),\n                                () -> {\n                                    (__lhs_0_240) -> {\n                                        seed_9 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_240)));\n                                        (purpose_7) -> {\n                                            otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__core__unBData(__core__headList(__core__tailList(dd))), __core__unBData(__core__headList(__core__tailList(__core__tailList(dd))))), -1);\n                                            (tnStr_3) -> {\n                                                cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(baseCctx);\n                                                (isUpdatingCharter) -> {\n                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_9, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_7)), __core__mkNilData(())), false, (), true, otherMintedValue_2);\n                                                    __core__ifThenElse(\n                                                        isMintingOk,\n                                                        () -> {\n                                                            isUpdatingCharter\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                }(__cond_109 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5);\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_109)), 5),\n                                                    () -> {\n                                                        (__lhs_0_241) -> {\n                                                            true\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        (__73) -> {\n                                                            false\n                                                        }\n                                                    }\n                                                )()(__cond_109))\n                                            }(self_14 = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd))));\n                                            __core__ifThenElse(\n                                                __helios__string__is_valid_utf8(self_14),\n                                                () -> {\n                                                    __core__decodeUtf8__safe(self_14)\n                                                },\n                                                () -> {\n                                                    __helios__bytearray__show(self_14)\n                                                }\n                                            )())\n                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_240))));\n                                        __core__decodeUtf8(__core__unBData(d)))\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 1),\n                                        () -> {\n                                            (__lhs_0_239) -> {\n                                                __core__equalsInteger((self_24, assetClass_1) -> {\n                                                    __common29 = __core__unConstrData(assetClass_1);\n                                                    __common30 = __core__sndPair(__common29);\n                                                    mph_3 = __core__headList(__common30);\n                                                    tokenName_1 = __core__headList(__core__tailList(__common30));\n                                                    outer_1 = (outer, inner, map) -> {\n                                                        __core__chooseList(map, () -> {\n                                                            error()\n                                                        }, () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_3),\n                                                                () -> {\n                                                                    inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))\n                                                                },\n                                                                () -> {\n                                                                    outer(outer, inner, __core__tailList__safe(map))\n                                                                }\n                                                            )()\n                                                        })()\n                                                    };\n                                                    outer_1(outer_1, (inner_1, map_1) -> {\n                                                        __core__chooseList(map_1, () -> {\n                                                            error()\n                                                        }, () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),\n                                                                () -> {\n                                                                    __core__unIData(__core__sndPair(__core__headList__safe(map_1)))\n                                                                },\n                                                                () -> {\n                                                                    inner_1(inner_1, __core__tailList__safe(map_1))\n                                                                }\n                                                            )()\n                                                        })()\n                                                    }, self_24)\n                                                }(__helios__tx__minted(__helios__scriptcontext__tx), __helios__assetclass__new(__core__unBData(__core__headList(__core__tailList(dd))), __core__unBData(__core__headList(__core__tailList(__core__tailList(dd)))))), -1)\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0_237) -> {\n                                                error()\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(innerActivity)\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                            () -> {\n                                (__lhs_0_137) -> {\n                                    dCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_137)));\n                                    cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__withCharterInput_1(mph_25 = __core__unBData(__core__headList(__core__tailList(dd)));\n                                    __core__mkCons(__core__bData(mph_25), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(())))));\n                                    __common17 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);\n                                    __core__chooseUnit(__cond_106 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4);\n                                    __common28 = __core__fstPair(__core__unConstrData(__cond_106));\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__common28, 0),\n                                        () -> {\n                                            (__lhs_0_235) -> {\n                                                cCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_235)));\n                                                __core__ifThenElse(\n                                                    __core__equalsData(cCLA, dCLA),\n                                                    () -> {\n                                                        ()\n                                                    },\n                                                    () -> {\n                                                        error()\n                                                    }\n                                                )()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__common28, 5),\n                                                () -> {\n                                                    (__lhs_0_233) -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                                            () -> {\n                                                                (__lhs_0_234) -> {\n                                                                    ()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__72) -> {\n                                                                    error()\n                                                                }\n                                                            }\n                                                        )()(dCLA)\n                                                    }\n                                                },\n                                                () -> {\n                                                    (__71) -> {\n                                                        error()\n                                                    }\n                                                }\n                                            )()\n                                        }\n                                    )()(__cond_106), neededRole = __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 4),\n                                        () -> {\n                                            (__lhs_0_105) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                () -> {\n                                                    (__lhs_0_104) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                        () -> {\n                                                            (__lhs_0_103) -> {\n                                                                __core__constrData(1, __core__mkNilData(()))\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                                () -> {\n                                                                    (__lhs_0_102) -> {\n                                                                        __core__constrData(0, __core__mkNilData(()))\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                                        () -> {\n                                                                            (__lhs_0_101) -> {\n                                                                                __core__constrData(1, __core__mkNilData(()))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                                () -> {\n                                                                                    (__lhs_0_100) -> {\n                                                                                        __core__constrData(6, __core__mkNilData(()))\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    (__lhs_0_99) -> {\n                                                                                        error()\n                                                                                    }\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()(dCLA);\n                                    myCurrentRole = __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 7),\n                                        () -> {\n                                            (__lhs_0_141) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 1),\n                                                () -> {\n                                                    (__lhs_0_140) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 0),\n                                                        () -> {\n                                                            (__lhs_0_139) -> {\n                                                                error()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 6),\n                                                                () -> {\n                                                                    __common15 = __core__headList(cctx_4);\n                                                                    __common16 = __core__unBData(__common15);\n                                                                    (__lhs_0_138) -> {\n                                                                        __core__ifThenElse(\n                                                                            input_2 = __helios__scriptcontext__get_current_input();\n                                                                            acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__common17), __common16);\n                                                                            a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_2))));\n                                                                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), acMintDgt);\n                                                                            __core__ifThenElse(\n                                                                                __core__lessThanEqualsInteger(a_3, 0),\n                                                                                false,\n                                                                                true\n                                                                            ),\n                                                                            () -> {\n                                                                                __core__constrData(0, __core__mkNilData(()))\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    input_3 = __helios__scriptcontext__get_current_input();\n                                                                                    acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__common17)))), __common16);\n                                                                                    a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_3))));\n                                                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), acSpendDgt);\n                                                                                    __core__ifThenElse(\n                                                                                        __core__lessThanEqualsInteger(a_3, 0),\n                                                                                        false,\n                                                                                        true\n                                                                                    ),\n                                                                                    () -> {\n                                                                                        __core__constrData(1, __core__mkNilData(()))\n                                                                                    },\n                                                                                    () -> {\n                                                                                        error()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    (__41) -> {\n                                                                        error()\n                                                                    }\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()(neededRole);\n                                    __core__ifThenElse(\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                            () -> {\n                                                (__lhs_0_229) -> {\n                                                    seed_8 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_229)));\n                                                    (purpose_6) -> {\n                                                        mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                            () -> {\n                                                                (__lhs_0_230) -> {\n                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                        __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_8, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_6)), __core__mkNilData(())), true, mkTn_1, false, ()),\n                                                                        () -> {\n                                                                            ()\n                                                                        },\n                                                                        () -> {\n                                                                            ()\n                                                                        }\n                                                                    )(), (__cond_105) -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_105)), 1),\n                                                                            () -> {\n                                                                                (__lhs_0_232) -> {\n                                                                                    error()\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__lhs_0_231) -> {\n                                                                                    dgtLink_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_231))));\n                                                                                    __core__chooseUnit(cond = __core__equalsString(d = __core__headList(dgtLink_3);\n                                                                                    __core__decodeUtf8(__core__unBData(d)), mkTn_1(purpose_6));\n                                                                                    __core__ifThenElse(\n                                                                                        cond,\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3, __core__unBData(__core__headList(__core__tailList(dd)))))\n                                                                                }\n                                                                            }\n                                                                        )()(__cond_105)\n                                                                    }((self_206) -> {\n                                                                        __helios__common__map_get(self_206, __core__bData(__core__encodeUtf8(purpose_6)), (x_6) -> {\n                                                                            __core__constrData(0, __core__mkCons(x_6, __core__mkNilData(())))\n                                                                        }, () -> {\n                                                                            __core__constrData(1, __core__mkNilData(()))\n                                                                        })\n                                                                    }(self_165 = __module__CapoHelpers__CapoCtx[]__getNextCharterData((self_214) -> {\n                                                                        __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_214))\n                                                                    }, cctx_4);\n                                                                    __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_165)))))))))\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__70) -> {\n                                                                    error()\n                                                                }\n                                                            }\n                                                        )()(myCurrentRole)\n                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_229))));\n                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                    () -> {\n                                                        (__lhs_0_177) -> {\n                                                            charterData_4 = __helios__common__assert_constr_index(__common17, 0);\n                                                            __common0 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))));\n                                                            nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData((self_214) -> {\n                                                                __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_214))\n                                                            }, cctx_4);\n                                                            nextChangeList = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData_2)))));\n                                                            newChange = __core__headList(nextChangeList);\n                                                            __lhs_0_178 = __helios__common__assert_constr_index(newChange, 0);\n                                                            __lhs_0_0_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_178))));\n                                                            __common8 = __core__tailList(__lhs_0_0_2);\n                                                            action = __core__headList(__lhs_0_0_2);\n                                                            __common20 = __core__unConstrData(action);\n                                                            __common22 = __core__equalsInteger(__core__fstPair(__common20), 1);\n                                                            role_2 = __core__headList(__common8);\n                                                            __common3 = __core__equalsInteger(__core__fstPair(__core__unConstrData(role_2)), 4);\n                                                            OdgtLink = __core__headList(__core__tailList(__common8));\n                                                            newDgtRoleName = __core__ifThenElse(\n                                                                __common3,\n                                                                () -> {\n                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name\n                                                                },\n                                                                () -> {\n                                                                    (__54) -> {\n                                                                        error()\n                                                                    }\n                                                                }\n                                                            )()(role_2);\n                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                __common22,\n                                                                () -> {\n                                                                    (__lhs_0_227) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    (__68) -> {\n                                                                        ()\n                                                                    }\n                                                                }\n                                                            )()(action), __core__chooseUnit((cond) -> {\n                                                                __core__ifThenElse(\n                                                                    cond,\n                                                                    () -> {\n                                                                        ()\n                                                                    },\n                                                                    () -> {\n                                                                        error()\n                                                                    }\n                                                                )()\n                                                            }(self_266 = __core__tailList(nextChangeList);\n                                                            __core__equalsData(__core__listData(self_266), __core__listData(__common0))), __core__ifThenElse(\n                                                                __common22,\n                                                                () -> {\n                                                                    (__lhs_0_226) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                        () -> {\n                                                                            (__lhs_0_225) -> {\n                                                                                __common23 = __core__sndPair(__core__unConstrData(__lhs_0_225));\n                                                                                __common24 = __core__tailList(__common23);\n                                                                                seed_7 = __core__headList(__common23);\n                                                                                (purpose_5) -> {\n                                                                                    (idPrefix_9) -> {\n                                                                                        (callback_20) -> {\n                                                                                            callback_20(seed_7, purpose_5, idPrefix_9)\n                                                                                        }\n                                                                                    }(d = __core__headList(__core__tailList(__common24));\n                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                }(d = __core__headList(__common24);\n                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            (__lhs_0_224) -> {\n                                                                                seed_6 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_224)));\n                                                                                (purpose_4) -> {\n                                                                                    (idPrefix_8) -> {\n                                                                                        (callback_19) -> {\n                                                                                            callback_19(seed_6, purpose_4, idPrefix_8)\n                                                                                        }\n                                                                                    }(d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_224)))));\n                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_224))));\n                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                            }\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()(action)((seed_5, purpose_3, pendingActionIdPrefix) -> {\n                                                                possibleMintDgtVerifications = __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                    () -> {\n                                                                        (__lhs_0_196) -> {\n                                                                            true\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                            () -> {\n                                                                                (__lhs_0_180) -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 1),\n                                                                                        () -> {\n                                                                                            (__lhs_0_188) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__56) -> {\n                                                                                                mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);\n                                                                                                mintedDgTkn = __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_5, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_3)), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, ());\n                                                                                                dgtLink_2 = __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(OdgtLink)), 1),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_182) -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (self_205) -> {\n                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_205))))\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()(OdgtLink);\n                                                                                                (__common1) -> {\n                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                        __core__equalsString(__common1, mkTokenName_2(purpose_3)),\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), (delegateTakesOwnership) -> {\n                                                                                                        possibleExtraReplacementCheck = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_183) -> {\n                                                                                                                    __core__chooseUnit(__cond_87 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_87)), 0),\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_185) -> {\n                                                                                                                                dde = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_185)));\n                                                                                                                                entryType_1 = __helios__common__mStruct_field(dde, #747065);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_1)), 1),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_187) -> {\n                                                                                                                                            (idPrefix_7) -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __core__equalsString(idPrefix_7, pendingActionIdPrefix),\n                                                                                                                                                    () -> {\n                                                                                                                                                        ()\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_187))));\n                                                                                                                                            __core__decodeUtf8(__core__unBData(d)))\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__58) -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(entryType_1)\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_184) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(__cond_87), true)\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                (__57) -> {\n                                                                                                                    true\n                                                                                                                }\n                                                                                                            }\n                                                                                                        )()(action);\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__ifThenElse(\n                                                                                                                mintedDgTkn,\n                                                                                                                () -> {\n                                                                                                                    true\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    false\n                                                                                                                }\n                                                                                                            )(),\n                                                                                                            () -> {\n                                                                                                                possibleExtraReplacementCheck\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                false\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }(assertion_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2, __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                        assertion_2,\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), true)))\n                                                                                                }(d = __core__headList(dgtLink_2);\n                                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                                            }\n                                                                                        }\n                                                                                    )()(action)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__55) -> {\n                                                                                    error()\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()(myCurrentRole);\n                                                                otherPossibleVerifications = __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                    () -> {\n                                                                        (__lhs_0_223) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                            () -> {\n                                                                                (__lhs_0_197) -> {\n                                                                                    isNotADuplicate = __helios__common__all(__common0, (pdChange_2) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(pdChange_2)), 0),\n                                                                                            () -> {\n                                                                                                (__lhs_0_198) -> {\n                                                                                                    __lhs_0_0_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_198))));\n                                                                                                    pendingRole = __core__headList(__core__tailList(__lhs_0_0_3));\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(pendingRole)), 4),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_199) -> {\n                                                                                                                changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_199);\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsString(changingDgtName, newDgtRoleName),\n                                                                                                                    false,\n                                                                                                                    true\n                                                                                                                )\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__62) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()(pendingRole)\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__61) -> {\n                                                                                                    error()\n                                                                                                }\n                                                                                            }\n                                                                                        )()(pdChange_2)\n                                                                                    });\n                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                        isNotADuplicate,\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )(), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                    possibleReplacementIsCorrect = __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                                        () -> {\n                                                                                            (__lhs_0_221) -> {\n                                                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 0),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_222) -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__67) -> {\n                                                                                                            ()\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()(existingRoleEntryMaybe), true)\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                () -> {\n                                                                                                    __common18 = __core__unConstrData(role_2);\n                                                                                                    __common19 = __core__fstPair(__common18);\n                                                                                                    __common25 = __core__equalsInteger(__common19, 2);\n                                                                                                    (__lhs_0_202) -> {\n                                                                                                        replacesDgt = __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_202))))));\n                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                            __common25,\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_220) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(__common19, 3),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_219) -> {\n                                                                                                                            error()\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__common19, 7),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_218) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__66) -> {\n                                                                                                                                    ()\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(role_2), existingDgtLink_1 = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 1),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_205) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_203) -> {\n                                                                                                                    __lhs_0_0_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_203)));\n                                                                                                                    entryType_2 = __helios__common__mStruct_field(__lhs_0_0_4, #747065);\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_2)), 1),\n                                                                                                                        () -> {\n                                                                                                                            (self_157) -> {\n                                                                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_157))))\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__64) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(entryType_2)\n                                                                                                                }\n                                                                                                            }\n                                                                                                        )()(existingRoleEntryMaybe);\n                                                                                                        existingDgTkn = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__common19, 0),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_213) -> {\n                                                                                                                    some_5 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4), __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                                    __core__constrData(0, __core__mkCons(some_5, __core__mkNilData(())))\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(__common19, 1),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_212) -> {\n                                                                                                                            some_5 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_4)))), __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                                            __core__constrData(0, __core__mkCons(some_5, __core__mkNilData(())))\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __common3,\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_211) -> {\n                                                                                                                                    some_5 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1, __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                                                    __core__constrData(0, __core__mkCons(some_5, __core__mkNilData(())))\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__common19, 5),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_210) -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(__common19, 6),\n                                                                                                                                            () -> {\n                                                                                                                                                (__lhs_0_209) -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __common25,\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_208) -> {\n                                                                                                                                                            error()\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __core__equalsInteger(__common19, 3),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_207) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_206) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        )()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }\n                                                                                                                                        )()\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(role_2);\n                                                                                                        __core__chooseUnit(cond = __core__equalsData(replacesDgt, __core__headList(__core__sndPair(__core__unConstrData(existingDgTkn))));\n                                                                                                        __core__ifThenElse(\n                                                                                                            cond,\n                                                                                                            () -> {\n                                                                                                                ()\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        )(), true))\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__lhs_0_200) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(action);\n                                                                                    __core__ifThenElse(\n                                                                                        isNotADuplicate,\n                                                                                        () -> {\n                                                                                            possibleReplacementIsCorrect\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )())\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__60) -> {\n                                                                                    error()\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()(myCurrentRole);\n                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                    __core__equalsInteger(__helios__common__length(__common0), 0),\n                                                                    () -> {\n                                                                        ()\n                                                                    },\n                                                                    () -> {\n                                                                        error()\n                                                                    }\n                                                                )(), __core__ifThenElse(\n                                                                    possibleMintDgtVerifications,\n                                                                    () -> {\n                                                                        otherPossibleVerifications\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )())\n                                                            })))\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                            () -> {\n                                                                (__lhs_0_176) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                    () -> {\n                                                                        (__lhs_0_153) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                                            () -> {\n                                                                                (__lhs_0_144) -> {\n                                                                                    manifestActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_144)));\n                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 0),\n                                                                                        () -> {\n                                                                                            (__lhs_0_152) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 1),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_151) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 2),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_146) -> {\n                                                                                                                (key_31) -> {\n                                                                                                                    tokenName_5 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_146)))));\n                                                                                                                    charterData_3 = __helios__common__assert_constr_index(__common17, 0);\n                                                                                                                    nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData((self_214) -> {\n                                                                                                                        __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_214))\n                                                                                                                    }, cctx_4);\n                                                                                                                    __common2 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData))));\n                                                                                                                    (refInput) -> {\n                                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                                            __core__equalsData(refInput, refInput),\n                                                                                                                            () -> {\n                                                                                                                                ()\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        )(), __core__chooseUnit(__cond_65 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__common2, key_31);\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_65)), 1),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_150) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_147) -> {\n                                                                                                                                    __lhs_0_0 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_147)));\n                                                                                                                                    entryType = __helios__common__mStruct_field(__lhs_0_0, #747065);\n                                                                                                                                    tn_5 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0, #746e));\n                                                                                                                                    mph_28 = __helios__common__mStruct_field(__lhs_0_0, #6d7068);\n                                                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                        __core__equalsByteString(tn_5, tokenName_5),\n                                                                                                                                        () -> {\n                                                                                                                                            ()\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    )(), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_28)), 0),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_149) -> {\n                                                                                                                                                error()\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__44) -> {\n                                                                                                                                                ()\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(mph_28), __core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType)), 0),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_148) -> {\n                                                                                                                                                ()\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__43) -> {\n                                                                                                                                                error()\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(entryType)))\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()(__cond_65), (cond) -> {\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                cond,\n                                                                                                                                () -> {\n                                                                                                                                    ()\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            )()\n                                                                                                                        }(self_281 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_3))));\n                                                                                                                        __core__equalsData(__core__mapData(self_281), __core__mapData(key_30 = __core__bData(__core__encodeUtf8(key_31));\n                                                                                                                        recurse_103 = (recurse_102, self_280) -> {\n                                                                                                                            __core__chooseList(self_280, () -> {\n                                                                                                                                self_280\n                                                                                                                            }, () -> {\n                                                                                                                                head_49 = __core__headList__safe(self_280);\n                                                                                                                                tail_6 = __core__tailList__safe(self_280);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsData(key_30, __core__fstPair(head_49)),\n                                                                                                                                    () -> {\n                                                                                                                                        recurse_102(recurse_102, tail_6)\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __core__mkCons(head_49, recurse_102(recurse_102, tail_6))\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            })()\n                                                                                                                        };\n                                                                                                                        recurse_103(recurse_103, __common2))))))\n                                                                                                                    }(hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_4, false, tokenName_5);\n                                                                                                                    (__cond_37) -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_37)), 1),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_71) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (self_21) -> {\n                                                                                                                                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()(__cond_37)\n                                                                                                                    }(self_144 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                                                                                                                    __helios__common__find_safe(self_144, hasDD)))\n                                                                                                                }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_146)));\n                                                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 3),\n                                                                                                                () -> {\n                                                                                                                    (__lhs_0_145) -> {\n                                                                                                                        error()\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    (__42) -> {\n                                                                                                                        ()\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(manifestActivity), true)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                                                    () -> {\n                                                                                        (__lhs_0_143) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__lhs_0_142) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()(dCLA),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )())\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 5),\n                                    () -> {\n                                        (__lhs_0_136) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 6),\n                                            () -> {\n                                                (__lhs_0_135) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 7),\n                                                    () -> {\n                                                        (__lhs_0_133) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),\n                                                            () -> {\n                                                                (__lhs_0_132) -> {\n                                                                    true\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),\n                                                                    () -> {\n                                                                        (__lhs_0_131) -> {\n                                                                            true\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 4),\n                                                                            () -> {\n                                                                                (__lhs_0_130) -> {\n                                                                                    true\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__lhs_0_129) -> {\n                                                                                    true\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()\n                            }\n                        )()\n                    }\n                )()\n            }\n        )()(activity_3);\n        __core__chooseUnit(__core__ifThenElse(\n            checkNonDelegatedActivities,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), (result_3) -> {\n            __core__chooseUnit(__core__ifThenElse(\n                result_3,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), result_3)\n        }(cctx = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1, baseCctx);\n        __core__ifThenElse(\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                () -> {\n                    (__lhs_0_126) -> {\n                        true\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                        () -> {\n                            (__lhs_0_125) -> {\n                                error()\n                            }\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),\n                                () -> {\n                                    __common26 = __core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx));\n                                    __common27 = __core__tailList(__common26);\n                                    __common31 = __core__headList(__common27);\n                                    (__lhs_0_123) -> {\n                                        VMA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_123)));\n                                        seed_3 = __core__headList(__core__sndPair(__core__unConstrData(VMA)));\n                                        mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);\n                                        __core__chooseUnit((cond) -> {\n                                            ()\n                                        }(self_230 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx);\n                                        true), (newReqt) -> {\n                                            reqtData_1 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(newReqt))))));\n                                            __core__chooseUnit(cond = __core__lessThanEqualsInteger(__core__subtractInteger(__helios__timerange__end(__common31), __helios__timerange__start(__common31)), 3600000);\n                                            __core__ifThenElse(\n                                                cond,\n                                                () -> {\n                                                    ()\n                                                },\n                                                () -> {\n                                                    error()\n                                                }\n                                            )(), acceptableExpiry = __module__ReqtsPolicy__daysInFuture();\n                                            discountEnds = __core__unIData(__helios__common__mStruct_field(reqtData_1, #657870));\n                                            __core__chooseUnit((cond, msg_2) -> {\n                                                __core__ifThenElse(\n                                                    cond,\n                                                    () -> {\n                                                        ()\n                                                    },\n                                                    () -> {\n                                                        error()\n                                                    }\n                                                )()\n                                            }(__helios__timerange__contains(acceptableExpiry, discountEnds), __core__appendString("wrong discount expiry date too late seconds: ", __helios__int__show(__core__quotientInteger(__core__subtractInteger(discountEnds, __helios__timerange__end(acceptableExpiry)), 1000)))), __module__CapoMintHelpers__validateUutMinting(self_153 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(dgtionDatum))));\n                                            __core__unBData(__core__headList(__core__tailList(self_153))), seed_3, __core__mkCons(__core__bData(#72657174), __core__mkNilData(())), true, mkTn, false, ())))\n                                        }(ac_2 = __helios__assetclass__new(__core__unBData(__core__headList(cctx)), __core__encodeUtf8(mkTn("reqt")));\n                                        capoAddr_3 = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(cctx));\n                                        (__cond_42) -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_42)), 1),\n                                                () -> {\n                                                    (__lhs_0_78) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    (__lhs_0_77) -> {\n                                                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_77)))\n                                                    }\n                                                }\n                                            )()(__cond_42)\n                                        }(self_147 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                                        __helios__common__find_safe(self_147, (txout) -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txout))))), ac_2), 1),\n                                                () -> {\n                                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txout))), capoAddr_3)\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }))))\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),\n                                        () -> {\n                                            (__lhs_0_119) -> {\n                                                VSA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_119)));\n                                                __core__chooseUnit(msg_1 = __core__appendString("capo mph: ", __helios__bytearray__show(self_153 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(dgtionDatum))));\n                                                __core__unBData(__core__headList(__core__tailList(self_153)))));\n                                                (), __core__chooseUnit((cond) -> {\n                                                    ()\n                                                }(self_230 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx);\n                                                true), __core__chooseUnit(msg_1 = __core__appendString("\ncapo addr", self_56 = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(cctx));\n                                                __helios__data__show_constr_data((tag_5, fields_7) -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(tag_5, 0),\n                                                        () -> {\n                                                            __core__appendString("{spending_credential:", __core__appendString(__helios__data__show_field(0, (self_52) -> {\n                                                                __helios__data__show_constr_data((tag_2, fields_3) -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(tag_2, 0),\n                                                                        () -> {\n                                                                            __core__appendString("PubKey{hash:", __core__appendString(__helios__data__show_field(0, __helios__data__show_bdata(__helios__bytearray__show), fields_3), "}"))\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(tag_2, 1),\n                                                                                () -> {\n                                                                                    __core__appendString("Validator{hash:", __core__appendString(__helios__data__show_field(0, __helios__data__show_bdata(__helios__bytearray__show), fields_3), "}"))\n                                                                                },\n                                                                                () -> {\n                                                                                    __helios__data__show(__core__constrData(tag_2, fields_3))()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }, self_52)\n                                                            }, fields_7), __core__appendString(",staking_credential:", __core__appendString(__helios__data__show_field(1, (self_55) -> {\n                                                                __core__chooseData(self_55, () -> {\n                                                                    pair_6 = __core__unConstrData__safe(self_55);\n                                                                    fields_6 = __core__sndPair(pair_6);\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(pair_6), 0),\n                                                                        () -> {\n                                                                            __core__chooseList(fields_6, () -> {\n                                                                                "Some{<missing>}"\n                                                                            }, () -> {\n                                                                                value_2 = __core__headList__safe(fields_6);\n                                                                                __core__appendString("Some{", __core__appendString(__helios__data__show_constr_data((tag_4, fields_5) -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(tag_4, 0),\n                                                                                        () -> {\n                                                                                            __core__appendString("Hash{hash:", __core__appendString(__helios__data__show_field(0, (self_53) -> {\n                                                                                                __helios__data__show_constr_data((tag_3, fields_4) -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(tag_3, 0),\n                                                                                                        () -> {\n                                                                                                            __core__appendString("StakeKey{hash:", __core__appendString(__helios__data__show_field(0, __helios__data__show_bdata(__helios__bytearray__show), fields_4), "}"))\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__equalsInteger(tag_3, 1),\n                                                                                                                () -> {\n                                                                                                                    __core__appendString("Validator{hash:", __core__appendString(__helios__data__show_field(0, __helios__data__show_bdata(__helios__bytearray__show), fields_4), "}"))\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    __helios__data__show(__core__constrData(tag_3, fields_4))()\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }, self_53)\n                                                                                            }, fields_5), "}"))\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(tag_4, 1),\n                                                                                                () -> {\n                                                                                                    __common6 = __helios__data__show_field(2, (data_11) -> {\n                                                                                                        callback_nok_6 = __helios__data__show(data_11);\n                                                                                                        __core__chooseData(data_11, callback_nok_6, callback_nok_6, callback_nok_6, () -> {\n                                                                                                            __helios__int__show(__core__unIData__safe(data_11))\n                                                                                                        }, callback_nok_6)()\n                                                                                                    }, fields_5);\n                                                                                                    __core__appendString("Ptr{i:", __core__appendString(__common6, __core__appendString(",j:", __core__appendString(__common6, __core__appendString(",k:", __core__appendString(__common6, "}"))))))\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __helios__data__show(value_2)()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()\n                                                                                }, value_2), "}"))\n                                                                            })()\n                                                                        },\n                                                                        () -> {\n                                                                            "None"\n                                                                        }\n                                                                    )()\n                                                                }, () -> {\n                                                                    __helios__data__show(self_55)()\n                                                                }, () -> {\n                                                                    __helios__data__show(self_55)()\n                                                                }, () -> {\n                                                                    __helios__data__show(self_55)()\n                                                                }, () -> {\n                                                                    __helios__data__show(self_55)()\n                                                                })()\n                                                            }, fields_7), "}"))))\n                                                        },\n                                                        () -> {\n                                                            __helios__data__show(self_56)()\n                                                        }\n                                                    )()\n                                                }, self_56));\n                                                (), recId_4 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(VSA))));\n                                                hasDD_2 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx, true, recId_4);\n                                                (hasDDOutput) -> {\n                                                    __core__chooseUnit((self_261) -> {\n                                                        recurse_99 = (recurse_98, lst_26) -> {\n                                                            __core__chooseList(lst_26, () -> {\n                                                                ()\n                                                            }, () -> {\n                                                                __core__chooseUnit(utxo_6 = __core__headList__safe(lst_26);\n                                                                reqtData = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_6))));\n                                                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                                                updatedUtxo = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), hasDDOutput);\n                                                                updatedReqt = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(updatedUtxo))))));\n                                                                (__lhs_0_121) -> {\n                                                                    (__lhs_0_122) -> {\n                                                                        freshExpiry = __module__ReqtsPolicy__daysInFuture();\n                                                                        __core__ifThenElse(\n                                                                            (a_3, b_3) -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__lessThanEqualsInteger(a_3, b_3),\n                                                                                    false,\n                                                                                    true\n                                                                                )\n                                                                            }(__helios__timerange__end(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))))), __core__unIData(__helios__common__mStruct_field(reqtData, #657870))),\n                                                                            () -> {\n                                                                                cond = __helios__timerange__contains(freshExpiry, __core__unIData(__helios__common__mStruct_field(updatedReqt, #657870)));\n                                                                                __core__ifThenElse(\n                                                                                    cond,\n                                                                                    () -> {\n                                                                                        ()\n                                                                                    },\n                                                                                    () -> {\n                                                                                        error()\n                                                                                    }\n                                                                                )()\n                                                                            },\n                                                                            () -> {\n                                                                                ()\n                                                                            }\n                                                                        )()\n                                                                    }(self_59 = __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(updatedUtxo)))));\n                                                                    __helios__value__get_safe(self_59, __core__constrData(0, __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(#), __core__mkNilData(()))))))\n                                                                }((self_59) -> {\n                                                                    __helios__value__get_safe(self_59, __core__constrData(0, __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(#), __core__mkNilData(())))))\n                                                                }(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_6))));\n                                                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))))), recurse_98(recurse_98, __core__tailList__safe(lst_26)))\n                                                            })()\n                                                        };\n                                                        recurse_99(recurse_99, self_261)\n                                                    }(self_65 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                                                    __helios__common__filter(self_65, hasDD_2, __core__mkNilData(()))), true)\n                                                }(capoAddr_2 = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(cctx));\n                                                (txo_1) -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo_1))), capoAddr_2),\n                                                        () -> {\n                                                            data_163 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(txo_1))))));\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(data_163)), 2),\n                                                                () -> {\n                                                                    (__lhs_0_75) -> {\n                                                                        x_8 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_163);\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_8), "Reqt"),\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsByteString(recId_4, #),\n                                                                                    () -> {\n                                                                                        true\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_8, #406964)), recId_4)\n                                                                                    }\n                                                                                )()\n                                                                            },\n                                                                            () -> {\n                                                                                false\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    (__32) -> {\n                                                                        false\n                                                                    }\n                                                                }\n                                                            )()(data_163)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                }))))\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 9),\n                                                () -> {\n                                                    (__lhs_0_118) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    (__39) -> {\n                                                        false\n                                                    }\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()(activity_3),\n            () -> {\n                true\n            },\n            () -> {\n                __core__equalsByteString(__core__serialiseData(__helios__scriptcontext__tx), __core__serialiseData(dgtionDatum))\n            }\n        )()))\n    };\n    __core__ifThenElse(\n        __core__ifThenElse(\n            __core__equalsInteger(__common7, 2),\n            () -> {\n                (__lhs_0_267) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__common7, 1),\n                    () -> {\n                        (isD) -> {\n                            dd_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(isD))));\n                            __core__chooseUnit((cond) -> {\n                                __core__ifThenElse(\n                                    cond,\n                                    () -> {\n                                        ()\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));\n                            __core__ifThenElse(\n                                __core__equalsByteString(self, #01),\n                                false,\n                                true\n                            )), __core__chooseUnit((cond) -> {\n                                __core__ifThenElse(\n                                    cond,\n                                    () -> {\n                                        ()\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));\n                            __core__ifThenElse(\n                                __core__equalsByteString(self, #67656e6572616c),\n                                false,\n                                true\n                            )), __core__chooseUnit((cond) -> {\n                                __core__ifThenElse(\n                                    cond,\n                                    () -> {\n                                        ()\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));\n                            __core__ifThenElse(\n                                __core__equalsByteString(self, #5265717473506f6c696379),\n                                false,\n                                true\n                            )), __core__chooseUnit(msg_1 = __helios__value__show(self_20 = __helios__scriptcontext__get_current_input();\n                            self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_20))));\n                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))));\n                            (), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1, mph_25 = __core__unBData(__core__headList(__core__tailList(dd_2)));\n                            __core__mkCons(__core__bData(mph_25), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));\n                            (govAuthorityCheck) -> {\n                                __module__BasicDelegate__checkOneActivity_1(__module__BasicDelegate__checkOneActivity_1, isD, __REDEEMER, dd_2, cctx_7)\n                            }(self_230 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_7);\n                            true)))))\n                        }\n                    },\n                    () -> {\n                        __common11 = __core__unConstrData(__REDEEMER);\n                        __common12 = __core__fstPair(__common11);\n                        __common13 = __core__equalsInteger(__common12, 1);\n                        (__76) -> {\n                            __core__ifThenElse(\n                                __common13,\n                                () -> {\n                                    (__lhs_0_266) -> {\n                                        error()\n                                    }\n                                },\n                                () -> {\n                                    __common14 = __core__equalsInteger(__common12, 0);\n                                    __core__ifThenElse(\n                                        __common14,\n                                        () -> {\n                                            (__lhs_0_265) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            (__77) -> {\n                                                __core__ifThenElse(\n                                                    __common13,\n                                                    () -> {\n                                                        (__lhs_0_128) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __common14,\n                                                            () -> {\n                                                                (__lhs_0_127) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__40) -> {\n                                                                    false\n                                                                }\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(__REDEEMER)\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(__REDEEMER)\n                        }\n                    }\n                )()\n            }\n        )()(__DATUM),\n        () -> {\n            ()\n        },\n        () -> {\n            error()\n        }\n    )()\n}', "unoptimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __helios__error = (msg) -> {
        __core__trace(msg, () -> {
            error()
        })()
    };
    __helios__print = (msg_1) -> {
        __core__trace(msg_1, ())
    };
    __helios__string____add = __core__appendString;
    __helios__assert = (cond, msg_2) -> {
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                __core__trace(msg_2, () -> {
                    error()
                })()
            }
        )()
    };
    __helios__bool____not = (b) -> {
        __core__ifThenElse(
            b,
            false,
            true
        )
    };
    __helios__bytearray____eq = __core__equalsByteString;
    __helios__bytearray____neq = (self, other) -> {
        __helios__bool____not(__helios__bytearray____eq(self, other))
    };
    __helios__int____to_data = __core__iData;
    __helios__int__serialize = (self_1) -> {
        () -> {
            __core__serialiseData(__helios__int____to_data(self_1))
        }
    };
    __helios__string__encode_utf8 = (self_2) -> {
        () -> {
            __core__encodeUtf8(self_2)
        }
    };
    __helios__common__fold = (self_3, fn, z) -> {
        recurse_1 = (recurse, self_4, z_1) -> {
            __core__chooseList(self_4, () -> {
                z_1
            }, () -> {
                recurse(recurse, __core__tailList__safe(self_4), fn(z_1, __core__headList__safe(self_4)))
            })()
        };
        recurse_1(recurse_1, self_3, z)
    };
    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {
        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {
            callback_ok(__core__unBData__safe(data))
        })()
    };
    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;
    __helios__int__to_hex = (self_5) -> {
        () -> {
            recurse_3 = (recurse_2) -> {
                (self_6, bytes) -> {
                    digit = __core__modInteger(self_6, 16);
                    bytes_1 = __core__consByteString(__core__ifThenElse(
                        __core__lessThanInteger(digit, 10),
                        __core__addInteger(digit, 48),
                        __core__addInteger(digit, 87)
                    ), bytes);
                    __core__ifThenElse(
                        __core__lessThanInteger(self_6, 16),
                        () -> {
                            bytes_1
                        },
                        () -> {
                            recurse_2(recurse_2)(__core__divideInteger(self_6, 16), bytes_1)
                        }
                    )()
                }
            };
            __core__decodeUtf8__safe(__core__ifThenElse(
                __core__lessThanInteger(self_5, 0),
                () -> {
                    __core__consByteString(45, recurse_3(recurse_3)(__core__multiplyInteger(self_5, -1), #))
                },
                () -> {
                    recurse_3(recurse_3)(self_5, #)
                }
            )())
        }
    };
    __helios__bytearray__show = (self_7) -> {
        () -> {
            recurse_5 = (recurse_4, self_8) -> {
                n = __core__lengthOfByteString(self_8);
                __core__ifThenElse(
                    __core__lessThanInteger(0, n),
                    () -> {
                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_8, 0))());
                        __core__ifThenElse(
                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                            __core__consByteString(48, hex_bytes),
                            hex_bytes
                        )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_8)))
                    },
                    () -> {
                        ""
                    }
                )()
            };
            recurse_5(recurse_5, self_7)
        }
    };
    __helios__mintingpolicyhash__show = __helios__bytearray__show;
    __helios__common__unMapData__safe = (data_1, callback_ok_1, callback_nok_1) -> {
        __core__chooseData(data_1, callback_nok_1, () -> {
            callback_ok_1(__core__unMapData__safe(data_1))
        }, callback_nok_1, callback_nok_1, callback_nok_1)()
    };
    __helios__common__unIData__safe = (data_2, callback_ok_2, callback_nok_2) -> {
        __core__chooseData(data_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
            callback_ok_2(__core__unIData__safe(data_2))
        }, callback_nok_2)()
    };
    __helios__bool__and = (a, b_1) -> {
        __core__ifThenElse(
            a(),
            () -> {
                b_1()
            },
            () -> {
                false
            }
        )()
    };
    __helios__int__show_digit = (x) -> {
        __core__addInteger(__core__modInteger(x, 10), 48)
    };
    __helios__int__show = (self_9) -> {
        () -> {
            __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {
                bytes_3 = __core__consByteString(__helios__int__show_digit(i), bytes_2);
                __core__ifThenElse(
                    __core__lessThanInteger(i, 10),
                    () -> {
                        bytes_3
                    },
                    () -> {
                        recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)
                    }
                )()
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_9, 0),
                () -> {
                    __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_9, -1), #))
                },
                () -> {
                    recurse_7(recurse_7, self_9, #)
                }
            )())
        }
    };
    __helios__real__ONE = 1000000;
    __helios__real__floor = (self_10) -> {
        () -> {
            __core__divideInteger(self_10, __helios__real__ONE)
        }
    };
    __helios__int__abs = (self_11) -> {
        () -> {
            __core__ifThenElse(
                __core__lessThanInteger(self_11, 0),
                () -> {
                    __core__multiplyInteger(self_11, -1)
                },
                () -> {
                    self_11
                }
            )()
        }
    };
    __helios__real__abs = __helios__int__abs;
    __helios__int__show_padded = (self_12, n_1) -> {
        recurse_9 = (recurse_8, x_1, pos, bytes_4) -> {
            __core__ifThenElse(
                __core__equalsInteger(x_1, 0),
                () -> {
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(n_1, pos),
                        () -> {
                            bytes_4
                        },
                        () -> {
                            recurse_8(recurse_8, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_4))
                        }
                    )()
                },
                () -> {
                    recurse_8(recurse_8, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__helios__int__show_digit(x_1), bytes_4))
                }
            )()
        };
        recurse_9(recurse_9, self_12, 0, #)
    };
    __helios__int____mod = __core__modInteger;
    __helios__real__PRECISION = 6;
    __helios__real__show = (self_13) -> {
        () -> {
            show_positive = (x_2) -> {
                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_2)())())(), __helios__string____add(".", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_2, __helios__real__ONE), __helios__real__PRECISION))))
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_13, 0),
                () -> {
                    __helios__string____add("-", show_positive(__core__multiplyInteger(self_13, -1)))
                },
                () -> {
                    show_positive(self_13)
                }
            )()
        }
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes_5) -> {
        n_2 = __core__lengthOfByteString(bytes_5);
        recurse_11 = (recurse_10, i_1) -> {
            __core__ifThenElse(
                __core__equalsInteger(i_1, n_2),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes_5, i_1);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse_10(recurse_10, __core__addInteger(i_1, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i_1, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n_2),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __core__lessThanEqualsInteger(128, c_2)
                                                            }, () -> {
                                                                __core__lessThanEqualsInteger(c_2, 2047)
                                                            }),
                                                            () -> {
                                                                recurse_10(recurse_10, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i_1, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n_2),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __helios__bool__and(() -> {
                                                                                    __core__lessThanEqualsInteger(2048, c_1)
                                                                                }, () -> {
                                                                                    __core__lessThanEqualsInteger(c_1, 65535)
                                                                                }),
                                                                                () -> {
                                                                                    recurse_10(recurse_10, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i_1, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n_2),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __core__lessThanEqualsInteger(65536, c)
                                                                                                    }, () -> {
                                                                                                        __core__lessThanEqualsInteger(c, 2097151)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        recurse_10(recurse_10, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_11(recurse_11, 0)
    };
    __helios__bytearray__decode_utf8_safe = (self_14) -> {
        () -> {
            __core__ifThenElse(
                __helios__string__is_valid_utf8(self_14),
                () -> {
                    __core__decodeUtf8__safe(self_14)
                },
                () -> {
                    __helios__bytearray__show(self_14)()
                }
            )()
        }
    };
    __helios__value__show = (self_15) -> {
        (__useopt__ada, ada) -> {
            __helios__common__fold(self_15, (prev, pair) -> {
                mph_data = __core__fstPair(pair);
                tokens_data = __core__sndPair(pair);
                __helios__string____add(prev, __helios__common__unBData__safe(mph_data, (mph) -> {
                    __helios__string____add(__core__ifThenElse(
                        __helios__mintingpolicyhash____eq(mph, #),
                        () -> {
                            ""
                        },
                        () -> {
                            __helios__string____add(__helios__mintingpolicyhash__show(mph)(), "
")
                        }
                    )(), __helios__common__unMapData__safe(tokens_data, (tokens) -> {
                        __helios__common__fold(tokens, (prev_1, pair_1) -> {
                            token_name_data = __core__fstPair(pair_1);
                            qty_data = __core__sndPair(pair_1);
                            __helios__common__unBData__safe(token_name_data, (token_name) -> {
                                __helios__common__unIData__safe(qty_data, (qty) -> {
                                    __core__ifThenElse(
                                        __helios__mintingpolicyhash____eq(mph, #),
                                        () -> {
                                            __core__ifThenElse(
                                                __helios__bool__and(() -> {
                                                    __useopt__ada
                                                }, () -> {
                                                    ada
                                                }),
                                                () -> {
                                                    __helios__string____add("ada ", __helios__string____add(__helios__real__show(qty)(), "
"))
                                                },
                                                () -> {
                                                    __helios__string____add("lovelace ", __helios__string____add(__helios__int__show(qty)(), "
"))
                                                }
                                            )()
                                        },
                                        () -> {
                                            __helios__string____add("  .", __helios__string____add(__helios__bytearray__decode_utf8_safe(token_name)(), __helios__string____add(" ", __helios__string____add(__helios__int__show(qty)(), "
"))))
                                        }
                                    )()
                                }, () -> {
                                    ""
                                })
                            }, () -> {
                                ""
                            })
                        }, prev)
                    }, () -> {
                        ""
                    }))
                }, () -> {
                    ""
                }))
            }, "")
        }
    };
    __helios__common__enum_fields = (self_16) -> {
        __core__sndPair(__core__unConstrData(self_16))
    };
    __helios__common__enum_fields_after_0 = (self_17) -> {
        __core__tailList(__helios__common__enum_fields(self_17))
    };
    __helios__common__enum_field_1 = (self_18) -> {
        __core__headList(__helios__common__enum_fields_after_0(self_18))
    };
    __helios__txoutput__value = (self_19) -> {
        __core__unMapData(__helios__common__enum_field_1(self_19))
    };
    __helios__txinput__output = __helios__common__enum_field_1;
    __helios__txinput__value = (self_20) -> {
        __helios__txoutput__value(__helios__txinput__output(self_20))
    };
    __helios__common__enum_field_0 = (self_21) -> {
        __core__headList(__helios__common__enum_fields(self_21))
    };
    __helios__scriptcontext__data = __CONTEXT;
    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);
    __helios__scriptcontext__get_spending_purpose_output_id = () -> {
        __helios__common__enum_field_0(__helios__scriptcontext__purpose)
    };
    __helios__txinput__output_id = __helios__common__enum_field_0;
    __helios__tx__inputs = (self_22) -> {
        __core__unListData(__helios__common__enum_field_0(self_22))
    };
    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);
    __helios__scriptcontext__get_current_input = () -> {
        id = __helios__scriptcontext__get_spending_purpose_output_id();
        recurse_13 = (recurse_12, lst) -> {
            __core__chooseList(lst, () -> {
                __helios__error("not found")
            }, () -> {
                item = __core__headList__safe(lst);
                __core__ifThenElse(
                    __core__equalsData(__helios__txinput__output_id(item), id),
                    () -> {
                        item
                    },
                    () -> {
                        recurse_12(recurse_12, __core__tailList__safe(lst))
                    }
                )()
            })()
        };
        recurse_13(recurse_13, __helios__tx__inputs(__helios__scriptcontext__tx))
    };
    __helios__bool__or = (a_1, b_2) -> {
        __core__ifThenElse(
            a_1(),
            () -> {
                true
            },
            () -> {
                b_2()
            }
        )()
    };
    __helios__string____to_data = (s) -> {
        __core__bData(__core__encodeUtf8(s))
    };
    __helios__value__ZERO = __core__mkNilPairData(());
    __helios__value__new = (assetClass, i_2) -> {
        __core__ifThenElse(
            __core__equalsInteger(0, i_2),
            () -> {
                __helios__value__ZERO
            },
            () -> {
                mph_1 = __helios__common__enum_field_0(assetClass);
                tokenName = __helios__common__enum_field_1(assetClass);
                __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i_2)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
            }
        )()
    };
    __helios__common__list_0 = __core__mkNilData(());
    __helios__common__list_1 = (a_2) -> {
        __core__mkCons(a_2, __helios__common__list_0)
    };
    __helios__common__list_2 = (arg0, arg1) -> {
        __core__mkCons(arg0, __helios__common__list_1(arg1))
    };
    __helios__bytearray____to_data = __core__bData;
    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;
    __helios__assetclass__new = (mph_2, token_name_1) -> {
        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_2), __helios__bytearray____to_data(token_name_1)))
    };
    __helios__int____neg = (self_23) -> {
        __core__multiplyInteger(self_23, -1)
    };
    __helios__int____eq = __core__equalsInteger;
    __helios__value__get = (self_24) -> {
        (assetClass_1) -> {
            mph_3 = __helios__common__enum_field_0(assetClass_1);
            tokenName_1 = __helios__common__enum_field_1(assetClass_1);
            outer_1 = (outer, inner, map) -> {
                __core__chooseList(map, () -> {
                    __helios__error(__helios__string____add(__helios__string____add("policy ", __helios__mintingpolicyhash__show(__core__unBData(mph_3))()), " not found"))
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_3),
                        () -> {
                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                        },
                        () -> {
                            outer(outer, inner, __core__tailList__safe(map))
                        }
                    )()
                })()
            };
            inner_2 = (inner_1, map_1) -> {
                __core__chooseList(map_1, () -> {
                    __helios__error("tokenName not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                        },
                        () -> {
                            inner_1(inner_1, __core__tailList__safe(map_1))
                        }
                    )()
                })()
            };
            outer_1(outer_1, inner_2, self_24)
        }
    };
    __helios__common__enum_fields_after_1 = (self_25) -> {
        __core__tailList(__helios__common__enum_fields_after_0(self_25))
    };
    __helios__common__enum_fields_after_2 = (self_26) -> {
        __core__tailList(__helios__common__enum_fields_after_1(self_26))
    };
    __helios__common__enum_fields_after_3 = (self_27) -> {
        __core__tailList(__helios__common__enum_fields_after_2(self_27))
    };
    __helios__common__enum_field_4 = (self_28) -> {
        __core__headList(__helios__common__enum_fields_after_3(self_28))
    };
    __helios__tx__minted = (self_29) -> {
        __core__unMapData(__helios__common__enum_field_4(self_29))
    };
    __helios__common__assert_constr_index = (data_3, i_3) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_3)), i_3),
            () -> {
                data_3
            },
            () -> {
                __helios__error("unexpected constructor index")
            }
        )()
    };
    __helios__string____eq = __core__equalsString;
    __helios__common____eq = __core__equalsData;
    __helios__assetclass____eq = __helios__common____eq;
    __helios__data__show = (self_30) -> {
        () -> {
            show_data_list = (list, show_item) -> {
                __helios__common__fold(list, (prev_2, item_1) -> {
                    __core__ifThenElse(
                        __helios__string____eq(prev_2, ""),
                        () -> {
                            show_item(item_1)
                        },
                        () -> {
                            __helios__string____add(prev_2, __helios__string____add(",", show_item(item_1)))
                        }
                    )()
                }, "")
            };
            (recurse_15, data_5) -> {
                recurse_15(recurse_15, data_5)
            }((recurse_14, data_4) -> {
                __core__chooseData(data_4, () -> {
                    pair_3 = __core__unConstrData__safe(data_4);
                    tag = __core__fstPair(pair_3);
                    fields = __core__sndPair(pair_3);
                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add("{", __helios__string____add(show_data_list(fields, (item_3) -> {
                        recurse_14(recurse_14, item_3)
                    }), "}")))
                }, () -> {
                    map_2 = __core__unMapData__safe(data_4);
                    __helios__string____add("{", __helios__string____add(show_data_list(map_2, (pair_2) -> {
                        key = recurse_14(recurse_14, __core__fstPair(pair_2));
                        value_1 = recurse_14(recurse_14, __core__sndPair(pair_2));
                        __helios__string____add(key, __helios__string____add(":", value_1))
                    }), "}"))
                }, () -> {
                    lst_1 = __core__unListData__safe(data_4);
                    __helios__string____add("[", __helios__string____add(show_data_list(lst_1, (item_2) -> {
                        recurse_14(recurse_14, item_2)
                    }), "]"))
                }, () -> {
                    value = __core__unIData__safe(data_4);
                    __helios__int__show(value)()
                }, () -> {
                    bytes_6 = __core__unBData__safe(data_4);
                    __helios__bytearray__show(bytes_6)()
                })()
            }, self_30)
        }
    };
    __helios__data__show_constr_data = (callback_1) -> {
        (data_6) -> {
            callback_nok_3 = __helios__data__show(data_6);
            __core__chooseData(data_6, () -> {
                pair_4 = __core__unConstrData__safe(data_6);
                callback_1(__core__fstPair(pair_4), __core__sndPair(pair_4))
            }, callback_nok_3, callback_nok_3, callback_nok_3, callback_nok_3)()
        }
    };
    __helios__data__show_field = (index, callback_2) -> {
        (list_1) -> {
            recurse_17 = (recurse_16) -> {
                (lst_2, i_4) -> {
                    __core__chooseList(lst_2, () -> {
                        "<missing>"
                    }, () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(i_4, 0),
                            () -> {
                                head = __core__headList__safe(lst_2);
                                callback_2(head)
                            },
                            () -> {
                                recurse_16(recurse_16)(__core__tailList__safe(lst_2), __core__subtractInteger(i_4, 1))
                            }
                        )()
                    })()
                }
            };
            recurse_17(recurse_17)(list_1, index)
        }
    };
    __helios__data__show_bdata = (callback_3) -> {
        (data_7) -> {
            callback_nok_4 = __helios__data__show(data_7);
            __core__chooseData(data_7, callback_nok_4, callback_nok_4, callback_nok_4, callback_nok_4, () -> {
                callback_3(__core__unBData__safe(data_7))
            })()
        }
    };
    __helios__assetclass__show = (self_31) -> {
        () -> {
            __helios__data__show_constr_data((tag_1, fields_1) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_1, 0),
                    () -> {
                        mph_str = __helios__data__show_field(0, __helios__data__show_bdata((mph_4) -> {
                            __helios__bytearray__show(mph_4)()
                        }))(fields_1);
                        token_name_str = __helios__data__show_field(1, __helios__data__show_bdata((token_name_2) -> {
                            __helios__bytearray__show(token_name_2)()
                        }))(fields_1);
                        __core__appendString(mph_str, __core__appendString(".", token_name_str))
                    },
                    () -> {
                        __helios__data__show(self_31)()
                    }
                )()
            })(self_31)
        }
    };
    __helios__string____neq = (self_32, other_1) -> {
        __helios__bool____not(__helios__string____eq(self_32, other_1))
    };
    __helios__int____gt = (a_3, b_3) -> {
        __helios__bool____not(__core__lessThanEqualsInteger(a_3, b_3))
    };
    __helios__int____neq = (self_33, other_2) -> {
        __helios__bool____not(__helios__int____eq(self_33, other_2))
    };
    __helios__int____sub = __core__subtractInteger;
    __helios__value__to_map = (self_34) -> {
        () -> {
            self_34
        }
    };
    __helios__string__show = (self_35) -> {
        () -> {
            __core__appendString("'", __core__appendString(self_35, "'"))
        }
    };
    __helios__bool__show = (self_36) -> {
        () -> {
            __core__ifThenElse(
                self_36,
                "true",
                "false"
            )
        }
    };
    __helios__bool__trace = (self_37) -> {
        (prefix) -> {
            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_37)()), self_37)
        }
    };
    __helios__txinput____eq = __helios__common____eq;
    __helios__bytearray__from_data = __core__unBData;
    __helios__string__from_data = (d) -> {
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__common__length = (lst_3) -> {
        recurse_19 = (recurse_18, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_19(recurse_19, lst_3)
    };
    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {
        recurse_21 = (recurse_20, self_39, key_2) -> {
            __core__chooseList(self_39, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_39);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_38, key_1)
    };
    __helios__common__enum_tag_equals = (data_8, i_5) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_8)), i_5)
    };
    __helios__common__all = (self_40, fn_1) -> {
        recurse_23 = (recurse_22, self_41, fn_2) -> {
            __core__chooseList(self_41, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_41)),
                    () -> {
                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_23(recurse_23, self_40, fn_1)
    };
    __helios__common__identity = (self_42) -> {
        self_42
    };
    __helios__assetclass____to_data = __helios__common__identity;
    __helios__assetclass__from_data = __helios__common__identity;
    __helios__data__from_data = __helios__common__identity;
    __helios__bool__from_data = (d_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),
            false,
            true
        )
    };
    __helios__int__from_data = __core__unIData;
    __helios__int____leq = __core__lessThanEqualsInteger;
    __helios__duration____leq = __helios__int____leq;
    __helios__time____sub = __helios__int____sub;
    __helios__time__from_data = __helios__int__from_data;
    __helios__timerange__end = (self_43) -> {
        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_1(self_43))))
    };
    __helios__common__enum_fields_after_4 = (self_44) -> {
        __core__tailList(__helios__common__enum_fields_after_3(self_44))
    };
    __helios__common__enum_fields_after_5 = (self_45) -> {
        __core__tailList(__helios__common__enum_fields_after_4(self_45))
    };
    __helios__common__enum_fields_after_6 = (self_46) -> {
        __core__tailList(__helios__common__enum_fields_after_5(self_46))
    };
    __helios__common__enum_field_7 = (self_47) -> {
        __core__headList(__helios__common__enum_fields_after_6(self_47))
    };
    __helios__tx__time_range = __helios__common__enum_field_7;
    __helios__timerange__start = (self_48) -> {
        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_0(self_48))))
    };
    __helios__duration__HOUR = 3600000;
    __helios__timerange__contains = (self_49) -> {
        (t) -> {
            lower = __helios__common__enum_field_0(self_49);
            extended = __helios__common__enum_field_0(lower);
            closed = __helios__bool__from_data(__helios__common__enum_field_1(lower));
            lowerExtType = __core__fstPair(__core__unConstrData(extended));
            checkUpper = () -> {
                upper = __helios__common__enum_field_1(self_49);
                extended_1 = __helios__common__enum_field_0(upper);
                closed_1 = __helios__bool__from_data(__helios__common__enum_field_1(upper));
                upperExtType = __core__fstPair(__core__unConstrData(extended_1));
                __core__ifThenElse(
                    __core__equalsInteger(upperExtType, 0),
                    () -> {
                        false
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(upperExtType, 2),
                            () -> {
                                true
                            },
                            () -> {
                                __core__ifThenElse(
                                    __core__ifThenElse(
                                        closed_1,
                                        () -> {
                                            __core__lessThanEqualsInteger(t, __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended_1)))))
                                        },
                                        () -> {
                                            __core__lessThanInteger(t, __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended_1)))))
                                        }
                                    )(),
                                    true,
                                    false
                                )
                            }
                        )()
                    }
                )()
            };
            __core__ifThenElse(
                __core__equalsInteger(lowerExtType, 2),
                () -> {
                    false
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(lowerExtType, 0),
                        () -> {
                            checkUpper()
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__ifThenElse(
                                    closed,
                                    () -> {
                                        __core__lessThanEqualsInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)
                                    },
                                    () -> {
                                        __core__lessThanInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)
                                    }
                                )(),
                                () -> {
                                    checkUpper()
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __helios__int____div = __core__quotientInteger;
    __helios__duration____div1 = __helios__int____div;
    __helios__duration__SECOND = 1000;
    __helios__txoutputdatum__inline = (self_50) -> {
        pair_5 = __core__unConstrData(self_50);
        index_1 = __core__fstPair(pair_5);
        fields_2 = __core__sndPair(pair_5);
        __core__ifThenElse(
            __core__equalsInteger(index_1, 2),
            () -> {
                __core__headList(fields_2)
            },
            () -> {
                __helios__error("not an inline datum")
            }
        )()
    };
    __helios__common__enum_field_2 = (self_51) -> {
        __core__headList(__helios__common__enum_fields_after_1(self_51))
    };
    __helios__txoutput__datum = __helios__common__enum_field_2;
    __helios__spendingcredential__show = (self_52) -> {
        () -> {
            __helios__data__show_constr_data((tag_2, fields_3) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_2, 0),
                    () -> {
                        pkh_str = __helios__data__show_field(0, __helios__data__show_bdata((b_5) -> {
                            __helios__bytearray__show(b_5)()
                        }))(fields_3);
                        __core__appendString("PubKey{hash:", __core__appendString(pkh_str, "}"))
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(tag_2, 1),
                            () -> {
                                vh_str = __helios__data__show_field(0, __helios__data__show_bdata((b_4) -> {
                                    __helios__bytearray__show(b_4)()
                                }))(fields_3);
                                __core__appendString("Validator{hash:", __core__appendString(vh_str, "}"))
                            },
                            () -> {
                                __helios__data__show(__core__constrData(tag_2, fields_3))()
                            }
                        )()
                    }
                )()
            })(self_52)
        }
    };
    __helios__common__unConstrData__safe = (data_9, callback_ok_3, callback_nok_5) -> {
        __core__chooseData(data_9, () -> {
            pair_6 = __core__unConstrData__safe(data_9);
            callback_ok_3(__core__fstPair(pair_6), __core__sndPair(pair_6))
        }, callback_nok_5, callback_nok_5, callback_nok_5, callback_nok_5)()
    };
    __helios__option__SOME_FUNC = (some) -> {
        (callback_4) -> {
            callback_4(true, some)
        }
    };
    __helios__stakingcredential__from_data_safe = (data_10) -> {
        __helios__option__SOME_FUNC(data_10)
    };
    __helios__stakinghash__show = (self_53) -> {
        () -> {
            __helios__data__show_constr_data((tag_3, fields_4) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_3, 0),
                    () -> {
                        pkh_str_1 = __helios__data__show_field(0, __helios__data__show_bdata((b_7) -> {
                            __helios__bytearray__show(b_7)()
                        }))(fields_4);
                        __core__appendString("StakeKey{hash:", __core__appendString(pkh_str_1, "}"))
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(tag_3, 1),
                            () -> {
                                vh_str_1 = __helios__data__show_field(0, __helios__data__show_bdata((b_6) -> {
                                    __helios__bytearray__show(b_6)()
                                }))(fields_4);
                                __core__appendString("Validator{hash:", __core__appendString(vh_str_1, "}"))
                            },
                            () -> {
                                __helios__data__show(__core__constrData(tag_3, fields_4))()
                            }
                        )()
                    }
                )()
            })(self_53)
        }
    };
    __helios__data__show_idata = (callback_5) -> {
        (data_11) -> {
            callback_nok_6 = __helios__data__show(data_11);
            __core__chooseData(data_11, callback_nok_6, callback_nok_6, callback_nok_6, () -> {
                callback_5(__core__unIData__safe(data_11))
            }, callback_nok_6)()
        }
    };
    __helios__stakingcredential__show = (self_54) -> {
        () -> {
            __helios__data__show_constr_data((tag_4, fields_5) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_4, 0),
                    () -> {
                        hash_str = __helios__data__show_field(0, (hash_data) -> {
                            __helios__stakinghash__show(hash_data)()
                        })(fields_5);
                        __core__appendString("Hash{hash:", __core__appendString(hash_str, "}"))
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(tag_4, 1),
                            () -> {
                                i_str = __helios__data__show_field(0, __helios__data__show_idata((i_6) -> {
                                    __helios__int__show(i_6)()
                                }))(fields_5);
                                j_str = __helios__data__show_field(1, __helios__data__show_idata((i_7) -> {
                                    __helios__int__show(i_7)()
                                }))(fields_5);
                                k_str = __helios__data__show_field(2, __helios__data__show_idata((i_8) -> {
                                    __helios__int__show(i_8)()
                                }))(fields_5);
                                __core__appendString("Ptr{i:", __core__appendString(i_str, __core__appendString(",j:", __core__appendString(j_str, __core__appendString(",k:", __core__appendString(k_str, "}"))))))
                            },
                            () -> {
                                __helios__data__show(self_54)()
                            }
                        )()
                    }
                )()
            })(self_54)
        }
    };
    __helios__option[__helios__stakingcredential]__show = (self_55) -> {
        () -> {
            __helios__common__unConstrData__safe(self_55, (index_2, fields_6) -> {
                __core__ifThenElse(
                    __core__equalsInteger(index_2, 0),
                    () -> {
                        __core__chooseList(fields_6, () -> {
                            "Some{<missing>}"
                        }, () -> {
                            some_data = __core__headList__safe(fields_6);
                            some_1 = __helios__stakingcredential__from_data_safe(some_data);
                            some_1((valid_6, value_2) -> {
                                __core__ifThenElse(
                                    valid_6,
                                    () -> {
                                        __core__appendString("Some{", __core__appendString(__helios__stakingcredential__show(value_2)(), "}"))
                                    },
                                    () -> {
                                        __core__appendString("Some{", __core__appendString(__helios__data__show(some_data)(), "}"))
                                    }
                                )()
                            })
                        })()
                    },
                    () -> {
                        "None"
                    }
                )()
            }, () -> {
                __helios__data__show(self_55)()
            })
        }
    };
    __helios__address__show = (self_56) -> {
        () -> {
            __helios__data__show_constr_data((tag_5, fields_7) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_5, 0),
                    () -> {
                        spending_cred_str = __helios__data__show_field(0, (cred_data) -> {
                            __helios__spendingcredential__show(cred_data)()
                        })(fields_7);
                        staking_cred_option_str = __helios__data__show_field(1, (option_data) -> {
                            __helios__option[__helios__stakingcredential]__show(option_data)()
                        })(fields_7);
                        __core__appendString("{spending_credential:", __core__appendString(spending_cred_str, __core__appendString(",staking_credential:", __core__appendString(staking_cred_option_str, "}"))))
                    },
                    () -> {
                        __helios__data__show(self_56)()
                    }
                )()
            })(self_56)
        }
    };
    __helios__txoutput__address = __helios__common__enum_field_0;
    __helios__txinput__address = (self_57) -> {
        __helios__txoutput__address(__helios__txinput__output(self_57))
    };
    __helios__time____gt = __helios__int____gt;
    __helios__value__get_safe = (self_58) -> {
        (assetClass_2) -> {
            mintingPolicyHash = __helios__common__enum_field_0(assetClass_2);
            tokenName_2 = __helios__common__enum_field_1(assetClass_2);
            outer_3 = (outer_2, inner_3, map_3) -> {
                __core__chooseList(map_3, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mintingPolicyHash),
                        () -> {
                            inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_3))))
                        },
                        () -> {
                            outer_2(outer_2, inner_3, __core__tailList__safe(map_3))
                        }
                    )()
                })()
            };
            inner_5 = (inner_4, map_4) -> {
                __core__chooseList(map_4, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), tokenName_2),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_4)))
                        },
                        () -> {
                            inner_4(inner_4, __core__tailList__safe(map_4))
                        }
                    )()
                })()
            };
            outer_3(outer_3, inner_5, self_58)
        }
    };
    __helios__assetclass__ADA = __helios__assetclass__new(#, #);
    __helios__value__get_lovelace = (self_59) -> {
        () -> {
            __helios__value__get_safe(self_59)(__helios__assetclass__ADA)
        }
    };
    __helios__tx__outputs = (self_60) -> {
        __core__unListData(__helios__common__enum_field_2(self_60))
    };
    __helios__txinput__datum = (self_61) -> {
        __helios__txoutput__datum(__helios__txinput__output(self_61))
    };
    __helios__common__serialize = (self_62) -> {
        () -> {
            __core__serialiseData(self_62)
        }
    };
    __helios__tx__serialize = __helios__common__serialize;
    __helios__common__filter = (self_63, fn_3, nil) -> {
        recurse_25 = (recurse_24, self_64, fn_4) -> {
            __core__chooseList(self_64, () -> {
                nil
            }, () -> {
                head_2 = __core__headList__safe(self_64);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__mkCons(head_2, recurse_24(recurse_24, __core__tailList__safe(self_64), fn_4))
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(self_64), fn_4)
                    }
                )()
            })()
        };
        recurse_25(recurse_25, self_63, fn_3)
    };
    __helios__common__filter_list = (self_65, fn_5) -> {
        __helios__common__filter(self_65, fn_5, __helios__common__list_0)
    };
    __helios__txinput__from_data = __helios__common__identity;
    __helios__data__is_valid_data = (data_12) -> {
        true
    };
    __helios__string__is_valid_data = (data_13) -> {
        __core__chooseData(data_13, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__string__is_valid_utf8(__core__unBData__safe(data_13))
        })()
    };
    __helios__bytearray__is_valid_data = (data_14) -> {
        __core__chooseData(data_14, false, false, false, false, true)
    };
    __helios__txoutputid__from_data = __helios__common__identity;
    __helios__common__test_constr_data_2 = (data_15, index_3, test_a, test_b) -> {
        __core__chooseData(data_15, () -> {
            pair_7 = __core__unConstrData__safe(data_15);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_7), index_3),
                () -> {
                    fields_8 = __core__sndPair(pair_7);
                    __core__chooseList(fields_8, () -> {
                        false
                    }, () -> {
                        __core__ifThenElse(
                            test_a(__core__headList__safe(fields_8)),
                            () -> {
                                tail = __core__tailList__safe(fields_8);
                                __core__chooseList(tail, () -> {
                                    false
                                }, () -> {
                                    __core__ifThenElse(
                                        test_b(__core__headList__safe(tail)),
                                        () -> {
                                            __core__chooseList(__core__tailList__safe(tail), () -> {
                                                true
                                            }, () -> {
                                                false
                                            })()
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data_fixed_length = (n_3) -> {
        (data_16) -> {
            __core__chooseData(data_16, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_7 = __core__unBData__safe(data_16);
                __core__ifThenElse(
                    __core__equalsInteger(__core__lengthOfByteString(bytes_7), n_3),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__txid__is_valid_data = (data_17) -> {
        __core__chooseData(data_17, () -> {
            pair_8 = __core__unConstrData__safe(data_17);
            index_4 = __core__fstPair(pair_8);
            fields_9 = __core__sndPair(pair_8);
            __core__ifThenElse(
                __core__equalsInteger(0, index_4),
                () -> {
                    __core__chooseList(fields_9, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_9), () -> {
                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_9))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__int__is_valid_data = (data_18) -> {
        __core__chooseData(data_18, false, false, false, true, false)
    };
    __helios__txoutputid__is_valid_data = (data_19) -> {
        __helios__common__test_constr_data_2(data_19, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)
    };
    __helios__time____to_data = __helios__int____to_data;
    __helios__bool____to_data = (b_8) -> {
        __core__constrData(__core__ifThenElse(
            b_8,
            1,
            0
        ), __helios__common__list_0)
    };
    __helios__timerange__new = (a_4, b_9) -> {
        a_5 = __helios__time____to_data(a_4);
        b_10 = __helios__time____to_data(b_9);
        __core__constrData(0, __helios__common__list_2(__core__constrData(0, __helios__common__list_2(__core__constrData(1, __helios__common__list_1(a_5)), __helios__bool____to_data(true))), __core__constrData(0, __helios__common__list_2(__core__constrData(1, __helios__common__list_1(b_10)), __helios__bool____to_data(true)))))
    };
    __helios__int____add = __core__addInteger;
    __helios__time____add = __helios__int____add;
    __helios__int____mul = __core__multiplyInteger;
    __helios__duration____mul = __helios__int____mul;
    __helios__duration__DAY = 86400000;
    __helios__common__mStruct_field_internal = (map_5, name) -> {
        name_data = __core__bData(name);
        recurse_27 = (recurse_26, map_6) -> {
            __core__chooseList(map_6, () -> {
                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name))), ": field not found"))
            }, () -> {
                head_3 = __core__headList__safe(map_6);
                key_3 = __core__fstPair(head_3);
                value_3 = __core__sndPair(head_3);
                __core__ifThenElse(
                    __core__equalsData(key_3, name_data),
                    () -> {
                        value_3
                    },
                    () -> {
                        recurse_26(recurse_26, __core__tailList__safe(map_6))
                    }
                )()
            })()
        };
        recurse_27(recurse_27, map_5)
    };
    __helios__common__mStruct_field = (self_66, name_1) -> {
        __helios__common__mStruct_field_internal(__core__unMapData(self_66), name_1)
    };
    __helios__common__test_mStruct_field = (self_67, name_2, inner_test) -> {
        __core__chooseData(self_67, () -> {
            false
        }, () -> {
            map_7 = __core__unMapData__safe(self_67);
            recurse_29 = (recurse_28, map_8) -> {
                __core__chooseList(map_8, () -> {
                    __core__trace(__core__appendString("Warning: field not found: ", __core__decodeUtf8__safe(__core__unBData__safe(name_2))), () -> {
                        false
                    })()
                }, () -> {
                    head_4 = __core__headList__safe(map_8);
                    key_4 = __core__fstPair(head_4);
                    value_4 = __core__sndPair(head_4);
                    __core__ifThenElse(
                        __core__equalsData(key_4, name_2),
                        () -> {
                            inner_test(value_4)
                        },
                        () -> {
                            recurse_28(recurse_28, __core__tailList__safe(map_8))
                        }
                    )()
                })()
            };
            recurse_29(recurse_29, map_7)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__time__is_valid_data = __helios__int__is_valid_data;
    __helios__value__contains_policy = (self_68) -> {
        (mph_5) -> {
            mph_6 = __helios__mintingpolicyhash____to_data(mph_5);
            recurse_31 = (recurse_30, map_9) -> {
                __core__chooseList(map_9, () -> {
                    false
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_6),
                        () -> {
                            true
                        },
                        () -> {
                            recurse_30(recurse_30, __core__tailList__safe(map_9))
                        }
                    )()
                })()
            };
            recurse_31(recurse_31, self_68)
        }
    };
    __helios__value__is_zero_inner = (tokens_1) -> {
        recurse_33 = (recurse_32, tokens_2) -> {
            __core__chooseList(tokens_2, () -> {
                true
            }, () -> {
                __helios__bool__and(() -> {
                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)
                }, () -> {
                    recurse_32(recurse_32, __core__tailList__safe(tokens_2))
                })
            })()
        };
        recurse_33(recurse_33, tokens_1)
    };
    __helios__value__is_zero = (self_69) -> {
        () -> {
            recurse_35 = (recurse_34, map_10) -> {
                __core__chooseList(map_10, () -> {
                    true
                }, () -> {
                    __helios__bool__and(() -> {
                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_10))))
                    }, () -> {
                        recurse_34(recurse_34, __core__tailList__safe(map_10))
                    })
                })()
            };
            recurse_35(recurse_35, self_69)
        }
    };
    __helios__common__filter_map = (self_70, fn_6) -> {
        __helios__common__filter(self_70, fn_6, __core__mkNilPairData(()))
    };
    __helios__value__get_assets = (self_71) -> {
        () -> {
            __helios__common__filter_map(self_71, (pair_9) -> {
                __helios__bool____not(__core__equalsByteString(__core__unBData(__core__fstPair(pair_9)), #))
            })
        }
    };
    __helios__value__from_map = __helios__common__identity;
    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;
    __helios__value__get_policy = (self_72) -> {
        (mph_7) -> {
            mph_8 = __helios__mintingpolicyhash____to_data(mph_7);
            recurse_37 = (recurse_36, map_11) -> {
                __core__chooseList(map_11, () -> {
                    __helios__error("policy not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), mph_8),
                        () -> {
                            __core__unMapData(__core__sndPair(__core__headList__safe(map_11)))
                        },
                        () -> {
                            recurse_36(recurse_36, __core__tailList__safe(map_11))
                        }
                    )()
                })()
            };
            recurse_37(recurse_37, self_72)
        }
    };
    __helios__value__get_inner_map_int = (map_12, key_5) -> {
        recurse_39 = (recurse_38, map_13, key_6) -> {
            __core__chooseList(map_13, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), key_6),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_13)))
                    },
                    () -> {
                        recurse_38(recurse_38, __core__tailList__safe(map_13), key_6)
                    }
                )()
            })()
        };
        recurse_39(recurse_39, map_12, key_5)
    };
    __helios__value__get_map_keys = (map_14) -> {
        recurse_41 = (recurse_40, map_15) -> {
            __core__chooseList(map_15, () -> {
                __helios__common__list_0
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_15)), recurse_40(recurse_40, __core__tailList__safe(map_15)))
            })()
        };
        recurse_41(recurse_41, map_14)
    };
    __helios__common__any = (self_73, fn_7) -> {
        recurse_43 = (recurse_42, self_74, fn_8) -> {
            __core__chooseList(self_74, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_8(__core__headList__safe(self_74)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_42(recurse_42, __core__tailList__safe(self_74), fn_8)
                    }
                )()
            })()
        };
        recurse_43(recurse_43, self_73, fn_7)
    };
    __helios__common__is_in_bytearray_list = (lst_5, key_7) -> {
        __helios__common__any(lst_5, (item_4) -> {
            __core__equalsData(item_4, key_7)
        })
    };
    __helios__common__concat = (a_6, b_11) -> {
        recurse_45 = (recurse_44, lst_6, rem) -> {
            __core__chooseList(rem, () -> {
                lst_6
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_44(recurse_44, lst_6, __core__tailList__safe(rem)))
            })()
        };
        recurse_45(recurse_45, b_11, a_6)
    };
    __helios__value__merge_map_keys = (a_7, b_12) -> {
        aKeys = __helios__value__get_map_keys(a_7);
        recurse_47 = (recurse_46, keys, map_16) -> {
            __core__chooseList(map_16, () -> {
                __helios__common__list_0
            }, () -> {
                key_8 = __core__fstPair(__core__headList__safe(map_16));
                __core__ifThenElse(
                    __helios__common__is_in_bytearray_list(aKeys, key_8),
                    () -> {
                        recurse_46(recurse_46, keys, __core__tailList__safe(map_16))
                    },
                    () -> {
                        __core__mkCons(key_8, recurse_46(recurse_46, keys, __core__tailList__safe(map_16)))
                    }
                )()
            })()
        };
        uniqueBKeys = recurse_47(recurse_47, aKeys, b_12);
        __helios__common__concat(aKeys, uniqueBKeys)
    };
    __helios__value__add_or_subtract_inner = (op) -> {
        (a_8, b_13) -> {
            recurse_49 = (recurse_48, keys_1, result) -> {
                __core__chooseList(keys_1, () -> {
                    result
                }, () -> {
                    key_9 = __core__headList__safe(keys_1);
                    tail_1 = recurse_48(recurse_48, __core__tailList__safe(keys_1), result);
                    sum = op(__helios__value__get_inner_map_int(a_8, key_9), __helios__value__get_inner_map_int(b_13, key_9));
                    __core__ifThenElse(
                        __core__equalsInteger(sum, 0),
                        () -> {
                            tail_1
                        },
                        () -> {
                            __core__mkCons(__core__mkPairData(key_9, __core__iData(sum)), tail_1)
                        }
                    )()
                })()
            };
            recurse_49(recurse_49, __helios__value__merge_map_keys(a_8, b_13), __core__mkNilPairData(()))
        }
    };
    __helios__value__get_inner_map = (map_17, mph_9) -> {
        recurse_51 = (recurse_50, map_18) -> {
            __core__chooseList(map_18, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_18)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_18)))
                    },
                    () -> {
                        recurse_50(recurse_50, __core__tailList__safe(map_18))
                    }
                )()
            })()
        };
        recurse_51(recurse_51, map_17)
    };
    __helios__value__add_or_subtract = (a_9, b_14, op_1) -> {
        recurse_53 = (recurse_52, keys_2, result_1) -> {
            __core__chooseList(keys_2, () -> {
                result_1
            }, () -> {
                key_10 = __core__headList__safe(keys_2);
                tail_2 = recurse_52(recurse_52, __core__tailList__safe(keys_2), result_1);
                item_5 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_9, key_10), __helios__value__get_inner_map(b_14, key_10));
                __core__chooseList(item_5, () -> {
                    tail_2
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_10, __core__mapData(item_5)), tail_2)
                })()
            })()
        };
        recurse_53(recurse_53, __helios__value__merge_map_keys(a_9, b_14), __core__mkNilPairData(()))
    };
    __helios__value____add = (a_10, b_15) -> {
        __helios__value__add_or_subtract(a_10, b_15, __core__addInteger)
    };
    __helios__common__map = (self_75, fn_9, init) -> {
        recurse_55 = (recurse_54, rem_1, lst_7) -> {
            __core__chooseList(rem_1, () -> {
                lst_7
            }, () -> {
                __core__mkCons(fn_9(__core__headList__safe(rem_1)), recurse_54(recurse_54, __core__tailList__safe(rem_1), lst_7))
            })()
        };
        recurse_55(recurse_55, self_75, init)
    };
    __helios__value____to_data = __core__mapData;
    __helios__value__value = __helios__common__identity;
    __helios__value__from_data = __core__unMapData;
    __helios__common__insert_in_sorted = (x_3, lst_8, comp) -> {
        recurse_57 = (recurse_56, lst_9) -> {
            __core__chooseList(lst_9, () -> {
                __core__mkCons(x_3, lst_9)
            }, () -> {
                head_5 = __core__headList__safe(lst_9);
                __core__ifThenElse(
                    comp(x_3, head_5),
                    () -> {
                        __core__mkCons(x_3, lst_9)
                    },
                    () -> {
                        __core__mkCons(head_5, recurse_56(recurse_56, __core__tailList__safe(lst_9)))
                    }
                )()
            })()
        };
        recurse_57(recurse_57, lst_8)
    };
    __helios__common__sort = (lst_10, comp_1) -> {
        recurse_59 = (recurse_58, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                (head_6, tail_3) -> {
                    __helios__common__insert_in_sorted(head_6, tail_3, comp_1)
                }(__core__headList__safe(lst_11), recurse_58(recurse_58, __core__tailList__safe(lst_11)))
            })()
        };
        recurse_59(recurse_59, lst_10)
    };
    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;
    __helios__bytearray____lt = __core__lessThanByteString;
    __helios__int__max = (a_11, b_16) -> {
        __core__ifThenElse(
            __core__lessThanInteger(a_11, b_16),
            b_16,
            a_11
        )
    };
    __helios__common__slice_bytearray = (self_76, selfLengthFn) -> {
        (start, end) -> {
            normalize = (pos_1) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(pos_1, 0),
                    () -> {
                        __core__addInteger(__core__addInteger(selfLengthFn(self_76), 1), pos_1)
                    },
                    () -> {
                        pos_1
                    }
                )()
            };
            fn_11 = (start_1) -> {
                fn_10 = (end_1) -> {
                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_76)
                };
                fn_10(normalize(end))
            };
            fn_11(normalize(start))
        }
    };
    __helios__bytearray__slice = (self_77) -> {
        __helios__common__slice_bytearray(self_77, __core__lengthOfByteString)
    };
    __helios__bytearray__blake2b = (self_78) -> {
        () -> {
            __core__blake2b_256(self_78)
        }
    };
    __helios__bytearray__length = __core__lengthOfByteString;
    __helios__bytearray____add = __core__appendByteString;
    __helios__txid__serialize = __helios__common__serialize;
    __helios__txoutputid__index = (self_79) -> {
        __helios__int__from_data(__helios__common__enum_field_1(self_79))
    };
    __helios__txoutputid__tx_id = __helios__common__enum_field_0;
    __helios__common__enum_fields_after_7 = (self_80) -> {
        __core__tailList(__helios__common__enum_fields_after_6(self_80))
    };
    __helios__common__enum_fields_after_8 = (self_81) -> {
        __core__tailList(__helios__common__enum_fields_after_7(self_81))
    };
    __helios__common__enum_field_9 = (self_82) -> {
        __core__headList(__helios__common__enum_fields_after_8(self_82))
    };
    __helios__tx__redeemers = (self_83) -> {
        __core__unMapData(__helios__common__enum_field_9(self_83))
    };
    __helios__scriptpurpose__spending____is = (data_20) -> {
        __helios__common__enum_tag_equals(data_20, 1)
    };
    __helios__txoutputid____eq = __helios__common____eq;
    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;
    __helios__scriptpurpose____to_data = __helios__common__identity;
    __helios__txid__show = (self_84) -> {
        () -> {
            __helios__data__show_constr_data((tag_6, fields_10) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_6, 0),
                    () -> {
                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_8) -> {
                            __helios__bytearray__show(bytes_8)()
                        }))(fields_10)
                    },
                    () -> {
                        __helios__data__show(self_84)()
                    }
                )()
            })(self_84)
        }
    };
    __helios__txoutputid__show = (self_85) -> {
        () -> {
            __helios__data__show_constr_data((tag_7, fields_11) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_7, 0),
                    () -> {
                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {
                            __helios__txid__show(tx_id_data)()
                        })(fields_11);
                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_9) -> {
                            __helios__int__show(i_9)()
                        }))(fields_11);
                        __core__appendString(tx_id_str, __core__appendString("#", index_str))
                    },
                    () -> {
                        __helios__data__show(self_85)()
                    }
                )()
            })(self_85)
        }
    };
    __helios__tx__ref_inputs = (self_86) -> {
        __core__unListData(__helios__common__enum_field_1(self_86))
    };
    __helios__address____eq = __helios__common____eq;
    __helios__string__serialize = (self_87) -> {
        () -> {
            __core__serialiseData(__helios__string____to_data(self_87))
        }
    };
    __helios__txoutput__from_data = __helios__common__identity;
    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);
    __helios__option__NONE_FUNC = (callback_6) -> {
        callback_6(false, ())
    };
    __helios__bytearray__from_data_safe = (data_21) -> {
        __core__chooseData(data_21, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unBData__safe(data_21))
        })()
    };
    __helios__int__from_data_safe = (data_22) -> {
        __core__chooseData(data_22, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unIData__safe(data_22))
        }, () -> {
            __helios__option__NONE_FUNC
        })()
    };
    __helios__common__struct_fields_after_0 = __core__tailList;
    __helios__common__struct_field_1 = (self_88) -> {
        __core__headList(__helios__common__struct_fields_after_0(self_88))
    };
    __helios__common__struct_field_0 = __core__headList;
    __helios__struct____to_data = __core__listData;
    __helios__struct____eq = (self_89, other_3) -> {
        __core__equalsData(__helios__struct____to_data(self_89), __helios__struct____to_data(other_3))
    };
    __helios__value__compare_inner = (comp_2, a_12, b_17) -> {
        recurse_61 = (recurse_60, keys_3) -> {
            __core__chooseList(keys_3, () -> {
                true
            }, () -> {
                key_11 = __core__headList__safe(keys_3);
                __core__ifThenElse(
                    __helios__bool____not(comp_2(__helios__value__get_inner_map_int(a_12, key_11), __helios__value__get_inner_map_int(b_17, key_11))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_60(recurse_60, __core__tailList__safe(keys_3))
                    }
                )()
            })()
        };
        recurse_61(recurse_61, __helios__value__merge_map_keys(a_12, b_17))
    };
    __helios__value__compare = (a_13, b_18, comp_3) -> {
        recurse_63 = (recurse_62, keys_4) -> {
            __core__chooseList(keys_4, () -> {
                true
            }, () -> {
                key_12 = __core__headList__safe(keys_4);
                __core__ifThenElse(
                    __helios__bool____not(__helios__value__compare_inner(comp_3, __helios__value__get_inner_map(a_13, key_12), __helios__value__get_inner_map(b_18, key_12))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_62(recurse_62, __core__tailList__safe(keys_4))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, __helios__value__merge_map_keys(a_13, b_18))
    };
    __helios__value____geq = (a_14, b_19) -> {
        __helios__value__compare(a_14, b_19, (a_qty, b_qty) -> {
            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))
        })
    };
    __helios__value__contains = (self_90) -> {
        (value_5) -> {
            __helios__value____geq(self_90, value_5)
        }
    };
    __helios__txoutput__sum_values = (outputs) -> {
        __helios__common__fold(outputs, (prev_3, txOutput) -> {
            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))
        }, __helios__value__ZERO)
    };
    __helios__tx__filter_outputs = (self_91, fn_12) -> {
        __helios__common__filter_list(__helios__tx__outputs(self_91), fn_12)
    };
    __helios__address__credential = __helios__common__enum_field_0;
    __helios__spendingcredential__is_validator = (self_92) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_92)), 1)
    };
    __helios__validatorhash____eq = __helios__bytearray____eq;
    __helios__validatorhash__from_data = __helios__bytearray__from_data;
    __helios__spendingcredential__validator__hash = (self_93) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_93))
    };
    __helios__spendingcredential__validator__cast = (data_23) -> {
        __helios__common__assert_constr_index(data_23, 1)
    };
    __helios__txoutput__is_locked_by = (self_94) -> {
        (hash) -> {
            credential = __helios__address__credential(__helios__txoutput__address(self_94));
            __core__ifThenElse(
                __helios__spendingcredential__is_validator(credential),
                () -> {
                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))
                },
                () -> {
                    false
                }
            )()
        }
    };
    __helios__tx__outputs_locked_by = (self_95) -> {
        (vh) -> {
            __helios__tx__filter_outputs(self_95, (output) -> {
                __helios__txoutput__is_locked_by(output)(vh)
            })
        }
    };
    __helios__tx__value_locked_by = (self_96) -> {
        (vh_1) -> {
            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_96)(vh_1))
        }
    };
    __helios__txoutputdatum__serialize = __helios__common__serialize;
    __helios__data__constrdata____is = (data_24) -> {
        __core__chooseData(data_24, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__data__constrdata__fields = (data_25) -> {
        __core__sndPair(__core__unConstrData(data_25))
    };
    __helios__data__constrdata__tag = (data_26) -> {
        __core__fstPair(__core__unConstrData(data_26))
    };
    __helios__common__struct_fields_after_1 = (self_97) -> {
        __core__tailList(__helios__common__struct_fields_after_0(self_97))
    };
    __helios__common__struct_fields_after_2 = (self_98) -> {
        __core__tailList(__helios__common__struct_fields_after_1(self_98))
    };
    __helios__common__struct_fields_after_3 = (self_99) -> {
        __core__tailList(__helios__common__struct_fields_after_2(self_99))
    };
    __helios__common__struct_field_4 = (self_100) -> {
        __core__headList(__helios__common__struct_fields_after_3(self_100))
    };
    __helios__common__struct_field_3 = (self_101) -> {
        __core__headList(__helios__common__struct_fields_after_2(self_101))
    };
    __helios__common__struct_field_2 = (self_102) -> {
        __core__headList(__helios__common__struct_fields_after_1(self_102))
    };
    __helios__struct__serialize = (self_103) -> {
        () -> {
            __core__serialiseData(__helios__struct____to_data(self_103))
        }
    };
    __helios__txoutput__is_valid_data = (data_27) -> {
        __core__chooseData(data_27, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__txinput__is_valid_data = (data_28) -> {
        __helios__common__test_constr_data_2(data_28, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)
    };
    __helios__txinput____to_data = __helios__common__identity;
    __helios__common__enum_field_6 = (self_104) -> {
        __core__headList(__helios__common__enum_fields_after_5(self_104))
    };
    __helios__common__enum_field_5 = (self_105) -> {
        __core__headList(__helios__common__enum_fields_after_4(self_105))
    };
    __helios__common__enum_field_3 = (self_106) -> {
        __core__headList(__helios__common__enum_fields_after_2(self_106))
    };
    __helios__mintingpolicyhash__is_valid_data = (data_29) -> {
        __core__chooseData(data_29, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            bytes_9 = __core__unBData__safe(data_29);
            n_4 = __core__lengthOfByteString(bytes_9);
            __core__ifThenElse(
                __core__equalsInteger(n_4, 0),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(n_4, 28),
                        true,
                        false
                    )
                }
            )()
        })()
    };
    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__spendingcredential__is_valid_data = (data_30) -> {
        __core__chooseData(data_30, () -> {
            pair_10 = __core__unConstrData__safe(data_30);
            index_5 = __core__fstPair(pair_10);
            fields_12 = __core__sndPair(pair_10);
            __core__ifThenElse(
                __core__equalsInteger(index_5, 0),
                () -> {
                    __core__chooseList(fields_12, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_12), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_12))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_5, 1),
                        () -> {
                            __core__chooseList(fields_12, () -> {
                                false
                            }, () -> {
                                __core__chooseList(__core__tailList__safe(fields_12), () -> {
                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_12))
                                }, () -> {
                                    false
                                })()
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__common__test_list_head_data = (test_head, test_tail) -> {
        (list_2) -> {
            __core__chooseList(list_2, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    test_head(__core__headList(list_2)),
                    () -> {
                        test_tail(__core__tailList(list_2))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;
    __helios__common__test_list_empty = (list_3) -> {
        __core__chooseList(list_3, true, false)
    };
    __helios__stakingcredential__is_valid_data = (data_31) -> {
        __core__chooseData(data_31, () -> {
            pair_11 = __core__unConstrData__safe(data_31);
            tag_8 = __core__fstPair(pair_11);
            fields_13 = __core__sndPair(pair_11);
            __core__ifThenElse(
                __core__equalsInteger(tag_8, 0),
                () -> {
                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_13)
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(tag_8, 1),
                        () -> {
                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_13)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__stakingcredential]__is_valid_data = (data_32) -> {
        __core__chooseData(data_32, () -> {
            pair_12 = __core__unConstrData__safe(data_32);
            index_6 = __core__fstPair(pair_12);
            fields_14 = __core__sndPair(pair_12);
            __core__ifThenElse(
                __core__equalsInteger(index_6, 0),
                () -> {
                    __core__chooseList(fields_14, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_14), () -> {
                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_14))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_6, 1),
                        () -> {
                            __core__chooseList(fields_14, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__address__is_valid_data = (data_33) -> {
        __helios__common__test_constr_data_2(data_33, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)
    };
    __helios__validatorhash__show = __helios__bytearray__show;
    __helios__common__find_safe = (self_107, fn_13, callback_7) -> {
        recurse_65 = (recurse_64, self_108, fn_14) -> {
            __core__chooseList(self_108, () -> {
                __core__constrData(1, __helios__common__list_0)
            }, () -> {
                head_7 = __core__headList__safe(self_108);
                __core__ifThenElse(
                    fn_14(head_7),
                    () -> {
                        __core__constrData(0, __helios__common__list_1(callback_7(head_7)))
                    },
                    () -> {
                        recurse_64(recurse_64, __core__tailList__safe(self_108), fn_14)
                    }
                )()
            })()
        };
        recurse_65(recurse_65, self_107, fn_13)
    };
    __helios__spendingcredential____eq = __helios__common____eq;
    __helios__validatorhash____to_data = __helios__bytearray____to_data;
    __helios__spendingcredential__new_validator = (hash_1) -> {
        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))
    };
    __helios__bytearray__is_valid_data_max_length = (n_5) -> {
        (data_34) -> {
            __core__chooseData(data_34, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_10 = __core__unBData__safe(data_34);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_10), n_5),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__assetclass__is_valid_data = (data_35) -> {
        __helios__common__test_constr_data_2(data_35, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))
    };
    __helios__data__mapdata____is = (data_36) -> {
        __core__chooseData(data_36, () -> {
            false
        }, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__scriptpurpose__from_data = __helios__common__identity;
    __module__StellarHeliosHelpers__logGroupStart = (group, __useopt__collapsed, collapsed) -> {
        collapsed_1 = __core__ifThenElse(
            __useopt__collapsed,
            () -> {
                collapsed
            },
            () -> {
                false
            }
        )();
        __core__ifThenElse(
            collapsed_1,
            () -> {
                __helios__print(__helios__string____add("\u{1F423}\u{1F5DC}\uFE0F ", group))
            },
            () -> {
                () -> {
                    __helios__print(__helios__string____add("\u{1F423}", group))
                }()
            }
        )()
    };
    __module__StellarHeliosHelpers__logGroupEnd = (__useopt__status, status) -> {
        status_1 = __core__ifThenElse(
            __useopt__status,
            () -> {
                status
            },
            () -> {
                ""
            }
        )();
        __helios__print(__helios__string____add("\u{1F95A} ", status_1))
    };
    __module__StellarHeliosHelpers__emptyUnitFunc = () -> {
        ()
    };
    __module__StellarHeliosHelpers__logGroup_1 = (__module__StellarHeliosHelpers__logGroup) -> {
        (group_1, __useopt__collapsed_1, collapsed_2, callback_8) -> {
            collapsed_3 = __core__ifThenElse(
                __useopt__collapsed_1,
                () -> {
                    collapsed_2
                },
                () -> {
                    false
                }
            )();
            __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(group_1, true, collapsed_3), result_2 = callback_8();
            __core__chooseUnit(__core__ifThenElse(
                result_2,
                () -> {
                    __module__StellarHeliosHelpers__logGroupEnd(true, "\u2705")
                },
                () -> {
                    () -> {
                        __module__StellarHeliosHelpers__logGroupEnd(true, "\u274C")
                    }()
                }
            )(), result_2))
        }
    };
    __module__StellarHeliosHelpers__logGroupUnit = (group_2, __useopt__collapsed_2, collapsed_4, __useopt__callback, callback_9) -> {
        collapsed_5 = __core__ifThenElse(
            __useopt__collapsed_2,
            () -> {
                collapsed_4
            },
            () -> {
                false
            }
        )();
        callback_10 = __core__ifThenElse(
            __useopt__callback,
            () -> {
                callback_9
            },
            () -> {
                __module__StellarHeliosHelpers__emptyUnitFunc
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(group_2, true, collapsed_5), __core__chooseUnit(callback_10(), __module__StellarHeliosHelpers__logGroupEnd(false, ())))
    };
    __module__StellarHeliosHelpers__TODO = (task) -> {
        __helios__print(__helios__string____add(__helios__string____add("  \u{1F7E5}  \u{1F633}\u{1F4A6}  TODO: ", task), "
"))
    };
    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion, __useopt__onError, onError, __useopt__showSuccess, showSuccess) -> {
        assertion_1 = __core__ifThenElse(
            __useopt__assertion,
            () -> {
                assertion
            },
            () -> {
                true
            }
        )();
        onError_1 = __core__ifThenElse(
            __useopt__onError,
            () -> {
                onError
            },
            () -> {
                __helios__string____add("  \u274C failed reqt: \u2757", reqt)
            }
        )();
        showSuccess_1 = __core__ifThenElse(
            __useopt__showSuccess,
            () -> {
                showSuccess
            },
            () -> {
                false
            }
        )();
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool__and(() -> {
                showSuccess_1
            }, () -> {
                assertion_1
            }),
            () -> {
                __helios__print(__helios__string____add("\u2705 \u2757", reqt))
            },
            () -> {
                () -> {
                    __helios__print(__helios__string____add("\u2757", reqt))
                }()
            }
        )(), __helios__assert(assertion_1, onError_1))
    };
    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2, __useopt__onError_1, onError_2, __useopt__showSuccess_1, showSuccess_2) -> {
        assertion_3 = __core__ifThenElse(
            __useopt__assertion_1,
            () -> {
                assertion_2
            },
            () -> {
                true
            }
        )();
        onError_3 = __core__ifThenElse(
            __useopt__onError_1,
            () -> {
                onError_2
            },
            () -> {
                __helios__string____add("  \u274C failed reqt: \u2757", reqt_1)
            }
        )();
        showSuccess_3 = __core__ifThenElse(
            __useopt__showSuccess_1,
            () -> {
                showSuccess_2
            },
            () -> {
                false
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3, true, onError_3, true, showSuccess_3), true)
    };
    __module__StellarHeliosHelpers__REQTgroupStart = (reqt_2, __useopt__collapsed_3, collapsed_6) -> {
        collapsed_7 = __core__ifThenElse(
            __useopt__collapsed_3,
            () -> {
                collapsed_6
            },
            () -> {
                false
            }
        )();
        __module__StellarHeliosHelpers__logGroupStart(__helios__string____add("\u2757", reqt_2), true, collapsed_7)
    };
    __module__StellarHeliosHelpers__bREQTgroup = (reqt_3, __useopt__collapsed_4, collapsed_8, callback_11) -> {
        collapsed_9 = __core__ifThenElse(
            __useopt__collapsed_4,
            () -> {
                collapsed_8
            },
            () -> {
                false
            }
        )();
        result_3 = __module__StellarHeliosHelpers__logGroup_1(__module__StellarHeliosHelpers__logGroup_1)(__helios__string____add("\u2757", reqt_3), collapsed_9, true, callback_11);
        __core__chooseUnit(__helios__assert(result_3, __helios__string____add("\u274C failed reqt: \u2757", reqt_3)), result_3)
    };
    __module__StellarHeliosHelpers__REQTgroupUnit = (reqt_4, __useopt__collapsed_5, collapsed_10, callback_12) -> {
        collapsed_11 = __core__ifThenElse(
            __useopt__collapsed_5,
            () -> {
                collapsed_10
            },
            () -> {
                false
            }
        )();
        __module__StellarHeliosHelpers__logGroupUnit(__helios__string____add("\u2757", reqt_4), true, collapsed_11, true, callback_12)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {
        tn_1 = __core__ifThenElse(
            __useopt__tn,
            () -> {
                tn
            },
            () -> {
                ""
            }
        )();
        tnBytes_1 = __core__ifThenElse(
            __useopt__tnBytes,
            () -> {
                tnBytes
            },
            () -> {
                __helios__string__encode_utf8(tn_1)()
            }
        )();
        count_1 = __core__ifThenElse(
            __useopt__count,
            () -> {
                count
            },
            () -> {
                1
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), "missing reqd tn or tnBytes"), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), count_1))
    };
    __helios__list[__helios__txoutput]__find = (self_109) -> {
        (fn_15) -> {
            recurse_67 = (recurse_66, lst_12) -> {
                __core__chooseList(lst_12, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_6 = __helios__txoutput__from_data(__core__headList__safe(lst_12));
                    __core__ifThenElse(
                        fn_15(item_6),
                        () -> {
                            item_6
                        },
                        () -> {
                            recurse_66(recurse_66, __core__tailList__safe(lst_12))
                        }
                    )()
                })()
            };
            recurse_67(recurse_67, self_109)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length = (self_110) -> {
        __helios__common__length(self_110)
    };
    __helios__map[__helios__bytearray@__helios__int]__length = (self_111) -> {
        __helios__common__length(self_111)
    };
    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_19) -> {
        recurse_69 = (recurse_68, map_20) -> {
            __core__chooseList(map_20, () -> {
                true
            }, () -> {
                head_8 = __core__headList__safe(map_20);
                __core__ifThenElse(
                    __helios__bytearray__is_valid_data(__core__fstPair(head_8)),
                    () -> {
                        __core__ifThenElse(
                            __helios__int__is_valid_data(__core__sndPair(head_8)),
                            () -> {
                                recurse_68(recurse_68, __core__tailList__safe(map_20))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_69(recurse_69, map_19)
    };
    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_37) -> {
        map_21 = __core__unMapData(data_37);
        _ = __core__ifThenElse(
            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_21),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_21
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_112) -> {
        (key_13) -> {
            __helios__common__map_get(self_112, __helios__scriptpurpose____to_data(key_13), (x_4) -> {
                __helios__data__from_data(x_4)
            }, () -> {
                __helios__error("key not found")
            })
        }
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_113) -> {
        (fn_16) -> {
            recurse_71 = (recurse_70, map_22) -> {
                __core__chooseList(map_22, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_7 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_22)));
                    __core__ifThenElse(
                        fn_16(item_7),
                        () -> {
                            item_7
                        },
                        () -> {
                            recurse_70(recurse_70, __core__tailList__safe(map_22))
                        }
                    )()
                })()
            };
            recurse_71(recurse_71, self_113)
        }
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __helios__txinput__output_id(txInput);
        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);
        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {
            __cond = purpose;
            __core__ifThenElse(
                __helios__scriptpurpose__spending____is(__cond),
                () -> {
                    (sp) -> {
                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)
                    }
                },
                () -> {
                    (__1) -> {
                        false
                    }
                }
            )()(__cond)
        });
        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)
    };
    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_38) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_38, __core__bData(#747065), __helios__string__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_38, __core__bData(#406964), __helios__bytearray__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid data in AnyData.@id", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in AnyData.tpe", () -> {
                    false
                })()
            }
        )()
    };
    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_39) -> {
        ignore = __core__ifThenElse(
            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_39),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", ())
            }
        )();
        data_39
    };
    __module__StellarHeliosHelpers__AnyData[]__id = (self_114) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_114, #406964))
    };
    __module__StellarHeliosHelpers__AnyData[]__type = (self_115) -> {
        __helios__string__from_data(__helios__common__mStruct_field(self_115, #747065))
    };
    __helios__list[__helios__data]__head = (self_116) -> {
        __helios__data__from_data(__core__headList(self_116))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_6) -> {
        __cond_1 = value_6;
        __core__ifThenElse(
            __helios__data__constrdata____is(__cond_1),
            () -> {
                (__lhs_0) -> {
                    fields_15 = __helios__data__constrdata__fields(__lhs_0);
                    __cond_2 = __helios__list[__helios__data]__head(fields_15);
                    __core__ifThenElse(
                        __helios__data__mapdata____is(__cond_2),
                        () -> {
                            (__lhs_0_1) -> {
                                __helios__list[__helios__data]__head(fields_15)
                            }
                        },
                        () -> {
                            (__3) -> {
                                __helios__error("bad cast from ConstrData{_, ...fields} to mStruct: first field must be a map")
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    __helios__error("bad cast to mStruct from non-ConstrData")
                }
            }
        )()(__cond_1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {
        (data_40) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_40),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_40),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_40),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {
        (data_41) -> {
            ignore_1 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_41),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateLifecycleActivity data", ())
                }
            )();
            data_41
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_42) -> {
        __helios__common__enum_tag_equals(data_42, 0)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_43) -> {
        __core__chooseData(data_43, () -> {
            pair_13 = __core__unConstrData__safe(data_43);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_13), 0),
                () -> {
                    data_44 = __core__listData(__core__sndPair(pair_13));
                    __core__chooseData(data_44, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_16 = __core__unListData__safe(data_44);
                        __core__chooseList(fields_16, () -> {
                            false
                        }, () -> {
                            head_9 = __core__headList__safe(fields_16);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_9),
                                () -> {
                                    fields_17 = __core__tailList__safe(fields_16);
                                    __core__chooseList(fields_17, () -> {
                                        false
                                    }, () -> {
                                        head_10 = __core__headList__safe(fields_17);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_10),
                                            () -> {
                                                fields_18 = __core__tailList__safe(fields_17);
                                                __core__chooseList(fields_18, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed = (self_117) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_117))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose = (self_118) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_118))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_45) -> {
        __helios__common__enum_tag_equals(data_45, 1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_46) -> {
        __core__chooseData(data_46, () -> {
            pair_14 = __core__unConstrData__safe(data_46);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_14), 1),
                () -> {
                    data_47 = __core__listData(__core__sndPair(pair_14));
                    __core__chooseData(data_47, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_19 = __core__unListData__safe(data_47);
                        __core__chooseList(fields_19, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is = (data_48) -> {
        __helios__common__enum_tag_equals(data_48, 2)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_49) -> {
        __core__chooseData(data_49, () -> {
            pair_15 = __core__unConstrData__safe(data_49);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_15), 2),
                () -> {
                    data_50 = __core__listData(__core__sndPair(pair_15));
                    __core__chooseData(data_50, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_20 = __core__unListData__safe(data_50);
                        __core__chooseList(fields_20, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {
        (data_51) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_51),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_51),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_51),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_51),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_51),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_51),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_51),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_51),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__from_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1) -> {
        (data_52) -> {
            ignore_2 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(data_52),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateRole data", ())
                }
            )();
            data_52
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_53) -> {
        __helios__common__enum_tag_equals(data_53, 0)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2 = (data_54) -> {
        __core__chooseData(data_54, () -> {
            pair_16 = __core__unConstrData__safe(data_54);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_16), 0),
                () -> {
                    data_55 = __core__listData(__core__sndPair(pair_16));
                    __core__chooseData(data_55, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_21 = __core__unListData__safe(data_55);
                        __core__chooseList(fields_21, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_56) -> {
        __helios__common__enum_tag_equals(data_56, 1)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2 = (data_57) -> {
        __core__chooseData(data_57, () -> {
            pair_17 = __core__unConstrData__safe(data_57);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_17), 1),
                () -> {
                    data_58 = __core__listData(__core__sndPair(pair_17));
                    __core__chooseData(data_58, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_22 = __core__unListData__safe(data_58);
                        __core__chooseList(fields_22, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is = (data_59) -> {
        __helios__common__enum_tag_equals(data_59, 2)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2 = (data_60) -> {
        __core__chooseData(data_60, () -> {
            pair_18 = __core__unConstrData__safe(data_60);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_18), 2),
                () -> {
                    data_61 = __core__listData(__core__sndPair(pair_18));
                    __core__chooseData(data_61, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_23 = __core__unListData__safe(data_61);
                        __core__chooseList(fields_23, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is = (data_62) -> {
        __helios__common__enum_tag_equals(data_62, 3)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2 = (data_63) -> {
        __core__chooseData(data_63, () -> {
            pair_19 = __core__unConstrData__safe(data_63);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_19), 3),
                () -> {
                    data_64 = __core__listData(__core__sndPair(pair_19));
                    __core__chooseData(data_64, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_24 = __core__unListData__safe(data_64);
                        __core__chooseList(fields_24, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is = (data_65) -> {
        __helios__common__enum_tag_equals(data_65, 4)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2 = (data_66) -> {
        __core__chooseData(data_66, () -> {
            pair_20 = __core__unConstrData__safe(data_66);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_20), 4),
                () -> {
                    data_67 = __core__listData(__core__sndPair(pair_20));
                    __core__chooseData(data_67, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_25 = __core__unListData__safe(data_67);
                        __core__chooseList(fields_25, () -> {
                            false
                        }, () -> {
                            head_11 = __core__headList__safe(fields_25);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_11),
                                () -> {
                                    fields_26 = __core__tailList__safe(fields_25);
                                    __core__chooseList(fields_26, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_119) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_119))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new = (self_120) -> {
        __core__constrData(4, __helios__common__list_1(__helios__string____to_data(self_120)))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is = (data_68) -> {
        __helios__common__enum_tag_equals(data_68, 5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2 = (data_69) -> {
        __core__chooseData(data_69, () -> {
            pair_21 = __core__unConstrData__safe(data_69);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_21), 5),
                () -> {
                    data_70 = __core__listData(__core__sndPair(pair_21));
                    __core__chooseData(data_70, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_27 = __core__unListData__safe(data_70);
                        __core__chooseList(fields_27, () -> {
                            false
                        }, () -> {
                            head_12 = __core__headList__safe(fields_27);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_12),
                                () -> {
                                    fields_28 = __core__tailList__safe(fields_27);
                                    __core__chooseList(fields_28, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_71) -> {
        __helios__common__enum_tag_equals(data_71, 6)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2 = (data_72) -> {
        __core__chooseData(data_72, () -> {
            pair_22 = __core__unConstrData__safe(data_72);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_22), 6),
                () -> {
                    data_73 = __core__listData(__core__sndPair(pair_22));
                    __core__chooseData(data_73, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_29 = __core__unListData__safe(data_73);
                        __core__chooseList(fields_29, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {
        __core__constrData(6, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_74) -> {
        __helios__common__enum_tag_equals(data_74, 7)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2 = (data_75) -> {
        __core__chooseData(data_75, () -> {
            pair_23 = __core__unConstrData__safe(data_75);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_23), 7),
                () -> {
                    data_76 = __core__listData(__core__sndPair(pair_23));
                    __core__chooseData(data_76, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_30 = __core__unListData__safe(data_76);
                        __core__chooseList(fields_30, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {
        (data_77) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_77),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_77),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_77),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_77),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_77),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__from_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1) -> {
        (data_78) -> {
            ignore_3 = __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(data_78),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestActivity data", ())
                }
            )();
            data_78
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is = (data_79) -> {
        __helios__common__enum_tag_equals(data_79, 0)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2 = (data_80) -> {
        __core__chooseData(data_80, () -> {
            pair_24 = __core__unConstrData__safe(data_80);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_24), 0),
                () -> {
                    data_81 = __core__listData(__core__sndPair(pair_24));
                    __core__chooseData(data_81, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_31 = __core__unListData__safe(data_81);
                        __core__chooseList(fields_31, () -> {
                            false
                        }, () -> {
                            head_13 = __core__headList__safe(fields_31);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_13),
                                () -> {
                                    fields_32 = __core__tailList__safe(fields_31);
                                    __core__chooseList(fields_32, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is = (data_82) -> {
        __helios__common__enum_tag_equals(data_82, 1)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2 = (data_83) -> {
        __core__chooseData(data_83, () -> {
            pair_25 = __core__unConstrData__safe(data_83);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_25), 1),
                () -> {
                    data_84 = __core__listData(__core__sndPair(pair_25));
                    __core__chooseData(data_84, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_33 = __core__unListData__safe(data_84);
                        __core__chooseList(fields_33, () -> {
                            false
                        }, () -> {
                            head_14 = __core__headList__safe(fields_33);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_14),
                                () -> {
                                    fields_34 = __core__tailList__safe(fields_33);
                                    __core__chooseList(fields_34, () -> {
                                        false
                                    }, () -> {
                                        head_15 = __core__headList__safe(fields_34);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_15),
                                            () -> {
                                                fields_35 = __core__tailList__safe(fields_34);
                                                __core__chooseList(fields_35, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is = (data_85) -> {
        __helios__common__enum_tag_equals(data_85, 2)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2 = (data_86) -> {
        __core__chooseData(data_86, () -> {
            pair_26 = __core__unConstrData__safe(data_86);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_26), 2),
                () -> {
                    data_87 = __core__listData(__core__sndPair(pair_26));
                    __core__chooseData(data_87, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_36 = __core__unListData__safe(data_87);
                        __core__chooseList(fields_36, () -> {
                            false
                        }, () -> {
                            head_16 = __core__headList__safe(fields_36);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_16),
                                () -> {
                                    fields_37 = __core__tailList__safe(fields_36);
                                    __core__chooseList(fields_37, () -> {
                                        false
                                    }, () -> {
                                        head_17 = __core__headList__safe(fields_37);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_17),
                                            () -> {
                                                fields_38 = __core__tailList__safe(fields_37);
                                                __core__chooseList(fields_38, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key = (self_121) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_121))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName = (self_122) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_122))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is = (data_88) -> {
        __helios__common__enum_tag_equals(data_88, 3)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2 = (data_89) -> {
        __core__chooseData(data_89, () -> {
            pair_27 = __core__unConstrData__safe(data_89);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_27), 3),
                () -> {
                    data_90 = __core__listData(__core__sndPair(pair_27));
                    __core__chooseData(data_90, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_39 = __core__unListData__safe(data_90);
                        __core__chooseList(fields_39, () -> {
                            false
                        }, () -> {
                            head_18 = __core__headList__safe(fields_39);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_18),
                                () -> {
                                    fields_40 = __core__tailList__safe(fields_39);
                                    __core__chooseList(fields_40, () -> {
                                        false
                                    }, () -> {
                                        head_19 = __core__headList__safe(fields_40);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_19),
                                            () -> {
                                                fields_41 = __core__tailList__safe(fields_40);
                                                __core__chooseList(fields_41, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2 = (data_91) -> {
        __core__chooseData(data_91, () -> {
            pair_28 = __core__unConstrData__safe(data_91);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_28), 4),
                () -> {
                    data_92 = __core__listData(__core__sndPair(pair_28));
                    __core__chooseData(data_92, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_42 = __core__unListData__safe(data_92);
                        __core__chooseList(fields_42, () -> {
                            false
                        }, () -> {
                            head_20 = __core__headList__safe(fields_42);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_20),
                                () -> {
                                    fields_43 = __core__tailList__safe(fields_42);
                                    __core__chooseList(fields_43, () -> {
                                        false
                                    }, () -> {
                                        head_21 = __core__headList__safe(fields_43);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_21),
                                            () -> {
                                                fields_44 = __core__tailList__safe(fields_43);
                                                __core__chooseList(fields_44, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {
        (data_93) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_93),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_93),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_93),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1) -> {
        (data_94) -> {
            ignore_4 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(data_94),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingDelegateAction data", ())
                }
            )();
            data_94
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is = (data_95) -> {
        __helios__common__enum_tag_equals(data_95, 0)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2 = (data_96) -> {
        __core__chooseData(data_96, () -> {
            pair_29 = __core__unConstrData__safe(data_96);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_29), 0),
                () -> {
                    data_97 = __core__listData(__core__sndPair(pair_29));
                    __core__chooseData(data_97, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_45 = __core__unListData__safe(data_97);
                        __core__chooseList(fields_45, () -> {
                            false
                        }, () -> {
                            head_22 = __core__headList__safe(fields_45);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_22),
                                () -> {
                                    fields_46 = __core__tailList__safe(fields_45);
                                    __core__chooseList(fields_46, () -> {
                                        false
                                    }, () -> {
                                        head_23 = __core__headList__safe(fields_46);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_23),
                                            () -> {
                                                fields_47 = __core__tailList__safe(fields_46);
                                                __core__chooseList(fields_47, () -> {
                                                    false
                                                }, () -> {
                                                    head_24 = __core__headList__safe(fields_47);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_24),
                                                        () -> {
                                                            fields_48 = __core__tailList__safe(fields_47);
                                                            __core__chooseList(fields_48, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed = (self_123) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_123))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose = (self_124) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_124))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_125) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_125))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is = (data_98) -> {
        __helios__common__enum_tag_equals(data_98, 1)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2 = (data_99) -> {
        __core__chooseData(data_99, () -> {
            pair_30 = __core__unConstrData__safe(data_99);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_30), 1),
                () -> {
                    data_100 = __core__listData(__core__sndPair(pair_30));
                    __core__chooseData(data_100, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_49 = __core__unListData__safe(data_100);
                        __core__chooseList(fields_49, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is = (data_101) -> {
        __helios__common__enum_tag_equals(data_101, 2)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2 = (data_102) -> {
        __core__chooseData(data_102, () -> {
            pair_31 = __core__unConstrData__safe(data_102);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_31), 2),
                () -> {
                    data_103 = __core__listData(__core__sndPair(pair_31));
                    __core__chooseData(data_103, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_50 = __core__unListData__safe(data_103);
                        __core__chooseList(fields_50, () -> {
                            false
                        }, () -> {
                            head_25 = __core__headList__safe(fields_50);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_25),
                                () -> {
                                    fields_51 = __core__tailList__safe(fields_50);
                                    __core__chooseList(fields_51, () -> {
                                        false
                                    }, () -> {
                                        head_26 = __core__headList__safe(fields_51);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_26),
                                            () -> {
                                                fields_52 = __core__tailList__safe(fields_51);
                                                __core__chooseList(fields_52, () -> {
                                                    false
                                                }, () -> {
                                                    head_27 = __core__headList__safe(fields_52);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_27),
                                                        () -> {
                                                            fields_53 = __core__tailList__safe(fields_52);
                                                            __core__chooseList(fields_53, () -> {
                                                                false
                                                            }, () -> {
                                                                head_28 = __core__headList__safe(fields_53);
                                                                __core__ifThenElse(
                                                                    __helios__assetclass__is_valid_data(head_28),
                                                                    () -> {
                                                                        fields_54 = __core__tailList__safe(fields_53);
                                                                        __core__chooseList(fields_54, true, false)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed = (self_126) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_126))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose = (self_127) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_127))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_128) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_128))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt = (self_129) -> {
        __helios__assetclass__from_data(__helios__common__enum_field_3(self_129))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {
        (data_104) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_104),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_104),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_104),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_104),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_104),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_104),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_104),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {
        (data_105) -> {
            ignore_5 = __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_105),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoLifecycleActivity data", ())
                }
            )();
            data_105
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_106) -> {
        __helios__common__enum_tag_equals(data_106, 0)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_107) -> {
        __core__chooseData(data_107, () -> {
            pair_32 = __core__unConstrData__safe(data_107);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_32), 0),
                () -> {
                    data_108 = __core__listData(__core__sndPair(pair_32));
                    __core__chooseData(data_108, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_55 = __core__unListData__safe(data_108);
                        __core__chooseList(fields_55, () -> {
                            false
                        }, () -> {
                            head_29 = __core__headList__safe(fields_55);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_29),
                                () -> {
                                    fields_56 = __core__tailList__safe(fields_55);
                                    __core__chooseList(fields_56, () -> {
                                        false
                                    }, () -> {
                                        head_30 = __core__headList__safe(fields_56);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_30),
                                            () -> {
                                                fields_57 = __core__tailList__safe(fields_56);
                                                __core__chooseList(fields_57, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed = (self_130) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_130))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose = (self_131) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_131))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_109) -> {
        __helios__common__enum_tag_equals(data_109, 1)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_110) -> {
        __core__chooseData(data_110, () -> {
            pair_33 = __core__unConstrData__safe(data_110);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_33), 1),
                () -> {
                    data_111 = __core__listData(__core__sndPair(pair_33));
                    __core__chooseData(data_111, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_58 = __core__unListData__safe(data_111);
                        __core__chooseList(fields_58, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_112) -> {
        __helios__common__enum_tag_equals(data_112, 2)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_113) -> {
        __core__chooseData(data_113, () -> {
            pair_34 = __core__unConstrData__safe(data_113);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_34), 2),
                () -> {
                    data_114 = __core__listData(__core__sndPair(pair_34));
                    __core__chooseData(data_114, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_59 = __core__unListData__safe(data_114);
                        __core__chooseList(fields_59, () -> {
                            false
                        }, () -> {
                            head_31 = __core__headList__safe(fields_59);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_31),
                                () -> {
                                    fields_60 = __core__tailList__safe(fields_59);
                                    __core__chooseList(fields_60, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_115) -> {
        __helios__common__enum_tag_equals(data_115, 3)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_116) -> {
        __core__chooseData(data_116, () -> {
            pair_35 = __core__unConstrData__safe(data_116);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_35), 3),
                () -> {
                    data_117 = __core__listData(__core__sndPair(pair_35));
                    __core__chooseData(data_117, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_61 = __core__unListData__safe(data_117);
                        __core__chooseList(fields_61, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_118) -> {
        __helios__common__enum_tag_equals(data_118, 4)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_119) -> {
        __core__chooseData(data_119, () -> {
            pair_36 = __core__unConstrData__safe(data_119);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_36), 4),
                () -> {
                    data_120 = __core__listData(__core__sndPair(pair_36));
                    __core__chooseData(data_120, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_62 = __core__unListData__safe(data_120);
                        __core__chooseList(fields_62, () -> {
                            false
                        }, () -> {
                            head_32 = __core__headList__safe(fields_62);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_32),
                                () -> {
                                    fields_63 = __core__tailList__safe(fields_62);
                                    __core__chooseList(fields_63, () -> {
                                        false
                                    }, () -> {
                                        head_33 = __core__headList__safe(fields_63);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_33),
                                            () -> {
                                                fields_64 = __core__tailList__safe(fields_63);
                                                __core__chooseList(fields_64, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_121) -> {
        __helios__common__enum_tag_equals(data_121, 5)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_122) -> {
        __core__chooseData(data_122, () -> {
            pair_37 = __core__unConstrData__safe(data_122);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_37), 5),
                () -> {
                    data_123 = __core__listData(__core__sndPair(pair_37));
                    __core__chooseData(data_123, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_65 = __core__unListData__safe(data_123);
                        __core__chooseList(fields_65, () -> {
                            false
                        }, () -> {
                            head_34 = __core__headList__safe(fields_65);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_34),
                                () -> {
                                    fields_66 = __core__tailList__safe(fields_65);
                                    __core__chooseList(fields_66, () -> {
                                        false
                                    }, () -> {
                                        head_35 = __core__headList__safe(fields_66);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_35),
                                            () -> {
                                                fields_67 = __core__tailList__safe(fields_66);
                                                __core__chooseList(fields_67, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_124) -> {
        __helios__common__enum_tag_equals(data_124, 6)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_125) -> {
        __core__chooseData(data_125, () -> {
            pair_38 = __core__unConstrData__safe(data_125);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_38), 6),
                () -> {
                    data_126 = __core__listData(__core__sndPair(pair_38));
                    __core__chooseData(data_126, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_68 = __core__unListData__safe(data_126);
                        __core__chooseList(fields_68, () -> {
                            false
                        }, () -> {
                            head_36 = __core__headList__safe(fields_68);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_36),
                                () -> {
                                    fields_69 = __core__tailList__safe(fields_68);
                                    __core__chooseList(fields_69, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity = (self_132) -> {
        __module__CapoDelegateHelpers__ManifestActivity[]__from_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(__helios__common__enum_field_0(self_132))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data) -> {
        (data_127) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data(data_127),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_127),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_127),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_127),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_127),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_127),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_127),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_127),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_127),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_127),
                                                                                        () -> {
                                                                                            true
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __helios__list[__helios__string]__join = (self_133) -> {
        (__useopt__separator, separator) -> {
            separator_1 = __core__ifThenElse(
                __useopt__separator,
                separator,
                ""
            );
            recurse_73 = (recurse_72, lst_13, sep) -> {
                __core__chooseList(lst_13, () -> {
                    ""
                }, () -> {
                    __helios__string____add(__helios__string____add(sep, __helios__string__from_data(__core__headList__safe(lst_13))), recurse_72(recurse_72, __core__tailList__safe(lst_13), separator_1))
                })()
            };
            recurse_73(recurse_73, self_133, "")
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_1) -> {
        (data_128) -> {
            ignore_6 = __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_1)(data_128),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid AbstractDelegateActivitiesEnum data", ())
                }
            )();
            data_128
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_129) -> {
        __core__chooseData(data_129, () -> {
            pair_39 = __core__unConstrData__safe(data_129);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_39), 0),
                () -> {
                    data_130 = __core__listData(__core__sndPair(pair_39));
                    __core__chooseData(data_130, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_70 = __core__unListData__safe(data_130);
                        __core__chooseList(fields_70, () -> {
                            false
                        }, () -> {
                            head_37 = __core__headList__safe(fields_70);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_37),
                                () -> {
                                    fields_71 = __core__tailList__safe(fields_70);
                                    __core__chooseList(fields_71, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_131) -> {
        __helios__common__enum_tag_equals(data_131, 1)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_132) -> {
        __core__chooseData(data_132, () -> {
            pair_40 = __core__unConstrData__safe(data_132);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_40), 1),
                () -> {
                    data_133 = __core__listData(__core__sndPair(pair_40));
                    __core__chooseData(data_133, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_72 = __core__unListData__safe(data_133);
                        __core__chooseList(fields_72, () -> {
                            false
                        }, () -> {
                            head_38 = __core__headList__safe(fields_72);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_38),
                                () -> {
                                    fields_73 = __core__tailList__safe(fields_72);
                                    __core__chooseList(fields_73, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_134) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_134))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_134) -> {
        __helios__common__enum_tag_equals(data_134, 2)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_135) -> {
        __core__chooseData(data_135, () -> {
            pair_41 = __core__unConstrData__safe(data_135);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_41), 2),
                () -> {
                    data_136 = __core__listData(__core__sndPair(pair_41));
                    __core__chooseData(data_136, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_74 = __core__unListData__safe(data_136);
                        __core__chooseList(fields_74, () -> {
                            false
                        }, () -> {
                            head_39 = __core__headList__safe(fields_74);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_39),
                                () -> {
                                    fields_75 = __core__tailList__safe(fields_74);
                                    __core__chooseList(fields_75, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_135) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_135))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_137) -> {
        __helios__common__enum_tag_equals(data_137, 3)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_138) -> {
        __core__chooseData(data_138, () -> {
            pair_42 = __core__unConstrData__safe(data_138);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_42), 3),
                () -> {
                    data_139 = __core__listData(__core__sndPair(pair_42));
                    __core__chooseData(data_139, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_76 = __core__unListData__safe(data_139);
                        __core__chooseList(fields_76, () -> {
                            false
                        }, () -> {
                            head_40 = __core__headList__safe(fields_76);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_40),
                                () -> {
                                    fields_77 = __core__tailList__safe(fields_76);
                                    __core__chooseList(fields_77, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity = (self_136) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_136))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_140) -> {
        __core__chooseData(data_140, () -> {
            pair_43 = __core__unConstrData__safe(data_140);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_43), 4),
                () -> {
                    data_141 = __core__listData(__core__sndPair(pair_43));
                    __core__chooseData(data_141, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_78 = __core__unListData__safe(data_141);
                        __core__chooseList(fields_78, () -> {
                            false
                        }, () -> {
                            head_41 = __core__headList__safe(fields_78);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_41),
                                () -> {
                                    fields_79 = __core__tailList__safe(fields_78);
                                    __core__chooseList(fields_79, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_142) -> {
        __helios__common__enum_tag_equals(data_142, 5)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_143) -> {
        __core__chooseData(data_143, () -> {
            pair_44 = __core__unConstrData__safe(data_143);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_44), 5),
                () -> {
                    data_144 = __core__listData(__core__sndPair(pair_44));
                    __core__chooseData(data_144, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_80 = __core__unListData__safe(data_144);
                        __core__chooseList(fields_80, () -> {
                            false
                        }, () -> {
                            head_42 = __core__headList__safe(fields_80);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_42),
                                () -> {
                                    fields_81 = __core__tailList__safe(fields_80);
                                    __core__chooseList(fields_81, () -> {
                                        false
                                    }, () -> {
                                        head_43 = __core__headList__safe(fields_81);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_43),
                                            () -> {
                                                fields_82 = __core__tailList__safe(fields_81);
                                                __core__chooseList(fields_82, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_145) -> {
        __helios__common__enum_tag_equals(data_145, 6)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_146) -> {
        __core__chooseData(data_146, () -> {
            pair_45 = __core__unConstrData__safe(data_146);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_45), 6),
                () -> {
                    data_147 = __core__listData(__core__sndPair(pair_45));
                    __core__chooseData(data_147, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_83 = __core__unListData__safe(data_147);
                        __core__chooseList(fields_83, () -> {
                            false
                        }, () -> {
                            head_44 = __core__headList__safe(fields_83);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_44),
                                () -> {
                                    fields_84 = __core__tailList__safe(fields_83);
                                    __core__chooseList(fields_84, () -> {
                                        false
                                    }, () -> {
                                        head_45 = __core__headList__safe(fields_84);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_45),
                                            () -> {
                                                fields_85 = __core__tailList__safe(fields_84);
                                                __core__chooseList(fields_85, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_148) -> {
        __helios__common__enum_tag_equals(data_148, 7)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_149) -> {
        __core__chooseData(data_149, () -> {
            pair_46 = __core__unConstrData__safe(data_149);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_46), 7),
                () -> {
                    data_150 = __core__listData(__core__sndPair(pair_46));
                    __core__chooseData(data_150, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_86 = __core__unListData__safe(data_150);
                        __core__chooseList(fields_86, () -> {
                            false
                        }, () -> {
                            head_46 = __core__headList__safe(fields_86);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_46),
                                () -> {
                                    fields_87 = __core__tailList__safe(fields_86);
                                    __core__chooseList(fields_87, () -> {
                                        false
                                    }, () -> {
                                        head_47 = __core__headList__safe(fields_87);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_47),
                                            () -> {
                                                fields_88 = __core__tailList__safe(fields_87);
                                                __core__chooseList(fields_88, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_151) -> {
        __helios__common__enum_tag_equals(data_151, 8)
    };
    __helios__list[__helios__data]__is_valid_data_internal = (lst_14) -> {
        recurse_75 = (recurse_74, lst_15) -> {
            __core__chooseList(lst_15, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__data__is_valid_data(__core__headList__safe(lst_15)),
                    () -> {
                        recurse_74(recurse_74, __core__tailList__safe(lst_15))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_75(recurse_75, lst_14)
    };
    __helios__list[__helios__data]__is_valid_data = (data_152) -> {
        __core__chooseData(data_152, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_152))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_153) -> {
        __core__chooseData(data_153, () -> {
            pair_47 = __core__unConstrData__safe(data_153);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_47), 8),
                () -> {
                    data_154 = __core__listData(__core__sndPair(pair_47));
                    __core__chooseData(data_154, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_89 = __core__unListData__safe(data_154);
                        __core__chooseList(fields_89, () -> {
                            false
                        }, () -> {
                            head_48 = __core__headList__safe(fields_89);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_48),
                                () -> {
                                    fields_90 = __core__tailList__safe(fields_89);
                                    __core__chooseList(fields_90, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__data]__from_data = (data_155) -> {
        lst_16 = __core__unListData(data_155);
        __4 = __core__ifThenElse(
            __helios__list[__helios__data]__is_valid_data_internal(lst_16),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_16
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_137) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_137))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities____is = (data_156) -> {
        __helios__common__enum_tag_equals(data_156, 9)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2 = (data_157) -> {
        __core__chooseData(data_157, () -> {
            pair_48 = __core__unConstrData__safe(data_157);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_48), 9),
                () -> {
                    data_158 = __core__listData(__core__sndPair(pair_48));
                    __core__chooseData(data_158, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_91 = __core__unListData__safe(data_158);
                        __core__chooseList(fields_91, () -> {
                            false
                        }, () -> {
                            head_49 = __core__headList__safe(fields_91);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_49),
                                () -> {
                                    fields_92 = __core__tailList__safe(fields_91);
                                    __core__chooseList(fields_92, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_159) -> {
        __helios__common__enum_tag_equals(data_159, 0)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_160) -> {
        __helios__common__enum_tag_equals(data_160, 1)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __helios__option[__helios__validatorhash]__is_valid_data = (data_161) -> {
        __core__chooseData(data_161, () -> {
            pair_49 = __core__unConstrData__safe(data_161);
            index_7 = __core__fstPair(pair_49);
            fields_93 = __core__sndPair(pair_49);
            __core__ifThenElse(
                __core__equalsInteger(index_7, 0),
                () -> {
                    __core__chooseList(fields_93, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_93), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_93))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_7, 1),
                        () -> {
                            __core__chooseList(fields_93, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_162) -> {
        __core__chooseData(data_162, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_94 = __core__unListData__safe(data_162);
            __core__chooseList(fields_94, () -> {
                false
            }, () -> {
                head_50 = __core__headList__safe(fields_94);
                __core__ifThenElse(
                    __helios__string__is_valid_data(head_50),
                    () -> {
                        fields_95 = __core__tailList__safe(fields_94);
                        __core__chooseList(fields_95, () -> {
                            false
                        }, () -> {
                            head_51 = __core__headList__safe(fields_95);
                            __core__ifThenElse(
                                __helios__option[__helios__validatorhash]__is_valid_data(head_51),
                                () -> {
                                    fields_96 = __core__tailList__safe(fields_95);
                                    __core__chooseList(fields_96, () -> {
                                        false
                                    }, () -> {
                                        head_52 = __core__headList__safe(fields_96);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_52),
                                            () -> {
                                                fields_97 = __core__tailList__safe(fields_96);
                                                __core__chooseList(fields_97, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_163) -> {
        ignore_7 = __core__ifThenElse(
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_163),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid RelativeDelegateLink data", ())
            }
        )();
        __core__unListData(data_163)
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_138) -> {
        __helios__string__from_data(__helios__common__struct_field_0(self_138))
    };
    __helios__option[__helios__validatorhash]__from_data = (data_164) -> {
        __5 = __core__ifThenElse(
            __helios__option[__helios__validatorhash]__is_valid_data(data_164),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_164
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_139) -> {
        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_139))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken = (self_140) -> {
        (mph_11) -> {
            __module__StellarHeliosHelpers__mkTv(mph_11, true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_140), false, (), false, ())
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_141) -> {
        (mph_12) -> {
            __helios__assetclass__new(mph_12, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_141))())
        }
    };
    __helios__option[__helios__txinput]__none____is = (data_165) -> {
        __helios__common__enum_tag_equals(data_165, 1)
    };
    __helios__option[__helios__bool]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bool]__some____new = (some_2) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bool____to_data(some_2)))
    };
    __helios__option[__helios__txinput]__some__some = (self_142) -> {
        __helios__txinput__from_data(__helios__common__enum_field_0(self_142))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings = (__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput) -> {
        (self_143) -> {
            (inputs, mph_13, inputRequired) -> {
                __cond_3 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_143)(inputs, mph_13, true, inputRequired);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_3),
                    () -> {
                        (__lhs_0_5) -> {
                            __helios__option[__helios__bool]__none____new()
                        }
                    },
                    () -> {
                        (__lhs_0_2) -> {
                            spendDelegateInput = __helios__option[__helios__txinput]__some__some(__lhs_0_2);
                            (spendDelegateIsValid) -> {
                                __core__chooseUnit(__helios__assert(spendDelegateIsValid, "no way o"), __helios__option[__helios__bool]__some____new(spendDelegateIsValid))
                            }(__cond_4 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput));
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_4),
                                () -> {
                                    (__lhs_0_3) -> {
                                        a_15 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_3);
                                        __cond_5 = a_15;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is(__cond_5),
                                            () -> {
                                                (__lhs_0_4) -> {
                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_143)(mph_13, false, (), false, ())
                                                }
                                            },
                                            () -> {
                                                (__7) -> {
                                                    __helios__error(__helios__string____add("delegate not ValidatingSettings: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_143)))
                                                }
                                            }
                                        )()(__cond_5)
                                    }
                                },
                                () -> {
                                    (__6) -> {
                                        __helios__error("no way n")
                                    }
                                }
                            )()(__cond_4))
                        }
                    }
                )()(__cond_3)
            }
        }
    };
    __helios__option[__helios__validatorhash]__none____is = (data_166) -> {
        __helios__common__enum_tag_equals(data_166, 1)
    };
    __helios__option[__helios__txinput]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__txinput]__some____is = (data_167) -> {
        __helios__common__enum_tag_equals(data_167, 0)
    };
    __helios__list[__helios__txinput]__find_safe = (self_144) -> {
        (fn_17) -> {
            __helios__common__find_safe(self_144, (item_8) -> {
                fn_17(__helios__txinput__from_data(item_8))
            }, __helios__common__identity)
        }
    };
    __helios__option[__helios__validatorhash]__some__some = (self_145) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_145))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1 = (self_146) -> {
        (inputs_1, mph_14, __useopt__required, required) -> {
            required_1 = __core__ifThenElse(
                __useopt__required,
                () -> {
                    required
                },
                () -> {
                    true
                }
            )();
            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_146);
            __cond_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_146);
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__none____is(__cond_6),
                () -> {
                    (__lhs_0_8) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                __helios__error(__helios__string____add("\u274C\u274C \u27A1\uFE0F \u{1F481} missing required input with dgTkn ", uutName))
                            },
                            () -> {
                                () -> {
                                    __helios__option[__helios__txinput]__none____new()
                                }()
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0_6) -> {
                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_6);
                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);
                        ac = __helios__assetclass__new(mph_14, __helios__string__encode_utf8(uutName)());
                        __core__chooseUnit(__helios__print(__helios__string____add("  -- seeking input dgTkn: ", uutName)), __cond_7 = __helios__list[__helios__txinput]__find_safe(inputs_1)((i_10) -> {
                            __helios__bool__and(() -> {
                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_10)), needsAddrWithCred)
                            }, () -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(ac), 0)
                            })
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txinput]__some____is(__cond_7),
                            () -> {
                                (foundGood) -> {
                                    __core__chooseUnit(__helios__print("     \u2705 \u27A1\uFE0F  \u{1F481} found ^ input dgTkn"), foundGood)
                                }
                            },
                            () -> {
                                (__lhs_0_7) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            __helios__error(__helios__string____add("_\u274C \u27A1\uFE0F  \u{1F481} missing req'd input dgTkn (at script addr) ", uutName))
                                        },
                                        () -> {
                                            () -> {
                                                __core__chooseUnit(__helios__print(" <- \u{1F6AB} \u27A1\uFE0F \u{1F481} no input with ^ dgTkn; not req'd; returning false
"), __helios__option[__helios__txinput]__none____new())
                                            }()
                                        }
                                    )()
                                }
                            }
                        )()(__cond_7))
                    }
                }
            )()(__cond_6)
        }
    };
    __helios__option[__helios__validatorhash]__some____is = (data_168) -> {
        __helios__common__enum_tag_equals(data_168, 0)
    };
    __helios__option[__helios__txoutput]__some____is = (data_169) -> {
        __helios__common__enum_tag_equals(data_169, 0)
    };
    __helios__list[__helios__txoutput]__find_safe = (self_147) -> {
        (fn_18) -> {
            __helios__common__find_safe(self_147, (item_9) -> {
                fn_18(__helios__txoutput__from_data(item_9))
            }, __helios__common__identity)
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_148) -> {
        (mph_15, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {
            required_3 = __core__ifThenElse(
                __useopt__required_1,
                () -> {
                    required_2
                },
                () -> {
                    true
                }
            )();
            createdOrReturned_1 = __core__ifThenElse(
                __useopt__createdOrReturned,
                () -> {
                    createdOrReturned
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __lhs_0_9 = self_148;
            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_9);
            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_9);
            ac_1 = __helios__assetclass__new(mph_15, __helios__string__encode_utf8(uut)());
            (cOrR) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u{1F50E} \u{1F481} expect dgTkn ", cOrR), ": "), uut)), (hasDelegate) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__and(() -> {
                            __helios__bool____not(hasDelegate)
                        }, () -> {
                            required_3
                        }),
                        () -> {
                            __cond_11 = createdOrReturned_1;
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_11),
                                () -> {
                                    (__lhs_0_18) -> {
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not created: ", uut))
                                    }
                                },
                                () -> {
                                    (__lhs_0_16) -> {
                                        __lhs_0_17 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(self_148)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_15, true, true);
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not returned: ", uut))
                                    }
                                }
                            )()(__cond_11)
                        },
                        () -> {
                            () -> {
                                __core__ifThenElse(
                                    hasDelegate,
                                    () -> {
                                        __helios__print(__helios__string____add(__helios__string____add("\u2705 \u2B05\uFE0F \u{1F481} ok:  ^ dgTkn has ", cOrR), " a valid output"))
                                    },
                                    () -> {
                                        () -> {
                                            __helios__print(" \u2B05\uFE0F  ok \u{1F6AB}\u{1F481} no delegate but not req'd; false")
                                        }()
                                    }
                                )()
                            }()
                        }
                    )(), hasDelegate)
                }(__cond_9 = validatorHash;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_9),
                    () -> {
                        (__lhs_0_15) -> {
                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_15);
                            __core__chooseUnit(__helios__print(__helios__string____add("  ... ^ sent to validator: ", __helios__validatorhash__show(vh_3)())), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))
                        }
                    },
                    () -> {
                        (__lhs_0_12) -> {
                            __core__chooseUnit(__helios__print("   (to anywhere)"), __cond_10 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_10),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10))
                        }
                    }
                )()(__cond_9)))
            }(__cond_8 = createdOrReturned_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_8),
                () -> {
                    (__lhs_0_11) -> {
                        "returned"
                    }
                },
                () -> {
                    (__lhs_0_10) -> {
                        "created"
                    }
                }
            )()(__cond_8))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_170) -> {
        __core__chooseData(data_170, () -> {
            pair_50 = __core__unConstrData__safe(data_170);
            index_8 = __core__fstPair(pair_50);
            fields_98 = __core__sndPair(pair_50);
            __core__ifThenElse(
                __core__equalsInteger(index_8, 0),
                () -> {
                    __core__chooseList(fields_98, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_98), () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_98))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_8, 1),
                        () -> {
                            __core__chooseList(fields_98, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_171) -> {
        __core__chooseData(data_171, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_99 = __core__unListData__safe(data_171);
            __core__chooseList(fields_99, () -> {
                false
            }, () -> {
                head_53 = __core__headList__safe(fields_99);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(head_53),
                    () -> {
                        fields_100 = __core__tailList__safe(fields_99);
                        __core__chooseList(fields_100, () -> {
                            false
                        }, () -> {
                            head_54 = __core__headList__safe(fields_100);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_54),
                                () -> {
                                    fields_101 = __core__tailList__safe(fields_100);
                                    __core__chooseList(fields_101, () -> {
                                        false
                                    }, () -> {
                                        head_55 = __core__headList__safe(fields_101);
                                        __core__ifThenElse(
                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_55),
                                            () -> {
                                                fields_102 = __core__tailList__safe(fields_101);
                                                __core__chooseList(fields_102, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data = (data_172) -> {
        ignore_8 = __core__ifThenElse(
            __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(data_172),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid PendingDelegateChange data", ())
            }
        )();
        __core__unListData(data_172)
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__action = (self_149) -> {
        __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(__helios__common__struct_field_0(self_149))
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__role = (self_150) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_150))
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_173) -> {
        __8 = __core__ifThenElse(
            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(data_173),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_173
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink = (self_151) -> {
        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__struct_field_2(self_151))
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {
        (data_174) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_174),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_174),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__from_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1) -> {
        (data_175) -> {
            ignore_9 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(data_175),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingCharterChange data", ())
                }
            )();
            data_175
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is = (data_176) -> {
        __helios__common__enum_tag_equals(data_176, 0)
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2 = (data_177) -> {
        __core__chooseData(data_177, () -> {
            pair_51 = __core__unConstrData__safe(data_177);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_51), 0),
                () -> {
                    data_178 = __core__listData(__core__sndPair(pair_51));
                    __core__chooseData(data_178, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_103 = __core__unListData__safe(data_178);
                        __core__chooseList(fields_103, () -> {
                            false
                        }, () -> {
                            head_56 = __core__headList__safe(fields_103);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_56),
                                () -> {
                                    fields_104 = __core__tailList__safe(fields_103);
                                    __core__chooseList(fields_104, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change = (self_152) -> {
        __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data(__helios__common__enum_field_0(self_152))
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_17) -> {
        recurse_77 = (recurse_76, lst_18) -> {
            __core__chooseList(lst_18, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__core__headList__safe(lst_18)),
                    () -> {
                        recurse_76(recurse_76, __core__tailList__safe(lst_18))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_77(recurse_77, lst_17)
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_179) -> {
        __core__chooseData(data_179, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_179))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2 = (data_180) -> {
        __core__chooseData(data_180, () -> {
            pair_52 = __core__unConstrData__safe(data_180);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_52), 1),
                () -> {
                    data_181 = __core__listData(__core__sndPair(pair_52));
                    __core__chooseData(data_181, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_105 = __core__unListData__safe(data_181);
                        __core__chooseList(fields_105, () -> {
                            false
                        }, () -> {
                            head_57 = __core__headList__safe(fields_105);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_57),
                                () -> {
                                    fields_106 = __core__tailList__safe(fields_105);
                                    __core__chooseList(fields_106, () -> {
                                        false
                                    }, () -> {
                                        head_58 = __core__headList__safe(fields_106);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_58),
                                            () -> {
                                                fields_107 = __core__tailList__safe(fields_106);
                                                __core__chooseList(fields_107, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data = (data_182) -> {
        __core__chooseData(data_182, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_108 = __core__unListData__safe(data_182);
            __core__chooseList(fields_108, () -> {
                false
            }, () -> {
                head_59 = __core__headList__safe(fields_108);
                __core__ifThenElse(
                    __helios__address__is_valid_data(head_59),
                    () -> {
                        fields_109 = __core__tailList__safe(fields_108);
                        __core__chooseList(fields_109, () -> {
                            false
                        }, () -> {
                            head_60 = __core__headList__safe(fields_109);
                            __core__ifThenElse(
                                __helios__mintingpolicyhash__is_valid_data(head_60),
                                () -> {
                                    fields_110 = __core__tailList__safe(fields_109);
                                    __core__chooseList(fields_110, () -> {
                                        false
                                    }, () -> {
                                        head_61 = __core__headList__safe(fields_110);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_61),
                                            () -> {
                                                fields_111 = __core__tailList__safe(fields_110);
                                                __core__chooseList(fields_111, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__from_data = (data_183) -> {
        ignore_10 = __core__ifThenElse(
            __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(data_183),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid DelegationDetail data", ())
            }
        )();
        __core__unListData(data_183)
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__mph = (self_153) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_1(self_153))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__tn = (self_154) -> {
        __helios__bytearray__from_data(__helios__common__struct_field_2(self_154))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken = (self_155) -> {
        () -> {
            __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(self_155), __module__CapoDelegateHelpers__DelegationDetail[]__tn(self_155))
        }
    };
    __helios__list[__helios__txinput]__any = (self_156) -> {
        (fn_19) -> {
            __helios__common__any(self_156, (item_10) -> {
                fn_19(__helios__txinput__from_data(item_10))
            })
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {
        (data_184) -> {
            __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_184),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_184),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_184),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_184),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_184),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__from_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1) -> {
        (data_185) -> {
            ignore_11 = __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)(data_185),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestEntryType data", ())
                }
            )();
            data_185
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is = (data_186) -> {
        __helios__common__enum_tag_equals(data_186, 0)
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2 = (data_187) -> {
        __core__chooseData(data_187, () -> {
            pair_53 = __core__unConstrData__safe(data_187);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_53), 0),
                () -> {
                    data_188 = __core__listData(__core__sndPair(pair_53));
                    __core__chooseData(data_188, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_112 = __core__unListData__safe(data_188);
                        __core__chooseList(fields_112, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is = (data_189) -> {
        __helios__common__enum_tag_equals(data_189, 1)
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2 = (data_190) -> {
        __core__chooseData(data_190, () -> {
            pair_54 = __core__unConstrData__safe(data_190);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_54), 1),
                () -> {
                    data_191 = __core__listData(__core__sndPair(pair_54));
                    __core__chooseData(data_191, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_113 = __core__unListData__safe(data_191);
                        __core__chooseList(fields_113, () -> {
                            false
                        }, () -> {
                            head_62 = __core__headList__safe(fields_113);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_62),
                                () -> {
                                    fields_114 = __core__tailList__safe(fields_113);
                                    __core__chooseList(fields_114, () -> {
                                        false
                                    }, () -> {
                                        head_63 = __core__headList__safe(fields_114);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_63),
                                            () -> {
                                                fields_115 = __core__tailList__safe(fields_114);
                                                __core__chooseList(fields_115, () -> {
                                                    false
                                                }, () -> {
                                                    head_64 = __core__headList__safe(fields_115);
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(head_64),
                                                        () -> {
                                                            fields_116 = __core__tailList__safe(fields_115);
                                                            __core__chooseList(fields_116, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink = (self_157) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_157))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix = (self_158) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_158))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount = (self_159) -> {
        __helios__int__from_data(__helios__common__enum_field_2(self_159))
    };
    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2 = (data_192) -> {
        __core__chooseData(data_192, () -> {
            pair_55 = __core__unConstrData__safe(data_192);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_55), 2),
                () -> {
                    data_193 = __core__listData(__core__sndPair(pair_55));
                    __core__chooseData(data_193, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_117 = __core__unListData__safe(data_193);
                        __core__chooseList(fields_117, () -> {
                            false
                        }, () -> {
                            head_65 = __core__headList__safe(fields_117);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_65),
                                () -> {
                                    fields_118 = __core__tailList__safe(fields_117);
                                    __core__chooseList(fields_118, () -> {
                                        false
                                    }, () -> {
                                        head_66 = __core__headList__safe(fields_118);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_66),
                                            () -> {
                                                fields_119 = __core__tailList__safe(fields_118);
                                                __core__chooseList(fields_119, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2 = (data_194) -> {
        __core__chooseData(data_194, () -> {
            pair_56 = __core__unConstrData__safe(data_194);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_56), 3),
                () -> {
                    data_195 = __core__listData(__core__sndPair(pair_56));
                    __core__chooseData(data_195, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_120 = __core__unListData__safe(data_195);
                        __core__chooseList(fields_120, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2 = (data_196) -> {
        __core__chooseData(data_196, () -> {
            pair_57 = __core__unConstrData__safe(data_196);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_57), 4),
                () -> {
                    data_197 = __core__listData(__core__sndPair(pair_57));
                    __core__chooseData(data_197, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_121 = __core__unListData__safe(data_197);
                        __core__chooseList(fields_121, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_198) -> {
        __core__chooseData(data_198, () -> {
            pair_58 = __core__unConstrData__safe(data_198);
            index_9 = __core__fstPair(pair_58);
            fields_122 = __core__sndPair(pair_58);
            __core__ifThenElse(
                __core__equalsInteger(index_9, 0),
                () -> {
                    __core__chooseList(fields_122, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_122), () -> {
                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_122))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_9, 1),
                        () -> {
                            __core__chooseList(fields_122, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_199) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_199, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_199, __core__bData(#746e), __helios__bytearray__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_199, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)),
                            () -> {
                                true
                            },
                            () -> {
                                __core__trace("Warning: invalid data in CapoManifestEntry.tpe", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in CapoManifestEntry.tn", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in CapoManifestEntry.mph", () -> {
                    false
                })()
            }
        )()
    };
    __module__CapoHelpers__CapoManifestEntry[]__from_data = (data_200) -> {
        ignore_12 = __core__ifThenElse(
            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(data_200),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", ())
            }
        )();
        data_200
    };
    __module__CapoHelpers__CapoManifestEntry[]__entryType = (self_160) -> {
        __module__CapoHelpers__ManifestEntryType[]__from_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)(__helios__common__mStruct_field(self_160, #747065))
    };
    __module__CapoHelpers__CapoManifestEntry[]__tokenName = (self_161) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_161, #746e))
    };
    __helios__option[__helios__mintingpolicyhash]__from_data = (data_201) -> {
        __9 = __core__ifThenElse(
            __helios__option[__helios__mintingpolicyhash]__is_valid_data(data_201),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_201
    };
    __module__CapoHelpers__CapoManifestEntry[]__mph = (self_162) -> {
        __helios__option[__helios__mintingpolicyhash]__from_data(__helios__common__mStruct_field(self_162, #6d7068))
    };
    __helios__option[__helios__mintingpolicyhash]__some____is = (data_202) -> {
        __helios__common__enum_tag_equals(data_202, 0)
    };
    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {
        (data_203) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_203),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_203),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_203),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {
        (data_204) -> {
            ignore_13 = __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_204),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoDatum data", ())
                }
            )();
            data_204
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_19) -> {
        recurse_79 = (recurse_78, lst_20) -> {
            __core__chooseList(lst_20, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_20)),
                    () -> {
                        recurse_78(recurse_78, __core__tailList__safe(lst_20))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_79(recurse_79, lst_19)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_205) -> {
        __core__chooseData(data_205, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_205))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_23) -> {
        recurse_81 = (recurse_80, map_24) -> {
            __core__chooseList(map_24, () -> {
                true
            }, () -> {
                head_67 = __core__headList__safe(map_24);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_67)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_67)),
                            () -> {
                                recurse_80(recurse_80, __core__tailList__safe(map_24))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_81(recurse_81, map_23)
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_206) -> {
        __core__chooseData(data_206, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_206))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_25) -> {
        recurse_83 = (recurse_82, map_26) -> {
            __core__chooseList(map_26, () -> {
                true
            }, () -> {
                head_68 = __core__headList__safe(map_26);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_68)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_68)),
                            () -> {
                                recurse_82(recurse_82, __core__tailList__safe(map_26))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_83(recurse_83, map_25)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_207) -> {
        __core__chooseData(data_207, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_207))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_21) -> {
        recurse_85 = (recurse_84, lst_22) -> {
            __core__chooseList(lst_22, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList__safe(lst_22)),
                    () -> {
                        recurse_84(recurse_84, __core__tailList__safe(lst_22))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_85(recurse_85, lst_21)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_208) -> {
        __core__chooseData(data_208, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_208))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_209) -> {
        __core__chooseData(data_209, () -> {
            pair_59 = __core__unConstrData__safe(data_209);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_59), 0),
                () -> {
                    data_210 = __core__listData(__core__sndPair(pair_59));
                    __core__chooseData(data_210, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_123 = __core__unListData__safe(data_210);
                        __core__chooseList(fields_123, () -> {
                            false
                        }, () -> {
                            head_69 = __core__headList__safe(fields_123);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_69),
                                () -> {
                                    fields_124 = __core__tailList__safe(fields_123);
                                    __core__chooseList(fields_124, () -> {
                                        false
                                    }, () -> {
                                        head_70 = __core__headList__safe(fields_124);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_70),
                                            () -> {
                                                fields_125 = __core__tailList__safe(fields_124);
                                                __core__chooseList(fields_125, () -> {
                                                    false
                                                }, () -> {
                                                    head_71 = __core__headList__safe(fields_125);
                                                    __core__ifThenElse(
                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_71),
                                                        () -> {
                                                            fields_126 = __core__tailList__safe(fields_125);
                                                            __core__chooseList(fields_126, () -> {
                                                                false
                                                            }, () -> {
                                                                head_72 = __core__headList__safe(fields_126);
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_72),
                                                                    () -> {
                                                                        fields_127 = __core__tailList__safe(fields_126);
                                                                        __core__chooseList(fields_127, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            head_73 = __core__headList__safe(fields_127);
                                                                            __core__ifThenElse(
                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_73),
                                                                                () -> {
                                                                                    fields_128 = __core__tailList__safe(fields_127);
                                                                                    __core__chooseList(fields_128, () -> {
                                                                                        false
                                                                                    }, () -> {
                                                                                        head_74 = __core__headList__safe(fields_128);
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_74),
                                                                                            () -> {
                                                                                                fields_129 = __core__tailList__safe(fields_128);
                                                                                                __core__chooseList(fields_129, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    head_75 = __core__headList__safe(fields_129);
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_75),
                                                                                                        () -> {
                                                                                                            fields_130 = __core__tailList__safe(fields_129);
                                                                                                            __core__chooseList(fields_130, () -> {
                                                                                                                false
                                                                                                            }, () -> {
                                                                                                                head_76 = __core__headList__safe(fields_130);
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_76),
                                                                                                                    () -> {
                                                                                                                        fields_131 = __core__tailList__safe(fields_130);
                                                                                                                        __core__chooseList(fields_131, true, false)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })()
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_211) -> {
        ignore_14 = __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_211),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CharterData data", ())
            }
        )();
        data_211
    };
    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;
    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_163) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_163))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_212) -> {
        lst_23 = __core__unListData(data_212);
        __10 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_23
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_164) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_164))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_213) -> {
        map_27 = __core__unMapData(data_213);
        __11 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_27),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_27
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_165) -> {
        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_165))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_166) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_166))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_167) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_167))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_168) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_168))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_214) -> {
        map_28 = __core__unMapData(data_214);
        __12 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_28),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_28
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_169) -> {
        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_169))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_215) -> {
        lst_24 = __core__unListData(data_215);
        __13 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_24),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_24
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_170) -> {
        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_170))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;
    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_216) -> {
        __core__chooseData(data_216, () -> {
            pair_60 = __core__unConstrData__safe(data_216);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_60), 1),
                () -> {
                    data_217 = __core__listData(__core__sndPair(pair_60));
                    __core__chooseData(data_217, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_132 = __core__unListData__safe(data_217);
                        __core__chooseList(fields_132, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_218) -> {
        __helios__common__enum_tag_equals(data_218, 2)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_29) -> {
        recurse_87 = (recurse_86, map_30) -> {
            __core__chooseList(map_30, () -> {
                true
            }, () -> {
                head_77 = __core__headList__safe(map_30);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_77)),
                    () -> {
                        __core__ifThenElse(
                            __helios__data__is_valid_data(__core__sndPair(head_77)),
                            () -> {
                                recurse_86(recurse_86, __core__tailList__safe(map_30))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_87(recurse_87, map_29)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_219) -> {
        __core__chooseData(data_219, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_219))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_220) -> {
        __core__chooseData(data_220, () -> {
            pair_61 = __core__unConstrData__safe(data_220);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_61), 2),
                () -> {
                    data_221 = __core__listData(__core__sndPair(pair_61));
                    __core__chooseData(data_221, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_133 = __core__unListData__safe(data_221);
                        __core__chooseList(fields_133, () -> {
                            false
                        }, () -> {
                            head_78 = __core__headList__safe(fields_133);
                            __core__ifThenElse(
                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_78),
                                () -> {
                                    fields_134 = __core__tailList__safe(fields_133);
                                    __core__chooseList(fields_134, () -> {
                                        false
                                    }, () -> {
                                        head_79 = __core__headList__safe(fields_134);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_79),
                                            () -> {
                                                fields_135 = __core__tailList__safe(fields_134);
                                                __core__chooseList(fields_135, () -> {
                                                    false
                                                }, () -> {
                                                    head_80 = __core__headList__safe(fields_135);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_80),
                                                        () -> {
                                                            fields_136 = __core__tailList__safe(fields_135);
                                                            __core__chooseList(fields_136, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;
    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {
        (data_222) -> {
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_222),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_222),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_222),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {
        (data_223) -> {
            ignore_15 = __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_223),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid cctx_CharterInputType data", ())
                }
            )();
            data_223
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_224) -> {
        __helios__common__enum_tag_equals(data_224, 0)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_225) -> {
        __core__chooseData(data_225, () -> {
            pair_62 = __core__unConstrData__safe(data_225);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_62), 0),
                () -> {
                    data_226 = __core__listData(__core__sndPair(pair_62));
                    __core__chooseData(data_226, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_137 = __core__unListData__safe(data_226);
                        __core__chooseList(fields_137, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_227) -> {
        __helios__common__enum_tag_equals(data_227, 1)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_228) -> {
        __core__chooseData(data_228, () -> {
            pair_63 = __core__unConstrData__safe(data_228);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_63), 1),
                () -> {
                    data_229 = __core__listData(__core__sndPair(pair_63));
                    __core__chooseData(data_229, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_138 = __core__unListData__safe(data_229);
                        __core__chooseList(fields_138, () -> {
                            false
                        }, () -> {
                            head_81 = __core__headList__safe(fields_138);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_81),
                                () -> {
                                    fields_139 = __core__tailList__safe(fields_138);
                                    __core__chooseList(fields_139, () -> {
                                        false
                                    }, () -> {
                                        head_82 = __core__headList__safe(fields_139);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_82),
                                            () -> {
                                                fields_140 = __core__tailList__safe(fields_139);
                                                __core__chooseList(fields_140, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_171) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_171))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_172) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_172))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo) -> {
        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo), __core__mkNilData(()))))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_230) -> {
        __helios__common__enum_tag_equals(data_230, 2)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_231) -> {
        __core__chooseData(data_231, () -> {
            pair_64 = __core__unConstrData__safe(data_231);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_64), 2),
                () -> {
                    data_232 = __core__listData(__core__sndPair(pair_64));
                    __core__chooseData(data_232, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_141 = __core__unListData__safe(data_232);
                        __core__chooseList(fields_141, () -> {
                            false
                        }, () -> {
                            head_83 = __core__headList__safe(fields_141);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_83),
                                () -> {
                                    fields_142 = __core__tailList__safe(fields_141);
                                    __core__chooseList(fields_142, () -> {
                                        false
                                    }, () -> {
                                        head_84 = __core__headList__safe(fields_142);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_84),
                                            () -> {
                                                fields_143 = __core__tailList__safe(fields_142);
                                                __core__chooseList(fields_143, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_173) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_173))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_174) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_174))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_1) -> {
        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))
    };
    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {
        (data_233) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_233),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_233),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_233),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_233),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_233),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_233),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {
        (data_234) -> {
            ignore_16 = __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_234),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoActivity data", ())
                }
            )();
            data_234
        }
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_235) -> {
        __helios__common__enum_tag_equals(data_235, 0)
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_236) -> {
        __core__chooseData(data_236, () -> {
            pair_65 = __core__unConstrData__safe(data_236);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_65), 0),
                () -> {
                    data_237 = __core__listData(__core__sndPair(pair_65));
                    __core__chooseData(data_237, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_144 = __core__unListData__safe(data_237);
                        __core__chooseList(fields_144, () -> {
                            false
                        }, () -> {
                            head_85 = __core__headList__safe(fields_144);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_85),
                                () -> {
                                    fields_145 = __core__tailList__safe(fields_144);
                                    __core__chooseList(fields_145, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_175) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_175))
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_238) -> {
        __helios__common__enum_tag_equals(data_238, 1)
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_239) -> {
        __core__chooseData(data_239, () -> {
            pair_66 = __core__unConstrData__safe(data_239);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_66), 1),
                () -> {
                    data_240 = __core__listData(__core__sndPair(pair_66));
                    __core__chooseData(data_240, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_146 = __core__unListData__safe(data_240);
                        __core__chooseList(fields_146, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_241) -> {
        __helios__common__enum_tag_equals(data_241, 2)
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_242) -> {
        __core__chooseData(data_242, () -> {
            pair_67 = __core__unConstrData__safe(data_242);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_67), 2),
                () -> {
                    data_243 = __core__listData(__core__sndPair(pair_67));
                    __core__chooseData(data_243, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_147 = __core__unListData__safe(data_243);
                        __core__chooseList(fields_147, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_244) -> {
        __helios__common__enum_tag_equals(data_244, 3)
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_245) -> {
        __core__chooseData(data_245, () -> {
            pair_68 = __core__unConstrData__safe(data_245);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_68), 3),
                () -> {
                    data_246 = __core__listData(__core__sndPair(pair_68));
                    __core__chooseData(data_246, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_148 = __core__unListData__safe(data_246);
                        __core__chooseList(fields_148, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_247) -> {
        __helios__common__enum_tag_equals(data_247, 4)
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_248) -> {
        __core__chooseData(data_248, () -> {
            pair_69 = __core__unConstrData__safe(data_248);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_69), 4),
                () -> {
                    data_249 = __core__listData(__core__sndPair(pair_69));
                    __core__chooseData(data_249, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_149 = __core__unListData__safe(data_249);
                        __core__chooseList(fields_149, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_250) -> {
        __helios__common__enum_tag_equals(data_250, 5)
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_251) -> {
        __core__chooseData(data_251, () -> {
            pair_70 = __core__unConstrData__safe(data_251);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_70), 5),
                () -> {
                    data_252 = __core__listData(__core__sndPair(pair_70));
                    __core__chooseData(data_252, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_150 = __core__unListData__safe(data_252);
                        __core__chooseList(fields_150, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__getRefCharterUtxo = (mph_16) -> {
        charterAc = __helios__assetclass__new(mph_16, __helios__string__encode_utf8("charter")());
        hasCharter = (txin) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)
        };
        __core__chooseUnit(__helios__print("  -- getting ref_input for charter"), (charterUtxo) -> {
            charterUtxo
        }(__cond_12 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_12),
            () -> {
                (__lhs_0_20) -> {
                    ch = __helios__option[__helios__txinput]__some__some(__lhs_0_20);
                    ch
                }
            },
            () -> {
                (__lhs_0_19) -> {
                    __helios__error("Missing charter in required ref_inputs (use tcxWithCharterRef(tcx) in txn building functions)")
                }
            }
        )()(__cond_12)))
    };
    __module__CapoHelpers__getTxCharterData = (mph_17, __useopt__refInputs, refInputs) -> {
        refInputs_1 = __core__ifThenElse(
            __useopt__refInputs,
            () -> {
                refInputs
            },
            () -> {
                __helios__tx__ref_inputs(__helios__scriptcontext__tx)
            }
        )();
        charterAc_1 = __helios__assetclass__new(mph_17, __helios__string__encode_utf8("charter")());
        hasCharter_1 = (txin_1) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)
        };
        (charterUtxo_1) -> {
            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);
            ctd
        }(__cond_13 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter_1);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_13),
            () -> {
                (__lhs_0_24) -> {
                    ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_24);
                    ch_2
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_1);
                    __core__ifThenElse(
                        __helios__option[__helios__txinput]__some____is(__cond_14),
                        () -> {
                            (__lhs_0_23) -> {
                                ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_23);
                                ch_1
                            }
                        },
                        () -> {
                            (__lhs_0_22) -> {
                                __helios__error("Missing charter inputs / ref_inputs")
                            }
                        }
                    )()(__cond_14)
                }
            }
        )()(__cond_13))
    };
    __helios__option[__helios__string]__is_valid_data = (data_253) -> {
        __core__chooseData(data_253, () -> {
            pair_71 = __core__unConstrData__safe(data_253);
            index_10 = __core__fstPair(pair_71);
            fields_151 = __core__sndPair(pair_71);
            __core__ifThenElse(
                __core__equalsInteger(index_10, 0),
                () -> {
                    __core__chooseList(fields_151, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_151), () -> {
                            __helios__string__is_valid_data(__core__headList__safe(fields_151))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_10, 1),
                        () -> {
                            __core__chooseList(fields_151, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__txinput]__is_valid_data = (data_254) -> {
        __core__chooseData(data_254, () -> {
            pair_72 = __core__unConstrData__safe(data_254);
            index_11 = __core__fstPair(pair_72);
            fields_152 = __core__sndPair(pair_72);
            __core__ifThenElse(
                __core__equalsInteger(index_11, 0),
                () -> {
                    __core__chooseList(fields_152, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_152), () -> {
                            __helios__txinput__is_valid_data(__core__headList__safe(fields_152))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_11, 1),
                        () -> {
                            __core__chooseList(fields_152, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__DelegateInput[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__DelegateInput[]__link = (self_176) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_176))
    };
    __module__CapoHelpers__DelegateInput[]__role = (self_177) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_177))
    };
    __helios__option[__helios__string]__from_data = (data_255) -> {
        __14 = __core__ifThenElse(
            __helios__option[__helios__string]__is_valid_data(data_255),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_255
    };
    __module__CapoHelpers__DelegateInput[]__idPrefix = (self_178) -> {
        __helios__option[__helios__string]__from_data(__helios__common__struct_field_2(self_178))
    };
    __helios__option[__helios__txinput]__from_data = (data_256) -> {
        __15 = __core__ifThenElse(
            __helios__option[__helios__txinput]__is_valid_data(data_256),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_256
    };
    __module__CapoHelpers__DelegateInput[]__input = (self_179) -> {
        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_179))
    };
    __module__CapoHelpers__DelegateInput[]__mph = (self_180) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_180))
    };
    __helios__option[__helios__string]____to_data = __helios__common__identity;
    __helios__option[__helios__txinput]____to_data = __helios__common__identity;
    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_18) -> {
        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_18), __core__mkNilData(()))))))
    };
    __helios__option[__helios__txinput]__unwrap = (self_181) -> {
        () -> {
            __helios__txinput__from_data(__helios__common__enum_field_0(self_181))
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_182) -> {
        () -> {
            i_11 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_182))();
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_11);
            __core__chooseUnit(__cond_15 = inputData;
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_15),
                () -> {
                    (__lhs_0_25) -> {
                        index_12 = __helios__data__constrdata__tag(__lhs_0_25);
                        fields_153 = __helios__data__constrdata__fields(__lhs_0_25);
                        __core__chooseUnit(__helios__print(__helios__string____add("  --\u{1F41E} generic delegate activity at index ", __helios__int__show(index_12)())), __cond_16 = __helios__list[__helios__data]__head(fields_153);
                        __core__ifThenElse(
                            __helios__data__constrdata____is(__cond_16),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __helios__data__constrdata__tag(__lhs_0_26);
                                    __helios__print(__helios__string____add("  --\u{1F41E} nested activity at index ", __helios__int__show(index2)()))
                                }
                            },
                            () -> {
                                (__17) -> {
                                    ()
                                }
                            }
                        )()(__cond_16))
                    }
                },
                () -> {
                    (__16) -> {
                        ()
                    }
                }
            )()(__cond_15), inputData)
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {
        (self_183) -> {
            () -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_183)())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__assert = (__module__CapoHelpers__DelegateInput[]__error) -> {
        (self_184) -> {
            (assertionOk, msg_3) -> {
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    true
                }, () -> {
                    __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_184)(), __module__CapoHelpers__DelegateInput[]__serialize(self_184)())
                }), msg_3), __core__ifThenElse(
                    assertionOk,
                    () -> {
                        __helios__assert(true, "")
                    },
                    () -> {
                        () -> {
                            __module__CapoHelpers__DelegateInput[]__error(self_184)(msg_3)
                        }()
                    }
                )())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__error_1 = (self_185) -> {
        (msg_4) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_185)(), __module__CapoHelpers__DelegateInput[]__serialize(self_185)())
            }), msg_4), __core__chooseUnit(__helios__print(__helios__string____add("\u26A0\uFE0F \u26A0\uFE0F \u26A0\uFE0F error executing policy for dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__DelegateInput[]__link(self_185)))), __core__chooseUnit(__helios__print(__helios__string____add("  ---- with input value: ", __helios__value__show(__helios__txinput__value(__helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_185))()))(false, ()))), __core__chooseUnit(__helios__print("
"), __helios__assert(false, msg_4)))))
        }
    };
    __helios__list[__helios__data]__get = (self_186) -> {
        (index_13) -> {
            recurse_89 = (recurse_88, self_187, i_12) -> {
                __core__chooseList(self_187, () -> {
                    __helios__error("index out of range")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_13, i_12),
                        () -> {
                            __core__headList__safe(self_187)
                        },
                        () -> {
                            recurse_88(recurse_88, __core__tailList__safe(self_187), __core__addInteger(i_12, 1))
                        }
                    )()
                })()
            };
            recurse_89(recurse_89, self_186, 0)
        }
    };
    __helios__list[__helios__data]__length = __helios__common__length;
    __helios__list[__helios__data]__filter = (self_188) -> {
        (fn_20) -> {
            __helios__common__filter_list(self_188, (item_11) -> {
                fn_20(__helios__data__from_data(item_11))
            })
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged) -> {
        (self_189) -> {
            (seed) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart("", false, ()), __core__chooseUnit(__helios__print("-- ensures the delegate is unchanged, so callers needn't."), (result_4) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, "\u2705 unique seeded mint ok!"), result_4)
                }(__cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_189)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_17),
                    () -> {
                        (__lhs_0_30) -> {
                            ma_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_30);
                            __core__chooseUnit(__cond_20 = ma_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_20),
                                () -> {
                                    (__lhs_0_31) -> {
                                        fields_155 = __helios__data__constrdata__fields(__lhs_0_31);
                                        __helios__assert(__helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__get(fields_155)(0))), "seed mismatch")
                                    }
                                },
                                () -> {
                                    (__21) -> {
                                        __helios__error("no way")
                                    }
                                }
                            )()(__cond_20), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_189)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_17),
                            () -> {
                                (__lhs_0_27) -> {
                                    activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_27);
                                    __core__chooseUnit(__helios__print("-- the delegated-data policy is triggered with a multi-activity"), __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__list[__helios__data]__length(activities), 0), "no minting activities found"), foundWithThisSeed = __helios__list[__helios__data]__filter(activities)((a_16) -> {
                                        __cond_18 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(a_16);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_18),
                                            () -> {
                                                (__lhs_0_28) -> {
                                                    ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_28);
                                                    __cond_19 = ma;
                                                    __core__ifThenElse(
                                                        __helios__data__constrdata____is(__cond_19),
                                                        () -> {
                                                            (__lhs_0_29) -> {
                                                                fields_154 = __helios__data__constrdata__fields(__lhs_0_29);
                                                                __helios__bool__and(() -> {
                                                                    __helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__head(fields_154)))
                                                                }, () -> {
                                                                    true
                                                                })
                                                            }
                                                        },
                                                        () -> {
                                                            (__20) -> {
                                                                __helios__error("no way d")
                                                            }
                                                        }
                                                    )()(__cond_19)
                                                }
                                            },
                                            () -> {
                                                (__19) -> {
                                                    false
                                                }
                                            }
                                        )()(__cond_18)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate multi-activities must be minting with this seed", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_189)(__helios__int____gt(__helios__list[__helios__data]__length(foundWithThisSeed), 0), "no minting activity found for seed!"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given seed is allowed", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_189)(__helios__int____eq(__helios__list[__helios__data]__length(foundWithThisSeed), 1), "multiple minting activities found for seed"), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_189)()))))))
                                }
                            },
                            () -> {
                                (__18) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("non-mint activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_17))))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1) -> {
        (self_190) -> {
            (recId) -> {
                strId = __helios__bytearray__decode_utf8_safe(recId)();
                __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(__cond_25 = __module__CapoHelpers__DelegateInput[]__role(self_190);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_25),
                    () -> {
                        (__lhs_0_41) -> {
                            "finding unique spending activity for a delegated-data policy"
                        }
                    },
                    () -> {
                        (__26) -> {
                            __helios__error("withUniqueDDSpendingActivity: only valid for DgDataPolicy")
                        }
                    }
                )()(__cond_25), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the delegated-data controller's is spending recId", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("TEST THIS v"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spendDgt must be acting on the matching record-id", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the delegate is unchanged, so callers needn't also check that", false, (), false, (), false, ()), (result_5) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(false, ()), result_5)
                }(__cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_190)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_21),
                    () -> {
                        (__lhs_0_39) -> {
                            sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_39);
                            __core__chooseUnit(__cond_24 = sa_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_24),
                                () -> {
                                    (__lhs_0_40) -> {
                                        index_15 = __helios__data__constrdata__tag(__lhs_0_40);
                                        fields_157 = __helios__data__constrdata__fields(__lhs_0_40);
                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_15, index_15), "no way e"), foundRecId_1 = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_157));
                                        __core__ifThenElse(
                                            __helios__bytearray____neq(recId, foundRecId_1),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending:", strId)), __core__chooseUnit(__helios__print(__helios__string____add("  -- actual: Spending:", __helios__bytearray__show(foundRecId_1)())), __module__CapoHelpers__DelegateInput[]__error_1(self_190)("recId mismatch")))
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__print(__helios__string____add("  -- ok: DD controller spending activity for ", strId))
                                                }()
                                            }
                                        )())
                                    }
                                },
                                () -> {
                                    (__25) -> {
                                        __helios__error("no way f")
                                    }
                                }
                            )()(__cond_24), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_190)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities____is(__cond_21),
                            () -> {
                                (__lhs_0_38) -> {
                                    __helios__error("expected spending activity for the recId, got OtherActivities")
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_21),
                                    () -> {
                                        (__lhs_0_32) -> {
                                            activities_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_32);
                                            __core__chooseUnit(__helios__print("    -- multiple activities found"), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_190)(__helios__int____gt(__helios__list[__helios__data]__length(activities_1), 0), "no spending activities found"), actsOnThisRecord = __helios__list[__helios__data]__filter(activities_1)((a_17) -> {
                                                __cond_22 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(a_17);
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_22),
                                                    () -> {
                                                        (__lhs_0_37) -> {
                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_190)("dgInput: withSpendingActivity: CreatingDelegatedData invalid"), __helios__error(""))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_22),
                                                            () -> {
                                                                (__lhs_0_36) -> {
                                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_190)("dgInput: withSpendingActivity: UpdatingDgData invalid; use a Spending variant in the delegated-data policy"), __helios__error(""))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_22),
                                                                    () -> {
                                                                        (__lhs_0_35) -> {
                                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_190)("dgInput: withSpendingActivity: DeletingDelegatedData invalid"), __helios__error(""))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_22),
                                                                            () -> {
                                                                                (__lhs_0_33) -> {
                                                                                    sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_33);
                                                                                    __cond_23 = sa;
                                                                                    __core__ifThenElse(
                                                                                        __helios__data__constrdata____is(__cond_23),
                                                                                        () -> {
                                                                                            (__lhs_0_34) -> {
                                                                                                index_14 = __helios__data__constrdata__tag(__lhs_0_34);
                                                                                                fields_156 = __helios__data__constrdata__fields(__lhs_0_34);
                                                                                                __core__chooseUnit(__helios__assert(__helios__int____eq(index_14, index_14), "no way h"), foundRecId = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_156));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bytearray____neq(recId, foundRecId),
                                                                                                    () -> {
                                                                                                        actualIdStr = __helios__bytearray__decode_utf8_safe(foundRecId)();
                                                                                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_190)(__helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add("recId mismatch: found ", actualIdStr), " (expected "), strId), ")")), __helios__error(""))
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            __core__chooseUnit(__helios__print("  -- matched recId"), true)
                                                                                                        }()
                                                                                                    }
                                                                                                )())
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__24) -> {
                                                                                                __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_190)("wrong structure for spending activity"), __helios__error(""))
                                                                                            }
                                                                                        }
                                                                                    )()(__cond_23)
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__23) -> {
                                                                                    false
                                                                                }
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()(__cond_22)
                                            });
                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate data-controller multi-activities must treat this recId", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_190)(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(actsOnThisRecord), 0))("dgt acting on this recId? "), __helios__string____add("no spending activity found for recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given recId is allowed", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_190)(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(actsOnThisRecord), 1))("exactly one activity? "), __helios__string____add("multiple spending activities found for recId: ", strId)), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_190)()))))))
                                        }
                                    },
                                    () -> {
                                        (__22) -> {
                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_190)("non-spend activity!"), __helios__error(""))
                                        }
                                    }
                                )()
                            }
                        )()
                    }
                )()(__cond_21))))))))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_191) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupUnit("the delegate must be unchanged", true, true, () -> {
                __lhs_0_42 = self_191;
                link_1 = __module__CapoHelpers__DelegateInput[]__link(__lhs_0_42);
                input_1 = __module__CapoHelpers__DelegateInput[]__input(__lhs_0_42);
                mph_19 = __module__CapoHelpers__DelegateInput[]__mph(__lhs_0_42);
                __lhs_0_43 = link_1;
                uut_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_43);
                validatorHash_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_43);
                targetValue = __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken(link_1)(mph_19);
                (returnedUnchanged) -> {
                    __core__chooseUnit(__helios__assert(returnedUnchanged, "no"), __helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1)(mph_19, false, (), false, ()), "no"))
                }(__cond_26 = validatorHash_1;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_26),
                    () -> {
                        (__lhs_0_45) -> {
                            vh_4 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_45);
                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_191)(__helios__value__contains(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_4))(targetValue), __helios__string____add("dgTkn not returned: ", uut_1)), __cond_27 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o_1) -> {
                                __helios__bytearray____eq(__helios__txoutputdatum__serialize(__helios__txoutput__datum(o_1))(), __helios__txoutputdatum__serialize(__helios__txinput__datum(__helios__option[__helios__txinput]__unwrap(input_1)()))())
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_27),
                                () -> {
                                    (__lhs_0_47) -> {
                                        __core__chooseUnit(__helios__print(__helios__string____add("ok: the dgTkn is unchanged: ", uut_1)), true)
                                    }
                                },
                                () -> {
                                    (__lhs_0_46) -> {
                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_191)("The delegate's dgTkn datum MUST NOT be modified!"), __helios__error(""))
                                    }
                                }
                            )()(__cond_27))
                        }
                    },
                    () -> {
                        (__lhs_0_44) -> {
                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_191)("unchOut - no vh"), __helios__error(""))
                        }
                    }
                )()(__cond_26))
            }), self_191)
        }
    };
    __module__CapoHelpers__DelegateInput[]__orFail = (self_192) -> {
        () -> {
            __lhs_0_48 = self_192;
            true
        }
    };
    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;
    __module__CapoHelpers__CapoCtx[]__mph = (self_193) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_193))
    };
    __module__CapoHelpers__CapoCtx[]__charter = (self_194) -> {
        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_194))
    };
    __module__CapoHelpers__CapoCtx[]____new = (mph_20, charter) -> {
        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_20), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))
    };
    __helios__map[__helios__bytearray@__helios__int]__show = (self_195) -> {
        () -> {
            recurse_91 = (recurse_90, self_196, first) -> {
                __core__chooseList(self_196, () -> {
                    ""
                }, () -> {
                    __core__appendString(__core__ifThenElse(
                        first,
                        "",
                        ","
                    ), head_86 = __core__headList__safe(self_196);
                    key_data = __core__fstPair(head_86);
                    key_14 = __helios__bytearray__from_data_safe(key_data);
                    value_data = __core__sndPair(head_86);
                    value_7 = __helios__int__from_data_safe(value_data);
                    __core__appendString(__core__appendString(__core__appendString(key_14((valid_8, key_15) -> {
                        __core__ifThenElse(
                            valid_8,
                            () -> {
                                __helios__bytearray__show(key_15)()
                            },
                            () -> {
                                __helios__data__show(key_data)()
                            }
                        )()
                    }), ":"), value_7((valid_7, value_8) -> {
                        __core__ifThenElse(
                            valid_7,
                            () -> {
                                __helios__int__show(value_8)()
                            },
                            () -> {
                                __helios__data__show(value_data)()
                            }
                        )()
                    })), recurse_90(recurse_90, __core__tailList__safe(self_196), false)))
                })()
            };
            __core__appendString("{", __core__appendString(recurse_91(recurse_91, self_195, true), "}"))
        }
    };
    __helios__option[__helios__string]__none____new = () -> {
        __helios__option__NONE
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_197) -> {
        () -> {
            e = "requires charter as input";
            __cond_28 = __module__CapoHelpers__CapoCtx[]__charter(self_197);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_28),
                () -> {
                    (__lhs_0_57) -> {
                        __helios__error(e)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_28),
                        () -> {
                            (__lhs_0_56) -> {
                                __helios__error(e)
                            }
                        },
                        () -> {
                            (__lhs_0_49) -> {
                                utxo_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_49);
                                activity = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2));
                                wrongActivity = () -> {
                                    __core__ifThenElse(
                                        true,
                                        () -> {
                                            __helios__error("non-CharterData activity")
                                        },
                                        () -> {
                                            () -> {
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()
                                            }()
                                        }
                                    )()
                                };
                                __cond_29 = activity;
                                __core__ifThenElse(
                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_29),
                                    () -> {
                                        (__lhs_0_55) -> {
                                            wrongActivity()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_29),
                                            () -> {
                                                (__lhs_0_54) -> {
                                                    wrongActivity()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_29),
                                                    () -> {
                                                        (__lhs_0_53) -> {
                                                            activity
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_29),
                                                            () -> {
                                                                (__lhs_0_52) -> {
                                                                    activity
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_29),
                                                                    () -> {
                                                                        (__lhs_0_51) -> {
                                                                            activity
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_50) -> {
                                                                            activity
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_29)
                            }
                        }
                    )()
                }
            )()(__cond_28)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_198) -> {
        (key_16) -> {
            __helios__common__map_get(self_198, __helios__string____to_data(key_16), (x_5) -> {
                __core__constrData(0, __helios__common__list_1(x_5))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__findManifestEntry = (__module__CapoHelpers__CapoCtx[]__getCharterData) -> {
        (self_199) -> {
            (key_17) -> {
                __core__chooseUnit(__helios__print(__helios__string____add("    -- looking for capo's manifest entry: ", key_17)), charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData(self_199)(), 0);
                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData))(key_17))
            }
        }
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is = (data_257) -> {
        __helios__common__enum_tag_equals(data_257, 0)
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some = (self_200) -> {
        __module__CapoHelpers__CapoManifestEntry[]__from_data(__helios__common__enum_field_0(self_200))
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is = (data_258) -> {
        __helios__common__enum_tag_equals(data_258, 1)
    };
    __helios__option[__helios__bytearray]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bytearray]__some____new = (some_3) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bytearray____to_data(some_3)))
    };
    __module__CapoHelpers__CapoCtx[]__findManifestTokenName = (__module__CapoHelpers__CapoCtx[]__getCharterData_1) -> {
        (self_201) -> {
            (key_18, __useopt__required_2, required_4) -> {
                required_5 = __core__ifThenElse(
                    __useopt__required_2,
                    () -> {
                        required_4
                    },
                    () -> {
                        true
                    }
                )();
                oe = __module__CapoHelpers__CapoCtx[]__findManifestEntry(__module__CapoHelpers__CapoCtx[]__getCharterData_1)(self_201)(key_18);
                __cond_30 = oe;
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_30),
                    () -> {
                        (__lhs_0_59) -> {
                            __core__chooseUnit(__helios__assert(__helios__bool____not(required_5), __helios__string____add("missing required manifest entry: ", key_18)), __helios__option[__helios__bytearray]__none____new())
                        }
                    },
                    () -> {
                        (__lhs_0_58) -> {
                            e_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_58);
                            __helios__option[__helios__bytearray]__some____new(__module__CapoHelpers__CapoManifestEntry[]__tokenName(e_1))
                        }
                    }
                )()(__cond_30)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getSettingsId = (__module__CapoHelpers__CapoCtx[]__getCharterData_2) -> {
        (self_202) -> {
            (__useopt__required_3, required_6) -> {
                required_7 = __core__ifThenElse(
                    __useopt__required_3,
                    () -> {
                        required_6
                    },
                    () -> {
                        true
                    }
                )();
                __module__CapoHelpers__CapoCtx[]__findManifestTokenName(__module__CapoHelpers__CapoCtx[]__getCharterData_2)(self_202)("currentSettings", true, required_7)
            }
        }
    };
    __helios__option[__helios__txoutput]__some__some = (self_203) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_203))
    };
    __module__StellarHeliosHelpers__REQTgroup[__module__CapoHelpers__CapoCtx[]] = (reqt_5, __useopt__collapsed_6, collapsed_12, callback_13) -> {
        collapsed_13 = __core__ifThenElse(
            __useopt__collapsed_6,
            () -> {
                collapsed_12
            },
            () -> {
                false
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(__helios__string____add("\u2757", reqt_5), true, collapsed_13), result_6 = callback_13();
        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, "\u2705"), result_6))
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3) -> {
        (self_204) -> {
            () -> {
                __module__StellarHeliosHelpers__REQTgroup[__module__CapoHelpers__CapoCtx[]]("MUST have the Capo's govAuthority approval", true, true, () -> {
                    __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData_3(self_204)()))(__module__CapoHelpers__CapoCtx[]__mph(self_204), false, (), false, ()), "^ that fails, this can't"), __core__chooseUnit(__helios__print("\u2705 govAuthority ok!"), self_204))
                })
            }
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_259) -> {
        __helios__common__enum_tag_equals(data_259, 1)
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_205) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_205))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_206) -> {
        (key_19) -> {
            __helios__common__map_get(self_206, __helios__string____to_data(key_19), (x_6) -> {
                __core__constrData(0, __helios__common__list_1(x_6))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__option[__helios__string]__some____new = (some_4) -> {
        __core__constrData(0, __helios__common__list_1(__helios__string____to_data(some_4)))
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput) -> {
        (self_207) -> {
            (typeName, __useopt__required_4, required_8, __useopt__message, message) -> {
                required_9 = __core__ifThenElse(
                    __useopt__required_4,
                    () -> {
                        required_8
                    },
                    () -> {
                        true
                    }
                )();
                message_1 = __core__ifThenElse(
                    __useopt__message,
                    () -> {
                        message
                    },
                    () -> {
                        ""
                    }
                )();
                __core__chooseUnit(__core__ifThenElse(
                    required_9,
                    () -> {
                        __core__ifThenElse(
                            __helios__int____gt(__helios__bytearray__length(__helios__string__encode_utf8(message_1)()), 0),
                            () -> {
                                __module__StellarHeliosHelpers__REQTgroupStart(message_1, true, true)
                            },
                            () -> {
                                () -> {
                                    __module__StellarHeliosHelpers__REQTgroupStart(__helios__string____add("MUST find the policy for record-type ", typeName), true, true)
                                }()
                            }
                        )()
                    },
                    () -> {
                        () -> {
                            __core__ifThenElse(
                                __helios__int____gt(__helios__bytearray__length(__helios__string__encode_utf8(message_1)()), 0),
                                () -> {
                                    __module__StellarHeliosHelpers__logGroupStart(message_1, true, false)
                                },
                                () -> {
                                    () -> {
                                        __module__StellarHeliosHelpers__logGroupStart(__helios__string____add("trying to find the policy for record-type ", typeName), true, false)
                                    }()
                                }
                            )()
                        }()
                    }
                )(), __core__chooseUnit(__helios__print("     -- locates the needed policy through the Capo manifest"), (result_7) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__or(() -> {
                            required_9
                        }, () -> {
                            __cond_33 = __module__CapoHelpers__DelegateInput[]__input(result_7);
                            __core__ifThenElse(
                                __helios__option[__helios__txinput]__some____is(__cond_33),
                                () -> {
                                    (__lhs_0_64) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_63) -> {
                                        false
                                    }
                                }
                            )()(__cond_33)
                        }),
                        () -> {
                            __module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add("\u2705 dgData policy found: ", typeName))
                        },
                        () -> {
                            () -> {
                                __module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add("\u2705 dgData policy found: ", typeName))
                            }()
                        }
                    )(), result_7)
                }(__cond_31 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_4(self_207)()))(typeName);
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_31),
                    () -> {
                        (__lhs_0_62) -> {
                            __helios__error(__helios__string____add(__helios__string____add("missing data-policy manifest for record-type '", typeName), "'"))
                        }
                    },
                    () -> {
                        (__lhs_0_60) -> {
                            entry = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_60);
                            __cond_32 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry);
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_32),
                                () -> {
                                    (__lhs_0_61) -> {
                                        policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_61);
                                        idPrefix_2 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_61);
                                        (callback_14) -> {
                                            callback_14(policyLink, idPrefix_2)
                                        }
                                    }
                                },
                                () -> {
                                    (__27) -> {
                                        __helios__error(__helios__string____add("manifest entry is not a data policy: ", typeName))
                                    }
                                }
                            )()(__cond_32)((dgtLink, idPrefix_1) -> {
                                __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_207)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new(typeName), true, required_9, true, __helios__option[__helios__string]__some____new(idPrefix_1))
                            })
                        }
                    }
                )()(__cond_31))))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5) -> {
        (self_208) -> {
            (__useopt__required_5, required_10) -> {
                required_11 = __core__ifThenElse(
                    __useopt__required_5,
                    () -> {
                        required_10
                    },
                    () -> {
                        true
                    }
                )();
                input_2 = __helios__scriptcontext__get_current_input();
                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_208)()))(__module__CapoHelpers__CapoCtx[]__mph(self_208));
                isUsingMintDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_2))(acMintDgt), 0))("    -- acting on mintDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingMintDgt
                }, () -> {
                    __helios__bool____not(required_11)
                }), "not acting as mint delegate!"), isUsingMintDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6) -> {
        (self_209) -> {
            (__useopt__required_6, required_12) -> {
                required_13 = __core__ifThenElse(
                    __useopt__required_6,
                    () -> {
                        required_12
                    },
                    () -> {
                        true
                    }
                )();
                input_3 = __helios__scriptcontext__get_current_input();
                acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_6(self_209)()))(__module__CapoHelpers__CapoCtx[]__mph(self_209));
                isUsingSpendDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_3))(acSpendDgt), 0))("    -- acting on spendDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingSpendDgt
                }, () -> {
                    __helios__bool____not(required_13)
                }), "not acting as spend delegate!"), isUsingSpendDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_210) -> {
        () -> {
            __cond_34 = __module__CapoHelpers__CapoCtx[]__charter(self_210);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_34),
                () -> {
                    (__lhs_0_66) -> {
                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_66);
                        datum_3
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_34),
                        () -> {
                            (__lhs_0_65) -> {
                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_65);
                                datum_2
                            }
                        },
                        () -> {
                            (__28) -> {
                                __helios__error("CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first")
                            }
                        }
                    )()
                }
            )()(__cond_34)
        }
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address) -> {
        (self_211) -> {
            () -> {
                charterAc_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_211), __helios__string__encode_utf8("charter")());
                capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_211)();
                __cond_35 = __module__CapoHelpers__CapoCtx[]__charter(self_211);
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_35),
                    () -> {
                        (__lhs_0_67) -> {
                            charterData_1 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo) -> {
                                __helios__bool__and(() -> {
                                    __helios__address____eq(__helios__txoutput__address(txo), capoAddr)
                                }, () -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo))(charterAc_2), 0)
                                })
                            })))), 0);
                            charterData_1
                        }
                    },
                    () -> {
                        (__29) -> {
                            __helios__error("CapoCtx.getNextCharterData(): invalid except with charter strategy Input")
                        }
                    }
                )()(__cond_35)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1 = (self_212) -> {
        () -> {
            __cond_36 = __module__CapoHelpers__CapoCtx[]__charter(self_212);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_36),
                () -> {
                    (__lhs_0_69) -> {
                        utxo_4 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_69);
                        utxo_4
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_36),
                        () -> {
                            (__lhs_0_68) -> {
                                utxo_3 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_68);
                                utxo_3
                            }
                        },
                        () -> {
                            (__30) -> {
                                __helios__error("CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first")
                            }
                        }
                    )()
                }
            )()(__cond_36)
        }
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_213) -> {
        (dgtLink_1, role_1, __useopt__required_7, required_14, __useopt__idPrefix, idPrefix_3) -> {
            required_15 = __core__ifThenElse(
                __useopt__required_7,
                () -> {
                    required_14
                },
                () -> {
                    true
                }
            )();
            idPrefix_4 = __core__ifThenElse(
                __useopt__idPrefix,
                () -> {
                    idPrefix_3
                },
                () -> {
                    __helios__option[__helios__string]__none____new()
                }
            )();
            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_4, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_213), true, required_15), __module__CapoHelpers__CapoCtx[]__mph(self_213))
        }
    };
    __module__CapoHelpers__CapoCtx[]__address_1 = (self_214) -> {
        () -> {
            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_214)());
            addr
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataRef = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate) -> {
        (self_215) -> {
            (__useopt__recId, recId_1, __useopt__recIdBytes, recIdBytes) -> {
                recId_2 = __core__ifThenElse(
                    __useopt__recId,
                    () -> {
                        recId_1
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_1 = __core__ifThenElse(
                    __useopt__recIdBytes,
                    () -> {
                        recIdBytes
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_2)()
                    }
                )();
                hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate(self_215)(false, (), true, recIdBytes_1);
                recIdStr = __helios__bytearray__decode_utf8_safe(recIdBytes_1)();
                __cond_37 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasDD);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_37),
                    () -> {
                        (__lhs_0_71) -> {
                            __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} input: delegated-data ref not found: ", recIdStr))
                        }
                    },
                    () -> {
                        (__lhs_0_70) -> {
                            txin_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_70);
                            txin_2
                        }
                    }
                )()(__cond_37)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1) -> {
        (self_216) -> {
            (recIdBytes_2, __useopt__reqt, reqt_6) -> {
                reqt_7 = __core__ifThenElse(
                    __useopt__reqt,
                    () -> {
                        reqt_6
                    },
                    () -> {
                        "MUST have the input data record"
                    }
                )();
                hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1(self_216)(false, (), true, recIdBytes_2);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupStart(reqt_7, true, true), recIdStr_1 = __helios__bytearray__decode_utf8_safe(recIdBytes_2)();
                __cond_38 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_1);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_38),
                    () -> {
                        (__lhs_0_73) -> {
                            __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} input: delegated-data record: not found: ", recIdStr_1))
                        }
                    },
                    () -> {
                        (__lhs_0_72) -> {
                            txin_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_72);
                            __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add("\u2705 \u{1F4CE} input: delegated-data record: ok: ", recIdStr_1)), txin_3)
                        }
                    }
                )()(__cond_38))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_217) -> {
        (__useopt__typeName, typeName_1, __useopt__id, id_1) -> {
            typeName_2 = __core__ifThenElse(
                __useopt__typeName,
                () -> {
                    typeName_1
                },
                () -> {
                    ""
                }
            )();
            id_2 = __core__ifThenElse(
                __useopt__id,
                () -> {
                    id_1
                },
                () -> {
                    #
                }
            )();
            capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_1(self_217)();
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                __helios__int____gt(__helios__bytearray__length(id_2), 0)
            }, () -> {
                __helios__int____gt(__helios__bytearray__length(__helios__string__serialize(typeName_2)()), 0)
            }), "data predicate must have id or typeName"), (txin_4) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txinput__address(txin_4), capoAddr_1),
                    () -> {
                        data_260 = __helios__txoutputdatum__inline(__helios__txinput__datum(txin_4));
                        __cond_39 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_260);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_39),
                            () -> {
                                (__lhs_0_74) -> {
                                    x_7 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_260));
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            true
                                        }, () -> {
                                            __helios__bool__or(() -> {
                                                __helios__string____eq(typeName_2, "")
                                            }, () -> {
                                                __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_7), typeName_2)
                                            })
                                        })
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_2, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_7), id_2)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__31) -> {
                                    false
                                }
                            }
                        )()(__cond_39)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate = (self_218) -> {
        (typeName_3, __useopt__id_1, id_3) -> {
            id_4 = __core__ifThenElse(
                __useopt__id_1,
                () -> {
                    id_3
                },
                () -> {
                    #
                }
            )();
            capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_1(self_218)();
            (txo_1) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txoutput__address(txo_1), capoAddr_2),
                    () -> {
                        data_261 = __helios__txoutputdatum__inline(__helios__txoutput__datum(txo_1));
                        __cond_40 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_261);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_40),
                            () -> {
                                (__lhs_0_75) -> {
                                    x_8 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_261));
                                    __helios__bool__and(() -> {
                                        __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_8), typeName_3)
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_4, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_8), id_4)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__32) -> {
                                    false
                                }
                            }
                        )()(__cond_40)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput) -> {
        (self_219) -> {
            (newDataId, dataTypePurpose) -> {
                __module__StellarHeliosHelpers__bREQTgroup("The new record MUST be saved in the Capo address", true, true, () -> {
                    dgData = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_219)(newDataId)));
                    dgDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(dgData);
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new record must match type-name in dgDataPolicy manifest", false, (), false, (), false, ()), __cond_41 = dgDatum;
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_41),
                        () -> {
                            (__lhs_0_76) -> {
                                data_262 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(dgData));
                                recIdStr_2 = __helios__bytearray__decode_utf8_safe(newDataId)();
                                __core__ifThenElse(
                                    __helios__bytearray____neq(__module__StellarHeliosHelpers__AnyData[]__id(data_262), newDataId),
                                    () -> {
                                        actualIdStr_1 = __helios__bytearray__decode_utf8_safe(__module__StellarHeliosHelpers__AnyData[]__id(data_262))();
                                        __helios__error(__helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: wrong id: ", actualIdStr_1), " (expected "), recIdStr_2), ")"))
                                    },
                                    () -> {
                                        () -> {
                                            __core__ifThenElse(
                                                __helios__string____neq(__module__StellarHeliosHelpers__AnyData[]__type(data_262), dataTypePurpose),
                                                () -> {
                                                    __helios__error(__helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: bad type: ", __module__StellarHeliosHelpers__AnyData[]__type(data_262)), " (expected "), dataTypePurpose), ")"))
                                                },
                                                () -> {
                                                    () -> {
                                                        true
                                                    }()
                                                }
                                            )()
                                        }()
                                    }
                                )()
                            }
                        },
                        () -> {
                            (__33) -> {
                                __helios__error("output not delegated data")
                            }
                        }
                    )()(__cond_41))
                })
            }
        }
    };
    __helios__option[__helios__txoutput]__none____is = (data_263) -> {
        __helios__common__enum_tag_equals(data_263, 1)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1 = (self_220) -> {
        (recId_3) -> {
            recIdStr_3 = __helios__bytearray__decode_utf8_safe(recId_3)();
            ac_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_220), recId_3);
            capoAddr_3 = __module__CapoHelpers__CapoCtx[]__address_1(self_220)();
            __cond_42 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((txout) -> {
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        true
                    }, () -> {
                        __helios__int____eq(__helios__value__get_safe(__helios__txoutput__value(txout))(ac_2), 1)
                    })
                }, () -> {
                    __helios__bool__trace(__helios__address____eq(__helios__txoutput__address(txout), capoAddr_3))("output found!  ... at the right capoAddr? ")
                })
            });
            __core__ifThenElse(
                __helios__option[__helios__txoutput]__none____is(__cond_42),
                () -> {
                    (__lhs_0_78) -> {
                        __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} delegated-data output: not found: ", recIdStr_3))
                    }
                },
                () -> {
                    (__lhs_0_77) -> {
                        txout_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_77);
                        __core__chooseUnit(__helios__print(__helios__string____add("\u2705 \u{1F4CE} delegated-data output: found ", recIdStr_3)), txout_1)
                    }
                }
            )()(__cond_42)
        }
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {
        (self_221) -> {
            () -> {
                charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_221);
                __cond_43 = charter_1;
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_43),
                    () -> {
                        (__lhs_0_84) -> {
                            __core__chooseUnit(__helios__print("      -- needs charter, anywhere in the tx (already found as ref : )"), self_221)
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_43),
                            () -> {
                                (__lhs_0_83) -> {
                                    __core__chooseUnit(__helios__print("      -- needs charter, anywhere in the tx (already found as input : )"), self_221)
                                }
                            },
                            () -> {
                                (__lhs_0_79) -> {
                                    __lhs_0_80 = self_221;
                                    mph_21 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_80);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be available in the transaction (input or ref)", false, (), false, (), false, ()), charterAc_3 = __helios__assetclass__new(mph_21, __helios__string__encode_utf8("charter")());
                                    hasCharter_2 = (txin_5) -> {
                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_5))(charterAc_3), 0)
                                    };
                                    __cond_44 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_2);
                                    __core__ifThenElse(
                                        __helios__option[__helios__txinput]__none____is(__cond_44),
                                        () -> {
                                            (__lhs_0_82) -> {
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): no charter ref; must be in inputs..."), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_221)())
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_81) -> {
                                                charterUtxo_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_81);
                                                __core__chooseUnit(__helios__print("    -- CapoCtx needsCharter(): found charter ref"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);
                                                __module__CapoHelpers__CapoCtx[]____new(mph_21, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_2)))
                                            }
                                        }
                                    )()(__cond_44))
                                }
                            }
                        )()
                    }
                )()(__cond_43)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_222) -> {
        () -> {
            charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_222);
            __cond_45 = charter_2;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_45),
                () -> {
                    (__lhs_0_90) -> {
                        __core__chooseUnit(__helios__print("      -- needs charter spent in inputs (already checked : )"), self_222)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_45),
                        () -> {
                            (__lhs_0_89) -> {
                                __helios__error("CapoCtx.withCharterInput(): charter is from ref!")
                            }
                        },
                        () -> {
                            (__lhs_0_85) -> {
                                __lhs_0_86 = self_222;
                                mph_22 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_86);
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be spent in the inputs", false, (), false, (), false, ()), charterAc_4 = __helios__assetclass__new(mph_22, __helios__string__encode_utf8("charter")());
                                hasCharter_3 = (txin_6) -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_6))(charterAc_4), 0)
                                };
                                __core__chooseUnit(__helios__print("    -- CapoCtx finding charter in inputs"), (charterUtxo_3) -> {
                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_3))), 0);
                                    __module__CapoHelpers__CapoCtx[]____new(mph_22, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_3))
                                }(__cond_46 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_3);
                                __core__ifThenElse(
                                    __helios__option[__helios__txinput]__some____is(__cond_46),
                                    () -> {
                                        (__lhs_0_88) -> {
                                            ch_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_88);
                                            ch_3
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_87) -> {
                                            __helios__error("Missing required charter input")
                                        }
                                    }
                                )()(__cond_46))))
                            }
                        }
                    )()
                }
            )()(__cond_45)
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_223) -> {
        () -> {
            charter_3 = __module__CapoHelpers__CapoCtx[]__charter(self_223);
            __cond_47 = charter_3;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_47),
                () -> {
                    (__lhs_0_94) -> {
                        __core__chooseUnit(__helios__print("      -- needs charter ref (already checked : )"), self_223)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_47),
                        () -> {
                            (__lhs_0_93) -> {
                                __helios__error("CapoCtx.withCharterRef(): charter is from inputs!")
                            }
                        },
                        () -> {
                            (__lhs_0_91) -> {
                                __lhs_0_92 = self_223;
                                mph_23 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_92);
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be referenced in the txn, but unspent", false, (), false, (), false, ()), utxo_5 = __module__CapoHelpers__getRefCharterUtxo(mph_23);
                                datum_6 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_5))), 0);
                                __module__CapoHelpers__CapoCtx[]____new(mph_23, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_6, utxo_5)))
                            }
                        }
                    )()
                }
            )()(__cond_47)
        }
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_224) -> {
        (fn_21, z_2) -> {
            __helios__common__fold(self_224, (z_3, pair_73) -> {
                fn_21(z_3, __helios__string__from_data(__core__fstPair(pair_73)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_73)))
            }, z_2)
        }
    };
    __helios__option[__helios__bool]__unwrap = (self_225) -> {
        () -> {
            __helios__bool__from_data(__helios__common__enum_field_0(self_225))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all = (self_226) -> {
        (fn_22) -> {
            fn_23 = (pair_74) -> {
                fn_22(__helios__string__from_data(__core__fstPair(pair_74)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(pair_74)))
            };
            __helios__common__all(self_226, fn_23)
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all = (self_227) -> {
        (fn_24) -> {
            __helios__common__all(self_227, (item_12) -> {
                fn_24(__module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(item_12))
            })
        }
    };
    __helios__option[__helios__bool]__some____is = (data_264) -> {
        __helios__common__enum_tag_equals(data_264, 0)
    };
    __module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings = (self_228) -> {
        () -> {
            charterData_2 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_228)();
            mph_24 = __module__CapoHelpers__CapoCtx[]__mph(self_228);
            __lhs_0_95 = __helios__common__assert_constr_index(charterData_2, 0);
            spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_95);
            otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_95);
            mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_95);
            govDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_95);
            manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_95);
            inputs_2 = __helios__tx__inputs(__helios__scriptcontext__tx);
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- only the spend delegate calls this function", false, (), false, (), false, ()), spendDelegateIsValidating = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(self_228)(false, ());
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- spend delegate requires the other delegates validate (except mint delegate == same as spend delegate)", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("govDelegate MAY contribute to settings validation", false, (), false, (), false, ()), (govDelegateMaybeValidating) -> {
                checkOneInvariant = (oneDgt) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariant must validate settings", false, (), false, (), false, ()), __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(oneDgt)(inputs_2, mph_24, true))())
                };
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spend invariants must validate settings", false, (), false, (), false, ()), spendInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(spendInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("mint invariants must validate settings", false, (), false, (), false, ()), mintInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(mintInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("dgDataControllers must validate settings", false, (), false, (), false, ()), dgDataPoliciesAreValidating = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all(manifest)((key_20, entry_1) -> {
                    __cond_49 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry_1);
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_49),
                        () -> {
                            (__lhs_0_98) -> {
                                policyLink_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_98);
                                __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(policyLink_1)(inputs_2, mph_24, true))()
                            }
                        },
                        () -> {
                            (__34) -> {
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ignoring manifest entry (not a data policy): ", key_20)), true)
                            }
                        }
                    )()(__cond_49)
                });
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("named delegates must validate settings", false, (), false, (), false, ()), namedDelegatesAreValidating = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)(__core__chooseUnit(__module__StellarHeliosHelpers__REQT("  - each other-named-delegate must validate settings", false, (), false, (), false, ()), (ok, key_21, dgt) -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("  - other-named-delegate: ", key_21)), __core__chooseUnit(__helios__print("
"), __helios__bool__and(() -> {
                        ok
                    }, () -> {
                        __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(dgt)(inputs_2, mph_24, true))()
                    })))
                }), true);
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        __helios__bool__and(() -> {
                            __helios__bool__and(() -> {
                                __helios__bool__and(() -> {
                                    dgDataPoliciesAreValidating
                                }, () -> {
                                    spendDelegateIsValidating
                                })
                            }, () -> {
                                govDelegateMaybeValidating
                            })
                        }, () -> {
                            spendInvariantsAreValidating
                        })
                    }, () -> {
                        mintInvariantsAreValidating
                    })
                }, () -> {
                    namedDelegatesAreValidating
                })))))
            }(__cond_48 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(govDelegate)(inputs_2, mph_24, false);
            __core__ifThenElse(
                __helios__option[__helios__bool]__some____is(__cond_48),
                () -> {
                    (__lhs_0_97) -> {
                        true
                    }
                },
                () -> {
                    (__lhs_0_96) -> {
                        __core__chooseUnit(__helios__print("  -- govAuthority isn't a script-based validator; doesn't validate new settings"), true)
                    }
                }
            )()(__cond_48)))))
        }
    };
    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_229) -> {
        (activity_1) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__CapoHelpers__CapoCtx[]____eq(self_229, self_229)
            }), "prevent unused var"), __cond_50 = activity_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_50),
                () -> {
                    (__lhs_0_105) -> {
                        __helios__error("the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_50),
                        () -> {
                            (__lhs_0_104) -> {
                                __helios__error("the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo")
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_50),
                                () -> {
                                    (__lhs_0_103) -> {
                                        __core__chooseUnit(__helios__print("-- Updating the Capo manifest uses the spend delegate"), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_50),
                                        () -> {
                                            (__lhs_0_102) -> {
                                                __core__chooseUnit(__helios__print("-- Queuing a pending dgt-change uses the mint delegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_50),
                                                () -> {
                                                    (__lhs_0_101) -> {
                                                        __core__chooseUnit(__helios__print("-- Removing a pending dgt-change entry uses the spend delegate"), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_50),
                                                        () -> {
                                                            (__lhs_0_100) -> {
                                                                __core__chooseUnit(__helios__print("-- Committing pending dgt-changes uses both the mint and spend delegates"), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_99) -> {
                                                                __core__chooseUnit(__helios__assert(false, "Obsolete code path"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Creating a new delegate (deprecated path)...", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("deprecate use of CLA::CreatingDelegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()(__cond_50))
        }
    };
    __module__CapoHelpers__CapoCtx[]__orFail = (self_230) -> {
        () -> {
            __lhs_0_106 = self_230;
            true
        }
    };
    __module__CapoHelpers__mkCapoCtx = (mph_25) -> {
        __module__CapoHelpers__CapoCtx[]____new(mph_25, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())
    };
    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo, __useopt__reqt_1, reqt_8) -> {
        reqt_9 = __core__ifThenElse(
            __useopt__reqt_1,
            () -> {
                reqt_8
            },
            () -> {
                "the indicated seed UTXO must be spent"
            }
        )();
        __module__StellarHeliosHelpers__bREQTgroup(reqt_9, false, true, () -> {
            __core__chooseUnit(__core__ifThenElse(
                __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_4) -> {
                    __helios__txoutputid____eq(__helios__txinput__output_id(input_4), seedUtxo)
                })),
                () -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("  -- seedUtxo: ", __helios__txoutputid__show(seedUtxo)())), __helios__error("missing expected seed input for minting"))
                },
                () -> {
                    () -> {
                        ()
                    }()
                }
            )(), __core__chooseUnit(__helios__print(__helios__string____add("\u2705 ok: seedUtxo: ", __helios__txoutputid__show(seedUtxo)())), true))
        })
    };
    __module__CapoMintHelpers__noOtherActivitiesSupported = (__35) -> {
        __core__chooseUnit(__helios__print("yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...
"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("   -- note: for other cases, a context-specific check via validateUutMinting's (
", "  ...
  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)
"), ") option can be used to steer around this failure.
")), __core__chooseUnit(__helios__assert(false, "unexpected delegate activity"), false)))
    };
    __helios__option[__helios__data]__none____is = (data_265) -> {
        __helios__common__enum_tag_equals(data_265, 1)
    };
    __helios__option[__helios__data]__some__some = (self_231) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_231))
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_232) -> {
        (key_22) -> {
            __helios__common__map_get(self_232, __helios__scriptpurpose____to_data(key_22), (x_9) -> {
                __core__constrData(0, __helios__common__list_1(x_9))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_26, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {
        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck,
            () -> {
                extraMintDelegateRedeemerCheck
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_1 = __core__ifThenElse(
            __useopt__checkMintDgtActivity,
            () -> {
                checkMintDgtActivity
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_26);
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter's mint-delegate to authorize this mint activity", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- finding input dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {
            __core__chooseUnit(__helios__print("     \u2705 \u27A1\uFE0F  \u{1F481}found dgTkn ^"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {
                __cond_52 = purpose_1;
                __core__ifThenElse(
                    __helios__scriptpurpose__spending____is(__cond_52),
                    () -> {
                        (sp_1) -> {
                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)
                        }
                    },
                    () -> {
                        (__36) -> {
                            false
                        }
                    }
                )()(__cond_52)
            });
            err = __helios__string____add(__helios__string____add("dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), " not being spent as expected");
            (maybeCheckedMintDelegateAuthority) -> {
                delegateDidAuthorize = true;
                __helios__bool__and(() -> {
                    delegateDidAuthorize
                }, () -> {
                    maybeCheckedMintDelegateAuthority
                })
            }(__cond_53 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);
            __core__ifThenElse(
                __helios__option[__helios__data]__none____is(__cond_53),
                () -> {
                    (__lhs_0_114) -> {
                        __helios__error(err)
                    }
                },
                () -> {
                    (__lhs_0_109) -> {
                        x_11 = __helios__option[__helios__data]__some__some(__lhs_0_109);
                        activity_2 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(x_11);
                        __cond_54 = activity_2;
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_54),
                            () -> {
                                (__lhs_0_110) -> {
                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_110);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY we ---------------- don't need the funny redeemer-check skipping"), __core__chooseUnit(__core__ifThenElse(
                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),
                                        () -> {
                                            __core__chooseUnit(__helios__print(" vvv wherever it is, probably best it uses the checkMintDgtActivity option"), __helios__error("where is extraMintDelegateRedeemerCheck=false really needed?"))
                                        },
                                        () -> {
                                            () -> {
                                                ()
                                            }()
                                        }
                                    )(), __cond_55 = DLA;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_55),
                                        () -> {
                                            (__lhs_0_113) -> {
                                                __core__chooseUnit(__helios__print("  -- ok, dgTkn spent
"), true)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_55),
                                                () -> {
                                                    (__lhs_0_112) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_111) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_55)))
                                }
                            },
                            () -> {
                                (__37) -> {
                                    checkMintDgtActivity_1(activity_2)
                                }
                            }
                        )()(__cond_54)
                    }
                }
            )()(__cond_53)))
        }(__cond_51 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_13) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_13))(authzAc), 0)
        });
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_51),
            () -> {
                (__lhs_0_108) -> {
                    x_10 = __helios__option[__helios__txinput]__some__some(__lhs_0_108);
                    __helios__txinput__output_id(x_10)
                }
            },
            () -> {
                (__lhs_0_107) -> {
                    __helios__error(__helios__string____add("  \u274C\u274C missing dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))
                }
            }
        )()(__cond_51))))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __helios__txoutputid__tx_id(seed_1);
        seedIdx = __helios__txoutputid__index(seed_1);
        idxBytes = __helios__int__serialize(seedIdx)();
        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);
        txoInfo = __core__ifThenElse(
            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),
            () -> {
                __core__chooseUnit(__helios__assert(false, "cbor(txoId) len > 9 !!"), idxBytes)
            },
            () -> {
                () -> {
                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8("@")()), idxBytes)
                }()
            }
        )();
        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);
        mhs = __helios__bytearray__show(miniHash)();
        (p) -> {
            __helios__string____add(__helios__string____add(p, "-"), mhs)
        }
    };
    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {
        __helios__bytearray____lt(k1, k2)
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_233) -> {
        (fn_25) -> {
            recurse_93 = (recurse_92, map_31) -> {
                __core__chooseList(map_31, () -> {
                    ()
                }, () -> {
                    head_87 = __core__headList__safe(map_31);
                    __core__chooseUnit(fn_25(__helios__bytearray__from_data(__core__fstPair(head_87)), __helios__int__from_data(__core__sndPair(head_87))), recurse_92(recurse_92, __core__tailList__safe(map_31)))
                })()
            };
            recurse_93(recurse_93, self_233)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_234) -> {
        (fn_26) -> {
            __helios__common__filter_map(self_234, (pair_75) -> {
                fn_26(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_75)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_75)))
            })
        }
    };
    __helios__list[__helios__string]__length = __helios__common__length;
    __helios__list[__helios__string]__head = (self_235) -> {
        __helios__string__from_data(__core__headList(self_235))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_236) -> {
        (fn_27) -> {
            recurse_95 = (recurse_94, map_32) -> {
                __core__chooseList(map_32, () -> {
                    ()
                }, () -> {
                    head_88 = __core__headList__safe(map_32);
                    __core__chooseUnit(fn_27(__helios__mintingpolicyhash__from_data(__core__fstPair(head_88)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_88))), recurse_94(recurse_94, __core__tailList__safe(map_32)))
                })()
            };
            recurse_95(recurse_95, self_236)
        }
    };
    __helios__option[__helios__int]__none____is = (data_266) -> {
        __helios__common__enum_tag_equals(data_266, 1)
    };
    __helios__option[__helios__int]__some__some = (self_237) -> {
        __helios__int__from_data(__helios__common__enum_field_0(self_237))
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_238) -> {
        (key_23) -> {
            __helios__common__map_get(self_238, __helios__bytearray____to_data(key_23), (x_12) -> {
                __core__constrData(0, __helios__common__list_1(x_12))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_239) -> {
        (key_24) -> {
            key_25 = __helios__mintingpolicyhash____to_data(key_24);
            recurse_97 = (recurse_96, self_240) -> {
                __core__chooseList(self_240, () -> {
                    self_240
                }, () -> {
                    head_89 = __core__headList__safe(self_240);
                    tail_4 = __core__tailList__safe(self_240);
                    __core__ifThenElse(
                        __core__equalsData(key_25, __core__fstPair(head_89)),
                        () -> {
                            recurse_96(recurse_96, tail_4)
                        },
                        () -> {
                            __core__mkCons(head_89, recurse_96(recurse_96, tail_4))
                        }
                    )()
                })()
            };
            recurse_97(recurse_97, self_239)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;
    __helios__map[__helios__bytearray@__helios__int]____eq = (self_241, other_4) -> {
        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_241), __helios__map[__helios__bytearray@__helios__int]____to_data(other_4))
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_242) -> {
        (comp_4) -> {
            __helios__common__sort(self_242, (a_18, b_20) -> {
                comp_4(__helios__bytearray__from_data(__core__fstPair(a_18)), __helios__int__from_data(__core__sndPair(a_18)), __helios__bytearray__from_data(__core__fstPair(b_20)), __helios__int__from_data(__core__sndPair(b_20)))
            })
        }
    };
    __helios__value__sum[__helios__value] = (self_243) -> {
        recurse_99 = (recurse_98, lst_25) -> {
            __core__chooseList(lst_25, () -> {
                __helios__value__ZERO
            }, () -> {
                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_25))), recurse_98(recurse_98, __core__tailList__safe(lst_25)))
            })()
        };
        recurse_99(recurse_99, self_243)
    };
    __helios__list[__helios__string]__map[__helios__value] = (self_244) -> {
        (fn_28) -> {
            __helios__common__map(self_244, (item_13) -> {
                __helios__value____to_data(fn_28(__helios__string__from_data(item_13)))
            }, __core__mkNilData(()))
        }
    };
    __helios__list[__helios__string]__map[__helios__string] = (self_245) -> {
        (fn_29) -> {
            __helios__common__map(self_245, (item_14) -> {
                __helios__string____to_data(fn_29(__helios__string__from_data(item_14)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_27, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        bootstrapCharter_1 = __core__ifThenElse(
            __useopt__bootstrapCharter,
            () -> {
                bootstrapCharter
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        needsMintDelegateApproval_1 = __core__ifThenElse(
            __useopt__needsMintDelegateApproval,
            () -> {
                needsMintDelegateApproval
            },
            () -> {
                true
            }
        )();
        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck_1,
            () -> {
                extraMintDelegateRedeemerCheck_2
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_3 = __core__ifThenElse(
            __useopt__checkMintDgtActivity_1,
            () -> {
                checkMintDgtActivity_2
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        __module__StellarHeliosHelpers__bREQTgroup("checks that the UUTs are minted correctly", true, true, () -> {
            __core__chooseUnit(__helios__print(__helios__string____add("-- uut purposes: ", __helios__list[__helios__string]__join(purposes)(true, ", "))), isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());
            delegateApproval = __core__ifThenElse(
                isBootstrapping,
                () -> {
                    __core__chooseUnit(__helios__print("  -- bootstrapping; no delegate approval required"), true)
                },
                () -> {
                    () -> {
                        __core__chooseUnit(__helios__print("  -- not bootstrapping; must honor the mintDelegate's authority"), __lhs_0_115 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_27, false, ()), 0);
                        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_115);
                        __core__ifThenElse(
                            needsMintDelegateApproval_1,
                            () -> {
                                __core__chooseUnit(__helios__print("  -- checking mintDelegate's authority"), __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_27, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3))
                            },
                            () -> {
                                () -> {
                                    true
                                }()
                            }
                        )())
                    }()
                }
            )();
            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
            tokenNames = __helios__list[__helios__string]__map[__helios__string](purposes)(mkTokenName_1);
            expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](tokenNames)((tn_2) -> {
                __module__StellarHeliosHelpers__mkTv(mph_27, true, tn_2, false, (), false, ())
            })));
            __core__chooseUnit(__core__ifThenElse(
                __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_27)),
                () -> {
                    mphStr = __helios__mintingpolicyhash__show(mph_27)();
                    valStr = __helios__value__show(valueMinted)(false, ());
                    __core__chooseUnit(__helios__print(__helios__string____add("  -- no mint from our policy ", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print("^^  value minted"), __helios__error("\u274C\u274C validateUutMinting(): no mint from our policy"))))
                },
                () -> {
                    () -> {
                        ()
                    }()
                }
            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_27))(__module__CapoMintHelpers__sortPolicyValuesPredictably);
            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_4, i_15) -> {
                tnStr_1 = __helios__bytearray__decode_utf8_safe(tn_4)();
                __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E} expected: ", __helios__int__show(i_15)()), "x "), tnStr_1))
            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_27);
            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);
            __core__chooseUnit(__core__ifThenElse(
                true,
                () -> {
                    __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_3, i_14) -> {
                        tnStr = __helios__bytearray__decode_utf8_safe(tn_3)();
                        __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E}   actual: ", __helios__int__show(i_14)()), "x "), tnStr))
                    }), filteredOtherMint = __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_21, __38) -> {
                        __helios__mintingpolicyhash____neq(b_21, mph_27)
                    }));
                    __core__ifThenElse(
                        __helios__bool____not(__helios__value__is_zero(filteredOtherMint)()),
                        () -> {
                            __core__chooseUnit(__helios__print("other policy values minted: 
"), __helios__print(__helios__value__show(__helios__value__get_assets(filteredOtherMint)())(false, ())))
                        },
                        () -> {
                            () -> {
                                ()
                            }()
                        }
                    )())
                },
                () -> {
                    () -> {
                        ()
                    }()
                }
            )(), thisPolicyMintOK = __module__StellarHeliosHelpers__bREQTgroup("Ensures the mint for this policy-id is exactly the expected value", true, true, () -> {
                __core__chooseUnit(__helios__assert(__helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted), "\u274C\u274C validateUutMinting(): mismatch in UUT mint"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_2, false, ()), "\u274C\u274C validateUutMinting(): no seed"), __core__chooseUnit(__helios__print("\u2705 ok: this-policy mint value matches"), true)))
            });
            otherPoliciesMintOk = __core__ifThenElse(
                __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),
                () -> {
                    true
                },
                () -> {
                    () -> {
                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with an additional mint-value indicated", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- other-minted-value: ", __helios__value__show(otherMintedValue_1)(false, ()))), remainingExpectedMint = __core__ifThenElse(
                            __helios__value__contains_policy(expectedValue)(mph_27),
                            () -> {
                                __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_27))
                            },
                            () -> {
                                () -> {
                                    expectedValue
                                }()
                            }
                        )();
                        __core__ifThenElse(
                            __helios__value__is_zero(remainingExpectedMint)(),
                            () -> {
                                true
                            },
                            () -> {
                                () -> {
                                    __module__StellarHeliosHelpers__bREQTgroup("...with other-policy values expected: ", false, true, () -> {
                                        __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting other-mint value: ", __helios__value__show(remainingExpectedMint)(false, ()))), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It should mint exactly the indicated token names", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Doesn't constrain any mentioned policy's minting of any other tokens", false, (), false, (), false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {
                                            mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);
                                            __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_3, expectedCount) -> {
                                                __core__ifThenElse(
                                                    __helios__bool____not(__cond_56 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_3);
                                                    __core__ifThenElse(
                                                        __helios__option[__helios__int]__none____is(__cond_56),
                                                        () -> {
                                                            (__lhs_0_117) -> {
                                                                false
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_116) -> {
                                                                actualCount = __helios__option[__helios__int]__some__some(__lhs_0_116);
                                                                __helios__int____eq(actualCount, expectedCount)
                                                            }
                                                        }
                                                    )()(__cond_56)),
                                                    () -> {
                                                        tnString = __helios__bytearray__decode_utf8_safe(tokenName_3)();
                                                        __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C validateUutMinting(): wrong mint for ", __helios__mintingpolicyhash__show(otherMph)()), ":"), tnString))
                                                    },
                                                    () -> {
                                                        () -> {
                                                            ()
                                                        }()
                                                    }
                                                )()
                                            })
                                        }), true))))
                                    })
                                }()
                            }
                        )()))
                    }()
                }
            )();
            __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)("  -- other-expected-mints ok? "), "unreachable exception: otherPoliciesMintOk"), __core__chooseUnit(__core__ifThenElse(
                __helios__int____gt(__helios__list[__helios__string]__length(purposes), 1),
                () -> {
                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("\u2705 ok: minted uuts: {", __helios__list[__helios__string]__join(purposes)(true, ", ")), "}"), mkTokenName_1("")))
                },
                () -> {
                    () -> {
                        __helios__print(__helios__string____add("\u2705 ok: minted uut: ", __helios__list[__helios__string]__head(tokenNames)))
                    }()
                }
            )(), __helios__bool__and(() -> {
                __helios__bool__and(() -> {
                    delegateApproval
                }, () -> {
                    thisPolicyMintOK
                })
            }, () -> {
                otherPoliciesMintOk
            })))))))
        })
    };
    __helios__list[__helios__string]__is_valid_data_internal = (lst_26) -> {
        recurse_101 = (recurse_100, lst_27) -> {
            __core__chooseList(lst_27, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__headList__safe(lst_27)),
                    () -> {
                        recurse_100(recurse_100, __core__tailList__safe(lst_27))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_101(recurse_101, lst_26)
    };
    __helios__list[__helios__string]__is_valid_data = (data_267) -> {
        __core__chooseData(data_267, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__string]__is_valid_data_internal(__core__unListData__safe(data_267))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__ReqtData[]__is_valid_data = (data_268) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_268, __core__bData(#7265717569726573), __helios__list[__helios__string]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_268, __core__bData(#696d706c), __helios__string__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_268, __core__bData(#6d656368), __helios__list[__helios__string]__is_valid_data),
                            () -> {
                                __core__ifThenElse(
                                    __helios__common__test_mStruct_field(data_268, __core__bData(#64746c73), __helios__list[__helios__string]__is_valid_data),
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__common__test_mStruct_field(data_268, __core__bData(#70727073), __helios__string__is_valid_data),
                                            () -> {
                                                __core__ifThenElse(
                                                    __helios__common__test_mStruct_field(data_268, __core__bData(#746774), __helios__bytearray__is_valid_data),
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __helios__common__test_mStruct_field(data_268, __core__bData(#657870), __helios__time__is_valid_data),
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __helios__common__test_mStruct_field(data_268, __core__bData(#6465736372697074696f6e), __helios__string__is_valid_data),
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __helios__common__test_mStruct_field(data_268, __core__bData(#696d616765), __helios__string__is_valid_data),
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __helios__common__test_mStruct_field(data_268, __core__bData(#6e616d65), __helios__string__is_valid_data),
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __helios__common__test_mStruct_field(data_268, __core__bData(#636174), __helios__string__is_valid_data),
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __helios__common__test_mStruct_field(data_268, __core__bData(#747065), __helios__string__is_valid_data),
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __helios__common__test_mStruct_field(data_268, __core__bData(#406964), __helios__bytearray__is_valid_data),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__trace("Warning: invalid data in ReqtData.@id", () -> {
                                                                                                                    false
                                                                                                                })()
                                                                                                            }
                                                                                                        )()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__trace("Warning: invalid data in ReqtData.tpe", () -> {
                                                                                                            false
                                                                                                        })()
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                __core__trace("Warning: invalid data in ReqtData.cat", () -> {
                                                                                                    false
                                                                                                })()
                                                                                            }
                                                                                        )()
                                                                                    },
                                                                                    () -> {
                                                                                        __core__trace("Warning: invalid data in ReqtData.name", () -> {
                                                                                            false
                                                                                        })()
                                                                                    }
                                                                                )()
                                                                            },
                                                                            () -> {
                                                                                __core__trace("Warning: invalid data in ReqtData.image", () -> {
                                                                                    false
                                                                                })()
                                                                            }
                                                                        )()
                                                                    },
                                                                    () -> {
                                                                        __core__trace("Warning: invalid data in ReqtData.description", () -> {
                                                                            false
                                                                        })()
                                                                    }
                                                                )()
                                                            },
                                                            () -> {
                                                                __core__trace("Warning: invalid data in ReqtData.exp", () -> {
                                                                    false
                                                                })()
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        __core__trace("Warning: invalid data in ReqtData.tgt", () -> {
                                                            false
                                                        })()
                                                    }
                                                )()
                                            },
                                            () -> {
                                                __core__trace("Warning: invalid data in ReqtData.prps", () -> {
                                                    false
                                                })()
                                            }
                                        )()
                                    },
                                    () -> {
                                        __core__trace("Warning: invalid data in ReqtData.dtls", () -> {
                                            false
                                        })()
                                    }
                                )()
                            },
                            () -> {
                                __core__trace("Warning: invalid data in ReqtData.mech", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in ReqtData.impl", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in ReqtData.requires", () -> {
                    false
                })()
            }
        )()
    };
    __module__ReqtsData__ReqtData[]__serialize = __helios__common__serialize;
    __module__ReqtsData__ReqtData[]__from_data = (data_269) -> {
        ignore_17 = __core__ifThenElse(
            __module__ReqtsData__ReqtData[]__is_valid_data(data_269),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid ReqtData data", ())
            }
        )();
        data_269
    };
    __module__ReqtsData__ReqtData[]__mustFreshenBy = (self_246) -> {
        __helios__time__from_data(__helios__common__mStruct_field(self_246, #657870))
    };
    __module__ReqtsData__ReqtData[]__validate = (self_247) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__ReqtsData__ReqtData[]__serialize(self_247)(), __module__ReqtsData__ReqtData[]__serialize(self_247)())
            }), "no"), true)
        }
    };
    __module__ReqtsData__DelegateDatum[]__is_valid_data = (__module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data, __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data, __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data) -> {
        (data_270) -> {
            __core__ifThenElse(
                __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data(data_270),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data(data_270),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data(data_270),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__ReqtsData__DelegateDatum[]__from_data = (__module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data_1) -> {
        (data_271) -> {
            ignore_18 = __core__ifThenElse(
                __module__ReqtsData__DelegateDatum[]__is_valid_data(__module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data_1)(data_271),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateDatum data", ())
                }
            )();
            data_271
        }
    };
    __module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data_2 = (data_272) -> {
        __core__chooseData(data_272, () -> {
            pair_76 = __core__unConstrData__safe(data_272);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_76), 0),
                () -> {
                    data_273 = __core__listData(__core__sndPair(pair_76));
                    __core__chooseData(data_273, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_158 = __core__unListData__safe(data_273);
                        __core__chooseList(fields_158, () -> {
                            false
                        }, () -> {
                            head_90 = __core__headList__safe(fields_158);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_90),
                                () -> {
                                    fields_159 = __core__tailList__safe(fields_158);
                                    __core__chooseList(fields_159, () -> {
                                        false
                                    }, () -> {
                                        head_91 = __core__headList__safe(fields_159);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_91),
                                            () -> {
                                                fields_160 = __core__tailList__safe(fields_159);
                                                __core__chooseList(fields_160, () -> {
                                                    false
                                                }, () -> {
                                                    head_92 = __core__headList__safe(fields_160);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_92),
                                                        () -> {
                                                            fields_161 = __core__tailList__safe(fields_160);
                                                            __core__chooseList(fields_161, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__DelegateDatum[]__IsDelegation__serialize = __helios__common__serialize;
    __module__ReqtsData__DelegateDatum[]__IsDelegation____is = (data_274) -> {
        __helios__common__enum_tag_equals(data_274, 1)
    };
    __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data_2 = (data_275) -> {
        __core__chooseData(data_275, () -> {
            pair_77 = __core__unConstrData__safe(data_275);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_77), 1),
                () -> {
                    data_276 = __core__listData(__core__sndPair(pair_77));
                    __core__chooseData(data_276, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_162 = __core__unListData__safe(data_276);
                        __core__chooseList(fields_162, () -> {
                            false
                        }, () -> {
                            head_93 = __core__headList__safe(fields_162);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(head_93),
                                () -> {
                                    fields_163 = __core__tailList__safe(fields_162);
                                    __core__chooseList(fields_163, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__DelegateDatum[]__IsDelegation__dd = (self_248) -> {
        __module__CapoDelegateHelpers__DelegationDetail[]__from_data(__helios__common__enum_field_0(self_248))
    };
    __module__ReqtsData__DelegateDatum[]__capoStoredData____is = (data_277) -> {
        __helios__common__enum_tag_equals(data_277, 2)
    };
    __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data_2 = (data_278) -> {
        __core__chooseData(data_278, () -> {
            pair_78 = __core__unConstrData__safe(data_278);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_78), 2),
                () -> {
                    data_279 = __core__listData(__core__sndPair(pair_78));
                    __core__chooseData(data_279, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_164 = __core__unListData__safe(data_279);
                        __core__chooseList(fields_164, () -> {
                            false
                        }, () -> {
                            head_94 = __core__headList__safe(fields_164);
                            __core__ifThenElse(
                                __module__ReqtsData__ReqtData[]__is_valid_data(head_94),
                                () -> {
                                    fields_165 = __core__tailList__safe(fields_164);
                                    __core__chooseList(fields_165, () -> {
                                        false
                                    }, () -> {
                                        head_95 = __core__headList__safe(fields_165);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_95),
                                            () -> {
                                                fields_166 = __core__tailList__safe(fields_165);
                                                __core__chooseList(fields_166, () -> {
                                                    false
                                                }, () -> {
                                                    head_96 = __core__headList__safe(fields_166);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_96),
                                                        () -> {
                                                            fields_167 = __core__tailList__safe(fields_166);
                                                            __core__chooseList(fields_167, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__MintingActivity[]__is_valid_data = (__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data) -> {
        (data_280) -> {
            __core__ifThenElse(
                __module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data(data_280),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__ReqtsData__MintingActivity[]__from_data = (__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_1) -> {
        (data_281) -> {
            ignore_19 = __core__ifThenElse(
                __module__ReqtsData__MintingActivity[]__is_valid_data(__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_1)(data_281),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid MintingActivity data", ())
                }
            )();
            data_281
        }
    };
    __module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_2 = (data_282) -> {
        __core__chooseData(data_282, () -> {
            pair_79 = __core__unConstrData__safe(data_282);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_79), 0),
                () -> {
                    data_283 = __core__listData(__core__sndPair(pair_79));
                    __core__chooseData(data_283, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_168 = __core__unListData__safe(data_283);
                        __core__chooseList(fields_168, () -> {
                            false
                        }, () -> {
                            head_97 = __core__headList__safe(fields_168);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_97),
                                () -> {
                                    fields_169 = __core__tailList__safe(fields_168);
                                    __core__chooseList(fields_169, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__MintingActivity[]__CreatingRecord__seed = (self_249) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_249))
    };
    __module__ReqtsData__SpendingActivity[]__is_valid_data = (__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data) -> {
        (data_284) -> {
            __core__ifThenElse(
                __module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data(data_284),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__ReqtsData__SpendingActivity[]__from_data = (__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_1) -> {
        (data_285) -> {
            ignore_20 = __core__ifThenElse(
                __module__ReqtsData__SpendingActivity[]__is_valid_data(__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_1)(data_285),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid SpendingActivity data", ())
                }
            )();
            data_285
        }
    };
    __module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_2 = (data_286) -> {
        __core__chooseData(data_286, () -> {
            pair_80 = __core__unConstrData__safe(data_286);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_80), 0),
                () -> {
                    data_287 = __core__listData(__core__sndPair(pair_80));
                    __core__chooseData(data_287, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_170 = __core__unListData__safe(data_287);
                        __core__chooseList(fields_170, () -> {
                            false
                        }, () -> {
                            head_98 = __core__headList__safe(fields_170);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_98),
                                () -> {
                                    fields_171 = __core__tailList__safe(fields_170);
                                    __core__chooseList(fields_171, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__SpendingActivity[]__UpdatingRecord__id = (self_250) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_0(self_250))
    };
    __module__ReqtsData__BurningActivity[]__is_valid_data = (__module__ReqtsData__BurningActivity[]__DeletingRecord__is_valid_data) -> {
        (data_288) -> {
            __core__ifThenElse(
                __module__ReqtsData__BurningActivity[]__DeletingRecord__is_valid_data(data_288),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__ReqtsData__BurningActivity[]__DeletingRecord__is_valid_data_1 = (data_289) -> {
        __core__chooseData(data_289, () -> {
            pair_81 = __core__unConstrData__safe(data_289);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_81), 0),
                () -> {
                    data_290 = __core__listData(__core__sndPair(pair_81));
                    __core__chooseData(data_290, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_172 = __core__unListData__safe(data_290);
                        __core__chooseList(fields_172, () -> {
                            false
                        }, () -> {
                            head_99 = __core__headList__safe(fields_172);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_99),
                                () -> {
                                    fields_173 = __core__tailList__safe(fields_172);
                                    __core__chooseList(fields_173, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__ensureConstrainedTxValidity = () -> {
        __helios__assert(__helios__duration____leq(__helios__time____sub(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), __helios__timerange__start(__helios__tx__time_range(__helios__scriptcontext__tx))), __helios__duration__HOUR), "txn duration err")
    };
    __module__ReqtsPolicy__daysInFuture = (nowPlusDays) -> {
        __core__chooseUnit(__module__ReqtsPolicy__ensureConstrainedTxValidity(), expiryDuration = __helios__duration____mul(__helios__duration__DAY, nowPlusDays);
        leeway = __helios__duration____mul(__helios__duration__HOUR, 1);
        latestAcceptable = __helios__time____add(__helios__time____add(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), expiryDuration), leeway);
        __helios__timerange__new(__helios__time____add(__helios__timerange__start(__helios__tx__time_range(__helios__scriptcontext__tx)), expiryDuration), latestAcceptable))
    };
    __module__ReqtsPolicy__DelegateActivity[]__is_valid_data = (__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__OtherActivities__is_valid_data) -> {
        (data_291) -> {
            __core__ifThenElse(
                __module__ReqtsPolicy__DelegateActivity[]__OtherActivities__is_valid_data(data_291),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data(data_291),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data(data_291),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data(data_291),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data(data_291),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data(data_291),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data(data_291),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data(data_291),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data(data_291),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data(data_291),
                                                                                        () -> {
                                                                                            true
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__ReqtsPolicy__DelegateActivity[]__from_data = (__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__OtherActivities__is_valid_data_1) -> {
        (data_292) -> {
            ignore_21 = __core__ifThenElse(
                __module__ReqtsPolicy__DelegateActivity[]__is_valid_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__OtherActivities__is_valid_data_1)(data_292),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateActivity data", ())
                }
            )();
            data_292
        }
    };
    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is = (data_293) -> {
        __helios__common__enum_tag_equals(data_293, 0)
    };
    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2 = (data_294) -> {
        __core__chooseData(data_294, () -> {
            pair_82 = __core__unConstrData__safe(data_294);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_82), 0),
                () -> {
                    data_295 = __core__listData(__core__sndPair(pair_82));
                    __core__chooseData(data_295, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_174 = __core__unListData__safe(data_295);
                        __core__chooseList(fields_174, () -> {
                            false
                        }, () -> {
                            head_100 = __core__headList__safe(fields_174);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_100),
                                () -> {
                                    fields_175 = __core__tailList__safe(fields_174);
                                    __core__chooseList(fields_175, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__activity = (self_251) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_251))
    };
    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is = (data_296) -> {
        __helios__common__enum_tag_equals(data_296, 1)
    };
    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2 = (data_297) -> {
        __core__chooseData(data_297, () -> {
            pair_83 = __core__unConstrData__safe(data_297);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_83), 1),
                () -> {
                    data_298 = __core__listData(__core__sndPair(pair_83));
                    __core__chooseData(data_298, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_176 = __core__unListData__safe(data_298);
                        __core__chooseList(fields_176, () -> {
                            false
                        }, () -> {
                            head_101 = __core__headList__safe(fields_176);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_101),
                                () -> {
                                    fields_177 = __core__tailList__safe(fields_176);
                                    __core__chooseList(fields_177, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity = (self_252) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_252))
    };
    __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities____is = (data_299) -> {
        __helios__common__enum_tag_equals(data_299, 2)
    };
    __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2 = (data_300) -> {
        __core__chooseData(data_300, () -> {
            pair_84 = __core__unConstrData__safe(data_300);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_84), 2),
                () -> {
                    data_301 = __core__listData(__core__sndPair(pair_84));
                    __core__chooseData(data_301, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_178 = __core__unListData__safe(data_301);
                        __core__chooseList(fields_178, () -> {
                            false
                        }, () -> {
                            head_102 = __core__headList__safe(fields_178);
                            __core__ifThenElse(
                                __module__ReqtsData__SpendingActivity[]__is_valid_data(__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(head_102),
                                () -> {
                                    fields_179 = __core__tailList__safe(fields_178);
                                    __core__chooseList(fields_179, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__activity = (self_253) -> {
        __module__ReqtsData__SpendingActivity[]__from_data(__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_253))
    };
    __module__ReqtsPolicy__DelegateActivity[]__MintingActivities____is = (data_302) -> {
        __helios__common__enum_tag_equals(data_302, 3)
    };
    __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2 = (data_303) -> {
        __core__chooseData(data_303, () -> {
            pair_85 = __core__unConstrData__safe(data_303);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_85), 3),
                () -> {
                    data_304 = __core__listData(__core__sndPair(pair_85));
                    __core__chooseData(data_304, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_180 = __core__unListData__safe(data_304);
                        __core__chooseList(fields_180, () -> {
                            false
                        }, () -> {
                            head_103 = __core__headList__safe(fields_180);
                            __core__ifThenElse(
                                __module__ReqtsData__MintingActivity[]__is_valid_data(__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_2)(head_103),
                                () -> {
                                    fields_181 = __core__tailList__safe(fields_180);
                                    __core__chooseList(fields_181, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__activity = (self_254) -> {
        __module__ReqtsData__MintingActivity[]__from_data(__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_254))
    };
    __module__ReqtsPolicy__DelegateActivity[]__BurningActivities____is = (data_305) -> {
        __helios__common__enum_tag_equals(data_305, 4)
    };
    __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2 = (data_306) -> {
        __core__chooseData(data_306, () -> {
            pair_86 = __core__unConstrData__safe(data_306);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_86), 4),
                () -> {
                    data_307 = __core__listData(__core__sndPair(pair_86));
                    __core__chooseData(data_307, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_182 = __core__unListData__safe(data_307);
                        __core__chooseList(fields_182, () -> {
                            false
                        }, () -> {
                            head_104 = __core__headList__safe(fields_182);
                            __core__ifThenElse(
                                __module__ReqtsData__BurningActivity[]__is_valid_data(__module__ReqtsData__BurningActivity[]__DeletingRecord__is_valid_data_1)(head_104),
                                () -> {
                                    fields_183 = __core__tailList__safe(fields_182);
                                    __core__chooseList(fields_183, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is = (data_308) -> {
        __helios__common__enum_tag_equals(data_308, 5)
    };
    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2 = (data_309) -> {
        __core__chooseData(data_309, () -> {
            pair_87 = __core__unConstrData__safe(data_309);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_87), 5),
                () -> {
                    data_310 = __core__listData(__core__sndPair(pair_87));
                    __core__chooseData(data_310, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_184 = __core__unListData__safe(data_310);
                        __core__chooseList(fields_184, () -> {
                            false
                        }, () -> {
                            head_105 = __core__headList__safe(fields_184);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_105),
                                () -> {
                                    fields_185 = __core__tailList__safe(fields_184);
                                    __core__chooseList(fields_185, () -> {
                                        false
                                    }, () -> {
                                        head_106 = __core__headList__safe(fields_185);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_106),
                                            () -> {
                                                fields_186 = __core__tailList__safe(fields_185);
                                                __core__chooseList(fields_186, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__seed = (self_255) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_255))
    };
    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__dataType = (self_256) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_256))
    };
    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is = (data_311) -> {
        __helios__common__enum_tag_equals(data_311, 6)
    };
    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2 = (data_312) -> {
        __core__chooseData(data_312, () -> {
            pair_88 = __core__unConstrData__safe(data_312);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_88), 6),
                () -> {
                    data_313 = __core__listData(__core__sndPair(pair_88));
                    __core__chooseData(data_313, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_187 = __core__unListData__safe(data_313);
                        __core__chooseList(fields_187, () -> {
                            false
                        }, () -> {
                            head_107 = __core__headList__safe(fields_187);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_107),
                                () -> {
                                    fields_188 = __core__tailList__safe(fields_187);
                                    __core__chooseList(fields_188, () -> {
                                        false
                                    }, () -> {
                                        head_108 = __core__headList__safe(fields_188);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_108),
                                            () -> {
                                                fields_189 = __core__tailList__safe(fields_188);
                                                __core__chooseList(fields_189, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_257) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_257))
    };
    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__recId = (self_258) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_258))
    };
    __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is = (data_314) -> {
        __helios__common__enum_tag_equals(data_314, 7)
    };
    __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2 = (data_315) -> {
        __core__chooseData(data_315, () -> {
            pair_89 = __core__unConstrData__safe(data_315);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_89), 7),
                () -> {
                    data_316 = __core__listData(__core__sndPair(pair_89));
                    __core__chooseData(data_316, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_190 = __core__unListData__safe(data_316);
                        __core__chooseList(fields_190, () -> {
                            false
                        }, () -> {
                            head_109 = __core__headList__safe(fields_190);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_109),
                                () -> {
                                    fields_191 = __core__tailList__safe(fields_190);
                                    __core__chooseList(fields_191, () -> {
                                        false
                                    }, () -> {
                                        head_110 = __core__headList__safe(fields_191);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_110),
                                            () -> {
                                                fields_192 = __core__tailList__safe(fields_191);
                                                __core__chooseList(fields_192, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__recId = (self_259) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_259))
    };
    __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities____is = (data_317) -> {
        __helios__common__enum_tag_equals(data_317, 8)
    };
    __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2 = (data_318) -> {
        __core__chooseData(data_318, () -> {
            pair_90 = __core__unConstrData__safe(data_318);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_90), 8),
                () -> {
                    data_319 = __core__listData(__core__sndPair(pair_90));
                    __core__chooseData(data_319, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_193 = __core__unListData__safe(data_319);
                        __core__chooseList(fields_193, () -> {
                            false
                        }, () -> {
                            head_111 = __core__headList__safe(fields_193);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_111),
                                () -> {
                                    fields_194 = __core__tailList__safe(fields_193);
                                    __core__chooseList(fields_194, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__activities = (self_260) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_260))
    };
    __module__ReqtsPolicy__DelegateActivity[]__OtherActivities____is = (data_320) -> {
        __helios__common__enum_tag_equals(data_320, 9)
    };
    __module__ReqtsPolicy__DelegateActivity[]__OtherActivities__is_valid_data_2 = (data_321) -> {
        __core__chooseData(data_321, () -> {
            pair_91 = __core__unConstrData__safe(data_321);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_91), 9),
                () -> {
                    data_322 = __core__listData(__core__sndPair(pair_91));
                    __core__chooseData(data_322, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_195 = __core__unListData__safe(data_322);
                        __core__chooseList(fields_195, () -> {
                            false
                        }, () -> {
                            head_112 = __core__headList__safe(fields_195);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_112),
                                () -> {
                                    fields_196 = __core__tailList__safe(fields_195);
                                    __core__chooseList(fields_196, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__txinput]__for_each = (self_261) -> {
        (fn_30) -> {
            recurse_103 = (recurse_102, lst_28) -> {
                __core__chooseList(lst_28, () -> {
                    ()
                }, () -> {
                    __core__chooseUnit(fn_30(__helios__txinput__from_data(__core__headList__safe(lst_28))), recurse_102(recurse_102, __core__tailList__safe(lst_28)))
                })()
            };
            recurse_103(recurse_103, self_261)
        }
    };
    __helios__list[__helios__txinput]__filter = (self_262) -> {
        (fn_31) -> {
            __helios__common__filter_list(self_262, (item_15) -> {
                fn_31(__helios__txinput__from_data(item_15))
            })
        }
    };
    __module__ReqtsPolicy__DelegateActivity[]__additionalDelegateValidation = (self_263) -> {
        (priorMddd, cctx) -> {
            __core__chooseUnit(__helios__print("  -- addl dgt validity check"), __helios__bool__or(() -> {
                __cond_57 = self_263;
                __core__ifThenElse(
                    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_57),
                    () -> {
                        (__lhs_0_126) -> {
                            true
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_57),
                            () -> {
                                (__lhs_0_125) -> {
                                    __helios__error("unreachable")
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __module__ReqtsPolicy__DelegateActivity[]__MintingActivities____is(__cond_57),
                                    () -> {
                                        (__lhs_0_123) -> {
                                            VMA = __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__activity(__lhs_0_123);
                                            __cond_59 = VMA;
                                            __lhs_0_124 = __cond_59;
                                            seed_3 = __module__ReqtsData__MintingActivity[]__CreatingRecord__seed(__lhs_0_124);
                                            __core__chooseUnit(__helios__print("creating reqt record...
"), mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);
                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "can't"), tokenName_4 = mkTn("reqt");
                                            newReqt = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1(cctx)(__helios__string__encode_utf8(tokenName_4)());
                                            reqtData_1 = __module__ReqtsData__ReqtData[]__from_data(__helios__txoutputdatum__inline(__helios__txoutput__datum(newReqt)));
                                            __core__chooseUnit(__helios__assert(__helios__duration____leq(__helios__time____sub(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), __helios__timerange__start(__helios__tx__time_range(__helios__scriptcontext__tx))), __helios__duration__HOUR), "txn duration err"), acceptableExpiry = __module__ReqtsPolicy__daysInFuture(73);
                                            discountEnds = __module__ReqtsData__ReqtData[]__mustFreshenBy(reqtData_1);
                                            __core__chooseUnit(__helios__assert(__helios__timerange__contains(acceptableExpiry)(discountEnds), __helios__string____add("wrong discount expiry date too late seconds: ", __helios__int__show(__helios__duration____div1(__helios__time____sub(discountEnds, __helios__timerange__end(acceptableExpiry)), __helios__duration__SECOND))())), __helios__bool__and(() -> {
                                                __module__ReqtsData__ReqtData[]__validate(reqtData_1)()
                                            }, () -> {
                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__ReqtsData__DelegateDatum[]__IsDelegation__dd(priorMddd)), seed_3, __core__mkCons(__helios__string____to_data("reqt"), __core__mkNilData(())), true, mkTn, false, (), false, (), true, false, false, (), false, ())
                                            })))))
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities____is(__cond_57),
                                            () -> {
                                                (__lhs_0_119) -> {
                                                    VSA = __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__activity(__lhs_0_119);
                                                    __core__chooseUnit(__helios__print(__helios__string____add("capo mph: ", __helios__mintingpolicyhash__show(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__ReqtsData__DelegateDatum[]__IsDelegation__dd(priorMddd)))())), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "can't"), __core__chooseUnit(__helios__print(__helios__string____add("
capo addr", __helios__address__show(__helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(cctx)()))())), __core__chooseUnit(__helios__print("
"), __cond_58 = VSA;
                                                    __lhs_0_120 = __cond_58;
                                                    recId_4 = __module__ReqtsData__SpendingActivity[]__UpdatingRecord__id(__lhs_0_120);
                                                    hasDD_2 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx)(true, "Reqt", true, recId_4);
                                                    hasDDOutput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate(cctx)("Reqt", true, recId_4);
                                                    __core__chooseUnit(__helios__list[__helios__txinput]__for_each(__helios__list[__helios__txinput]__filter(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_2))((utxo_6) -> {
                                                        reqtData = __module__ReqtsData__ReqtData[]__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_6)));
                                                        updatedUtxo = __helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))(hasDDOutput);
                                                        updatedReqt = __module__ReqtsData__ReqtData[]__from_data(__helios__txoutputdatum__inline(__helios__txoutput__datum(updatedUtxo)));
                                                        __lhs_0_121 = __helios__value__get_lovelace(__helios__txinput__value(utxo_6))();
                                                        __lhs_0_122 = __helios__value__get_lovelace(__helios__txoutput__value(updatedUtxo))();
                                                        freshExpiry = __module__ReqtsPolicy__daysInFuture(73);
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("changes the expiration date on each update", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("uses the expiration-date policy from settings", false, (), false, (), false, ()), __core__ifThenElse(
                                                            __helios__time____gt(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), __module__ReqtsData__ReqtData[]__mustFreshenBy(reqtData)),
                                                            () -> {
                                                                __core__chooseUnit(__helios__print("  -- reqt expired.  freshening.
"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("updates the expiration date if it's expired", false, (), false, (), false, ()), __helios__assert(__helios__timerange__contains(freshExpiry)(__module__ReqtsData__ReqtData[]__mustFreshenBy(updatedReqt)), "wrong expiry date @expired")))
                                                            },
                                                            () -> {
                                                                () -> {
                                                                    ()
                                                                }()
                                                            }
                                                        )()))
                                                    }), true)))))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__ReqtsPolicy__DelegateActivity[]__OtherActivities____is(__cond_57),
                                                    () -> {
                                                        (__lhs_0_118) -> {
                                                            __helios__error("no other activities exist in this delegate")
                                                        }
                                                    },
                                                    () -> {
                                                        (__39) -> {
                                                            false
                                                        }
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()
                    }
                )()(__cond_57)
            }, () -> {
                __helios__bytearray____eq(__helios__tx__serialize(__helios__scriptcontext__tx)(), __module__ReqtsData__DelegateDatum[]__IsDelegation__serialize(priorMddd)())
            }))
        }
    };
    __module__ReqtsPolicy__DelegateActivity[]__otherDatumValidation = (self_264) -> {
        (_priorMdd) -> {
            neverTriggered = () -> {
                __helios__error("never called")
            };
            __cond_60 = self_264;
            __core__ifThenElse(
                __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_60),
                () -> {
                    (__lhs_0_128) -> {
                        neverTriggered()
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_60),
                        () -> {
                            (__lhs_0_127) -> {
                                neverTriggered()
                            }
                        },
                        () -> {
                            (__40) -> {
                                false
                            }
                        }
                    )()
                }
            )()(__cond_60)
        }
    };
    __module__BasicDelegate__rev = __helios__int__from_data(__core__iData(1));
    __module__BasicDelegate__instance = #67656e6572616c;
    __module__BasicDelegate__delegateName = __helios__string__from_data(__core__bData(#5265717473506f6c696379));
    __module__BasicDelegate__isMintDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isSpendDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isDgDataPolicy = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__requiresGovAuthority = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __helios__list[__helios__data]__all = (self_265) -> {
        (fn_32) -> {
            __helios__common__all(self_265, (item_16) -> {
                fn_32(__helios__data__from_data(item_16))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq = (self_266, other_5) -> {
        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_266), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(other_5))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail = __core__tailList;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;
    __helios__option[__helios__assetclass]__unwrap = (self_267) -> {
        () -> {
            __helios__assetclass__from_data(__helios__common__enum_field_0(self_267))
        }
    };
    __helios__option[__helios__assetclass]__some____new = (some_5) -> {
        __core__constrData(0, __helios__common__list_1(__helios__assetclass____to_data(some_5)))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all = (self_268) -> {
        (fn_33) -> {
            __helios__common__all(self_268, (item_17) -> {
                fn_33(__module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_17))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head = (self_269) -> {
        __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList(self_269))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]] = (self_270) -> {
        (fn_34, a0) -> {
            __helios__common__fold(self_270, (prev_4, item_18) -> {
                fn_34(prev_4, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_18))
            }, a0)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__delete = (self_271) -> {
        (key_26) -> {
            key_27 = __helios__bytearray____to_data(key_26);
            recurse_105 = (recurse_104, self_272) -> {
                __core__chooseList(self_272, () -> {
                    self_272
                }, () -> {
                    head_113 = __core__headList__safe(self_272);
                    tail_5 = __core__tailList__safe(self_272);
                    __core__ifThenElse(
                        __core__equalsData(key_27, __core__fstPair(head_113)),
                        () -> {
                            recurse_104(recurse_104, tail_5)
                        },
                        () -> {
                            __core__mkCons(head_113, recurse_104(recurse_104, tail_5))
                        }
                    )()
                })()
            };
            recurse_105(recurse_105, self_271)
        }
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is = (data_323) -> {
        __helios__common__enum_tag_equals(data_323, 0)
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some = (self_273) -> {
        __helios__map[__helios__bytearray@__helios__int]__from_data(__helios__common__enum_field_0(self_273))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe = (self_274) -> {
        (key_28) -> {
            __helios__common__map_get(self_274, __helios__mintingpolicyhash____to_data(key_28), (x_13) -> {
                __core__constrData(0, __helios__common__list_1(x_13))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]] = (self_275) -> {
        (fn_35, a0_1, b0_1) -> {
            __helios__common__fold(self_275, (prev_5, item_19) -> {
                prev_5((a_19, b_22) -> {
                    fn_35(a_19, b_22, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_19))
                })
            }, (callback_15) -> {
                callback_15(a0_1, b0_1)
            })
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_276) -> {
        __helios__common__length(self_276)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head = (self_277) -> {
        head_114 = __core__headList(self_277);
        (callback_16) -> {
            callback_16(__helios__string__from_data(__core__fstPair(head_114)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(head_114)))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail = __core__tailList;
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap = (self_278) -> {
        () -> {
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_278))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_279) -> {
        (key_29) -> {
            key_30 = __helios__string____to_data(key_29);
            recurse_107 = (recurse_106, self_280) -> {
                __core__chooseList(self_280, () -> {
                    self_280
                }, () -> {
                    head_115 = __core__headList__safe(self_280);
                    tail_6 = __core__tailList__safe(self_280);
                    __core__ifThenElse(
                        __core__equalsData(key_30, __core__fstPair(head_115)),
                        () -> {
                            recurse_106(recurse_106, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_115, recurse_106(recurse_106, tail_6))
                        }
                    )()
                })()
            };
            recurse_107(recurse_107, self_279)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq = (self_281, other_6) -> {
        __core__equalsData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_281), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(other_6))
    };
    __helios__option[__helios__string]__unwrap = (self_282) -> {
        () -> {
            __helios__string__from_data(__helios__common__enum_field_0(self_282))
        }
    };
    __helios__option[__helios__bytearray]__unwrap = (self_283) -> {
        () -> {
            __helios__bytearray__from_data(__helios__common__enum_field_0(self_283))
        }
    };
    __module__BasicDelegate__checkOneActivity_1 = (__module__BasicDelegate__checkOneActivity) -> {
        (dgtionDatum, activity_3, __useopt__dd, dd, __useopt__baseCctx, baseCctx, __useopt__desc, desc) -> {
            dd_1 = __core__ifThenElse(
                __useopt__dd,
                () -> {
                    dd
                },
                () -> {
                    __module__ReqtsData__DelegateDatum[]__IsDelegation__dd(dgtionDatum)
                }
            )();
            baseCctx_1 = __core__ifThenElse(
                __useopt__baseCctx,
                () -> {
                    baseCctx
                },
                () -> {
                    __module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1))
                }
            )();
            desc_1 = __core__ifThenElse(
                __useopt__desc,
                () -> {
                    desc
                },
                () -> {
                    "\u2039unspecified\u203A"
                }
            )();
            __module__StellarHeliosHelpers__logGroup_1(__module__StellarHeliosHelpers__logGroup_1)(__helios__string____add("\u{1F3D2} checking activity: ", desc_1), false, true, () -> {
                result_8 = __core__ifThenElse(
                    true,
                    () -> {
                        (checkNonDelegatedActivities) -> {
                            __core__chooseUnit(__helios__assert(checkNonDelegatedActivities, "checkNonDelegatedActivities failed"), __module__StellarHeliosHelpers__bREQTgroup(__core__ifThenElse(
                                __helios__bool__and(() -> {
                                    __module__BasicDelegate__isMintDelegate
                                }, () -> {
                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(baseCctx_1)(true, false)
                                }),
                                () -> {
                                    __helios__string____add("mintDgt: additionalDelegateValidation in ", __module__BasicDelegate__delegateName)
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __helios__bool__and(() -> {
                                            __module__BasicDelegate__isSpendDelegate
                                        }, () -> {
                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(baseCctx_1)(true, false)
                                        }),
                                        () -> {
                                            __helios__string____add("spendDgt: additionalDelegateValidation in ", __module__BasicDelegate__delegateName)
                                        },
                                        () -> {
                                            () -> {
                                                __helios__string____add(__module__BasicDelegate__delegateName, ": additionalDelegateValidation()")
                                            }()
                                        }
                                    )()
                                }
                            )(), false, true, () -> {
                                __module__ReqtsPolicy__DelegateActivity[]__additionalDelegateValidation(activity_3)(dgtionDatum, __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(baseCctx_1)())
                            }))
                        }(__cond_61 = activity_3;
                        __core__ifThenElse(
                            __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_61),
                            () -> {
                                (__lhs_0_242) -> {
                                    activities_2 = __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__activities(__lhs_0_242);
                                    cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                    actingAsMintDgt = __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            __module__BasicDelegate__isMintDelegate
                                        }, () -> {
                                            __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)
                                        })
                                    }, () -> {
                                        __module__StellarHeliosHelpers__bREQT("Mint delegate: checks that all the indicated create/remove activities are valid", false, (), false, (), false, ())
                                    });
                                    actingAsSpendDgt = __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            __helios__bool__and(() -> {
                                                __helios__bool____not(actingAsMintDgt)
                                            }, () -> {
                                                __module__BasicDelegate__isSpendDelegate
                                            })
                                        }, () -> {
                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)
                                        })
                                    }, () -> {
                                        __module__StellarHeliosHelpers__bREQT("Spend delegate: checks that all the indicated record-update activities are valid", false, (), false, (), false, ())
                                    });
                                    notMintDgt = __helios__bool____not(actingAsMintDgt);
                                    notSpendDgt = __helios__bool____not(actingAsSpendDgt);
                                    mintDgtCheck_1 = __helios__bool__or(() -> {
                                        notMintDgt
                                    }, () -> {
                                        __helios__list[__helios__data]__all(activities_2)((rawActivity) -> {
                                            a_20 = __module__ReqtsPolicy__DelegateActivity[]__from_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__OtherActivities__is_valid_data_2)(rawActivity);
                                            __core__chooseUnit(__helios__print("  -- mintDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- validates nested activities: in the mint delegate, only {Create,Delete}DelegatedData activities are valid in multi-activities", false, (), false, (), false, ()), __cond_110 = a_20;
                                            __core__ifThenElse(
                                                __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_110),
                                                () -> {
                                                    (__lhs_0_248) -> {
                                                        __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_20, true, dd_1, true, cctx_6, true, "one create is properly delegated")
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_110),
                                                        () -> {
                                                            (__lhs_0_247) -> {
                                                                __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_20, true, dd_1, true, cctx_6, true, "one delete is properly delegated")
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_110),
                                                                () -> {
                                                                    (__lhs_0_246) -> {
                                                                        __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_110),
                                                                        () -> {
                                                                            (__lhs_0_245) -> {
                                                                                __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_110),
                                                                                () -> {
                                                                                    (__lhs_0_244) -> {
                                                                                        __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_110),
                                                                                        () -> {
                                                                                            (__lhs_0_243) -> {
                                                                                                __helios__error("multi:multi: nesting not ok")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__74) -> {
                                                                                                __helios__error("multi:non-minting activities are invalid for mintDgt")
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()(__cond_110)))
                                        })
                                    });
                                    spendDgtCheck_1 = __helios__bool__or(() -> {
                                        notSpendDgt
                                    }, () -> {
                                        __module__StellarHeliosHelpers__bREQTgroup("validates nested activities: in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities", false, true, () -> {
                                            __helios__list[__helios__data]__all(activities_2)((rawActivity_1) -> {
                                                a_21 = __module__ReqtsPolicy__DelegateActivity[]__from_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__OtherActivities__is_valid_data_2)(rawActivity_1);
                                                __core__chooseUnit(__helios__print("  -- spendDgt checking multi-activity"), __cond_111 = a_21;
                                                __core__ifThenElse(
                                                    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_111),
                                                    () -> {
                                                        (__lhs_0_254) -> {
                                                            __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                __module__BasicDelegate__isSpendDelegate
                                                            }, () -> {
                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(false, ())
                                                            }), "UpdatingDelegatedData only ok at level-1 spendDgt"), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_21, true, dd_1, true, cctx_6, true, "one update is properly delegated"))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_111),
                                                            () -> {
                                                                (__lhs_0_253) -> {
                                                                    __helios__error("CreatingDelegatedData only ok in mintDgt")
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_111),
                                                                    () -> {
                                                                        (__lhs_0_252) -> {
                                                                            __helios__error("TODO: validate spending the datum for burn")
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_111),
                                                                            () -> {
                                                                                (__lhs_0_251) -> {
                                                                                    __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_111),
                                                                                    () -> {
                                                                                        (__lhs_0_250) -> {
                                                                                            __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_111),
                                                                                            () -> {
                                                                                                (__lhs_0_249) -> {
                                                                                                    __helios__error("multi:multi: nesting not ok")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__75) -> {
                                                                                                    __helios__error("multi: non-spending activities are invalid for spendDgt")
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()(__cond_111))
                                            })
                                        })
                                    });
                                    dgDataPolicyCheck = __core__ifThenElse(
                                        __helios__bool__or(() -> {
                                            __module__BasicDelegate__isMintDelegate
                                        }, () -> {
                                            __module__BasicDelegate__isSpendDelegate
                                        }),
                                        () -> {
                                            __core__chooseUnit(__helios__assert(__helios__bool____not(__module__BasicDelegate__isDgDataPolicy), "ack! mint/spend delegate can't be a delegated-data policy!"), true)
                                        },
                                        () -> {
                                            () -> {
                                                __module__StellarHeliosHelpers__bREQTgroup("multi-activity: in DgDataPolicy, only Minting/Burning/Spending activities are valid", false, true, () -> {
                                                    __helios__list[__helios__data]__all(activities_2)((rawActivity_2) -> {
                                                        a_22 = __module__ReqtsPolicy__DelegateActivity[]__from_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__OtherActivities__is_valid_data_2)(rawActivity_2);
                                                        __cond_112 = a_22;
                                                        __core__ifThenElse(
                                                            __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_112),
                                                            () -> {
                                                                (__lhs_0_264) -> {
                                                                    __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt (use a SpendingActivity in dgDataPolicy)")
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_112),
                                                                    () -> {
                                                                        (__lhs_0_263) -> {
                                                                            __helios__error("CreatingDelegatedData only ok in mintDgt (use a MintingActivity in dgDataPolicy)")
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_112),
                                                                            () -> {
                                                                                (__lhs_0_262) -> {
                                                                                    __helios__error("DeletingDelegatedData only ok at mint/spend dgt (use BurningActivity in dgDataPolicy)")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities____is(__cond_112),
                                                                                    () -> {
                                                                                        (__lhs_0_261) -> {
                                                                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_22, true, dd_1, true, cctx_6, true, "biz-logic for one record update")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__ReqtsPolicy__DelegateActivity[]__MintingActivities____is(__cond_112),
                                                                                            () -> {
                                                                                                (__lhs_0_260) -> {
                                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_22, true, dd_1, true, cctx_6, true, "biz-logic for one record create")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__ReqtsPolicy__DelegateActivity[]__BurningActivities____is(__cond_112),
                                                                                                    () -> {
                                                                                                        (__lhs_0_259) -> {
                                                                                                            __core__chooseUnit(__helios__assert(false, "TODO: support multi:BurningActivities for dgDataPolicy or other delegate"), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_22, true, dd_1, true, cctx_6, true, "biz-logic for one record delete"))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__ReqtsPolicy__DelegateActivity[]__OtherActivities____is(__cond_112),
                                                                                                            () -> {
                                                                                                                (__lhs_0_258) -> {
                                                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_22, true, dd_1, true, cctx_6, true, "biz-logic for OtherActivities ")
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_112),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_257) -> {
                                                                                                                            __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_112),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_256) -> {
                                                                                                                                    __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_255) -> {
                                                                                                                                    __helios__error("multi:multi: nesting not ok")
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()(__cond_112)
                                                    })
                                                })
                                            }()
                                        }
                                    )();
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            mintDgtCheck_1
                                        }, () -> {
                                            spendDgtCheck_1
                                        })
                                    }, () -> {
                                        dgDataPolicyCheck
                                    })
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_61),
                                    () -> {
                                        (__lhs_0_236) -> {
                                            innerActivity = __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity(__lhs_0_236);
                                            __cond_108 = innerActivity;
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_108),
                                                () -> {
                                                    (__lhs_0_240) -> {
                                                        seed_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed(__lhs_0_240);
                                                        purpose_7 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose(__lhs_0_240);
                                                        BURNED = __helios__int____neg(1);
                                                        otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), __module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_1)), BURNED);
                                                        tnStr_3 = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_1))();
                                                        __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("checking ReplacingMe on ", purpose_7), ": "), tnStr_3)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("needs the charter to be approving the the new mint-delegate", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("  ^^^ should queue the new delegate in pendingChanges"), cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(baseCctx_1)();
                                                        (isUpdatingCharter) -> {
                                                            isMintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_9, __core__mkCons(__helios__string____to_data(purpose_7), __core__mkNilData(())), false, (), false, (), true, otherMintedValue_2, true, false, true, false, false, ());
                                                            __helios__bool__and(() -> {
                                                                isMintingOk
                                                            }, () -> {
                                                                isUpdatingCharter
                                                            })
                                                        }(__cond_109 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5)();
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_109),
                                                            () -> {
                                                                (__lhs_0_241) -> {
                                                                    true
                                                                }
                                                            },
                                                            () -> {
                                                                (__73) -> {
                                                                    false
                                                                }
                                                            }
                                                        )()(__cond_109)))))
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_108),
                                                        () -> {
                                                            (__lhs_0_239) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... Retiring delegate authority token", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- must burn the indicated authority token", false, (), false, (), false, ()), __helios__int____eq(__helios__value__get(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken(dd_1)()), __helios__int____neg(1))))
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_237) -> {
                                                                __lhs_0_238 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), false, ()), 0);
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("import settings from delegate and validate them"), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                    false
                                                                }, () -> {
                                                                    true
                                                                }), "ValidateSettings temporarily disabled"), false))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()(__cond_108)
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_61),
                                            () -> {
                                                (__lhs_0_137) -> {
                                                    dCLA = __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_137);
                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with any CapoLifecycle activity: ", false, (), false, (), false, ()), cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))())();
                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the Capo's CharterData activity to match this delegate's activity", false, (), false, (), false, ()), __core__chooseUnit(__cond_106 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4)();
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_106),
                                                        () -> {
                                                            (__lhs_0_235) -> {
                                                                cCLA = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_235);
                                                                __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cCLA, dCLA), "activity mismatch with Capo's CharterData activity"), __helios__print("  -- ok, CharterData capoLifecycleActivity matches ours
"))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_106),
                                                                () -> {
                                                                    (__lhs_0_233) -> {
                                                                        __cond_107 = dCLA;
                                                                        __core__ifThenElse(
                                                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_107),
                                                                            () -> {
                                                                                (__lhs_0_234) -> {
                                                                                    __helios__print("ok, Capo:updatingCharter works for now with CreatingDelegate
")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__72) -> {
                                                                                    __helios__error("when Capo is UpdatingCharter, the mintDelegate must be CreatingDelegate")
                                                                                }
                                                                            }
                                                                        )()(__cond_107)
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__71) -> {
                                                                        __helios__error("this activity must match the capo's own CharterData activity")
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()(__cond_106), neededRole = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx_4)(dCLA);
                                                    (myCurrentRole) -> {
                                                        __helios__bool__and(() -> {
                                                            __cond_63 = dCLA;
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_63),
                                                                () -> {
                                                                    (__lhs_0_229) -> {
                                                                        seed_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_229);
                                                                        purpose_6 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_229);
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("XXX it should output the new delegate token to the Capo as a PendingDelegate datum"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... here in the MintDgt: validates creation of UUT for the new delegate, aligned to the purpose indicated", false, (), false, (), false, ()), mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                        __cond_104 = myCurrentRole;
                                                                        __core__ifThenElse(
                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_104),
                                                                            () -> {
                                                                                (__lhs_0_230) -> {
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates the new delegate's UUT is minted", false, (), false, (), false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_8, __core__mkCons(__helios__string____to_data(purpose_6), __core__mkNilData(())), true, mkTn_1, false, (), false, (), true, false, false, (), false, ()),
                                                                                        () -> {
                                                                                            __helios__print("  -- ok, minted the new delegate's UUT
")
                                                                                        },
                                                                                        () -> {
                                                                                            () -> {
                                                                                                ()
                                                                                            }()
                                                                                        }
                                                                                    )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the UUT must have the right disposition (is it checked somewhere else?!?)", false, (), false, (), false, ()), __cond_105 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)()))(purpose_6);
                                                                                    __core__ifThenElse(
                                                                                        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_105),
                                                                                        () -> {
                                                                                            (__lhs_0_232) -> {
                                                                                                __helios__error("the new delegate is not present in the Capo's named-delegates list")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__lhs_0_231) -> {
                                                                                                dgtLink_3 = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_231);
                                                                                                __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_3), mkTn_1(purpose_6)), "uutName mismatch"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))
                                                                                            }
                                                                                        }
                                                                                    )()(__cond_105))))
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__70) -> {
                                                                                    __helios__error("unreachable wrong role for CreatingDelegate")
                                                                                }
                                                                            }
                                                                        )()(__cond_104)))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_63),
                                                                        () -> {
                                                                            (__lhs_0_177) -> {
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for the addingPendingDgt activity:", false, (), false, (), false, ()), charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                oldPendingChanges = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4);
                                                                                nextChangeList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_2);
                                                                                newChange = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head(nextChangeList);
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support otherManifestChange here"), __lhs_0_178 = __helios__common__assert_constr_index(newChange, 0);
                                                                                __lhs_0_0_2 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_178);
                                                                                action = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(__lhs_0_0_2);
                                                                                role_2 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_2);
                                                                                OdgtLink = __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(__lhs_0_0_2);
                                                                                (newDgtRoleName) -> {
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupUnit("The new pending-delegate action must be found at the head of the new change-list", false, true, () -> {
                                                                                        __cond_102 = action;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_102),
                                                                                            () -> {
                                                                                                (__lhs_0_227) -> {
                                                                                                    __core__chooseUnit(__helios__print("   -- another delegate-role check would be redundant."), __cond_103 = myCurrentRole;
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_103),
                                                                                                        () -> {
                                                                                                            (__lhs_0_228) -> {
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that the delegate queued for removal is present in the Capo's charterData", false, (), false, (), false, ()), __helios__error("implement me"))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__69) -> {
                                                                                                                __helios__error("unreachable")
                                                                                                            }
                                                                                                        }
                                                                                                    )()(__cond_103))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__68) -> {
                                                                                                    __helios__assert(true, "no way l")
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_102)
                                                                                    }), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the change-list should be unchanged", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail(nextChangeList), oldPendingChanges), "invalid update of pendingChanges; the new action must be prepended to the existing list."), __cond_101 = action;
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_101),
                                                                                        () -> {
                                                                                            (__lhs_0_226) -> {
                                                                                                __helios__error("unreachable")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_101),
                                                                                                () -> {
                                                                                                    (__lhs_0_225) -> {
                                                                                                        seed_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed(__lhs_0_225);
                                                                                                        purpose_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose(__lhs_0_225);
                                                                                                        idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_225);
                                                                                                        (callback_20) -> {
                                                                                                            callback_20(seed_7, purpose_5, idPrefix_9)
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_224) -> {
                                                                                                        seed_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed(__lhs_0_224);
                                                                                                        purpose_4 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose(__lhs_0_224);
                                                                                                        idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_224);
                                                                                                        (callback_19) -> {
                                                                                                            callback_19(seed_6, purpose_4, idPrefix_8)
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()(__cond_101)((seed_5, purpose_3, pendingActionIdPrefix) -> {
                                                                                        (possibleMintDgtVerifications) -> {
                                                                                            (otherPossibleVerifications) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("TEMPORARY: only one pending change is allowed", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(oldPendingChanges), 0), "only one pending change is allowed for now (avoids resource-exhaustion)"), __helios__bool__and(() -> {
                                                                                                    __helios__bool__and(() -> {
                                                                                                        true
                                                                                                    }, () -> {
                                                                                                        possibleMintDgtVerifications
                                                                                                    })
                                                                                                }, () -> {
                                                                                                    otherPossibleVerifications
                                                                                                })))
                                                                                            }(__cond_90 = myCurrentRole;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_90),
                                                                                                () -> {
                                                                                                    (__lhs_0_223) -> {
                                                                                                        __helios__error(__helios__string____add(__helios__string____add("this block had been run by spendDgt, but
", "... it's much cheaper to let the MintDgt do it ...
"), "... since it's already involved anyway"))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_90),
                                                                                                        () -> {
                                                                                                            (__lhs_0_197) -> {
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a queued change to duplicate any other pending entry for the same delegate name", false, (), false, (), false, ()), isNotADuplicate = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4))((pdChange_2) -> {
                                                                                                                    __cond_91 = pdChange_2;
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_91),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_198) -> {
                                                                                                                                __lhs_0_0_3 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_198);
                                                                                                                                pendingRole = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_3);
                                                                                                                                __cond_92 = pendingRole;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_92),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_199) -> {
                                                                                                                                            changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_199);
                                                                                                                                            __helios__string____neq(changingDgtName, newDgtRoleName)
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__62) -> {
                                                                                                                                            __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_92)
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__61) -> {
                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(__cond_91)
                                                                                                                });
                                                                                                                __core__chooseUnit(__helios__assert(isNotADuplicate, __helios__string____add("already has a pending change for this delegate: ", newDgtRoleName)), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                (possibleReplacementIsCorrect) -> {
                                                                                                                    __helios__bool__and(() -> {
                                                                                                                        __helios__bool__and(() -> {
                                                                                                                            true
                                                                                                                        }, () -> {
                                                                                                                            isNotADuplicate
                                                                                                                        })
                                                                                                                    }, () -> {
                                                                                                                        possibleReplacementIsCorrect
                                                                                                                    })
                                                                                                                }(__cond_93 = action;
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_93),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_221) -> {
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow an Add for an existing policy name", false, (), false, (), false, ()), __core__chooseUnit(__cond_100 = existingRoleEntryMaybe;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_100),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_222) -> {
                                                                                                                                        __helios__error(__helios__string____add("queuing Add failed: already has a delegate for policy name: ", newDgtRoleName))
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__67) -> {
                                                                                                                                        ()
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_100), true))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_93),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_202) -> {
                                                                                                                                    replacesDgt = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt(__lhs_0_202);
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("For Replace on an existing delegate... ", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: invariants cannot be replaced", false, (), false, (), false, ()), __core__chooseUnit(__cond_99 = role_2;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_99),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_220) -> {
                                                                                                                                                __helios__error("cannot Replace role: MintInvariant")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_99),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_219) -> {
                                                                                                                                                        __helios__error("cannot Replace role: SpendInvariant")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_99),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_218) -> {
                                                                                                                                                                __helios__error("HandledByCapoOnly role is not applicable in delegate context")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__66) -> {
                                                                                                                                                                __helios__print("  -- ok (not trying to replace an invariant)")
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(__cond_99), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- doesn't allow a Replace if the policy-name doesn't already exist", false, (), false, (), false, ()), (existingDgtLink_1) -> {
                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: the PendingDelegateAction's role + replacesDgt must match the existing delegate's authority token", false, (), false, (), false, ()), (existingDgTkn) -> {
                                                                                                                                            __core__chooseUnit(__helios__assert(__helios__assetclass____eq(replacesDgt, __helios__option[__helios__assetclass]__unwrap(existingDgTkn)()), __helios__string____add(__helios__string____add(__helios__string____add("the current ", __cond_98 = role_2;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_98),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_217) -> {
                                                                                                                                                        "mint"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_98),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_216) -> {
                                                                                                                                                                "spend"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_98),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_215) -> {
                                                                                                                                                                        "dgDataPolicy"
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_98),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_214) -> {
                                                                                                                                                                                "named"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__65) -> {
                                                                                                                                                                                "\u2039incontheeiieivable\u203A"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_98)), " delegate's authority token doesn't match the queued action's token name "), __helios__assetclass__show(replacesDgt)())), true)
                                                                                                                                        }(__cond_97 = role_2;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_97),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_213) -> {
                                                                                                                                                    __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_97),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_212) -> {
                                                                                                                                                            __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_97),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_211) -> {
                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: dgDataPolicy: the named policy must be present in the Capo manifest", false, (), false, (), false, ()), __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1))))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_97),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_210) -> {
                                                                                                                                                                            __helios__error("unreachable: OtherNamedDgt deprecated")
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_97),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_209) -> {
                                                                                                                                                                                    __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_97),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_208) -> {
                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_97),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_207) -> {
                                                                                                                                                                                                    __helios__error("unreachable")
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_206) -> {
                                                                                                                                                                                                    __helios__error("unreachable")
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        )()
                                                                                                                                                                                    }
                                                                                                                                                                                )()
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()
                                                                                                                                            }
                                                                                                                                        )()(__cond_97)))
                                                                                                                                    }(__cond_95 = existingRoleEntryMaybe;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_95),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_205) -> {
                                                                                                                                                __helios__error(__helios__string____add("queuing Replace failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_203) -> {
                                                                                                                                                __lhs_0_0_4 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_203);
                                                                                                                                                entryType_2 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_4);
                                                                                                                                                __cond_96 = entryType_2;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_96),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_204) -> {
                                                                                                                                                            existingDgtLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_204);
                                                                                                                                                            existingDgtLink
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__64) -> {
                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_96)
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_95))))))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_200) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove if the policy-name doesn't already exist", false, (), false, (), false, ()), __core__chooseUnit(__cond_94 = existingRoleEntryMaybe;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_94),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_201) -> {
                                                                                                                                                __helios__error(__helios__string____add("queuing Remove failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__63) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_94), __helios__error("unreachable: Remove not yet supported")))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(__cond_93))))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__60) -> {
                                                                                                                __helios__error("unreachable")
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(__cond_90))
                                                                                        }(__cond_83 = myCurrentRole;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_83),
                                                                                            () -> {
                                                                                                (__lhs_0_196) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_83),
                                                                                                    () -> {
                                                                                                        (__lhs_0_180) -> {
                                                                                                            __helios__bool__and(() -> {
                                                                                                                __module__StellarHeliosHelpers__bREQT("(general) the mintDgt checks everything about the mint", false, (), false, (), false, ())
                                                                                                            }, () -> {
                                                                                                                __cond_84 = action;
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_84),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_188) -> {
                                                                                                                            __core__chooseUnit(__cond_89 = role_2;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_89),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_195) -> {
                                                                                                                                        __helios__error("cannot Remove role: MintDgt")
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_89),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_194) -> {
                                                                                                                                                __helios__error("cannot Remove role: SpendDgt")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_89),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_193) -> {
                                                                                                                                                        __helios__error("cannot Remove role: MintInvariant")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_89),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_192) -> {
                                                                                                                                                                __helios__error("cannot Remove role: SpendInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_89),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_191) -> {
                                                                                                                                                                        __helios__assert(false, "todo")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_89),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_190) -> {
                                                                                                                                                                                __helios__assert(false, "todo")
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_89),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_189) -> {
                                                                                                                                                                                        __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__59) -> {
                                                                                                                                                                                        ()
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()
                                                                                                                                }
                                                                                                                            )()(__cond_89), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove to duplicate an Add or Replace or Remove entry", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("^^^"), __core__chooseUnit(__helios__assert(false, "what else should be checked here?"), false))))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        (__56) -> {
                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                false,
                                                                                                                                () -> {
                                                                                                                                    __helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't")
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    }()
                                                                                                                                }
                                                                                                                            )(), mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                            dgTknName = mkTokenName_2(purpose_3);
                                                                                                                            mintedDgTkn = __helios__bool__and(() -> {
                                                                                                                                __module__StellarHeliosHelpers__bREQT("the new delegate is created with the indicated authority token", false, (), false, (), false, ())
                                                                                                                            }, () -> {
                                                                                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_5, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, (), false, (), true, false, false, (), false, ())
                                                                                                                            });
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new policy-token must match the seed", false, (), false, (), false, ()), (dgtLink_2) -> {
                                                                                                                                __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2), dgTknName), __helios__string____add(__helios__string____add(__helios__string____add("uutName mismatch; expected ", dgTknName), " but found "), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2))), delegateTakesOwnership = __module__StellarHeliosHelpers__bREQT("the new policy-delegate-script must take ownership of the dgTkn", true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()), false, (), false, ());
                                                                                                                                (possibleExtraReplacementCheck) -> {
                                                                                                                                    __helios__bool__and(() -> {
                                                                                                                                        __helios__bool__and(() -> {
                                                                                                                                            mintedDgTkn
                                                                                                                                        }, () -> {
                                                                                                                                            delegateTakesOwnership
                                                                                                                                        })
                                                                                                                                    }, () -> {
                                                                                                                                        possibleExtraReplacementCheck
                                                                                                                                    })
                                                                                                                                }(__cond_86 = action;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_86),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_183) -> {
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Replace: the queued change must match the idPrefix of the current delegate ", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VALIDATE this through a unit-test ^"), __core__chooseUnit(__cond_87 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_87),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_185) -> {
                                                                                                                                                        dde = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_185);
                                                                                                                                                        __lhs_0_186 = dde;
                                                                                                                                                        entryType_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_186);
                                                                                                                                                        __cond_88 = entryType_1;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_88),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_187) -> {
                                                                                                                                                                    idPrefix_7 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_187);
                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("expects the queued idPrefix to match the existing policy's idPrefix", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add("   -- expected: ", idPrefix_7)), __core__chooseUnit(__helios__print(__helios__string____add("   --   actual: ", pendingActionIdPrefix)), __helios__assert(__helios__string____eq(idPrefix_7, pendingActionIdPrefix), "idPrefix mismatch"))))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__58) -> {
                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_88)
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_184) -> {
                                                                                                                                                        __helios__error(__helios__string____add("no existing dgDataPolicy found with key: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_87), true)))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__57) -> {
                                                                                                                                            true
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_86)))
                                                                                                                            }(__cond_85 = OdgtLink;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_85),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_182) -> {
                                                                                                                                        __helios__error("missing required delegate link in pending dgt change")
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_181) -> {
                                                                                                                                        dl = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_181);
                                                                                                                                        dl
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_85))))
                                                                                                                        }
                                                                                                                    }
                                                                                                                )()(__cond_84)
                                                                                                            })
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__55) -> {
                                                                                                            __helios__error("unreachable")
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()(__cond_83))
                                                                                    }))))
                                                                                }(__cond_82 = role_2;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_82),
                                                                                    () -> {
                                                                                        (__lhs_0_179) -> {
                                                                                            dgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_179);
                                                                                            dgtName
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__54) -> {
                                                                                            __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_82))))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_63),
                                                                                () -> {
                                                                                    (__lhs_0_176) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement removePendDgt"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("allows the removal of a queued pending-delegate-change that can't be completed", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(false, "not yet implemented"), false)))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_63),
                                                                                        () -> {
                                                                                            (__lhs_0_153) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... To commit pending changes:", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariants cannot be replaced", false, (), false, (), false, ()), pendingChangesList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                previousManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData_1);
                                                                                                __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                                    __module__StellarHeliosHelpers__bREQT("the next-changes list must be empty", false, (), false, (), false, ())
                                                                                                }, () -> {
                                                                                                    __helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_1)), 0)
                                                                                                }), "pendingChanges must be emptied"), spendDgtCheck = __core__ifThenElse(
                                                                                                    __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                                    () -> {
                                                                                                        true
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                () -> {
                                                                                                                    true
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    () -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...spendDgt: validates that all the pending delegates are installed", false, (), false, (), false, ()), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]](pendingChangesList)((prevManifestRemainder_1, nextCMEs, pcChange) -> {
                                                                                                                            (pdChange) -> {
                                                                                                                                (pendingTypeName) -> {
                                                                                                                                    __core__chooseUnit(__cond_71 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_71),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_162) -> {
                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Remove: verifies that the delegate queued for removal is now removed from the Capo manifest", false, (), false, (), false, ()), __cond_74 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(nextCMEs)(pendingTypeName);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_74),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_163) -> {
                                                                                                                                                            __helios__error(__helios__string____add("queued Remove failed: name still present in next-manifest item: ", pendingTypeName))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__50) -> {
                                                                                                                                                            ()
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_74))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__47) -> {
                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- verifies that added & replaced entries are present in the updated map (at its next position)", false, (), false, (), false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                    __helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(nextCMEs), 0),
                                                                                                                                                    () -> {
                                                                                                                                                        __helios__error("queued Add/Replace failed: no more items in next-manifest map")
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        () -> {
                                                                                                                                                            ()
                                                                                                                                                        }()
                                                                                                                                                    }
                                                                                                                                                )(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head(nextCMEs)((CME_key, __lhs_1) -> {
                                                                                                                                                    ME_type = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_1);
                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("vv @CME entry: ", CME_key)), __lhs_0_158 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                    ME_policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_158);
                                                                                                                                                    ME_idPrefix = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_158);
                                                                                                                                                    refCount = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_158);
                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support minting multiple threads of a dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__int____eq(refCount, 1), "refCount must be 1 when adding a new dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__string____eq(pendingTypeName, CME_key), "queued change: name mismatch with next-manifest item"), ME_name = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(ME_policyLink))();
                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("    -- ME policy link ", ME_name)), pendingLink = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange))();
                                                                                                                                                    pendingName = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(pendingLink))();
                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("    -- pdChange policy link ", pendingName)), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(ME_policyLink, pendingLink), "queued change: policyLink mismatch with next-manifest item"), (nextIdPrefix) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- @each manifest entry: next-manifest's idPrefix must match the queued change", false, (), false, (), false, ()), __helios__assert(__helios__string____eq(nextIdPrefix, ME_idPrefix), "idPrefix mismatch with next-manifest's dgDataPolicy"))
                                                                                                                                                    }(__cond_72 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_72),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_160) -> {
                                                                                                                                                                idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_160);
                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- Replace: verifies that the next-manifest no longer has the replaced entry", false, (), false, (), false, ()), __core__chooseUnit(__cond_73 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))(pendingTypeName);
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_73),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_161) -> {
                                                                                                                                                                            __helios__error(__helios__string____add("queued Replace failed: duplicate name remaining in next-manifest map: ", pendingTypeName))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__49) -> {
                                                                                                                                                                            ()
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_73), idPrefix_6))
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_72),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_159) -> {
                                                                                                                                                                        idPrefix_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_159);
                                                                                                                                                                        idPrefix_5
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__48) -> {
                                                                                                                                                                        __helios__error("unreachable")
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_72)))))))))
                                                                                                                                                })))
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_71), __cond_70 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_70),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_157) -> {
                                                                                                                                                (callback_18) -> {
                                                                                                                                                    callback_18(prevManifestRemainder_1, __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__46) -> {
                                                                                                                                                (callback_17) -> {
                                                                                                                                                    callback_17(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(prevManifestRemainder_1)(pendingTypeName), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_70))
                                                                                                                                }(__cond_69 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange);
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_69),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_156) -> {
                                                                                                                                            typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_156);
                                                                                                                                            __core__chooseUnit(__helios__print("  -- ok: DgDataPolicy in commitPendingChanges"), typeName_4)
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__45) -> {
                                                                                                                                            __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_69))
                                                                                                                            }(__cond_68 = pcChange;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_68),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_155) -> {
                                                                                                                                        dgtChange = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_155);
                                                                                                                                        dgtChange
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_154) -> {
                                                                                                                                        __helios__error("otherManifestChange not yet supported")
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_68))
                                                                                                                        }, previousManifest, nextManifest)((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(nextManifestRemainder, prevManifestRemainder)
                                                                                                                        }))
                                                                                                                    }()
                                                                                                                }
                                                                                                            )()
                                                                                                        }()
                                                                                                    }
                                                                                                )();
                                                                                                mintDgtCheck = __core__ifThenElse(
                                                                                                    __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                                    () -> {
                                                                                                        true
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... mintDgt: validates that all the removed dgTkns are burned", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the txn must have all the expected burns", false, (), false, (), false, ()), mint = __helios__value__to_map(__helios__tx__minted(__helios__scriptcontext__tx))();
                                                                                                                    mintThisPolicy = __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe(mint)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1));
                                                                                                                    len = __helios__int____sub(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(mint), 1);
                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                        __helios__int____gt(len, 1),
                                                                                                                        () -> {
                                                                                                                            __core__chooseUnit(__helios__print(__helios__value__show(__helios__tx__minted(__helios__scriptcontext__tx))(false, ())), __helios__error(__helios__string____add("currently supporting only one minting policy being burned in the tx ", __helios__int__show(len)())))
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            () -> {
                                                                                                                                ()
                                                                                                                            }()
                                                                                                                        }
                                                                                                                    )(), (observedTokenBurn) -> {
                                                                                                                        remainingMint = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]](pendingChangesList)((foldingBurn, pcChange_1) -> {
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS the spendDgt to check details of Replace activities", false, (), false, (), false, ()), (pdChange_1) -> {
                                                                                                                                __cond_77 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange_1);
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_77),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_168) -> {
                                                                                                                                            typeName_5 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_168);
                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("  -- ok: DgDataPolicy in commitPendingChanges: ", typeName_5)), __cond_78 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_78),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_175) -> {
                                                                                                                                                        foldingBurn
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__52) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that a delegate queued for removal or replacement is burned", false, (), false, (), false, ()), __cond_79 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest)(typeName_5);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_79),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_174) -> {
                                                                                                                                                                    __helios__error(__helios__string____add("queued Remove failed: not present in previous-manifest map: ", typeName_5))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_169) -> {
                                                                                                                                                                    __lhs_0_0_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_169);
                                                                                                                                                                    ME_type_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_1);
                                                                                                                                                                    tn_6 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0_1);
                                                                                                                                                                    mph_29 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0_1);
                                                                                                                                                                    __cond_80 = mph_29;
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __helios__option[__helios__mintingpolicyhash]__some____is(__cond_80),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_173) -> {
                                                                                                                                                                                __core__chooseUnit(__helios__print("    -- TODO: manifest entry with other-mph: allow optional burn"), foldingBurn)
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__53) -> {
                                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("each pending change must have a name recognized by the manifest", false, (), false, (), false, ()), __lhs_0_170 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                                                refCount_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_170);
                                                                                                                                                                                tnStr_2 = __helios__bytearray__decode_utf8_safe(tn_6)();
                                                                                                                                                                                __cond_81 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn)(tn_6);
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __helios__option[__helios__int]__none____is(__cond_81),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_172) -> {
                                                                                                                                                                                            __helios__error(__helios__string____add("queued Remove/Replace failed: no burn, or double-burn: ", tnStr_2))
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_171) -> {
                                                                                                                                                                                            burningCount = __helios__option[__helios__int]__some__some(__lhs_0_171);
                                                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    -- ok: BURN \u{1F525}", __helios__int__show(burningCount)()), "\xD7\u{1F4B4} "), tnStr_2)), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                                __helios__int____neq(__helios__int____sub(0, refCount_1), burningCount),
                                                                                                                                                                                                () -> {
                                                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("queued Remove/Replace failed: expected burn of ", __helios__int__show(refCount_1)()), "\xD7\u{1F4B4} "), tnStr_2))
                                                                                                                                                                                                },
                                                                                                                                                                                                () -> {
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        ()
                                                                                                                                                                                                    }()
                                                                                                                                                                                                }
                                                                                                                                                                                            )(), __helios__map[__helios__bytearray@__helios__int]__delete(foldingBurn)(tn_6)))
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                )()(__cond_81))
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    )()(__cond_80)
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_79))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_78))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__51) -> {
                                                                                                                                            __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_77)
                                                                                                                            }(__cond_76 = pcChange_1;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_76),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_167) -> {
                                                                                                                                        dgtChange_1 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_167);
                                                                                                                                        dgtChange_1
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_166) -> {
                                                                                                                                        __helios__error("otherManifestChange not yet supported")
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_76)))
                                                                                                                        }, observedTokenBurn);
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires all the burns of our policy-id to be accounted for", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(remainingMint), 0), __helios__string____add("extra burns found in the transaction: 
", __helios__map[__helios__bytearray@__helios__int]__show(remainingMint)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... -- end of commitPendingChanges", false, (), false, (), false, ()), true)))
                                                                                                                    }(__cond_75 = mintThisPolicy;
                                                                                                                    __core__ifThenElse(
                                                                                                                        __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is(__cond_75),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_165) -> {
                                                                                                                                minted = __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some(__lhs_0_165);
                                                                                                                                minted
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_164) -> {
                                                                                                                                __core__mkNilPairData(())
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(__cond_75)))))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )();
                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate)
                                                                                                    }, () -> {
                                                                                                        __helios__bool____not(__module__BasicDelegate__isSpendDelegate)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        __helios__error("unreachable? not mintDgt or spendDgt")
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        }()
                                                                                                    }
                                                                                                )(), __helios__bool__and(() -> {
                                                                                                    mintDgtCheck
                                                                                                }, () -> {
                                                                                                    spendDgtCheck
                                                                                                })))))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_63),
                                                                                                () -> {
                                                                                                    (__lhs_0_144) -> {
                                                                                                        manifestActivity = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity(__lhs_0_144);
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow updating anything except the manifest", false, (), false, (), false, ()), __core__chooseUnit(__cond_64 = manifestActivity;
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is(__cond_64),
                                                                                                            () -> {
                                                                                                                (__lhs_0_152) -> {
                                                                                                                    __core__chooseUnit(__helios__assert(false, "TODO: support retirement activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't remove a dgDataPolicy entry from the manifest (use queuePendingChange instead)", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("removes the indicated key from the manifest", false, (), false, (), false, ()), __module__StellarHeliosHelpers__REQT("delegates MUST be allowed to validate that this doesn't drop something they need", false, (), false, (), false, ()))))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is(__cond_64),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_151) -> {
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("if delegates need a hook to validate that the updte is acceptable, that might be enforced here"), __core__chooseUnit(__helios__assert(false, "TODO: support updatingEntry activity"), __module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, (), false, (), false, ())))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is(__cond_64),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_146) -> {
                                                                                                                                    key_31 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key(__lhs_0_146);
                                                                                                                                    tokenName_5 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName(__lhs_0_146);
                                                                                                                                    charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                                                                    nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, (), false, (), false, ()), refInput = __module__CapoHelpers__CapoCtx[]__delegatedDataRef(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_4)(false, (), true, tokenName_5);
                                                                                                                                    __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__txinput____eq(refInput, refInput))(__helios__string____add(__helios__string____add("  -- found refInput: ", __helios__bytearray__decode_utf8_safe(tokenName_5)()), "?")), "refInput must be found"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry MUST be found in the new manifest", false, (), false, (), false, ()), __core__chooseUnit(__cond_65 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_65),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_150) -> {
                                                                                                                                                __helios__error(__helios__string____add("the new manifest entry is missing: ", key_31))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_147) -> {
                                                                                                                                                __lhs_0_0 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_147);
                                                                                                                                                entryType = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0);
                                                                                                                                                tn_5 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0);
                                                                                                                                                mph_28 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0);
                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("   -- ok, found the manifest entry for ", key_31)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry must have the right token-name", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(tn_5, tokenName_5), "token-name mismatch"), __core__chooseUnit(__cond_67 = mph_28;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __helios__option[__helios__mintingpolicyhash]__some____is(__cond_67),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_149) -> {
                                                                                                                                                            __helios__error("other-mph not yet supported")
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__44) -> {
                                                                                                                                                            ()
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_67), __cond_66 = entryType;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is(__cond_66),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_148) -> {
                                                                                                                                                            __helios__print("   -- ok: matching name, with NamedTokenRef added in updatingManifest")
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__43) -> {
                                                                                                                                                            __helios__error("addingEntry: the new manifest entry must be a NamedTokenRef for now")
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_66)))))
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_65), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the manifest must be unchanged", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_3), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31)), "manifest modified in an unexpected way"), __helios__print("  -- ok! new manifest as expected")))))))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is(__cond_64),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_145) -> {
                                                                                                                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__assert(false, "TODO: support forkingThreadToken activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates that another copy of the token name is minted", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("when the key is a DgDataPolicy, the existing manifest entry is updated", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("for mint/spend delegates and otherNamedDelegates, a new manifest entry is created with refCount=1+newThreadCount, if it doesn't exist", false, (), false, (), false, ()), __module__StellarHeliosHelpers__REQT("when the manifest already has the entry, the refCount is incremented by newThreadCount", false, (), false, (), false, ())))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__42) -> {
                                                                                                                                            ()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )()(__cond_64), true))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_63),
                                                                                                        () -> {
                                                                                                            (__lhs_0_143) -> {
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, (), false, (), false, ()), __helios__error("the mint/spend delegate never is involved when the minter is instructed to force a new delegate"))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_142) -> {
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, (), false, (), false, ()), __helios__error("the mint/spend delegate never is involved when the spender is instructed to force a new delegate"))
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_63)
                                                        }, () -> {
                                                            __core__ifThenElse(
                                                                true,
                                                                () -> {
                                                                    __core__chooseUnit(__helios__print("BasicDelegate harness deferring to specialization for CapoLifecycleActivities
"), true)
                                                                },
                                                                () -> {
                                                                    () -> {
                                                                        false
                                                                    }()
                                                                }
                                                            )()
                                                        })
                                                    }(__cond_62 = neededRole;
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_62),
                                                        () -> {
                                                            (__lhs_0_141) -> {
                                                                __helios__error("delegate invoked with invalid escape-hatch activity (always handled directly by the Capo)")
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_62),
                                                                () -> {
                                                                    (__lhs_0_140) -> {
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on spend delegate", true, __module__BasicDelegate__isSpendDelegate, false, (), false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: spendDgt checking CapoLifecycleActivity"), neededRole)))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_62),
                                                                        () -> {
                                                                            (__lhs_0_139) -> {
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on mint delegate", true, __module__BasicDelegate__isMintDelegate, false, (), false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: mintDgt checking CapoLifecycleActivity"), neededRole)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_62),
                                                                                () -> {
                                                                                    (__lhs_0_138) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It EXPECTS the Capo to enforce the presence of the mintDgt (to check the right mint) and spendDgt (to validate the charter-update logic)", false, (), false, (), false, ()), __core__ifThenElse(
                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                            () -> {
                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                    () -> {
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            __helios__error(__helios__string____add("this Capo lifecycle activity is only valid on mint/spend delegate, not ", __module__BasicDelegate__delegateName))
                                                                                                        }()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )())
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__41) -> {
                                                                                        __helios__error("no way k")
                                                                                    }
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()(__cond_62)))))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_61),
                                                    () -> {
                                                        (__lhs_0_136) -> {
                                                            seed_4 = __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__seed(__lhs_0_136);
                                                            dDataTypeName_1 = __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_136);
                                                            __core__ifThenElse(
                                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                () -> {
                                                                    __helios__error("CreatingDelegatedData activity is only allowed in the mint delegate")
                                                                },
                                                                () -> {
                                                                    () -> {
                                                                        cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_3)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("context: CreatingDelegatedData", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- ensures the data-controller is invoked with its minting activity for the indicated recId", false, (), false, (), false, ()), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_3)(dDataTypeName_1, false, (), false, ());
                                                                        tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);
                                                                        purpose_2 = __helios__option[__helios__string]__unwrap(__module__CapoHelpers__DelegateInput[]__idPrefix(policyDelegateInput))();
                                                                        newDataId_1 = __helios__string__encode_utf8(tnFactory(purpose_2))();
                                                                        __helios__bool__and(() -> {
                                                                            __helios__bool__and(() -> {
                                                                                __helios__bool__and(() -> {
                                                                                    __helios__bool__and(() -> {
                                                                                        true
                                                                                    }, () -> {
                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_4, __core__mkCons(__helios__string____to_data(purpose_2), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())
                                                                                    })
                                                                                }, () -> {
                                                                                    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_3)(newDataId_1, dDataTypeName_1)
                                                                                })
                                                                            }, () -> {
                                                                                __module__StellarHeliosHelpers__bREQT("ensures the data-controller is invoked with ONE minting activity for the indicated recId", false, (), false, (), false, ())
                                                                            })
                                                                        }, () -> {
                                                                            __module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(policyDelegateInput)(seed_4))()
                                                                        }))))
                                                                    }()
                                                                }
                                                            )()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_61),
                                                            () -> {
                                                                (__lhs_0_135) -> {
                                                                    dDataTypeName = __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_135);
                                                                    recId_6 = __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__recId(__lhs_0_135);
                                                                    __core__ifThenElse(
                                                                        __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                        () -> {
                                                                            __helios__error("UpdatingDelegatedData activity is only allowed in the spend delegate")
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedData activity", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("implements a generic data-controller re-delegation convention based on the capo's manifest (those with type= DgDataPolicy)", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the data-controller is invoked with ONE spending activity for the indicated recId", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_2)(dDataTypeName, false, (), false, ()))(recId_6))(), "^^^ those can fail, this assert won't."), inputDD = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_2)(recId_6, false, ());
                                                                                __core__chooseUnit(__helios__assert(__helios__txinput____eq(inputDD, inputDD), "no way m"), __core__chooseUnit(__core__ifThenElse(
                                                                                    __helios__string____eq("settings", dDataTypeName),
                                                                                    () -> {
                                                                                        curSettingsId = __helios__option[__helios__bytearray]__unwrap(__module__CapoHelpers__CapoCtx[]__getSettingsId(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(true, true))();
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO(__helios__string____add("when updating the current Capo settings, the delegates must all ", "have a chance to ensure the settings are valid for their needs")), __core__ifThenElse(
                                                                                            false,
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bytearray____eq(curSettingsId, recId_6),
                                                                                                    () -> {
                                                                                                        __core__chooseUnit(__helios__print(" -> "), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings(cctx_2)(), "no way jose"), __helios__print(" <- ")))
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            recIdStr_4 = __helios__bytearray__decode_utf8_safe(recId_6)();
                                                                                                            curSettingsIdStr = __helios__bytearray__decode_utf8_safe(curSettingsId)();
                                                                                                            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  -- NOTE: updating ", recIdStr_4), ", which isn't currentSettings="), curSettingsIdStr))
                                                                                                        }()
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    ()
                                                                                                }()
                                                                                            }
                                                                                        )())
                                                                                    },
                                                                                    () -> {
                                                                                        () -> {
                                                                                            ()
                                                                                        }()
                                                                                    }
                                                                                )(), __helios__bool__and(() -> {
                                                                                    __helios__bool__trace(__module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_2)(recId_6, dDataTypeName))("  -- did output delegated data? ")
                                                                                }, () -> {
                                                                                    true
                                                                                }))))))))
                                                                            }()
                                                                        }
                                                                    )()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_61),
                                                                    () -> {
                                                                        (__lhs_0_133) -> {
                                                                            recId_5 = __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__recId(__lhs_0_133);
                                                                            __core__ifThenElse(
                                                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                () -> {
                                                                                    __helios__error("DeletingDelegatedData activity is only allowed in the mint delegate")
                                                                                },
                                                                                () -> {
                                                                                    () -> {
                                                                                        cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_1)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("this code is triggered by both the mintDgt and spendDgt, with each doing their parts of the job", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the spendDgt allows the spending of the utxo", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the mintDgt requires the burning of its UUT", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must not delete a record that's still referenced by the Capo manifest", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a matching manifest entry has to be changed or removed prior to deletion", false, (), false, (), false, ()), __lhs_0_134 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_1)(recId_5, false, ());
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("verify the input was found ^"), __core__chooseUnit(__helios__assert(false, "Delete not supported yet"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement the generic data-controller re-delegation convention here"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("ensure that the right delegate is consulted with its BurningActivities.*"), false))))))))))
                                                                                    }()
                                                                                }
                                                                            )()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities____is(__cond_61),
                                                                            () -> {
                                                                                (__lhs_0_132) -> {
                                                                                    true
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__ReqtsPolicy__DelegateActivity[]__MintingActivities____is(__cond_61),
                                                                                    () -> {
                                                                                        (__lhs_0_131) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__ReqtsPolicy__DelegateActivity[]__BurningActivities____is(__cond_61),
                                                                                            () -> {
                                                                                                (__lhs_0_130) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_129) -> {
                                                                                                    true
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()(__cond_61))
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )();
                result_8
            })
        }
    };
    __module__BasicDelegate__main = (mdd, activity_4) -> {
        __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(" \u{1F6A5}\u2753delegate: ", __module__BasicDelegate__delegateName), "
")), (result_9) -> {
            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("\u{1F6A5}\u{1F7E2} delegate: ", __module__BasicDelegate__delegateName), ": ok!
")), result_9)
        }(__cond_113 = mdd;
        __core__ifThenElse(
            __module__ReqtsData__DelegateDatum[]__capoStoredData____is(__cond_113),
            () -> {
                (__lhs_0_267) -> {
                    __helios__error("Data Delegates must never store the capoStoredData variant in the script; used only for data-structuring capo-stored utxo datum")
                }
            },
            () -> {
                __core__ifThenElse(
                    __module__ReqtsData__DelegateDatum[]__IsDelegation____is(__cond_113),
                    () -> {
                        (isD) -> {
                            dd_2 = __module__ReqtsData__DelegateDatum[]__IsDelegation__dd(isD);
                            __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __helios__int__serialize(__module__BasicDelegate__rev)()), "param/script-hash uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __module__BasicDelegate__instance), "param/script-hash uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __helios__string__encode_utf8(__module__BasicDelegate__delegateName)()), "param/script-hash uniqueness"), __core__chooseUnit(__module__StellarHeliosHelpers__logGroupUnit("delegate: spending dgTkn", true, false, true, () -> {
                                __helios__print(__helios__value__show(__helios__txinput__value(__helios__scriptcontext__get_current_input()))(false, ()))
                            }), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_2)))();
                            govAuthorityCheck = __core__ifThenElse(
                                __helios__bool____not(__module__BasicDelegate__isDgDataPolicy),
                                () -> {
                                    true
                                },
                                () -> {
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__requiresGovAuthority),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("\u{1F4DD} ", __module__BasicDelegate__delegateName), ": requiresGovAuthority is overridden to false in the delegate's .hlb.ts")), __core__chooseUnit(__helios__print("   -- the policy can still choose to situationally enforce gov-authority"), true))
                                            },
                                            () -> {
                                                () -> {
                                                    __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_7)())()
                                                }()
                                            }
                                        )()
                                    }()
                                }
                            )();
                            __helios__bool__and(() -> {
                                govAuthorityCheck
                            }, () -> {
                                __module__BasicDelegate__checkOneActivity_1(__module__BasicDelegate__checkOneActivity_1)(isD, activity_4, true, dd_2, true, cctx_7, true, __helios__string____add(__helios__string____add("delegate ", __module__BasicDelegate__delegateName), "'s overall policy"))
                            })))))
                        }
                    },
                    () -> {
                        (__76) -> {
                            kaboomInvalidRedeemer = () -> {
                                __helios__error("wrong Actvy/dtm")
                            };
                            __cond_114 = activity_4;
                            __core__ifThenElse(
                                __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_114),
                                () -> {
                                    (__lhs_0_266) -> {
                                        kaboomInvalidRedeemer()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_114),
                                        () -> {
                                            (__lhs_0_265) -> {
                                                kaboomInvalidRedeemer()
                                            }
                                        },
                                        () -> {
                                            (__77) -> {
                                                __module__ReqtsPolicy__DelegateActivity[]__otherDatumValidation(activity_4)(mdd)
                                            }
                                        }
                                    )()
                                }
                            )()(__cond_114)
                        }
                    }
                )()
            }
        )()(__cond_113)))
    };
    __core__ifThenElse(
        __module__BasicDelegate__main(__module__ReqtsData__DelegateDatum[]__from_data(__module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data_2)(__DATUM), __module__ReqtsPolicy__DelegateActivity[]__from_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__OtherActivities__is_valid_data_2)(__REDEEMER)),
        () -> {
            ()
        },
        () -> {
            __helios__error("validation returned false")
        }
    )()
}`, "optimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/reqts/ReqtsPolicy.hl", "src/CapoMintHelpers.hl", "src/StellarHeliosHelpers.hl", "src/delegation/CapoDelegateHelpers.hl"], "indices": "9f18730019061308188b011905c004188c011905c00419026b0218e6181b1903000019072c181f19034b00190732141903e802190124171905960219012e18281905b10219012e18381908dd0119018b182119090701190184183319090d0119017e182b190ab8011901d214190b0e01190230182d190b5d011902401846190b840119023d183b190ba60119023d182419102f011902d418391910f5011902b4183119116901190252182e19155a011901c918251916a0031901741826191701031901d0182b191702031901d0182b19179b0319021d181a1917b6031901f318201917cb031901f0183d1917d9031901f9182f191889031901f318411919ad0418cb0e1919c4031901ad181c191a7c001901c0184b191a9e001901c0184d191b850319012104191b890319012504191b99031901420a191b9a0319013e181a191bc40319013616191bcb031901291822191ca50019019e184b191cd60019019e184d191d19001907a510191dd0001907a51847191e120019078110191ece00190781184719205a001906040c1920c00019057c182e19210a001904d91519210b001904d915192270051901800c19236e05190178181b192386051901680b1923f5041901370aff", "variableNames": "", "termDescriptions": "a6191b85687365656454784964191b89686964784279746573191d1969636861727465724163191e126963686172746572416319210a683c7377697463683e19210b683c7377697463683e" }, "unoptimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/reqts/ReqtsPolicy.hl", "src/CapoMintHelpers.hl", "src/StellarHeliosHelpers.hl", "src/delegation/CapoDelegateHelpers.hl"], "indices": "9f1904310019019d1832190465001903450b19049b001905fa0819049f00190613081905bb011905c0041905bc011905c0041905ea01190581021905eb01190581021905ee01190582182e1905ef01190582182e1905f001190582091905f101190582041905f20119058218271905f40119058218271905f50119058218191905f70119058218191905f8011905820a190605011905be0a190608011905be1829190609011905be181a190712011905b4182219092101190128183e190a800118e8181b190aa30118e3181b190b360119018b1821190b60011901841833190b680119017e182b190b780119017a182c190bc4011901a21839190beb011901a6184d190c7a011901d214190cf201190230182d190d48011902401846190d55011902431835190d630119023d1824190d6b0119023d183b190ff70119034e1853191299011902ad184819132b011902d418391913b7011902ca1835191402011902b4183119145f01190252182e19146a01190251184319153a011903fc182819157301190404182019158201190405182519159901190407187619165b01190423186019174f0119040a182919176101190404182a1919f701190459182a191a4801190460182a191b46011904701845191b47011904701845191b6b011904801862191b79011904671844191bad011904861842191bb701190487182a191cac01190201183b191ce40119020a183a191d48011901c91825191d68011904ae183c191d89011904af1832191e54011904f7183c191e75011904f81833191eb7011905001834191f060119052c1841191f4601190522181c191f69011905331830191f76011905051841191f900119053b183c191fb10119053c183219202301190548181a19203c01190544184219229a0218e6181b19236202190124171923920219012e182819239c0219012e18381924360219012c185f1924410219012a1852192b260218690419315f03190174182619316103190175182b19319e031901b7081931a0031901b8081931c3031901b818211931ff031901cf08193208031901d0182b193209031901d0182b19328b0319021d181a1932900319021d121932af031901f318201932bd031901f0183d1932f2031901f9182f1933700319020418411933750319020a181c1933820319020c18541933880319020a18271933a1031901f31841193410031901ad1824193414031901ad181c19344d0319018f182b193638031901210419363c03190125041936420319013b0419364e031901420a19364f0319013e181a193676031901361828193681031901361119368303190136161936880319012918221936c503184a04193787031860181b193790031852183e1937de03184c181819388103182b0819388203182b081938a50019088508193a510019084b1819193a78001908361821193a7b001908341818193abb0019081f15193c14001907a510193c67001907a51847193cbd0019078110193d15001907811847193d240019072b1827193d260019072c181f193d6e0019073214193d98001907031858193dd50019070f14193de6001907101833193e240019071c10193ed20019066517193ed300190665182d193f6b00190655181c193f7b0019065710193fac0019064f1824193fc50019063f181f193fee0019063f1820193ff9001906391828193ffa0019063918411940150019062f1119405d00190612181c19409000190601181c1940d20019060918181940df001906040c1940ec001905f91818194128001905e10919412f001905df181d194148001905d6182019416e001905ce09194175001905cc181b1941b4001905a4091941b8001905a218671941da0019059a18381941e60019059c186219420f001905a6184c194218001905bb09194222001905b71519430800190575181e1943120019057c182e19432b0019057b1419432e0019057e182719433c0418b2182719434a0418b21219434d0418b414194396001905070b194397001905070b19439d00190509184c1943ef001904f9183f1943f1001904f818211943f2001904f81821194425001904d7181c19442f001904d915194430001904d915194575001903431019457b00190314181b19457c0019033f0619459b0019033d18271945b10019033e0f1945c500190329111945ec0019032e18411945fa00190332185619462500190338182d19464f001902960a19465e00190293182119465f00190293182119467100190298184919468400190299182419468f0019029b181b1946960019029c18411946a90019029d18551946be001902f9151946cf0019029f18301946d00019029f18301946d8001902ae111946ee001902a31838194709001902a61843194714001902a7184d194724001902a71845194767001902b3183b19476e001902b51852194780001902b51826194782001902b710194783001902e81862194796001902ec111947b1001902ed18511947c4001902f1111947f6001902bc181d19480e001902c2181d194826001902ca181d194852001902d2184419486f001902d61870194892001902d918431948a7001902de18571948d8001902f518311948f20019025b18191948fd0019025c184a1949060019028c182f19492000190268111949620019026d18581949690019026f184c1949770019026f182119497a00190281185b19498d0019028218601949a00019028318501949b3001902841868194a2b001902881830194a870019021f1856194a890019021e15194a8a0019021e15194a8e0019021f14194a930019021f0f194a9f0019021f1844194aa000190221184f194aa20019021f184e194aa30019021f184e194aaf00190222184c194ac600190222182b194ac70019022713194ad50019021417194ad60019021417194ad7001902151856194ad900190214182b194ada00190214182b194ade0019021514194ae3001902150f194aef001902151844194af400190215184e194af500190215184e194b070019020a1821194b23001901f51827194b260019020708194b280019020609194b3e001901fb1851194b49001901fb1849194b65001901fe1848194d34001901c413194d44001901c0184b194d49001901c01830194d4c001901c0184d194d950019019e184b194d9a0019019e1830194d9d0019019e184d195ffc051901800c19601b05190187183719602f051901830c19603c0519018d1519603f0519018d18351960410519018d18351960420519018d18301960450519018d18361960720519017218341960a40519017818291960a505190178181b1960c1051901680b1960d3051901650a1961810519014616196194051901411319619a0519013c185a1961da051901170a19762e05183104197a7e041901370a197aa50419013a12197c480418cb0e197c690418c71819197c9c0418a21835197c9e0418a30a197ca10418a30b197cc204188a1822197cf80418810f197d3904187014197d440418710d197d5204187313197d5304187004197dc304183f04197dc404183f04197dcd04184111197de804184614197e030418310e197e080418310a197e1604181e1822197e1704181e1822197e220418230dff", "variableNames": "b90e0400675f5f444154554d016a5f5f52454445454d455202695f5f434f4e54455854046f5f5f68656c696f735f5f6572726f72066f5f5f68656c696f735f5f7072696e7408775f5f68656c696f735f5f737472696e675f5f5f5f6164640a705f5f68656c696f735f5f6173736572740c755f5f68656c696f735f5f626f6f6c5f5f5f5f6e6f740e78195f5f68656c696f735f5f6279746561727261795f5f5f5f657110781a5f5f68656c696f735f5f6279746561727261795f5f5f5f6e65711278185f5f68656c696f735f5f696e745f5f5f5f746f5f646174611478185f5f68656c696f735f5f696e745f5f73657269616c697a6516781d5f5f68656c696f735f5f737472696e675f5f656e636f64655f757466381818765f5f68656c696f735f5f636f6d6d6f6e5f5f666f6c64181a781f5f5f68656c696f735f5f636f6d6d6f6e5f5f756e42446174615f5f73616665181c78215f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f6571181e755f5f68656c696f735f5f696e745f5f746f5f686578182078195f5f68656c696f735f5f6279746561727261795f5f73686f77182278215f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f73686f77182478215f5f68656c696f735f5f636f6d6d6f6e5f5f756e4d6170446174615f5f736166651826781f5f5f68656c696f735f5f636f6d6d6f6e5f5f756e49446174615f5f736166651828735f5f68656c696f735f5f626f6f6c5f5f616e64182a78195f5f68656c696f735f5f696e745f5f73686f775f6469676974182c735f5f68656c696f735f5f696e745f5f73686f77182e735f5f68656c696f735f5f7265616c5f5f4f4e451830755f5f68656c696f735f5f7265616c5f5f666c6f6f721832725f5f68656c696f735f5f696e745f5f6162731834735f5f68656c696f735f5f7265616c5f5f6162731836781a5f5f68656c696f735f5f696e745f5f73686f775f7061646465641838745f5f68656c696f735f5f696e745f5f5f5f6d6f64183a78195f5f68656c696f735f5f7265616c5f5f505245434953494f4e183c745f5f68656c696f735f5f7265616c5f5f73686f77183e78265f5f68656c696f735f5f737472696e675f5f70617273655f757466385f636f6e745f627974651840781f5f5f68656c696f735f5f737472696e675f5f69735f76616c69645f75746638184278255f5f68656c696f735f5f6279746561727261795f5f6465636f64655f757466385f736166651844755f5f68656c696f735f5f76616c75655f5f73686f771846781d5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c6473184878255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f30184a781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f31184c78195f5f68656c696f735f5f74786f75747075745f5f76616c7565184e78195f5f68656c696f735f5f7478696e7075745f5f6f7574707574185078185f5f68656c696f735f5f7478696e7075745f5f76616c75651852781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f301854781d5f5f68656c696f735f5f736372697074636f6e746578745f5f64617461185678205f5f68656c696f735f5f736372697074636f6e746578745f5f707572706f7365185878375f5f68656c696f735f5f736372697074636f6e746578745f5f6765745f7370656e64696e675f707572706f73655f6f75747075745f6964185a781c5f5f68656c696f735f5f7478696e7075745f5f6f75747075745f6964185c745f5f68656c696f735f5f74785f5f696e70757473185e781b5f5f68656c696f735f5f736372697074636f6e746578745f5f74781860782a5f5f68656c696f735f5f736372697074636f6e746578745f5f6765745f63757272656e745f696e7075741862725f5f68656c696f735f5f626f6f6c5f5f6f721864781b5f5f68656c696f735f5f737472696e675f5f5f5f746f5f646174611866755f5f68656c696f735f5f76616c75655f5f5a45524f1868745f5f68656c696f735f5f76616c75655f5f6e6577186a78185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f30186c78185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f31186e78185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f321870781e5f5f68656c696f735f5f6279746561727261795f5f5f5f746f5f64617461187278265f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f746f5f64617461187478195f5f68656c696f735f5f6173736574636c6173735f5f6e65771876745f5f68656c696f735f5f696e745f5f5f5f6e65671878735f5f68656c696f735f5f696e745f5f5f5f6571187a745f5f68656c696f735f5f76616c75655f5f676574187c78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f31187e78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f32188078255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f331882781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f341884745f5f68656c696f735f5f74785f5f6d696e746564188678255f5f68656c696f735f5f636f6d6d6f6e5f5f6173736572745f636f6e7374725f696e6465781888765f5f68656c696f735f5f737472696e675f5f5f5f6571188a765f5f68656c696f735f5f636f6d6d6f6e5f5f5f5f6571188c781a5f5f68656c696f735f5f6173736574636c6173735f5f5f5f6571188e745f5f68656c696f735f5f646174615f5f73686f77189078205f5f68656c696f735f5f646174615f5f73686f775f636f6e7374725f646174611892781a5f5f68656c696f735f5f646174615f5f73686f775f6669656c641894781a5f5f68656c696f735f5f646174615f5f73686f775f62646174611896781a5f5f68656c696f735f5f6173736574636c6173735f5f73686f771898775f5f68656c696f735f5f737472696e675f5f5f5f6e6571189a735f5f68656c696f735f5f696e745f5f5f5f6774189c745f5f68656c696f735f5f696e745f5f5f5f6e6571189e745f5f68656c696f735f5f696e745f5f5f5f73756218a0775f5f68656c696f735f5f76616c75655f5f746f5f6d617018a2765f5f68656c696f735f5f737472696e675f5f73686f7718a4745f5f68656c696f735f5f626f6f6c5f5f73686f7718a6755f5f68656c696f735f5f626f6f6c5f5f747261636518a8775f5f68656c696f735f5f7478696e7075745f5f5f5f657118aa781e5f5f68656c696f735f5f6279746561727261795f5f66726f6d5f6461746118ac781b5f5f68656c696f735f5f737472696e675f5f66726f6d5f6461746118ae78185f5f68656c696f735f5f636f6d6d6f6e5f5f6c656e67746818b078195f5f68656c696f735f5f636f6d6d6f6e5f5f6d61705f67657418b278215f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f7461675f657175616c7318b4755f5f68656c696f735f5f636f6d6d6f6e5f5f616c6c18b6781a5f5f68656c696f735f5f636f6d6d6f6e5f5f6964656e7469747918b8781f5f5f68656c696f735f5f6173736574636c6173735f5f5f5f746f5f6461746118ba781f5f5f68656c696f735f5f6173736574636c6173735f5f66726f6d5f6461746118bc78195f5f68656c696f735f5f646174615f5f66726f6d5f6461746118be78195f5f68656c696f735f5f626f6f6c5f5f66726f6d5f6461746118c078185f5f68656c696f735f5f696e745f5f66726f6d5f6461746118c2745f5f68656c696f735f5f696e745f5f5f5f6c657118c478195f5f68656c696f735f5f6475726174696f6e5f5f5f5f6c657118c6755f5f68656c696f735f5f74696d655f5f5f5f73756218c878195f5f68656c696f735f5f74696d655f5f66726f6d5f6461746118ca78185f5f68656c696f735f5f74696d6572616e67655f5f656e6418cc78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3418ce78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3518d078255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3618d2781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f3718d478185f5f68656c696f735f5f74785f5f74696d655f72616e676518d6781a5f5f68656c696f735f5f74696d6572616e67655f5f737461727418d878185f5f68656c696f735f5f6475726174696f6e5f5f484f555218da781d5f5f68656c696f735f5f74696d6572616e67655f5f636f6e7461696e7318dc745f5f68656c696f735f5f696e745f5f5f5f64697618de781a5f5f68656c696f735f5f6475726174696f6e5f5f5f5f6469763118e0781a5f5f68656c696f735f5f6475726174696f6e5f5f5345434f4e4418e2781f5f5f68656c696f735f5f74786f7574707574646174756d5f5f696e6c696e6518e4781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f3218e678195f5f68656c696f735f5f74786f75747075745f5f646174756d18e878225f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f73686f7718ea78245f5f68656c696f735f5f636f6d6d6f6e5f5f756e436f6e737472446174615f5f7361666518ec781b5f5f68656c696f735f5f6f7074696f6e5f5f534f4d455f46554e4318ee782b5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5f5f66726f6d5f646174615f7361666518f0781b5f5f68656c696f735f5f7374616b696e67686173685f5f73686f7718f2781a5f5f68656c696f735f5f646174615f5f73686f775f696461746118f478215f5f68656c696f735f5f7374616b696e6763726564656e7469616c5f5f73686f7718f678335f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5d5f5f73686f7718f8775f5f68656c696f735f5f616464726573735f5f73686f7718fa781b5f5f68656c696f735f5f74786f75747075745f5f6164647265737318fc781a5f5f68656c696f735f5f7478696e7075745f5f6164647265737318fe745f5f68656c696f735f5f74696d655f5f5f5f677419010078195f5f68656c696f735f5f76616c75655f5f6765745f7361666519010278195f5f68656c696f735f5f6173736574636c6173735f5f414441190104781d5f5f68656c696f735f5f76616c75655f5f6765745f6c6f76656c616365190106755f5f68656c696f735f5f74785f5f6f75747075747319010878185f5f68656c696f735f5f7478696e7075745f5f646174756d19010a781b5f5f68656c696f735f5f636f6d6d6f6e5f5f73657269616c697a6519010c775f5f68656c696f735f5f74785f5f73657269616c697a6519010e78185f5f68656c696f735f5f636f6d6d6f6e5f5f66696c746572190110781d5f5f68656c696f735f5f636f6d6d6f6e5f5f66696c7465725f6c697374190112781c5f5f68656c696f735f5f7478696e7075745f5f66726f6d5f64617461190114781d5f5f68656c696f735f5f646174615f5f69735f76616c69645f64617461190116781f5f5f68656c696f735f5f737472696e675f5f69735f76616c69645f6461746119011878225f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f6461746119011a781f5f5f68656c696f735f5f74786f757470757469645f5f66726f6d5f6461746119011c78245f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f636f6e7374725f646174615f3219011e782f5f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f646174615f66697865645f6c656e677468190120781d5f5f68656c696f735f5f747869645f5f69735f76616c69645f64617461190122781c5f5f68656c696f735f5f696e745f5f69735f76616c69645f6461746119012478235f5f68656c696f735f5f74786f757470757469645f5f69735f76616c69645f6461746119012678195f5f68656c696f735f5f74696d655f5f5f5f746f5f6461746119012878195f5f68656c696f735f5f626f6f6c5f5f5f5f746f5f6461746119012a78185f5f68656c696f735f5f74696d6572616e67655f5f6e657719012c745f5f68656c696f735f5f696e745f5f5f5f61646419012e755f5f68656c696f735f5f74696d655f5f5f5f616464190130745f5f68656c696f735f5f696e745f5f5f5f6d756c19013278195f5f68656c696f735f5f6475726174696f6e5f5f5f5f6d756c190134775f5f68656c696f735f5f6475726174696f6e5f5f44415919013678285f5f68656c696f735f5f636f6d6d6f6e5f5f6d5374727563745f6669656c645f696e7465726e616c190138781f5f5f68656c696f735f5f636f6d6d6f6e5f5f6d5374727563745f6669656c6419013a78245f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6d5374727563745f6669656c6419013c781d5f5f68656c696f735f5f74696d655f5f69735f76616c69645f6461746119013e78205f5f68656c696f735f5f76616c75655f5f636f6e7461696e735f706f6c696379190140781e5f5f68656c696f735f5f76616c75655f5f69735f7a65726f5f696e6e657219014278185f5f68656c696f735f5f76616c75655f5f69735f7a65726f190144781c5f5f68656c696f735f5f636f6d6d6f6e5f5f66696c7465725f6d6170190146781b5f5f68656c696f735f5f76616c75655f5f6765745f61737365747319014878195f5f68656c696f735f5f76616c75655f5f66726f6d5f6d617019014a78225f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f6e657119014c781b5f5f68656c696f735f5f76616c75655f5f6765745f706f6c69637919014e78225f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d61705f696e74190150781d5f5f68656c696f735f5f76616c75655f5f6765745f6d61705f6b657973190152755f5f68656c696f735f5f636f6d6d6f6e5f5f616e7919015478265f5f68656c696f735f5f636f6d6d6f6e5f5f69735f696e5f6279746561727261795f6c69737419015678185f5f68656c696f735f5f636f6d6d6f6e5f5f636f6e636174190158781f5f5f68656c696f735f5f76616c75655f5f6d657267655f6d61705f6b65797319015a78265f5f68656c696f735f5f76616c75655f5f6164645f6f725f73756274726163745f696e6e657219015c781e5f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d617019015e78205f5f68656c696f735f5f76616c75655f5f6164645f6f725f7375627472616374190160765f5f68656c696f735f5f76616c75655f5f5f5f616464190162755f5f68656c696f735f5f636f6d6d6f6e5f5f6d6170190164781a5f5f68656c696f735f5f76616c75655f5f5f5f746f5f64617461190166765f5f68656c696f735f5f76616c75655f5f76616c7565190168781a5f5f68656c696f735f5f76616c75655f5f66726f6d5f6461746119016a78225f5f68656c696f735f5f636f6d6d6f6e5f5f696e736572745f696e5f736f7274656419016c765f5f68656c696f735f5f636f6d6d6f6e5f5f736f727419016e78265f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f66726f6d5f6461746119017078195f5f68656c696f735f5f6279746561727261795f5f5f5f6c74190172725f5f68656c696f735f5f696e745f5f6d617819017478215f5f68656c696f735f5f636f6d6d6f6e5f5f736c6963655f627974656172726179190176781a5f5f68656c696f735f5f6279746561727261795f5f736c696365190178781c5f5f68656c696f735f5f6279746561727261795f5f626c616b65326219017a781b5f5f68656c696f735f5f6279746561727261795f5f6c656e67746819017c781a5f5f68656c696f735f5f6279746561727261795f5f5f5f61646419017e78195f5f68656c696f735f5f747869645f5f73657269616c697a65190180781b5f5f68656c696f735f5f74786f757470757469645f5f696e646578190182781b5f5f68656c696f735f5f74786f757470757469645f5f74785f696419018478255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3719018678255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f38190188781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f3919018a775f5f68656c696f735f5f74785f5f72656465656d65727319018c78275f5f68656c696f735f5f736372697074707572706f73655f5f7370656e64696e675f5f5f5f697319018e781a5f5f68656c696f735f5f74786f757470757469645f5f5f5f6571190190782c5f5f68656c696f735f5f736372697074707572706f73655f5f7370656e64696e675f5f6f75747075745f696419019278225f5f68656c696f735f5f736372697074707572706f73655f5f5f5f746f5f64617461190194745f5f68656c696f735f5f747869645f5f73686f77190196781a5f5f68656c696f735f5f74786f757470757469645f5f73686f7719019878185f5f68656c696f735f5f74785f5f7265665f696e7075747319019a775f5f68656c696f735f5f616464726573735f5f5f5f657119019c781b5f5f68656c696f735f5f737472696e675f5f73657269616c697a6519019e781d5f5f68656c696f735f5f74786f75747075745f5f66726f6d5f646174611901a0765f5f68656c696f735f5f6f7074696f6e5f5f4e4f4e451901a2781b5f5f68656c696f735f5f6f7074696f6e5f5f4e4f4e455f46554e431901a478235f5f68656c696f735f5f6279746561727261795f5f66726f6d5f646174615f736166651901a6781d5f5f68656c696f735f5f696e745f5f66726f6d5f646174615f736166651901a878275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f301901aa78205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f311901ac78205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f301901ae781b5f5f68656c696f735f5f7374727563745f5f5f5f746f5f646174611901b0765f5f68656c696f735f5f7374727563745f5f5f5f65711901b2781e5f5f68656c696f735f5f76616c75655f5f636f6d706172655f696e6e65721901b478185f5f68656c696f735f5f76616c75655f5f636f6d706172651901b6765f5f68656c696f735f5f76616c75655f5f5f5f6765711901b878195f5f68656c696f735f5f76616c75655f5f636f6e7461696e731901ba781e5f5f68656c696f735f5f74786f75747075745f5f73756d5f76616c7565731901bc781c5f5f68656c696f735f5f74785f5f66696c7465725f6f7574707574731901be781d5f5f68656c696f735f5f616464726573735f5f63726564656e7469616c1901c0782a5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f69735f76616c696461746f721901c2781d5f5f68656c696f735f5f76616c696461746f72686173685f5f5f5f65711901c478225f5f68656c696f735f5f76616c696461746f72686173685f5f66726f6d5f646174611901c6782d5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f76616c696461746f725f5f686173681901c8782d5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f76616c696461746f725f5f636173741901ca78205f5f68656c696f735f5f74786f75747075745f5f69735f6c6f636b65645f62791901cc781f5f5f68656c696f735f5f74785f5f6f7574707574735f6c6f636b65645f62791901ce781d5f5f68656c696f735f5f74785f5f76616c75655f6c6f636b65645f62791901d078225f5f68656c696f735f5f74786f7574707574646174756d5f5f73657269616c697a651901d278205f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f5f5f69731901d478225f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f6669656c64731901d6781f5f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f7461671901d878275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f311901da78275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f321901dc78275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f331901de78205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f341901e078205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f331901e278205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f321901e4781b5f5f68656c696f735f5f7374727563745f5f73657269616c697a651901e678215f5f68656c696f735f5f74786f75747075745f5f69735f76616c69645f646174611901e878205f5f68656c696f735f5f7478696e7075745f5f69735f76616c69645f646174611901ea781c5f5f68656c696f735f5f7478696e7075745f5f5f5f746f5f646174611901ec781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f361901ee781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f351901f0781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f331901f2782a5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f69735f76616c69645f646174611901f478265f5f68656c696f735f5f76616c696461746f72686173685f5f69735f76616c69645f646174611901f678235f5f68656c696f735f5f7075626b6579686173685f5f69735f76616c69645f646174611901f8782b5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f69735f76616c69645f646174611901fa78255f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6c6973745f686561645f646174611901fc78245f5f68656c696f735f5f7374616b696e67686173685f5f69735f76616c69645f646174611901fe78215f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6c6973745f656d707479190200782a5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5f5f69735f76616c69645f64617461190202783c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5d5f5f69735f76616c69645f6461746119020478205f5f68656c696f735f5f616464726573735f5f69735f76616c69645f64617461190206781d5f5f68656c696f735f5f76616c696461746f72686173685f5f73686f77190208781b5f5f68656c696f735f5f636f6d6d6f6e5f5f66696e645f7361666519020a78225f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f5f5f657119020c78225f5f68656c696f735f5f76616c696461746f72686173685f5f5f5f746f5f6461746119020e782b5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f6e65775f76616c696461746f72190210782d5f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f646174615f6d61785f6c656e67746819021278235f5f68656c696f735f5f6173736574636c6173735f5f69735f76616c69645f64617461190214781d5f5f68656c696f735f5f646174615f5f6d6170646174615f5f5f5f697319021678225f5f68656c696f735f5f736372697074707572706f73655f5f66726f6d5f646174611902186d6c6f6747726f7570537461727419021a6b6c6f6747726f7570456e6419021c6d656d707479556e697446756e6319021e686c6f6747726f75701902206c6c6f6747726f7570556e697419022264544f444f19022464524551541902266562524551541902286e5245515467726f7570537461727419022a6a625245515467726f757019022c6d5245515467726f7570556e697419022e646d6b547619023078285f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f74786f75747075745d5f5f66696e6419023278635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f6c656e67746819023478385f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f6c656e67746819023678485f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f69735f76616c69645f646174615f696e7465726e616c190238783b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f66726f6d5f6461746119023a783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f67657419023c783f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f66696e645f6b657919023e756d75737446696e64496e70757452656465656d657219024078385f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f69735f76616c69645f6461746119024278345f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f66726f6d5f64617461190244782d5f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f6964190246782f5f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f7479706519024878245f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f6865616419024a7066726f6d43697036385772617070657219024c78495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f69735f76616c69645f6461746119024e78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f66726f6d5f64617461190250784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f5f5f697319025278585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f646174615f32190254784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f7365656419025678505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f707572706f7365190258784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f5f5f697319025a78555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f646174615f3219025c78545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f5f5f697319025e785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f646174615f3219026078385f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5f5f746f5f64617461190262783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f69735f76616c69645f6461746119026478385f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f66726f6d5f64617461190266783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f5f5f697319026878475f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f646174615f3219026a783d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f5f5f6e657719026c783d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f5f5f697319026e78485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f646174615f32190270783e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f5f5f6e657719027278425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f5f5f6973190274784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f646174615f3219027678435f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f5f5f6973190278784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f646174615f3219027a78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f5f5f697319027c784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f3219027e78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f6e616d6519028078425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f5f5f6e657719028278425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f5f5f6973190284784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f646174615f3219028678485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f5f5f697319028878535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f646174615f3219028a78495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f5f5f6e657719028c78465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f5f5f697319028e78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f646174615f3219029078405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f69735f76616c69645f64617461190292783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f66726f6d5f6461746119029478465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f5f5f697319029678515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f646174615f3219029878465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f5f5f697319029a78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f646174615f3219029c78445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f5f5f697319029e784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f646174615f321902a078435f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f6b65791902a278495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f746f6b656e4e616d651902a4784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f5f5f69731902a678565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f321902a878565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f321902aa78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f69735f76616c69645f646174611902ac78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f66726f6d5f646174611902ae78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f5f5f69731902b0784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f646174615f321902b278415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f736565641902b478445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f707572706f73651902b678455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69645072656669781902b878445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f5f5f69731902ba784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f646174615f321902bc78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f5f5f69731902be78505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f646174615f321902c078455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f736565641902c278485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f707572706f73651902c478495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69645072656669781902c6784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f7265706c616365734467741902c8783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f5f5f65711902ca78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f69735f76616c69645f646174611902cc78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f66726f6d5f646174611902ce784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f5f5f69731902d078595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f646174615f321902d2784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f736565641902d478515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f707572706f73651902d678505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f5f5f69731902d8785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f646174615f321902da78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f5f5f69731902dc785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f646174615f321902de78525f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f5f5f69731902e0785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f646174615f321902e278555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f5f5f69731902e478605f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174615f321902e678545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f5f5f69731902e8785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174615f321902ea784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f5f5f69731902ec78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f646174615f321902ee78525f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f61637469766974791902f0784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f69735f76616c69645f646174611902f278265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f6a6f696e1902f4784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f66726f6d5f646174611902f678695f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f321902f878625f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f5f5f69731902fa786d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f321902fc78665f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f61637469766974791902fe78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f5f5f697319030078645f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f32190302785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f616374697669747919030478585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f5f5f697319030678635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f32190308785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f616374697669747919030a78635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f3219030c785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f5f5f697319030e78675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f32190310785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f5f5f697319031278675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f32190314785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f5f5f697319031678675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3219031878615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f5f5f697319031a78365f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174615f696e7465726e616c19031c782d5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f69735f76616c69645f6461746119031e786c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f3219032078295f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f66726f6d5f6461746119032278675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f6163746976697469657319032478565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4f74686572416374697669746965735f5f5f5f697319032678615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4f74686572416374697669746965735f5f69735f76616c69645f646174615f3219032878415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f52657475726e65645f5f5f5f697319032a78425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f52657475726e65645f5f5f5f6e657719032c78405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f437265617465645f5f5f5f697319032e78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f437265617465645f5f5f5f6e657719033078385f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f69735f76616c69645f6461746119033278445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f69735f76616c69645f64617461190334783b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f5f5f657119033678405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f66726f6d5f6461746119033878405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f5f5f746f5f6461746119033a783e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f7575744e616d6519033c78345f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f66726f6d5f6461746119033e784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f64656c656761746556616c696461746f7248617368190340782652656c617469766544656c65676174654c696e6b3a3a7476417574686f72697479546f6b656e190342782652656c617469766544656c65676174654c696e6b3a3a6163417574686f72697479546f6b656e190344782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f6e6f6e655f5f5f5f6973190346782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f6e6f6e655f5f5f5f6e6577190348782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f736f6d655f5f5f5f6e657719034a782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f736f6d655f5f736f6d6519034c782e52656c617469766544656c65676174654c696e6b3a3a76616c6964617465735570646174656453657474696e677319034e78355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f6e6f6e655f5f5f5f697319035078305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f6e6f6e655f5f5f5f6e6577190352782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f736f6d655f5f5f5f6973190354782c5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f66696e645f7361666519035678355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f736f6d655f5f736f6d65190358782652656c617469766544656c65676174654c696e6b3a3a68617344656c6567617465496e70757419035a78355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f736f6d655f5f5f5f697319035c78305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f74786f75747075745d5f5f736f6d655f5f5f5f697319035e782d5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f74786f75747075745d5f5f66696e645f73616665190360782452656c617469766544656c65676174654c696e6b3a3a68617356616c69644f757470757419036278565f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f6461746119036478455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f69735f76616c69645f6461746119036678415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f66726f6d5f64617461190368783e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f616374696f6e19036a783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f726f6c6519036c78525f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f6461746119036e783f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f6467744c696e6b19037078445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f69735f76616c69645f6461746119037278405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f66726f6d5f64617461190374784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f5f5f697319037678565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f646174615f32190378784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f6368616e676519037a78555f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c19037c784c5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5d5f5f69735f76616c69645f6461746119037e785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f646174615f3219038078405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f69735f76616c69645f64617461190382783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f66726f6d5f6461746119038478365f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f6d706819038678355f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f746e190388782244656c65676174696f6e44657461696c3a3a6163417574686f72697479546f6b656e19038a78265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f616e7919038c78395f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f69735f76616c69645f6461746119038e78355f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f66726f6d5f64617461190390783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f5f5f6973190392784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f646174615f32190394783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f5f5f697319039678495f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f3219039878445f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f706f6c6963794c696e6b19039a78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f696450726566697819039c78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f726566436f756e7419039e784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f646174615f321903a0784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f646174615f321903a2784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f646174615f321903a4783c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685d5f5f69735f76616c69645f646174611903a678395f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f69735f76616c69645f646174611903a878355f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f66726f6d5f646174611903aa78355f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f656e747279547970651903ac78355f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f746f6b656e4e616d651903ae78385f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685d5f5f66726f6d5f646174611903b0782f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f6d70681903b278395f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685d5f5f736f6d655f5f5f5f69731903b478315f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f69735f76616c69645f646174611903b6782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f66726f6d5f646174611903b8785d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c1903ba78545f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174611903bc786d5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c1903be78645f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174611903c078625f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c1903c278595f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f69735f76616c69645f646174611903c4785d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c1903c678545f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f69735f76616c69645f646174611903c878405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f646174615f321903ca783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f66726f6d5f646174611903cc783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f5f5f746f5f646174611903ce78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f7370656e6444656c65676174654c696e6b1903d078505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f646174611903d278405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f7370656e64496e76617269616e74731903d478605f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f646174611903d678445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6f746865724e616d656444656c6567617465731903d878415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d696e7444656c65676174654c696e6b1903da783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d696e74496e76617269616e74731903dc78415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f676f76417574686f726974794c696e6b1903de78555f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f66726f6d5f646174611903e078395f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d616e69666573741903e278505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f66726f6d5f646174611903e4783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f70656e64696e674368616e6765731903e678555f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f5f5f746f5f646174611903e878505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f5f5f746f5f646174611903ea78445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f646174615f321903ec78375f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f5f5f69731903ee78465f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174615f696e7465726e616c1903f0783d5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174611903f278425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f646174615f321903f478395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f5f5f746f5f646174611903f6783d5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f69735f76616c69645f646174611903f878395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f66726f6d5f646174611903fa78395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f5f5f69731903fc78445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f646174615f321903fe783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f5f5f6e6577190400783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f5f5f697319040278495f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f646174615f32190404783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f646174756d190406783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f7574786f190408783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f5f5f6e657719040a783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f5f5f697319040c78465f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f646174615f3219040e783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f646174756d190410783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f7574786f190412783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f5f5f6e657719041478345f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f69735f76616c69645f6461746119041678305f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f66726f6d5f6461746119041878425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f5f5f697319041a784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f646174615f3219041c78465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f616374697669747919041e783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f5f5f697319042078465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f646174615f32190422783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f5f5f6e6577190424783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f5f5f697319042678495f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f646174615f3219042878415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f5f5f697319042a784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f646174615f3219042c78435f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f5f5f697319042e784e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f646174615f32190430783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f5f5f697319043278475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f646174615f3219043471676574526566436861727465725574786f190436706765745478436861727465724461746119043878315f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f69735f76616c69645f6461746119043a78325f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f69735f76616c69645f6461746119043c78315f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f73657269616c697a6519043e782c5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6c696e6b190440782c5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f726f6c65190442782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f66726f6d5f6461746119044478305f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6964507265666978190446782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f66726f6d5f64617461190448782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f696e70757419044a782b5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6d706819044c782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f5f5f746f5f6461746119044e782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f5f5f746f5f64617461190450782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f5f5f6e6577190452782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f756e77726170190454782c44656c6567617465496e7075743a3a67656e6572696344656c65676174654163746976697479417344617461190456782644656c6567617465496e7075743a3a67656e6572696344656c656761746541637469766974791904587544656c6567617465496e7075743a3a61737365727419045a7444656c6567617465496e7075743a3a6572726f7219045c78235f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f67657419045e78265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f6c656e67746819046078265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f66696c746572190462782e44656c6567617465496e7075743a3a77697468556e697175655365656465644d696e74696e674163746976697479190464782b44656c6567617465496e7075743a3a77697468556e6971756544445370656e64696e674163746976697479190466782044656c6567617465496e7075743a3a64656c6567617465556e6368616e6765641904687544656c6567617465496e7075743a3a6f724661696c19046a78265f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f5f5f657119046c78255f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6d706819046e78295f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6368617274657219047078275f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f5f5f6e657719047278365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f73686f77190474782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f6e6f6e655f5f5f5f6e6577190476781b4361706f4374783a3a6765744368617274657252656465656d657219047878545f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6765745f7361666519047a781a4361706f4374783a3a66696e644d616e6966657374456e74727919047c78485f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f736f6d655f5f5f5f697319047e78485f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f736f6d655f5f736f6d6519048078485f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6e6f6e655f5f5f5f697319048278325f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f6e6f6e655f5f5f5f6e657719048478325f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f736f6d655f5f5f5f6e6577190486781e4361706f4374783a3a66696e644d616e6966657374546f6b656e4e616d65190488764361706f4374783a3a67657453657474696e6773496419048a78305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f74786f75747075745d5f5f736f6d655f5f736f6d6519048c784b5f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f5245515467726f75705b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5d19048e781d4361706f4374783a3a7265717569726573476f76417574686f7269747919049078535f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f6e6f6e655f5f5f5f697319049278535f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f736f6d655f5f736f6d65190494785f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f6765745f73616665190496782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f736f6d655f5f5f5f6e657719049878224361706f4374783a3a7265717569726573446744617461506f6c696379496e70757419049a781b4361706f4374783a3a6e6f77416374696e6741734d696e7444677419049c781c4361706f4374783a3a6e6f77416374696e6741735370656e6444677419049e774361706f4374783a3a67657443686172746572446174611904a0781b4361706f4374783a3a6765744e65787443686172746572446174611904a2781b4361706f4374783a3a7265736f6c7665436861727465725574786f1904a4781e4361706f4374783a3a726571756972657344656c6567617465496e7075741904a6704361706f4374783a3a616464726573731904a878194361706f4374783a3a64656c656761746564446174615265661904aa781d4361706f4374783a3a64656c656761746564446174615478496e7075741904ac78214361706f4374783a3a6d6b44656c656761746564446174615072656469636174651904ae78274361706f4374783a3a6d6b44656c656761746564446174614f75747075745072656469636174651904b078204361706f4374783a3a6d7573744f757470757444656c656761746564446174611904b278305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f74786f75747075745d5f5f6e6f6e655f5f5f5f69731904b4781a4361706f4374783a3a64656c65676174656454784f75747075741904b6754361706f4374783a3a6e65656473436861727465721904b878194361706f4374783a3a7769746843686172746572496e7075741904ba774361706f4374783a3a77697468436861727465725265661904bc786b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f666f6c645b5f5f68656c696f735f5f626f6f6c5d1904be78285f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f756e777261701904c0784f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f616c6c1904c2784a5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f616c6c1904c4782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f736f6d655f5f5f5f69731904c6782a4361706f4374783a3a616c6c44656c65676174657341726556616c69646174696e6753657474696e67731904c878254361706f4374783a3a646774526f6c6573466f724c6966656379636c6541637469766974791904ca6f4361706f4374783a3a6f724661696c1904cc696d6b4361706f4374781904ce6b686173536565645574786f1904d0781a6e6f4f7468657241637469766974696573537570706f727465641904d2782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f646174615d5f5f6e6f6e655f5f5f5f69731904d4782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f646174615d5f5f736f6d655f5f736f6d651904d6783f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f6765745f736166651904d8781f726571756972657344656c6567617465417574686f72697a696e674d696e741904da6e6d6b557574546e466163746f72791904dc781b736f7274506f6c69637956616c7565735072656469637461626c791904de783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f666f725f656163681904e078635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f66696c7465721904e278285f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f6c656e6774681904e478265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f686561641904e678655f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f666f725f656163681904e8782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f696e745d5f5f6e6f6e655f5f5f5f69731904ea782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f696e745d5f5f736f6d655f5f736f6d651904ec783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f6765745f736166651904ee78635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f64656c6574651904f0783b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f5f5f746f5f646174611904f278365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f5f5f65711904f478365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f736f72741904f678255f5f68656c696f735f5f76616c75655f5f73756d5b5f5f68656c696f735f5f76616c75655d1904f878365f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f6d61705b5f5f68656c696f735f5f76616c75655d1904fa78375f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f6d61705b5f5f68656c696f735f5f737472696e675d1904fc7276616c69646174655575744d696e74696e671904fe78385f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f69735f76616c69645f646174615f696e7465726e616c190500782f5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f69735f76616c69645f64617461190502782e5f5f6d6f64756c655f5f5265717473446174615f5f52657174446174615b5d5f5f69735f76616c69645f64617461190504782a5f5f6d6f64756c655f5f5265717473446174615f5f52657174446174615b5d5f5f73657269616c697a65190506782a5f5f6d6f64756c655f5f5265717473446174615f5f52657174446174615b5d5f5f66726f6d5f64617461190508782e5f5f6d6f64756c655f5f5265717473446174615f5f52657174446174615b5d5f5f6d7573744672657368656e427919050a7252657174446174613a3a76616c696461746519050c78335f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f69735f76616c69645f6461746119050e782f5f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f66726f6d5f6461746119051078445f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f4369703638526566546f6b656e5f5f69735f76616c69645f646174615f32190512783d5f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f73657269616c697a6519051478385f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f5f5f697319051678435f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f69735f76616c69645f646174615f3219051878365f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f646419051a783a5f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f5f5f697319051c78455f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f69735f76616c69645f646174615f3219051e78355f5f6d6f64756c655f5f5265717473446174615f5f4d696e74696e6741637469766974795b5d5f5f69735f76616c69645f6461746119052078315f5f6d6f64756c655f5f5265717473446174615f5f4d696e74696e6741637469766974795b5d5f5f66726f6d5f6461746119052278475f5f6d6f64756c655f5f5265717473446174615f5f4d696e74696e6741637469766974795b5d5f5f4372656174696e675265636f72645f5f69735f76616c69645f646174615f32190524783c5f5f6d6f64756c655f5f5265717473446174615f5f4d696e74696e6741637469766974795b5d5f5f4372656174696e675265636f72645f5f7365656419052678365f5f6d6f64756c655f5f5265717473446174615f5f5370656e64696e6741637469766974795b5d5f5f69735f76616c69645f6461746119052878325f5f6d6f64756c655f5f5265717473446174615f5f5370656e64696e6741637469766974795b5d5f5f66726f6d5f6461746119052a78485f5f6d6f64756c655f5f5265717473446174615f5f5370656e64696e6741637469766974795b5d5f5f5570646174696e675265636f72645f5f69735f76616c69645f646174615f3219052c783b5f5f6d6f64756c655f5f5265717473446174615f5f5370656e64696e6741637469766974795b5d5f5f5570646174696e675265636f72645f5f696419052e78355f5f6d6f64756c655f5f5265717473446174615f5f4275726e696e6741637469766974795b5d5f5f69735f76616c69645f6461746119053078475f5f6d6f64756c655f5f5265717473446174615f5f4275726e696e6741637469766974795b5d5f5f44656c6574696e675265636f72645f5f69735f76616c69645f646174615f31190532781b656e73757265436f6e73747261696e6564547856616c69646974791905346c64617973496e46757475726519053678385f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f69735f76616c69645f6461746119053878345f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f66726f6d5f6461746119053a78485f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f5f5f697319053c78535f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f3219053e784c5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f6163746976697479190540784c5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f5f5f697319054278575f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f3219054478505f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f616374697669747919054678435f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f5f5f6973190548784e5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f3219054a78475f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f616374697669747919054c78425f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f5f5f697319054e784d5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f3219055078465f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f616374697669747919055278425f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f5f5f6973190554784d5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f3219055678465f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f5f5f697319055878515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3219055a78465f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f7365656419055c784a5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f646174615479706519055e78465f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f5f5f697319056078515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f32190562784a5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f646174615479706519056478475f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f726563496419056678465f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f5f5f697319056878515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3219056a78475f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f726563496419056c784b5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f5f5f697319056e78565f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f3219057078515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f6163746976697469657319057278405f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4f74686572416374697669746965735f5f5f5f6973190574784b5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4f74686572416374697669746965735f5f69735f76616c69645f646174615f32190576782b5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f666f725f6561636819057878295f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f66696c74657219057a782e44656c656761746541637469766974793a3a6164646974696f6e616c44656c656761746556616c69646174696f6e19057c782644656c656761746541637469766974793a3a6f74686572446174756d56616c69646174696f6e19057e6372657619058068696e7374616e63651905826c64656c65676174654e616d651905846e69734d696e7444656c65676174651905866f69735370656e6444656c65676174651905886e6973446744617461506f6c69637919058a747265717569726573476f76417574686f7269747919058c78235f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f616c6c19058e784b5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f5f5f6571190590784b5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f7461696c190592784d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f6c656e677468190594782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6173736574636c6173735d5f5f756e7772617019059678335f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6173736574636c6173735d5f5f736f6d655f5f5f5f6e6577190598784a5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f616c6c19059a784b5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f6865616419059c787d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f666f6c645b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d19059e78385f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f64656c6574651905a0784e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f736f6d655f5f5f5f69731905a2784e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f736f6d655f5f736f6d651905a478655f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f6765745f736166651905a678e35f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f666f6c64325b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5d1905a878525f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6c656e6774681905aa78505f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f686561641905ac78505f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f7461696c1905ae784f5f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f756e777261701905b078525f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f64656c6574651905b278505f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f5f5f65711905b4782a5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f756e777261701905b6782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f756e777261701905b870636865636b4f6e6541637469766974791905ba646d61696e1905ea636d64641905eb6861637469766974791905fc68726573756c745f3919060e6a5f5f636f6e645f31313319061a6b5f5f6c68735f305f3236371906296369734419062b6464645f3219067b66636374785f3719067d71676f76417574686f72697479436865636b1906e8645f5f37361906ea756b61626f6f6d496e76616c696452656465656d65721906ec6a5f5f636f6e645f3131341906f86b5f5f6c68735f305f3236361907066b5f5f6c68735f305f32363519070a645f5f373719071878295f5f6d6f64756c655f5f426173696344656c65676174655f5f636865636b4f6e6541637469766974791907196b646774696f6e446174756d19071a6a61637469766974795f3319071b6c5f5f7573656f70745f5f646419071c62646419071d62646419071e68626173654363747819071f6e5f5f7573656f70745f5f6465736319072064646573631907226464645f311907246a62617365436374785f3119072666646573635f3119073768726573756c745f38190742781b636865636b4e6f6e44656c656761746564416374697669746965731907a0695f5f636f6e645f36311907ac6b5f5f6c68735f305f3234321907ae6c616374697669746965735f321907b066636374785f361907b26f616374696e6741734d696e744467741907b470616374696e6741735370656e644467741907b66a6e6f744d696e744467741907b86b6e6f745370656e644467741907ba6e6d696e74446774436865636b5f311907bc6f7370656e64446774436865636b5f311907be71646744617461506f6c696379436865636b1907f66d72617741637469766974795f321907f864615f32321907fa6a5f5f636f6e645f3131321908066b5f5f6c68735f305f3236341908156b5f5f6c68735f305f3236331908246b5f5f6c68735f305f3236321908336b5f5f6c68735f305f3236311908526b5f5f6c68735f305f3236301908716b5f5f6c68735f305f3235391908996b5f5f6c68735f305f3235381908b86b5f5f6c68735f305f3235371908c76b5f5f6c68735f305f3235361908cc6b5f5f6c68735f305f3235351908fc6d72617741637469766974795f311908fe64615f32311909076a5f5f636f6e645f3131311909136b5f5f6c68735f305f3235341909496b5f5f6c68735f305f3235331909586b5f5f6c68735f305f3235321909676b5f5f6c68735f305f3235311909766b5f5f6c68735f305f3235301909856b5f5f6c68735f305f32343919098a645f5f37351909b16b72617741637469766974791909b364615f32301909cf6a5f5f636f6e645f3131301909db6b5f5f6c68735f305f3234381909fa6b5f5f6c68735f305f323437190a196b5f5f6c68735f305f323436190a286b5f5f6c68735f305f323435190a376b5f5f6c68735f305f323434190a466b5f5f6c68735f305f323433190a4b645f5f3734190ace6b5f5f6c68735f305f323336190ad06d696e6e65724163746976697479190ad26a5f5f636f6e645f313038190ade6b5f5f6c68735f305f323430190ae066736565645f39190ae269707572706f73655f37190ae4664255524e4544190ae6726f746865724d696e74656456616c75655f32190ae867746e5374725f33190b1766636374785f35190b197169735570646174696e6743686172746572190b1b6b69734d696e74696e674f6b190b4e6a5f5f636f6e645f313039190b5a6b5f5f6c68735f305f323431190b5d645f5f3733190b8f6b5f5f6c68735f305f323339190bc76b5f5f6c68735f305f323337190bc96b5f5f6c68735f305f323338190bfe6b5f5f6c68735f305f313337190c006464434c41190c1566636374785f34190c2e6a5f5f636f6e645f313036190c3a6b5f5f6c68735f305f323335190c3c6463434c41190c5b6b5f5f6c68735f305f323333190c5d6a5f5f636f6e645f313037190c696b5f5f6c68735f305f323334190c6e645f5f3732190c75645f5f3731190c7f6a6e6565646564526f6c65190c816d6d7943757272656e74526f6c65190c87695f5f636f6e645f3633190c936b5f5f6c68735f305f323239190c9566736565645f38190c9769707572706f73655f36190cb3666d6b546e5f31190cb56a5f5f636f6e645f313034190cc16b5f5f6c68735f305f323330190d256a5f5f636f6e645f313035190d316b5f5f6c68735f305f323332190d366b5f5f6c68735f305f323331190d38696467744c696e6b5f33190d6d645f5f3730190d876b5f5f6c68735f305f313737190d9c6d63686172746572446174615f34190d9e716e65787443686172746572446174615f32190da0716f6c6450656e64696e674368616e676573190da26e6e6578744368616e67654c697374190da4696e65774368616e6765190dad6b5f5f6c68735f305f313738190daf6b5f5f6c68735f305f305f32190db166616374696f6e190db366726f6c655f32190db5684f6467744c696e6b190db76e6e6577446774526f6c654e616d65190dc66a5f5f636f6e645f313032190dd26b5f5f6c68735f305f323237190ddb6a5f5f636f6e645f313033190de76b5f5f6c68735f305f323238190dff645f5f3639190e06645f5f3638190e326a5f5f636f6e645f313031190e3e6b5f5f6c68735f305f323236190e4d6b5f5f6c68735f305f323235190e4f66736565645f37190e5169707572706f73655f35190e536a69645072656669785f39190e546b63616c6c6261636b5f3230190e666b5f5f6c68735f305f323234190e6866736565645f36190e6a69707572706f73655f34190e6c6a69645072656669785f38190e6d6b63616c6c6261636b5f3139190e8066736565645f35190e8169707572706f73655f33190e827570656e64696e67416374696f6e4964507265666978190e84781c706f737369626c654d696e74446774566572696669636174696f6e73190e86781a6f74686572506f737369626c65566572696669636174696f6e73190eb7695f5f636f6e645f3930190ec36b5f5f6c68735f305f323233190eda6b5f5f6c68735f305f313937190eef6f69734e6f74414475706c6963617465190efe766578697374696e67526f6c65456e7472794d61796265190f00781c706f737369626c655265706c6163656d656e744973436f7272656374190f0f695f5f636f6e645f3933190f1b6b5f5f6c68735f305f323231190f346a5f5f636f6e645f313030190f406b5f5f6c68735f305f323232190f49645f5f3637190f596b5f5f6c68735f305f323032190f5b6b7265706c61636573446774190f87695f5f636f6e645f3939190f936b5f5f6c68735f305f323230190fa26b5f5f6c68735f305f323139190fb16b5f5f6c68735f305f323138190fb6645f5f3636190fd0716578697374696e674467744c696e6b5f31190fe56d6578697374696e674467546b6e191000695f5f636f6e645f393819100c6b5f5f6c68735f305f3231371910196b5f5f6c68735f305f3231361910266b5f5f6c68735f305f3231351910336b5f5f6c68735f305f323134191036645f5f3635191041695f5f636f6e645f393719104d6b5f5f6c68735f305f3231331910646b5f5f6c68735f305f32313219107b6b5f5f6c68735f305f3231311910a36b5f5f6c68735f305f3231301910b26b5f5f6c68735f305f3230391910c16b5f5f6c68735f305f3230381910d06b5f5f6c68735f305f3230371910d56b5f5f6c68735f305f3230361910dc695f5f636f6e645f39351910e86b5f5f6c68735f305f3230351910f16b5f5f6c68735f305f3230331910f36b5f5f6c68735f305f305f341910f56b656e747279547970655f321910f7695f5f636f6e645f39361911036b5f5f6c68735f305f3230341911056f6578697374696e674467744c696e6b19110b645f5f36341911256b5f5f6c68735f305f32303019113e695f5f636f6e645f393419114a6b5f5f6c68735f305f323031191153645f5f36331911696a70644368616e67655f3219116b695f5f636f6e645f39311911776b5f5f6c68735f305f3139381911796b5f5f6c68735f305f305f3319117b6b70656e64696e67526f6c6519117d695f5f636f6e645f39321911896b5f5f6c68735f305f31393919118b6f6368616e67696e674467744e616d65191195645f5f36321911a2645f5f36311911a9645f5f36301911b0695f5f636f6e645f38331911bc6b5f5f6c68735f305f3139361911c96b5f5f6c68735f305f3138301911df695f5f636f6e645f38341911eb6b5f5f6c68735f305f3138381911f1695f5f636f6e645f38391911fd6b5f5f6c68735f305f31393519120c6b5f5f6c68735f305f31393419121b6b5f5f6c68735f305f31393319122a6b5f5f6c68735f305f3139321912396b5f5f6c68735f305f31393119124a6b5f5f6c68735f305f31393019125b6b5f5f6c68735f305f313839191260645f5f3539191289645f5f35361912a86d6d6b546f6b656e4e616d655f321912aa696467546b6e4e616d651912ac6b6d696e7465644467546b6e1912c1696467744c696e6b5f321912e07664656c656761746554616b65734f776e6572736869701912e2781d706f737369626c6545787472615265706c6163656d656e74436865636b1912f1695f5f636f6e645f38361912fd6b5f5f6c68735f305f31383319131d695f5f636f6e645f38371913296b5f5f6c68735f305f31383519132b6364646519132d6b5f5f6c68735f305f31383619132f6b656e747279547970655f31191331695f5f636f6e645f383819133d6b5f5f6c68735f305f31383719133f6a69645072656669785f37191376645f5f353819138c6b5f5f6c68735f305f31383419139e645f5f35371913c1695f5f636f6e645f38351913cd6b5f5f6c68735f305f3138321913d26b5f5f6c68735f305f3138311913d462646c191424645f5f353519142b695f5f636f6e645f38321914376b5f5f6c68735f305f313739191439676467744e616d6519143f645f5f353419147a6b5f5f6c68735f305f3137361914aa6b5f5f6c68735f305f3135331914d27270656e64696e674368616e6765734c6973741914d47070726576696f75734d616e69666573741914d6716e65787443686172746572446174615f311914d86c6e6578744d616e69666573741914ff6d7370656e64446774436865636b1915016c6d696e74446774436865636b19156f646d696e741915716e6d696e7454686973506f6c696379191573636c656e1915a2716f62736572766564546f6b656e4275726e1915a46d72656d61696e696e674d696e741915e76b666f6c64696e674275726e1915e86a70634368616e67655f311915fd6a70644368616e67655f311915ff695f5f636f6e645f373719160b6b5f5f6c68735f305f31363819160d6a747970654e616d655f3519161a695f5f636f6e645f37381916266b5f5f6c68735f305f313735191629645f5f353219163e695f5f636f6e645f373919164a6b5f5f6c68735f305f3137341916536b5f5f6c68735f305f3136391916556b5f5f6c68735f305f305f31191657694d455f747970655f3119165964746e5f3619165b666d70685f323919165d695f5f636f6e645f38301916696b5f5f6c68735f305f313733191673645f5f35331916886b5f5f6c68735f305f31373019168a6a726566436f756e745f3119168c67746e5374725f3219168e695f5f636f6e645f383119169a6b5f5f6c68735f305f3137321916a36b5f5f6c68735f305f3137311916a56c6275726e696e67436f756e7419171c645f5f3531191725695f5f636f6e645f37361917316b5f5f6c68735f305f3136371917336b6467744368616e67655f311917396b5f5f6c68735f305f313636191741695f5f636f6e645f373519174d6b5f5f6c68735f305f31363519174f666d696e7465641917556b5f5f6c68735f305f3136341917ad77707265764d616e696665737452656d61696e6465725f311917ae686e657874434d45731917af6870634368616e67651917b16870644368616e67651917b36f70656e64696e67547970654e616d651917b9695f5f636f6e645f37311917c56b5f5f6c68735f305f3136321917da695f5f636f6e645f37341917e66b5f5f6c68735f305f3136331917ef645f5f35301917f8645f5f343719182967434d455f6b657919182a675f5f6c68735f3119182c674d455f747970651918396b5f5f6c68735f305f31353819183b6d4d455f706f6c6963794c696e6b19183d6b4d455f696450726566697819183f68726566436f756e74191862674d455f6e616d6519186f6b70656e64696e674c696e6b1918716b70656e64696e674e616d6519188b6c6e65787449645072656669781918a9695f5f636f6e645f37321918b56b5f5f6c68735f305f3136301918b76a69645072656669785f361918d0695f5f636f6e645f37331918dc6b5f5f6c68735f305f3136311918e5645f5f34391918fe6b5f5f6c68735f305f3135391919006a69645072656669785f35191906645f5f3438191936695f5f636f6e645f37301919426b5f5f6c68735f305f3135371919436b63616c6c6261636b5f313819194c645f5f343619194d6b63616c6c6261636b5f313719195e695f5f636f6e645f363919196a6b5f5f6c68735f305f31353619196c6a747970654e616d655f34191979645f5f3435191982695f5f636f6e645f363819198e6b5f5f6c68735f305f313535191990696467744368616e67651919966b5f5f6c68735f305f31353419199e75707265764d616e696665737452656d61696e64657219199f756e6578744d616e696665737452656d61696e6465721919c76b5f5f6c68735f305f3134341919c9706d616e696665737441637469766974791919e2695f5f636f6e645f36341919ee6b5f5f6c68735f305f313532191a386b5f5f6c68735f305f313531191a636b5f5f6c68735f305f313436191a65666b65795f3331191a676b746f6b656e4e616d655f35191a696d63686172746572446174615f33191a6b6f6e6578744368617274657244617461191a8068726566496e707574191ab5695f5f636f6e645f3635191ac16b5f5f6c68735f305f313530191aca6b5f5f6c68735f305f313437191acc695f5f6c68735f305f30191ace69656e74727954797065191ad064746e5f35191ad2666d70685f3238191b03695f5f636f6e645f3637191b0f6b5f5f6c68735f305f313439191b14645f5f3434191b19695f5f636f6e645f3636191b256b5f5f6c68735f305f313438191b2a645f5f3433191b9d6b5f5f6c68735f305f313435191c14645f5f3432191c276b5f5f6c68735f305f313433191c3f6b5f5f6c68735f305f313432191c6e695f5f636f6e645f3632191c7a6b5f5f6c68735f305f313431191c896b5f5f6c68735f305f313430191cc16b5f5f6c68735f305f313339191cf96b5f5f6c68735f305f313338191d3d645f5f3431191d636b5f5f6c68735f305f313336191d6566736565645f34191d676f6444617461547970654e616d655f31191d7966636374785f33191db273706f6c69637944656c6567617465496e707574191db469746e466163746f7279191db669707572706f73655f32191db86b6e65774461746149645f31191e4f6b5f5f6c68735f305f313335191e516d6444617461547970654e616d65191e536772656349645f36191e6566636374785f32191ed367696e7075744444191ef26d63757253657474696e67734964191f2c6a72656349645374725f34191f2e7063757253657474696e67734964537472191f8d6b5f5f6c68735f305f313333191f8f6772656349645f35191fa166636374785f311920136b5f5f6c68735f305f3133341920506b5f5f6c68735f305f31333219205d6b5f5f6c68735f305f31333119206a6b5f5f6c68735f305f31333019206d6b5f5f6c68735f305f31323919209c6873656c665f3238331920a36873656c665f3238321920aa6873656c665f3238311920ab676f746865725f361920b56873656c665f3237391920b6666b65795f32391920b8666b65795f33301920ba6b726563757273655f3130371920c06b726563757273655f3130361920c16873656c665f3238301920ce68686561645f3131351920d0667461696c5f361920fc6873656c665f3237381921056873656c665f32373719210768686561645f3131341921086b63616c6c6261636b5f313619211e6873656c665f3237361921226873656c665f32373519212365666e5f33351921246461305f311921256462305f3119212b66707265765f3519212c676974656d5f313919212f64615f313919213064625f323219213e6b63616c6c6261636b5f31351921446873656c665f323734192145666b65795f323819214f64785f313319215d6873656c665f32373319216368646174615f3332331921696873656c665f32373119216a666b65795f323619216c666b65795f323719216e6b726563757273655f3130351921746b726563757273655f3130341921756873656c665f32373219218268686561645f313133192184667461696c5f351921b06873656c665f3237301921b165666e5f33341921b26261301921b866707265765f341921b9676974656d5f31381921c66873656c665f3236391921d16873656c665f3236381921d265666e5f33331921d7676974656d5f31371921e166736f6d655f351921eb6873656c665f3236371921f56873656c665f3236361921f6676f746865725f351922006873656c665f32363519220165666e5f3332192206676974656d5f313619221f6873656c665f323634192220695f7072696f724d64641922226e6e65766572547269676765726564192224695f5f636f6e645f36301922306b5f5f6c68735f305f31323819223e6b5f5f6c68735f305f313237192242645f5f343019224a6873656c665f32363319224b697072696f724d64646419224c6463637478192259695f5f636f6e645f35371922656b5f5f6c68735f305f3132361922726b5f5f6c68735f305f3132351922816b5f5f6c68735f305f31323319228363564d41192285695f5f636f6e645f35391922876b5f5f6c68735f305f31323419228966736565645f33192292646d6b546e1922a36b746f6b656e4e616d655f341922a5676e6577526571741922a76a72657174446174615f311922c27061636365707461626c654578706972791922c46c646973636f756e74456e64731923466b5f5f6c68735f305f31313919234863565341192385695f5f636f6e645f35381923876b5f5f6c68735f305f3132301923896772656349645f3419238b6768617344445f3219238d6b68617344444f757470757419239c667574786f5f3619239e6872657174446174611923a06b757064617465645574786f1923a26b75706461746564526571741923a46b5f5f6c68735f305f3132311923a66b5f5f6c68735f305f3132321923a86b66726573684578706972791924566b5f5f6c68735f305f31313819245b645f5f333919246b6873656c665f32363219246c65666e5f3331192471676974656d5f31351924776873656c665f32363119247865666e5f333019247a6b726563757273655f3130331924806b726563757273655f313032192481666c73745f32381924a168646174615f3332311924ae67706169725f39311924c068646174615f3332321924d16a6669656c64735f3139351924de68686561645f3131321924ea6a6669656c64735f31393619251968646174615f33323019251f6873656c665f32363019252568646174615f33313819253267706169725f393019254468646174615f3331391925556a6669656c64735f31393319256268686561645f31313119256e6a6669656c64735f31393419259d68646174615f3331371925a36873656c665f3235391925a968646174615f3331351925b667706169725f38391925c868646174615f3331361925d96a6669656c64735f3139301925e668686561645f3130391925f26a6669656c64735f3139311925ff68686561645f31313019260b6a6669656c64735f31393219264468646174615f33313419264a6873656c665f3235381926506873656c665f32353719265668646174615f33313219266367706169725f383819267568646174615f3331331926866a6669656c64735f31383719269368686561645f31303719269f6a6669656c64735f3138381926ac68686561645f3130381926b86a6669656c64735f3138391926f168646174615f3331311926f76873656c665f3235361926fd6873656c665f32353519270368646174615f33303919271067706169725f383719272268646174615f3331301927336a6669656c64735f31383419274068686561645f31303519274c6a6669656c64735f31383519275968686561645f3130361927656a6669656c64735f31383619279e68646174615f3330381927a468646174615f3330361927b167706169725f38361927c368646174615f3330371927d46a6669656c64735f3138321927e168686561645f3130341927ef6a6669656c64735f31383319281e68646174615f3330351928246873656c665f32353419282c68646174615f33303319283967706169725f383519284b68646174615f33303419285c6a6669656c64735f31383019286968686561645f3130331928776a6669656c64735f3138311928a668646174615f3330321928ac6873656c665f3235331928b468646174615f3330301928c167706169725f38341928d368646174615f3330311928e46a6669656c64735f3137381928f168686561645f3130321928ff6a6669656c64735f31373919292e68646174615f3239391929346873656c665f32353219294068646174615f32393719294d67706169725f383319295f68646174615f3239381929706a6669656c64735f31373619297d68686561645f31303119298f6a6669656c64735f3137371929be68646174615f3239361929c46873656c665f3235311929d868646174615f3239341929e567706169725f38321929f768646174615f323935192a086a6669656c64735f313734192a1568686561645f313030192a2f6a6669656c64735f313735192a5e68646174615f323933192a6478535f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f31192a6578575f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f31192a66784e5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f31192a67784d5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f31192a68784d5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f31192a6978515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f31192a6a78515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f31192a6b78515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f31192a6c78565f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f31192a6d784b5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4f74686572416374697669746965735f5f69735f76616c69645f646174615f31192a6e68646174615f323932192a706969676e6f72655f3231192a9878515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f64617461192a9978555f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f64617461192a9a784c5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f64617461192a9b784b5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f64617461192a9c784b5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f64617461192a9d784f5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f64617461192a9e784f5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f64617461192a9f784f5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f64617461192aa078545f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f64617461192aa178495f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4f74686572416374697669746965735f5f69735f76616c69645f64617461192aa268646174615f323931192b1c6b6e6f77506c757344617973192b246e6578706972794475726174696f6e192b26666c6565776179192b28706c617465737441636365707461626c65192b6368646174615f323839192b7067706169725f3831192b8268646174615f323930192b936a6669656c64735f313732192ba067686561645f3939192bac6a6669656c64735f313733192bdb78455f5f6d6f64756c655f5f5265717473446174615f5f4275726e696e6741637469766974795b5d5f5f44656c6574696e675265636f72645f5f69735f76616c69645f64617461192bdc68646174615f323838192bea6873656c665f323530192bf068646174615f323836192bfd67706169725f3830192c0f68646174615f323837192c206a6669656c64735f313730192c2d67686561645f3938192c396a6669656c64735f313731192c6878485f5f6d6f64756c655f5f5265717473446174615f5f5370656e64696e6741637469766974795b5d5f5f5570646174696e675265636f72645f5f69735f76616c69645f646174615f31192c6968646174615f323835192c6b6969676e6f72655f3230192c8178465f5f6d6f64756c655f5f5265717473446174615f5f5370656e64696e6741637469766974795b5d5f5f5570646174696e675265636f72645f5f69735f76616c69645f64617461192c8268646174615f323834192c906873656c665f323439192c9668646174615f323832192ca367706169725f3739192cb568646174615f323833192cc66a6669656c64735f313638192cd367686561645f3937192cdf6a6669656c64735f313639192d0e78475f5f6d6f64756c655f5f5265717473446174615f5f4d696e74696e6741637469766974795b5d5f5f4372656174696e675265636f72645f5f69735f76616c69645f646174615f31192d0f68646174615f323831192d116969676e6f72655f3139192d2778455f5f6d6f64756c655f5f5265717473446174615f5f4d696e74696e6741637469766974795b5d5f5f4372656174696e675265636f72645f5f69735f76616c69645f64617461192d2868646174615f323830192d3668646174615f323738192d4367706169725f3738192d5568646174615f323739192d666a6669656c64735f313634192d7367686561645f3934192d7f6a6669656c64735f313635192d8c67686561645f3935192d986a6669656c64735f313636192da567686561645f3936192db16a6669656c64735f313637192df468646174615f323737192dfa6873656c665f323438192e0068646174615f323735192e0d67706169725f3737192e1f68646174615f323736192e306a6669656c64735f313632192e3d67686561645f3933192e496a6669656c64735f313633192e7868646174615f323734192e7f68646174615f323732192e8c67706169725f3736192e9e68646174615f323733192eaf6a6669656c64735f313538192ebc67686561645f3930192ec86a6669656c64735f313539192ed567686561645f3931192ee16a6669656c64735f313630192eee67686561645f3932192efa6a6669656c64735f313631192f3d78445f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f4369703638526566546f6b656e5f5f69735f76616c69645f646174615f31192f3e78435f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f69735f76616c69645f646174615f31192f3f78455f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f69735f76616c69645f646174615f31192f4068646174615f323731192f426969676e6f72655f3138192f5c78425f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f4369703638526566546f6b656e5f5f69735f76616c69645f64617461192f5d78415f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f69735f76616c69645f64617461192f5e78435f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f69735f76616c69645f64617461192f5f68646174615f323730192f856873656c665f323437192fa16873656c665f323436192fa968646174615f323639192fab6969676e6f72655f3137192fc068646174615f32363819310768646174615f323637193120666c73745f32361931226b726563757273655f3130311931286b726563757273655f313030193129666c73745f323719314c666d70685f323719314d66736565645f3219314e68707572706f73657319314f755f5f7573656f70745f5f6d6b546f6b656e4e616d651931506b6d6b546f6b656e4e616d65193151781a5f5f7573656f70745f5f626f6f7473747261704368617274657219315270626f6f74737472617043686172746572193153781a5f5f7573656f70745f5f6f746865724d696e74656456616c7565193154706f746865724d696e74656456616c756519315578235f5f7573656f70745f5f6e656564734d696e7444656c6567617465417070726f76616c19315678196e656564734d696e7444656c6567617465417070726f76616c193157782a5f5f7573656f70745f5f65787472614d696e7444656c656761746552656465656d6572436865636b5f31193158782065787472614d696e7444656c656761746552656465656d6572436865636b5f3219315978205f5f7573656f70745f5f636865636b4d696e7444677441637469766974795f3119315a76636865636b4d696e7444677441637469766974795f3219315c6d6d6b546f6b656e4e616d655f3119315e72626f6f747374726170436861727465725f31193160726f746865724d696e74656456616c75655f31193162781b6e656564734d696e7444656c6567617465417070726f76616c5f31193164782065787472614d696e7444656c656761746552656465656d6572436865636b5f3319316676636865636b4d696e7444677441637469766974795f331931826f6973426f6f74737472617070696e671931847064656c6567617465417070726f76616c1931866b76616c75654d696e7465641931886a746f6b656e4e616d657319318a6d657870656374656456616c756519319e666d70685374721931a06676616c5374721931cd74657870656374656456616c756573536f727465641931d664746e5f341931d764695f31351931d967746e5374725f311931f17461637475616c54686973506f6c6963794d696e741931f3781a61637475616c54686973506f6c6963794d696e74536f7274656419320864746e5f3319320964695f313419320b65746e5374721932237166696c74657265644f746865724d696e7419325164625f3231193252645f5f333819325d7074686973506f6c6963794d696e744f4b19325f736f74686572506f6c69636965734d696e744f6b1932e57572656d61696e696e6745787065637465644d696e74193340686f746865724d7068193341686f746865724d7068193343706d696e74656454686973506f6c6963791933486b746f6b656e4e616d655f331933496d6578706563746564436f756e74193353695f5f636f6e645f353619335f6b5f5f6c68735f305f3131371933626b5f5f6c68735f305f3131361933646b61637475616c436f756e7419337568746e537472696e6719340064746e5f321934336b5f5f6c68735f305f313135193435676d696e744467741934ae6873656c665f3234351934af65666e5f32391934b5676974656d5f31341934c06873656c665f3234341934c165666e5f32381934c7676974656d5f31331934d26873656c665f3234331934d46a726563757273655f39391934da6a726563757273655f39381934db666c73745f32351934fa6873656c665f3234321934fb66636f6d705f3419350064615f313819350164625f32301935236873656c665f323431193524676f746865725f3419352f6873656c665f323339193530666b65795f3234193532666b65795f32351935346a726563757273655f393719353a6a726563757273655f393619353b6873656c665f32343019354867686561645f383919354a667461696c5f341935766873656c665f323338193577666b65795f323319358164785f313219358f6873656c665f32333719359568646174615f32363619359b6873656c665f32333619359c65666e5f323719359e6a726563757273655f39351935a46a726563757273655f39341935a5666d61705f33321935b267686561645f38381935d46873656c665f3233351935dc6873656c665f3233341935dd65666e5f32361935e267706169725f37351935f46873656c665f3233331935f565666e5f32351935f76a726563757273655f39331935fd6a726563757273655f39321935fe666d61705f333119360b67686561645f383719362d626b3119362e635f763119362f626b32193630635f763219363666736565645f311936386e6d6b557574546e466163746f727919363a677365656449647819363c68696478427974657319363e67726177547849641936406774786f496e666f193642686d696e6948617368193644636d687319364561701936986c64656c65676174654c696e6b193699666d70685f323619369a78285f5f7573656f70745f5f65787472614d696e7444656c656761746552656465656d6572436865636b19369b781e65787472614d696e7444656c656761746552656465656d6572436865636b19369c781e5f5f7573656f70745f5f636865636b4d696e74446774416374697669747919369d74636865636b4d696e74446774416374697669747919369f781f726571756972657344656c6567617465417574686f72697a696e674d696e741936a176636865636b4d696e7444677441637469766974795f311936a367617574687a41631936c56a74617267657449645f311936ce727370656e6473417574686f726974795575741936d0636572721936d278216d61796265436865636b65644d696e7444656c6567617465417574686f726974791936d47464656c6567617465446964417574686f72697a651936de695f5f636f6e645f35331936ea6b5f5f6c68735f305f3131341936ef6b5f5f6c68735f305f3130391936f164785f31311936f36a61637469766974795f321936f5695f5f636f6e645f35341937016b5f5f6c68735f305f31313019370363444c41193728695f5f636f6e645f35351937346b5f5f6c68735f305f3131331937486b5f5f6c68735f305f31313219374d6b5f5f6c68735f305f313131193757645f5f333719379069707572706f73655f31193792695f5f636f6e645f353219379e6473705f311937a7645f5f33361937ac695f5f636f6e645f35311937b86b5f5f6c68735f305f3130381937ba64785f31301937c26b5f5f6c68735f305f3130371937d364695f31331937fa6873656c665f3233321937fb666b65795f323219380563785f391938136873656c665f32333119381968646174615f32363519381f645f5f333519384062747819384168736565645574786f193842705f5f7573656f70745f5f726571745f3119384366726571745f3819384566726571745f3919386167696e7075745f34193899666d70685f32351938a06873656c665f3233301938a36b5f5f6c68735f305f3130361938a66873656c665f3232391938a76a61637469766974795f311938bc695f5f636f6e645f35301938c86b5f5f6c68735f305f3130351938d76b5f5f6c68735f305f3130341938e66b5f5f6c68735f305f3130331938fb6b5f5f6c68735f305f3130321939106b5f5f6c68735f305f3130311939256b5f5f6c68735f305f3130301939306a5f5f6c68735f305f39391939586873656c665f32323819395b6d63686172746572446174615f3219395d666d70685f323419395f6a5f5f6c68735f305f39351939616f7370656e64496e76617269616e7473193963736f746865724e616d656444656c6567617465731939656e6d696e74496e76617269616e74731939676b676f7644656c6567617465193969686d616e696665737419396b68696e707574735f3219398078197370656e6444656c6567617465497356616c69646174696e671939a8781a676f7644656c65676174654d6179626556616c69646174696e671939aa71636865636b4f6e65496e76617269616e741939bf781c7370656e64496e76617269616e747341726556616c69646174696e671939d4781b6d696e74496e76617269616e747341726556616c69646174696e671939e9781b646744617461506f6c696369657341726556616c69646174696e671939fe781b6e616d656444656c65676174657341726556616c69646174696e67193a36626f6b193a37666b65795f3231193a3863646774193a66666b65795f3230193a6767656e7472795f31193a69695f5f636f6e645f3439193a756a5f5f6c68735f305f3938193a776c706f6c6963794c696e6b5f31193a8c645f5f3334193aa7666f6e65446774193acc695f5f636f6e645f3438193ad86a5f5f6c68735f305f3937193adb6a5f5f6c68735f305f3936193b1968646174615f323634193b1f6873656c665f323237193b2065666e5f3234193b25676974656d5f3132193b2b6873656c665f323236193b2c65666e5f3232193b2e65666e5f3233193b3467706169725f3734193b466873656c665f323235193b4d6873656c665f323234193b4e65666e5f3231193b4f637a5f32193b55637a5f33193b5667706169725f3733193b6b6873656c665f323233193b6e69636861727465725f33193b70695f5f636f6e645f3437193b7c6a5f5f6c68735f305f3934193b906a5f5f6c68735f305f3933193b956a5f5f6c68735f305f3931193b976a5f5f6c68735f305f3932193b99666d70685f3233193bae667574786f5f35193bb067646174756d5f36193bd16873656c665f323232193bd469636861727465725f32193bd6695f5f636f6e645f3435193be26a5f5f6c68735f305f3930193bf66a5f5f6c68735f305f3839193bfb6a5f5f6c68735f305f3835193bfd6a5f5f6c68735f305f3836193bff666d70685f3232193c146b6368617274657241635f34193c166c686173436861727465725f33193c1f6d636861727465725574786f5f33193c2167646174756d5f35193c37695f5f636f6e645f3436193c436a5f5f6c68735f305f3838193c456463685f33193c4b6a5f5f6c68735f305f3837193c57667478696e5f36193c7478325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f7769746843686172746572496e707574193c756873656c665f323231193c7869636861727465725f31193c7a695f5f636f6e645f3433193c866a5f5f6c68735f305f3834193c9a6a5f5f6c68735f305f3833193ca46a5f5f6c68735f305f3739193ca66a5f5f6c68735f305f3830193ca8666d70685f3231193cbd6b6368617274657241635f33193cbf6c686173436861727465725f32193cc1695f5f636f6e645f3434193ccd6a5f5f6c68735f305f3832193cda6a5f5f6c68735f305f3831193cdc6d636861727465725574786f5f32193ce567646174756d5f34193d05667478696e5f35193d226873656c665f323230193d236772656349645f33193d256a72656349645374725f33193d276461635f32193d296a6361706f416464725f33193d2b695f5f636f6e645f3432193d376a5f5f6c68735f305f3738193d406a5f5f6c68735f305f3737193d426774786f75745f31193d596574786f7574193d8a68646174615f323633193d9078335f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f64656c65676174656454784f7574707574193d916873656c665f323139193d92696e6577446174614964193d936f6461746154797065507572706f7365193d9e66646744617461193da0676467446174756d193db5695f5f636f6e645f3431193dc16a5f5f6c68735f305f3736193dc368646174615f323632193dc56a72656349645374725f32193dd56d61637475616c49645374725f31193e23645f5f3333193e3b6873656c665f323138193e3c6a747970654e616d655f33193e3d6e5f5f7573656f70745f5f69645f31193e3e6469645f33193e406469645f34193e426a6361706f416464725f32193e436574786f5f31193e5368646174615f323631193e55695f5f636f6e645f3430193e616a5f5f6c68735f305f3735193e6363785f38193e87645f5f3332193eab6873656c665f323137193eac725f5f7573656f70745f5f747970654e616d65193ead6a747970654e616d655f31193eae6c5f5f7573656f70745f5f6964193eaf6469645f31193eb16a747970654e616d655f32193eb36469645f32193eb56a6361706f416464725f31193ed4667478696e5f34193ee468646174615f323630193ee6695f5f636f6e645f3339193ef26a5f5f6c68735f305f3734193ef463785f37193f28645f5f3331193f57783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6d6b44656c656761746564446174615072656469636174655f31193f586873656c665f323136193f596c726563496442797465735f32193f5a6e5f5f7573656f70745f5f72657174193f5b66726571745f36193f5d66726571745f37193f5f6768617344445f31193f6c6a72656349645374725f31193f6e695f5f636f6e645f3338193f7a6a5f5f6c68735f305f3733193f836a5f5f6c68735f305f3732193f85667478696e5f33193fb9783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6d6b44656c65676174656444617461507265646963617465193fba6873656c665f323135193fbb6f5f5f7573656f70745f5f7265634964193fbc6772656349645f31193fbd745f5f7573656f70745f5f72656349644279746573193fbe6a72656349644279746573193fc06772656349645f32193fc26c726563496442797465735f31193fc4656861734444193fc6687265634964537472193fc8695f5f636f6e645f3337193fd46a5f5f6c68735f305f3731193fdd6a5f5f6c68735f305f3730193fdf667478696e5f321940146873656c665f323134194017646164647219401f6873656c665f323133194020696467744c696e6b5f3119402166726f6c655f31194022745f5f7573656f70745f5f72657175697265645f371940236b72657175697265645f3134194024725f5f7573656f70745f5f69645072656669781940256a69645072656669785f331940276b72657175697265645f31351940296a69645072656669785f3419405c6873656c665f32313219405f695f5f636f6e645f333619406b6a5f5f6c68735f305f363919406d667574786f5f3419407d6a5f5f6c68735f305f363819407f667574786f5f33194085645f5f333019408d78345f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f7265736f6c7665436861727465725574786f19408e78295f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6164647265737319408f6873656c665f3231311940926b6368617274657241635f32194094686361706f41646472194096683c61737369676e3e1940a26a5f5f6c68735f305f36371940a46d63686172746572446174615f311940bb6374786f1940d5645f5f32391940eb6873656c665f3231301940ee695f5f636f6e645f33341940fa6a5f5f6c68735f305f36361940fc67646174756d5f3319410c6a5f5f6c68735f305f363519410e67646174756d5f32194114645f5f323819411c78325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f3619411d6873656c665f32303919411e745f5f7573656f70745f5f72657175697265645f3619411f6b72657175697265645f31321941216b72657175697265645f313319412367696e7075745f331941256a61635370656e64446774194127683c61737369676e3e19416278325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f351941636873656c665f323038194164745f5f7573656f70745f5f72657175697265645f351941656b72657175697265645f31301941676b72657175697265645f313119416967696e7075745f3219416b6961634d696e7444677419416d683c61737369676e3e1941a878325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f341941a978375f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f726571756972657344656c6567617465496e7075741941aa6873656c665f3230371941ab68747970654e616d651941ac745f5f7573656f70745f5f72657175697265645f341941ad6a72657175697265645f381941ae715f5f7573656f70745f5f6d6573736167651941af676d6573736167651941b16a72657175697265645f391941b3696d6573736167655f3119421768726573756c745f37194229695f5f636f6e645f33331942356a5f5f6c68735f305f36341942386a5f5f6c68735f305f3633194256695f5f636f6e645f33311942626a5f5f6c68735f305f363219426f6a5f5f6c68735f305f363019427165656e747279194274695f5f636f6e645f33321942806a5f5f6c68735f305f36311942826a706f6c6963794c696e6b1942846a69645072656669785f321942856b63616c6c6261636b5f3134194292645f5f323719429e676467744c696e6b19429f6a69645072656669785f311942d766736f6d655f341942e16873656c665f3230361942e2666b65795f31391942ec63785f361942fa6873656c665f32303519430068646174615f32353919430678325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f331943076873656c665f32303419433666726571745f35194337755f5f7573656f70745f5f636f6c6c61707365645f361943386c636f6c6c61707365645f31321943396b63616c6c6261636b5f313319433b6c636f6c6c61707365645f313319434c68726573756c745f361943646873656c665f32303319436a78325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f3219436b6873656c665f32303219436c745f5f7573656f70745f5f72657175697265645f3319436d6a72657175697265645f3619436f6a72657175697265645f3719438678325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f311943876873656c665f323031194388666b65795f3138194389745f5f7573656f70745f5f72657175697265645f3219438a6a72657175697265645f3419438c6a72657175697265645f3519438e626f65194390626f6519439c6a5f5f6c68735f305f35391943af6a5f5f6c68735f305f35381943b163655f311943ce66736f6d655f331943da68646174615f3235381943e06873656c665f3230301943e668646174615f3235371943ec78305f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174611943ed6873656c665f3139391943ee666b65795f31371943fb6b636861727465724461746119440b6873656c665f31393819440c666b65795f313619441663785f351944246873656c665f3139371944276165194429695f5f636f6e645f32381944356a5f5f6c68735f305f35371944446a5f5f6c68735f305f35361944496a5f5f6c68735f305f343919444b667574786f5f3219444d68616374697669747919444f6d77726f6e674163746976697479194451695f5f636f6e645f323919445d6a5f5f6c68735f305f353519446b6a5f5f6c68735f305f35341944796a5f5f6c68735f305f35331944866a5f5f6c68735f305f35321944936a5f5f6c68735f305f35311944966a5f5f6c68735f305f35301944c66873656c665f3139351944c96a726563757273655f39311944d96a726563757273655f39301944da6873656c665f3139361944db6566697273741944f367686561645f38361944f5686b65795f646174611944f7666b65795f31341944f96a76616c75655f646174611944fb6776616c75655f371945076776616c69645f38194508666b65795f313519451d6776616c69645f3719451e6776616c75655f3819454e666d70685f323019454f67636861727465721945616873656c665f31393419456d6873656c665f3139331945746873656c665f3139321945776a5f5f6c68735f305f343819457a6873656c665f31393119458a6a5f5f6c68735f305f343219458c683c61737369676e3e19458e67696e7075745f31194590666d70685f31391945926a5f5f6c68735f305f3433194594657575745f311945966f76616c696461746f72486173685f311945986b74617267657456616c756519459a7172657475726e6564556e6368616e6765641945b6695f5f636f6e645f32361945c26a5f5f6c68735f305f34351945c46476685f341945df695f5f636f6e645f32371945eb6a5f5f6c68735f305f34371945f96a5f5f6c68735f305f343619460d636f5f311946246a5f5f6c68735f305f343419464a783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f64656c6567617465556e6368616e6765645f3119464b6873656c665f31393019464c65726563496419464e657374724964194658695f5f636f6e645f32351946646a5f5f6c68735f305f3431194667645f5f32361946bd68726573756c745f351946c9695f5f636f6e645f32311946d56a5f5f6c68735f305f33391946d76473615f311946dd695f5f636f6e645f32341946e96a5f5f6c68735f305f34301946eb68696e6465785f31351946ed6a6669656c64735f3135371946fc6c666f756e6452656349645f3119473d645f5f32351947556a5f5f6c68735f305f33381947646a5f5f6c68735f305f33321947666c616374697669746965735f3119478270616374734f6e546869735265636f72641947e764615f31371947e9695f5f636f6e645f32321947f56a5f5f6c68735f305f333719480d6a5f5f6c68735f305f33361948256a5f5f6c68735f305f333519483d6a5f5f6c68735f305f333319483f627361194841695f5f636f6e645f323319484d6a5f5f6c68735f305f333419484f68696e6465785f31341948516a6669656c64735f3135361948606a666f756e64526563496419486e6b61637475616c49645374721948a6645f5f32341948b9645f5f32331948d7645f5f32321948ef78395f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f64656c6567617465556e6368616e6765641948f06873656c665f3138391948f1647365656419490568726573756c745f34194911695f5f636f6e645f313719491d6a5f5f6c68735f305f333019491f646d615f31194925695f5f636f6e645f32301949316a5f5f6c68735f305f33311949336a6669656c64735f313535194947645f5f323119495f6a5f5f6c68735f305f32371949616a6163746976697469657319497971666f756e645769746854686973536565641949ce64615f31361949d0695f5f636f6e645f31381949dc6a5f5f6c68735f305f32381949de626d611949e0695f5f636f6e645f31391949ec6a5f5f6c68735f305f32391949ee6a6669656c64735f313534194a02645f5f3230194a0c645f5f3139194a2a645f5f3138194a3e6873656c665f313838194a3f65666e5f3230194a44676974656d5f3131194a4b6873656c665f313836194a4c68696e6465785f3133194a4e6a726563757273655f3839194a566a726563757273655f3838194a576873656c665f313837194a5864695f3132194a856873656c665f313835194a86656d73675f34194ad3782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6572726f72194ad46873656c665f313834194ad56b617373657274696f6e4f6b194ad6656d73675f33194b05783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f67656e6572696344656c65676174654163746976697479194b066873656c665f313833194b226873656c665f313832194b2564695f3131194b2769696e70757444617461194b2d695f5f636f6e645f3135194b396a5f5f6c68735f305f3235194b3b68696e6465785f3132194b3d6a6669656c64735f313533194b4d695f5f636f6e645f3136194b596a5f5f6c68735f305f3236194b5b66696e64657832194b6a645f5f3137194b77645f5f3136194b856873656c665f313831194b8c646c696e6b194b8d64726f6c65194b8e686964507265666978194b8f65696e707574194b90666d70685f3138194bb96873656c665f313830194bbf6873656c665f313739194bc568646174615f323536194bc7645f5f3135194bdb6873656c665f313738194be168646174615f323535194be3645f5f3134194bf76873656c665f313737194c0d6873656c665f313736194c1468646174615f323534194c2167706169725f3732194c2368696e6465785f3131194c256a6669656c64735f313532194c7e68646174615f323533194c8b67706169725f3731194c8d68696e6465785f3130194c8f6a6669656c64735f313531194ce8666d70685f3137194ce9735f5f7573656f70745f5f726566496e70757473194cea69726566496e70757473194cec6b726566496e707574735f31194cee6b6368617274657241635f31194cf06c686173436861727465725f31194cf26d636861727465725574786f5f31194cf463637464194d02695f5f636f6e645f3133194d0e6a5f5f6c68735f305f3234194d106463685f32194d166a5f5f6c68735f305f3231194d18695f5f636f6e645f3134194d246a5f5f6c68735f305f3233194d266463685f31194d2c6a5f5f6c68735f305f3232194d3e667478696e5f31194d5f666d70685f3136194d6169636861727465724163194d636a68617343686172746572194d6c6b636861727465725574786f194d6f695f5f636f6e645f3132194d7b6a5f5f6c68735f305f3230194d7d626368194d836a5f5f6c68735f305f3139194d8f647478696e194da368646174615f323531194db067706169725f3730194dc268646174615f323532194dd36a6669656c64735f313530194df868646174615f323530194dfe68646174615f323438194e0b67706169725f3639194e1d68646174615f323439194e2e6a6669656c64735f313439194e5368646174615f323437194e5968646174615f323435194e6667706169725f3638194e7868646174615f323436194e896a6669656c64735f313438194eae68646174615f323434194eb468646174615f323432194ec167706169725f3637194ed368646174615f323433194ee46a6669656c64735f313437194f0968646174615f323431194f1768646174615f323339194f2467706169725f3636194f3668646174615f323430194f476a6669656c64735f313436194f6c68646174615f323338194f726873656c665f313735194f8668646174615f323336194f9367706169725f3635194fa568646174615f323337194fb66a6669656c64735f313434194fc367686561645f3835194fdd6a6669656c64735f31343519500c68646174615f323335195012784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f646174615f3119501378465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f646174615f3119501478495f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f646174615f31195015784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f646174615f31195016784e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f646174615f3119501778475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f646174615f3119501868646174615f32333419501a6969676e6f72655f313619503a784b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f6461746119503b78445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f6461746119503c78475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f6461746119503d784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f6461746119503e784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f6461746119503f78455f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f6461746119504068646174615f32333319508a67646174756d5f3119508b667574786f5f311950a16873656c665f3137341950a76873656c665f3137331950ad68646174615f3233311950ba67706169725f36341950cc68646174615f3233321950dd6a6669656c64735f3134311950ea67686561645f38331950f66a6669656c64735f31343219510367686561645f383419510f6a6669656c64735f31343319514868646174615f32333019514e65646174756d19514f647574786f1951656873656c665f31373219516b6873656c665f31373119517168646174615f32323819517e67706169725f363319519068646174615f3232391951a16a6669656c64735f3133381951ae67686561645f38311951ba6a6669656c64735f3133391951c767686561645f38321951d36a6669656c64735f31343019520c68646174615f32323719521a68646174615f32323519522767706169725f363219523968646174615f32323619524a6a6669656c64735f31333719526f68646174615f32323419527578445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f646174615f3119527678495f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f646174615f3119527778465f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f646174615f3119527868646174615f32323319527a6969676e6f72655f313519529478425f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f6461746119529578475f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f6461746119529678445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f6461746119529768646174615f3232321952be68646174615f3232301952cb67706169725f36311952dd68646174615f3232311952ee6a6669656c64735f3133331952fb67686561645f37381953076a6669656c64735f31333419531467686561645f37391953206a6669656c64735f31333519532d67686561645f38301953396a6669656c64735f31333619537c68646174615f323139195395666d61705f32391953976a726563757273655f383719539d6a726563757273655f383619539e666d61705f33301953ab67686561645f37371953d868646174615f3231381953de68646174615f3231361953eb67706169725f36301953fd68646174615f32313719540e6a6669656c64735f3133321954356873656c665f31373019543b68646174615f32313519543d666c73745f323419543f645f5f31331954566873656c665f31363919545c68646174615f32313419545e666d61705f3238195460645f5f31321954776873656c665f31363819547d6873656c665f3136371954836873656c665f3136361954896873656c665f31363519548f68646174615f323133195491666d61705f3237195493645f5f31311954aa6873656c665f3136341954b068646174615f3231321954b2666c73745f32331954b4645f5f31301954cb6873656c665f3136331954d268646174615f3231311954d46969676e6f72655f31341954e868646174615f3230391954f567706169725f353919550768646174615f3231301955186a6669656c64735f31323319552567686561645f36391955316a6669656c64735f31323419553e67686561645f373019554a6a6669656c64735f31323519555767686561645f37311955636a6669656c64735f31323619557067686561645f373219557c6a6669656c64735f31323719558967686561645f37331955956a6669656c64735f3132381955a267686561645f37341955ae6a6669656c64735f3132391955bb67686561645f37351955c76a6669656c64735f3133301955d467686561645f37361955e06a6669656c64735f31333119565568646174615f32303819566e666c73745f32311956706a726563757273655f38351956766a726563757273655f3834195677666c73745f323219569e68646174615f3230371956b7666d61705f32351956b96a726563757273655f38331956bf6a726563757273655f38321956c0666d61705f32361956cd67686561645f36381956fa68646174615f323036195713666d61705f32331957156a726563757273655f383119571b6a726563757273655f383019571c666d61705f323419572967686561645f363719575668646174615f32303519576f666c73745f31391957716a726563757273655f37391957776a726563757273655f3738195778666c73745f323019579b78405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f646174615f3119579c78445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f646174615f3119579d78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f646174615f3119579e68646174615f3230341957a06969676e6f72655f31331957ba783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f646174611957bb78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f646174611957bc78405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f646174611957bd68646174615f3230331957e368646174615f3230321957e96873656c665f3136321957f168646174615f3230311957f3635f5f391958076873656c665f31363119580f6873656c665f31363019582168646174615f3230301958236969676e6f72655f313219583768646174615f31393919588e68646174615f31393819589b67706169725f353819589d67696e6465785f3919589f6a6669656c64735f3132321958f868646174615f31393619590567706169725f353719591768646174615f3139371959286a6669656c64735f31323119594d68646174615f31393419595a67706169725f353619596c68646174615f31393519597d6a6669656c64735f3132301959a268646174615f3139321959af67706169725f35351959c168646174615f3139331959d26a6669656c64735f3131371959df67686561645f36351959fb6a6669656c64735f313138195a0867686561645f3636195a146a6669656c64735f313139195a4d6873656c665f313539195a536873656c665f313538195a596873656c665f313537195a5f68646174615f313930195a6c67706169725f3534195a7e68646174615f313931195a8f6a6669656c64735f313133195a9c67686561645f3632195aa86a6669656c64735f313134195ab567686561645f3633195ac16a6669656c64735f313135195ace67686561645f3634195ada6a6669656c64735f313136195b1d68646174615f313839195b2368646174615f313837195b3067706169725f3533195b4268646174615f313838195b536a6669656c64735f313132195b7868646174615f313836195b7e784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f646174615f31195b7f78495f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f31195b80784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f646174615f31195b81784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f646174615f31195b82784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f646174615f31195b8368646174615f313835195b856969676e6f72655f3131195ba378485f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f64617461195ba478475f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f64617461195ba5784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f64617461195ba6784b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f64617461195ba7784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f64617461195ba868646174615f313834195be66873656c665f313536195be765666e5f3139195bec676974656d5f3130195bf26873656c665f313535195bfd6873656c665f313534195c036873656c665f313533195c0968646174615f313833195c0b6969676e6f72655f3130195c2168646174615f313832195c326a6669656c64735f313038195c3f67686561645f3539195c4b6a6669656c64735f313039195c5867686561645f3630195c646a6669656c64735f313130195c7167686561645f3631195c7d6a6669656c64735f313131195cac68646174615f313830195cb967706169725f3532195ccb68646174615f313831195cdc6a6669656c64735f313035195ce967686561645f3537195cff6a6669656c64735f313036195d0c67686561645f3538195d186a6669656c64735f313037195d5168646174615f313739195d6a666c73745f3137195d6c6a726563757273655f3737195d726a726563757273655f3736195d73666c73745f3138195da66873656c665f313532195dac68646174615f313737195db967706169725f3531195dcb68646174615f313738195ddc6a6669656c64735f313033195de967686561645f3536195df56a6669656c64735f313034195e2468646174615f313736195e2a78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f646174615f31195e2b785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f646174615f31195e2c68646174615f313735195e2e6869676e6f72655f39195e4678545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f64617461195e4778595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f64617461195e4868646174615f313734195e626873656c665f313531195e6868646174615f313733195e6a635f5f38195e7e6873656c665f313530195e946873656c665f313439195ea068646174615f313732195ea26869676e6f72655f38195eb868646174615f313731195ec9696669656c64735f3939195ed667686561645f3533195ee86a6669656c64735f313030195ef567686561645f3534195f116a6669656c64735f313031195f1e67686561645f3535195f2a6a6669656c64735f313032195f5968646174615f313730195f6667706169725f3530195f6867696e6465785f38195f6a696669656c64735f3938195fc36873656c665f313438195fc4666d70685f3135195fc5745f5f7573656f70745f5f72657175697265645f31195fc66a72657175697265645f32195fc7781b5f5f7573656f70745f5f637265617465644f7252657475726e6564195fc871637265617465644f7252657475726e6564195fca6a72657175697265645f33195fcc73637265617465644f7252657475726e65645f31195fce695f5f6c68735f305f39195fd063757574195fd26d76616c696461746f7248617368195fd46461635f31195fd664634f7252195feb6b68617344656c6567617465196001695f5f636f6e645f313119600d6a5f5f6c68735f305f31381960166a5f5f6c68735f305f31361960186a5f5f6c68735f305f313719604d685f5f636f6e645f391960596a5f5f6c68735f305f313519605b6476685f3319607b6a5f5f6c68735f305f3132196084695f5f636f6e645f31301960906a5f5f6c68735f305f31341960936a5f5f6c68735f305f313319609c616f1960ab685f5f636f6e645f381960b76a5f5f6c68735f305f31311960ba6a5f5f6c68735f305f31301960e46873656c665f3134371960e565666e5f31381960eb666974656d5f391960f268646174615f3136391960f868646174615f3136381960fe6873656c665f3134361960ff68696e707574735f31196100666d70685f3134196101725f5f7573656f70745f5f72657175697265641961026872657175697265641961046a72657175697265645f31196106677575744e616d65196108685f5f636f6e645f36196114695f5f6c68735f305f3819612a695f5f6c68735f305f3619612c6476685f3219612e716e6565647341646472576974684372656419613062616319613d685f5f636f6e645f3719614969666f756e64476f6f64196153695f5f6c68735f305f3719617464695f31301961ae6873656c665f3134351961b46873656c665f3134341961b565666e5f31371961bb666974656d5f381961c268646174615f3136371961ca68646174615f3136361961d078475f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f68617344656c6567617465496e7075741961d178455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f68617356616c69644f75747075741961d26873656c665f3134331961d366696e707574731961d4666d70685f31331961d56d696e70757452657175697265641961d7685f5f636f6e645f331961e3695f5f6c68735f305f351961e7695f5f6c68735f305f321961e9727370656e6444656c6567617465496e7075741961eb747370656e6444656c6567617465497356616c69641961f9685f5f636f6e645f34196205695f5f6c68735f305f3319620764615f3135196209685f5f636f6e645f35196215695f5f6c68735f305f34196224635f5f37196234635f5f361962616873656c665f31343219626766736f6d655f3219627368646174615f3136351962796873656c665f31343119627a666d70685f31321962856873656c665f313430196286666d70685f31311962986873656c665f31333919629e68646174615f3136341962a0635f5f351962b46873656c665f3133381962bb68646174615f3136331962bd6869676e6f72655f371962d468646174615f3136321962e5696669656c64735f39341962f267686561645f35301962fe696669656c64735f393519630b67686561645f3531196317696669656c64735f393619632467686561645f3532196330696669656c64735f393719635f68646174615f31363119636c67706169725f343919636e67696e6465785f37196370696669656c64735f39331963d168646174615f3136301963df68646174615f3135391963e568646174615f3135371963f267706169725f343819640468646174615f313538196415696669656c64735f393119642267686561645f343919642e696669656c64735f393219645d68646174615f3135361964636873656c665f31333719646968646174615f31353519646b666c73745f313619646d635f5f3419648468646174615f31353319649167706169725f34371964a368646174615f3135341964b4696669656c64735f38391964c167686561645f34381964cd696669656c64735f39301964fc68646174615f313532196515666c73745f31341965176a726563757273655f373519651d6a726563757273655f373419651e666c73745f313519654168646174615f31353119654768646174615f31343919655467706169725f343619656668646174615f313530196577696669656c64735f383619658467686561645f3436196590696669656c64735f383719659d67686561645f34371965a9696669656c64735f38381965e268646174615f3134381965e868646174615f3134361965f567706169725f343519660768646174615f313437196618696669656c64735f383319662567686561645f3434196631696669656c64735f383419663e67686561645f343519664a696669656c64735f383519668368646174615f31343519668968646174615f31343319669667706169725f34341966a868646174615f3134341966b9696669656c64735f38301966c667686561645f34321966d2696669656c64735f38311966df67686561645f34331966eb696669656c64735f383219672468646174615f31343219672a68646174615f31343019673767706169725f343319674968646174615f31343119675a696669656c64735f373819676767686561645f3431196773696669656c64735f37391967a26873656c665f3133361967a868646174615f3133381967b567706169725f34321967c768646174615f3133391967d8696669656c64735f37361967e567686561645f34301967f1696669656c64735f373719682068646174615f3133371968266873656c665f31333519682c68646174615f31333519683967706169725f343119684b68646174615f31333619685c696669656c64735f373419686967686561645f3339196875696669656c64735f37351968a468646174615f3133341968aa6873656c665f3133341968b668646174615f3133321968c367706169725f34301968d568646174615f3133331968e6696669656c64735f37321968f367686561645f3338196905696669656c64735f373319693468646174615f31333119693a68646174615f31323919694767706169725f333919695968646174615f31333019696a696669656c64735f373019697767686561645f3337196991696669656c64735f37311969c078695f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f311969c1786d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f311969c278645f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f311969c378635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f311969c478635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f311969c578675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f311969c678675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f311969c778675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f311969c8786c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f311969c978615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4f74686572416374697669746965735f5f69735f76616c69645f646174615f311969ca68646174615f3132381969cc6869676e6f72655f361969f46873656c665f3133331969f5735f5f7573656f70745f5f736570617261746f721969f669736570617261746f721969f86b736570617261746f725f311969fa6a726563757273655f3733196a026a726563757273655f3732196a03666c73745f3133196a0463736570196a2f78675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f64617461196a30786b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f64617461196a3178625f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f64617461196a3278615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f64617461196a3378615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f64617461196a3478655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f64617461196a3578655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f64617461196a3678655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f64617461196a37786a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f64617461196a38785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4f74686572416374697669746965735f5f69735f76616c69645f64617461196a3968646174615f313237196ab36873656c665f313332196ac368646174615f313235196ad067706169725f3338196ae268646174615f313236196af3696669656c64735f3638196b0067686561645f3336196b16696669656c64735f3639196b4568646174615f313234196b4b68646174615f313232196b5867706169725f3337196b6a68646174615f313233196b7b696669656c64735f3635196b8867686561645f3334196b94696669656c64735f3636196ba167686561645f3335196bad696669656c64735f3637196be668646174615f313231196bec68646174615f313139196bf967706169725f3336196c0b68646174615f313230196c1c696669656c64735f3632196c2967686561645f3332196c35696669656c64735f3633196c4267686561645f3333196c4e696669656c64735f3634196c8768646174615f313138196c8d68646174615f313136196c9a67706169725f3335196cac68646174615f313137196cbd696669656c64735f3631196ce268646174615f313135196ce868646174615f313133196cf567706169725f3334196d0768646174615f313134196d18696669656c64735f3539196d2567686561645f3331196d41696669656c64735f3630196d7068646174615f313132196d7668646174615f313130196d8367706169725f3333196d9568646174615f313131196da6696669656c64735f3538196dcb68646174615f313039196dd16873656c665f313331196dd76873656c665f313330196ddd68646174615f313037196dea67706169725f3332196dfc68646174615f313038196e0d696669656c64735f3535196e1a67686561645f3239196e26696669656c64735f3536196e3367686561645f3330196e3f696669656c64735f3537196e7868646174615f313036196e7e78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f646174615f31196e7f785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f646174615f31196e80785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f646174615f31196e81785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f646174615f31196e8278605f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174615f31196e83785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174615f31196e8478595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f646174615f31196e8568646174615f313035196e876869676e6f72655f35196ea978575f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f64617461196eaa78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f64617461196eab785a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f64617461196eac785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f64617461196ead785e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f64617461196eae785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f64617461196eaf78575f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f64617461196eb068646174615f313034196f076873656c665f313239196f0d6873656c665f313238196f136873656c665f313237196f196873656c665f313236196f1f68646174615f313032196f2c67706169725f3331196f3e68646174615f313033196f4f696669656c64735f3530196f5c67686561645f3235196f68696669656c64735f3531196f7567686561645f3236196f81696669656c64735f3532196f8e67686561645f3237196f9a696669656c64735f3533196fa767686561645f3238196fb3696669656c64735f353419700068646174615f31303119700667646174615f393919701367706169725f333019702568646174615f313030197036696669656c64735f343919705b67646174615f39381970616873656c665f3132351970676873656c665f31323419706d6873656c665f31323319707367646174615f393619708067706169725f323919709267646174615f39371970a3696669656c64735f34351970b067686561645f32321970bc696669656c64735f34361970c967686561645f32331970d5696669656c64735f34371970e267686561645f32341970ee696669656c64735f343819713167646174615f3935197137784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f646174615f31197138784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f646174615f3119713978505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f646174615f3119713a67646174615f393419713c6869676e6f72655f34197156784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f64617461197157784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f64617461197158784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f6461746119715967646174615f393319717f67646174615f393119718c67706169725f323819719e67646174615f39321971af696669656c64735f34321971bc67686561645f32301971c8696669656c64735f34331971d567686561645f32311971e1696669656c64735f343419721a67646174615f383919722767706169725f323719723967646174615f393019724a696669656c64735f333919725767686561645f3138197263696669656c64735f343019727067686561645f313919727c696669656c64735f34311972b567646174615f38381972bb6873656c665f3132321972c16873656c665f3132311972c767646174615f38361972d467706169725f32361972e667646174615f38371972f7696669656c64735f333619730467686561645f3136197310696669656c64735f333719731d67686561645f3137197329696669656c64735f333819736267646174615f383519736867646174615f383319737567706169725f323519738767646174615f3834197398696669656c64735f33331973a567686561645f31341973b1696669656c64735f33341973be67686561645f31351973ca696669656c64735f333519740367646174615f383219740967646174615f383019741667706169725f323419742867646174615f3831197439696669656c64735f333119744667686561645f3133197452696669656c64735f333219748167646174615f373919748778515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f646174615f3119748878515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f646174615f31197489784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f646174615f3119748a78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f3119748b78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f3119748c67646174615f373819748e6869676e6f72655f331974ac784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f646174611974ad784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f646174611974ae784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f646174611974af78545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f646174611974b078545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f646174611974b167646174615f37371974ef67646174615f37351974fc67706169725f323319750e67646174615f373619751f696669656c64735f333019754467646174615f373419755267646174615f373219755f67706169725f323219757167646174615f3733197582696669656c64735f32391975a767646174615f37311975ad67646174615f36391975ba67706169725f32311975cc67646174615f37301975dd696669656c64735f32371975ea67686561645f31321975f6696669656c64735f323819762567646174615f363819762b6873656c665f3132301976356873656c665f31313919763b67646174615f363619764867706169725f323019765a67646174615f363719766b696669656c64735f323519767867686561645f3131197684696669656c64735f32361976b367646174615f36351976b967646174615f36331976c667706169725f31391976d867646174615f36341976e9696669656c64735f323419770e67646174615f363219771467646174615f363019772167706169725f313819773367646174615f3631197744696669656c64735f323319776967646174615f353919777767646174615f353719778467706169725f313719779667646174615f35381977a7696669656c64735f32321977cc67646174615f35361977da67646174615f35341977e767706169725f31361977f967646174615f353519780a696669656c64735f323119782f67646174615f353319783578475f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f646174615f3119783678485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f646174615f31197837784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f646174615f31197838784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f646174615f31197839784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f3119783a784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f646174615f3119783b78535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f646174615f3119783c78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f646174615f3119783d67646174615f353219783f6869676e6f72655f3219786378455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f6461746119786478465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f64617461197865784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f64617461197866784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f64617461197867784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f64617461197868784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f6461746119786978515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f6461746119786a784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f6461746119786b67646174615f35311978ce67646174615f34391978db67706169725f31351978ed67646174615f35301978fe696669656c64735f323019792367646174615f343819792967646174615f343619793667706169725f313419794867646174615f3437197959696669656c64735f313919797e67646174615f34351979846873656c665f31313819798a6873656c665f31313719799067646174615f343319799d67706169725f31331979af67646174615f34341979c0696669656c64735f31361979cd66686561645f391979d9696669656c64735f31371979e667686561645f31301979f2696669656c64735f3138197a2b67646174615f3432197a3178585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f646174615f31197a3278555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f646174615f31197a33785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f646174615f31197a3467646174615f3431197a366869676e6f72655f31197a5078565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f64617461197a5178535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f64617461197a52785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f64617461197a5367646174615f3430197a796776616c75655f36197a7b685f5f636f6e645f31197a87675f5f6c68735f30197a89696669656c64735f3135197a8b685f5f636f6e645f32197a97695f5f6c68735f305f31197a9c635f5f33197aa8635f5f32197aae6873656c665f313136197ab56873656c665f313135197abd6873656c665f313134197ac567646174615f3339197ac76669676e6f7265197adb67646174615f3338197b0f677478496e707574197b11687461726765744964197b136972656465656d657273197b15737370656e64734578706563746564496e707574197b1f67707572706f7365197b21665f5f636f6e64197b2d627370197b36635f5f31197b406873656c665f313133197b4165666e5f3136197b436a726563757273655f3731197b496a726563757273655f3730197b4a666d61705f3232197b59666974656d5f37197b786873656c665f313132197b79666b65795f3133197b8363785f34197b8b67646174615f3337197b8d666d61705f3231197b8f615f197ba6666d61705f3139197ba86a726563757273655f3639197bae6a726563757273655f3638197baf666d61705f3230197bbc66686561645f38197be96873656c665f313131197bed6873656c665f313130197bf16873656c665f313039197bf265666e5f3135197bf46a726563757273655f3637197bfa6a726563757273655f3636197bfb666c73745f3132197c0a666974656d5f36197c25666d70685f3130197c266c5f5f7573656f70745f5f746e197c2762746e197c28715f5f7573656f70745f5f746e4279746573197c2967746e4279746573197c2a62746e197c2b65636f756e74197c2d64746e5f31197c2f69746e42797465735f31197c3167636f756e745f31197c6e66726571745f34197c6f755f5f7573656f70745f5f636f6c6c61707365645f35197c706c636f6c6c61707365645f3130197c716b63616c6c6261636b5f3132197c736c636f6c6c61707365645f3131197c8e66726571745f33197c8f755f5f7573656f70745f5f636f6c6c61707365645f34197c906b636f6c6c61707365645f38197c916b63616c6c6261636b5f3131197c936b636f6c6c61707365645f39197c9568726573756c745f33197cbe66726571745f32197cbf755f5f7573656f70745f5f636f6c6c61707365645f33197cc06b636f6c6c61707365645f36197cc26b636f6c6c61707365645f37197cd966726571745f31197cda755f5f7573656f70745f5f617373657274696f6e5f31197cdb6b617373657274696f6e5f32197cdc735f5f7573656f70745f5f6f6e4572726f725f31197cdd696f6e4572726f725f32197cde775f5f7573656f70745f5f73686f77537563636573735f31197cdf676f6e4572726f72197ce16b617373657274696f6e5f33197ce3696f6e4572726f725f33197ce56d73686f77537563636573735f33197d1f6472657174197d20735f5f7573656f70745f5f617373657274696f6e197d2169617373657274696f6e197d22715f5f7573656f70745f5f6f6e4572726f72197d23676f6e4572726f72197d24755f5f7573656f70745f5f73686f7753756363657373197d25676f6e4572726f72197d276b617373657274696f6e5f31197d29696f6e4572726f725f31197d2b6d73686f77537563636573735f31197d79647461736b197d856767726f75705f32197d86755f5f7573656f70745f5f636f6c6c61707365645f32197d876b636f6c6c61707365645f34197d88725f5f7573656f70745f5f63616c6c6261636b197d896a63616c6c6261636b5f39197d8b6b636f6c6c61707365645f35197d8d6b63616c6c6261636b5f3130197dba78285f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f6c6f6747726f7570197dbb6767726f75705f31197dbc755f5f7573656f70745f5f636f6c6c61707365645f31197dbd6b636f6c6c61707365645f32197dbe6a63616c6c6261636b5f38197dc06b636f6c6c61707365645f33197dcd68726573756c745f32197df7705f5f7573656f70745f5f737461747573197df866737461747573197dfa687374617475735f31197e0d6567726f7570197e0e735f5f7573656f70745f5f636f6c6c6170736564197e0f69636f6c6c6170736564197e116b636f6c6c61707365645f31197e3767646174615f3336197e4c67646174615f3335197e58636e5f35197e5967646174615f3334197e6e6862797465735f3130197e8366686173685f31197e8f6873656c665f313037197e9065666e5f3133197e916a63616c6c6261636b5f37197e936a726563757273655f3635197e9b6a726563757273655f3634197e9c6873656c665f313038197e9d65666e5f3134197eae66686561645f37197ed267646174615f3333197edc67646174615f3332197ee967706169725f3132197eeb67696e6465785f36197eed696669656c64735f3134197f4667646174615f3331197f5367706169725f3131197f55657461675f38197f57696669656c64735f3133197f9e666c6973745f33197fa969746573745f68656164197faa69746573745f7461696c197fab666c6973745f32197fcc67646174615f3330197fd967706169725f3130197fdb67696e6465785f35197fdd696669656c64735f313219805267646174615f32391980676762797465735f39198069636e5f3419808a6873656c665f3130361980916873656c665f3130351980986873656c665f3130341980a067646174615f32381980aa67646174615f32371980bf6873656c665f3130331980c66873656c665f3130321980cd6873656c665f3130311980d46873656c665f3130301980db6773656c665f39391980e26773656c665f39381980e96773656c665f39371980f067646174615f32361980f867646174615f323519810067646174615f32341981166773656c665f39361981176476685f3119811f6773656c665f3935198120627668198125666f757470757419812b6773656c665f393419812c646861736819812e6a63726564656e7469616c19814967646174615f323319814f6773656c665f39331981576773656c665f39321981646773656c665f393119816565666e5f313219816d676f75747075747319817366707265765f331981746874784f757470757419817d6773656c665f393019817e6776616c75655f3519818464615f313419818564625f313919818c65615f71747919818d65625f71747919819564615f313319819664625f313819819766636f6d705f331981996a726563757273655f36331981a36a726563757273655f36321981a4666b6579735f341981b1666b65795f31321981d866636f6d705f321981d964615f31321981da64625f31371981dc6a726563757273655f36311981e66a726563757273655f36301981e7666b6579735f331981f4666b65795f31311982196773656c665f383919821a676f746865725f331982276773656c665f383819823067646174615f323219824967646174615f32311982626a63616c6c6261636b5f3619826e6773656c665f38371982766773656c665f383619827c6773656c665f3835198281657461675f37198282696669656c64735f31311982906974785f69645f73747219829269696e6465785f7374721982a363695f391982ae6a74785f69645f646174611982ba6773656c665f38341982bf657461675f361982c0696669656c64735f31301982d46762797465735f381982e367646174615f32301982e96773656c665f38331982ef6773656c665f38321982f66773656c665f38311982fd6773656c665f38301983056773656c665f373919830e6773656c665f37381983136773656c665f37371983196773656c665f373619831a6c73656c664c656e677468466e19831b65737461727419831c63656e6419831e696e6f726d616c697a6519832065666e5f31311983266773746172745f3119832865666e5f313019832e65656e645f3119833e65706f735f3119835864615f313119835964625f3136198368666c73745f313019836966636f6d705f3119836b6a726563757273655f35391983716a726563757273655f3538198372666c73745f313119838066686561645f36198381667461696c5f3319839563785f33198396656c73745f3819839764636f6d701983996a726563757273655f353719839f6a726563757273655f35361983a0656c73745f391983b266686561645f351983da6773656c665f37351983db64666e5f391983dc64696e69741983de6a726563757273655f35351983e66a726563757273655f35341983e76572656d5f311983e8656c73745f3719840864615f313019840964625f313519841163615f3919841264625f3134198413646f705f311984156a726563757273655f35331984236a726563757273655f3532198424666b6579735f3219842568726573756c745f31198432666b65795f3130198434667461696c5f32198436666974656d5f3519846b666d61705f313719846c656d70685f3919846e6a726563757273655f35311984746a726563757273655f3530198475666d61705f31381984a9626f701984aa63615f381984ab64625f31331984ad6a726563757273655f34391984bb6a726563757273655f34381984bc666b6579735f311984bd66726573756c741984ca656b65795f391984cc667461696c5f311984ce6373756d19850463615f3719850564625f313219850765614b6579731985096a726563757273655f343719850b6b756e69717565424b6579731985186a726563757273655f3436198519646b65797319851a666d61705f3136198527656b65795f3819855963615f3619855a64625f313119855c6a726563757273655f34351985646a726563757273655f3434198565656c73745f361985666372656d198584656c73745f35198585656b65795f3719858a666974656d5f341985906773656c665f373319859164666e5f371985936a726563757273655f343319859b6a726563757273655f343219859c6773656c665f373419859d64666e5f381985c2666d61705f31341985c46a726563757273655f34311985ca6a726563757273655f34301985cb666d61705f31351985eb666d61705f31321985ec656b65795f351985ee6a726563757273655f33391985f66a726563757273655f33381985f7666d61705f31331985f8656b65795f3619862c6773656c665f373219862d656d70685f3719862f656d70685f381986316a726563757273655f33371986376a726563757273655f3336198638666d61705f31311986716773656c665f373119867766706169725f391986856773656c665f373019868664666e5f361986906773656c665f36391986936a726563757273655f33351986996a726563757273655f333419869a666d61705f31301986bf68746f6b656e735f311986c16a726563757273655f33331986c76a726563757273655f33321986c868746f6b656e735f321986ef6773656c665f36381986f0656d70685f351986f2656d70685f361986f46a726563757273655f33311986fa6a726563757273655f33301986fb656d61705f391987286773656c665f3637198729666e616d655f3219872a6a696e6e65725f74657374198739656d61705f3719873b6a726563757273655f32391987416a726563757273655f3238198742656d61705f3819875e66686561645f34198760656b65795f341987626776616c75655f341987926773656c665f3636198793666e616d655f3119879b656d61705f3519879c646e616d6519879e696e616d655f646174611987a06a726563757273655f32371987a66a726563757273655f32361987a7656d61705f361987c066686561645f331987c2656b65795f331987c46776616c75655f331987f163615f341987f263625f391987f463615f351987f664625f313019882663625f3819883467646174615f313919883e67646174615f313819884d67646174615f313719885a66706169725f3819885c67696e6465785f3419885e686669656c64735f391988a3636e5f331988a467646174615f31361988b96762797465735f371988ce67646174615f31351988cf67696e6465785f331988d066746573745f611988d166746573745f621988de66706169725f371988f0686669656c64735f3819890a647461696c19894d67646174615f313419895c67646174615f313319897567646174615f31321989786773656c665f363519897964666e5f351989816773656c665f363319898264666e5f33198983636e696c1989856a726563757273655f323519898d6a726563757273655f323419898e6773656c665f363419898f64666e5f3419899c66686561645f321989c66773656c665f36321989cb6773656c665f36311989d16773656c665f36301989d76773656c665f35391989e36773656c665f35381989e46c6173736574436c6173735f321989e6716d696e74696e67506f6c696379486173681989e86b746f6b656e4e616d655f321989ea676f757465725f331989ec67696e6e65725f351989f467696e6e65725f341989f5656d61705f34198a27676f757465725f32198a2867696e6e65725f33198a29656d61705f33198a686773656c665f3537198a6f6773656c665f3536198a74657461675f35198a75686669656c64735f37198a83717370656e64696e675f637265645f737472198a85777374616b696e675f637265645f6f7074696f6e5f737472198a9c6b6f7074696f6e5f64617461198aa769637265645f64617461198ab36773656c665f3535198aba67696e6465785f32198abb686669656c64735f36198ad469736f6d655f64617461198ad666736f6d655f31198ad96776616c69645f36198ada6776616c75655f32198b0a6773656c665f3534198b0f657461675f34198b10686669656c64735f35198b1e68686173685f737472198b2d69686173685f64617461198b4165695f737472198b43656a5f737472198b45656b5f737472198b6663695f38198b7363695f37198b8063695f36198b8c6a63616c6c6261636b5f35198b8d67646174615f3131198b8f6e63616c6c6261636b5f6e6f6b5f36198ba76773656c665f3533198bac657461675f33198bad686669656c64735f34198bbb69706b685f7374725f31198bcc63625f37198be06876685f7374725f31198bf163625f36198c0167646174615f3130198c0564736f6d65198c066a63616c6c6261636b5f34198c0c66646174615f39198c0d6d63616c6c6261636b5f6f6b5f33198c0e6e63616c6c6261636b5f6e6f6b5f35198c1b66706169725f36198c306773656c665f3532198c35657461675f32198c36686669656c64735f33198c4467706b685f737472198c5563625f35198c696676685f737472198c7a63625f34198c8b6773656c665f3531198c926773656c665f3530198c9466706169725f35198c9667696e6465785f31198c98686669656c64735f32198cbd6773656c665f3439198cbe6174198cc0656c6f776572198cc268657874656e646564198cc466636c6f736564198cc66c6c6f77657245787454797065198cc86a636865636b5570706572198d1c657570706572198d1e6a657874656e6465645f31198d2068636c6f7365645f31198d226c757070657245787454797065198d946773656c665f3438198d9f6773656c665f3437198da66773656c665f3436198dad6773656c665f3435198db46773656c665f3434198dbb6773656c665f3433198dca63645f31198de06773656c665f3432198de26773656c665f3430198de364666e5f31198de56a726563757273655f3233198ded6a726563757273655f3232198dee6773656c665f3431198def64666e5f32198e1466646174615f38198e1563695f35198e216773656c665f3338198e22656b65795f31198e2367666e466f756e64198e246a666e4e6f74466f756e64198e266a726563757273655f3231198e2e6a726563757273655f3230198e2f6773656c665f3339198e30656b65795f32198e3c66686561645f31198e63656c73745f33198e656a726563757273655f3139198e6b6a726563757273655f3138198e6c656c73745f34198e846164198e8c6773656c665f3337198e8d66707265666978198e9b6773656c665f3336198ea56773656c665f3335198eb06773656c665f3334198eb46773656c665f3333198eb5676f746865725f32198ebd63615f33198ebe63625f33198ec66773656c665f3332198ec7676f746865725f31198ecf6773656c665f3331198ed4657461675f31198ed5686669656c64735f31198ee3676d70685f737472198ee56e746f6b656e5f6e616d655f737472198ef66c746f6b656e5f6e616d655f32198f03656d70685f34198f0f6a63616c6c6261636b5f33198f1066646174615f37198f126e63616c6c6261636b5f6e6f6b5f34198f2a65696e646578198f2b6a63616c6c6261636b5f32198f2c666c6973745f31198f2e6a726563757273655f3137198f366a726563757273655f3136198f37656c73745f32198f3863695f34198f516468656164198f686a63616c6c6261636b5f31198f6966646174615f36198f6b6e63616c6c6261636b5f6e6f6b5f33198f7866706169725f34198f906773656c665f3330198f936e73686f775f646174615f6c697374198f966a726563757273655f3135198f9766646174615f35198f9d6a726563757273655f3134198f9e66646174615f34198fab66706169725f33198fad63746167198faf666669656c6473198fc2666974656d5f33198fd8656d61705f32198fe466706169725f32198fe6636b6579198fe86776616c75655f3119900a656c73745f31199016666974656d5f321990226576616c756519902c6762797465735f36199035646c6973741990366973686f775f6974656d19903c66707265765f3219903d666974656d5f3119905d66646174615f3319905e63695f331990766773656c665f323919907c6773656c665f32381990836773656c665f323719908a6773656c665f32361990916773656c665f32351990986773656c665f32341990996c6173736574436c6173735f3119909b656d70685f3319909d6b746f6b656e4e616d655f3119909f676f757465725f311990a167696e6e65725f321990a967696e6e65725f311990aa656d61705f311990de656f757465721990df65696e6e65721990e0636d617019912e6773656c665f3233199134656d70685f321991356c746f6b656e5f6e616d655f311991456461726730199146646172673119914f63615f321991596a6173736574436c61737319915a63695f3219916a656d70685f3119916c69746f6b656e4e616d65199191617319919763615f3119919863625f321991a86269641991aa6a726563757273655f31331991b26a726563757273655f31321991b3636c73741991c2646974656d1991e46773656c665f32321991f36773656c665f32311991fa6773656c665f32301992016773656c665f31391992076773656c665f313819920e6773656c665f31371992156773656c665f313619921d6773656c665f313519921e6d5f5f7573656f70745f5f61646119921f6361646119922564707265761992266470616972199228686d70685f6461746119922a6b746f6b656e735f64617461199234636d706819925366746f6b656e7319925966707265765f3119925a66706169725f3119925c6f746f6b656e5f6e616d655f6461746119925e687174795f646174611992646a746f6b656e5f6e616d6519926a637174791992d46773656c665f31341992e86762797465735f351992ea636e5f321992ec6a726563757273655f31311992f26a726563757273655f31301992f363695f3119930362623019932b67696e6578745f321993446776616c69645f351993456463315f3219934f63635f3219939567696e6578745f311993ae6776616c69645f331993af6463315f311993c46776616c69645f341993c56463325f311993cf63635f3119941f65696e6578741994386576616c696419943962633119944e6776616c69645f3119944f6263321994646776616c69645f3219946562633319946f61631994c164627974651994c26863616c6c6261636b1994e26773656c665f31331994e56d73686f775f706f73697469766519950163785f321995206773656c665f3132199521636e5f3119952369726563757273655f3919952d69726563757273655f3819952e63785f3119952f63706f731995306762797465735f341995756773656c665f313119958a6773656c665f31301995926673656c665f3919959769726563757273655f371995bb69726563757273655f361995bc61691995bd6762797465735f321995bf6762797465735f331995e061781995ea61611995eb63625f311995f966646174615f321995fa6d63616c6c6261636b5f6f6b5f321995fb6e63616c6c6261636b5f6e6f6b5f3219961066646174615f311996116d63616c6c6261636b5f6f6b5f311996126e63616c6c6261636b5f6e6f6b5f311996286673656c665f3719962b69726563757273655f3519963169726563757273655f341996326673656c665f38199634616e199647696865785f62797465731996746673656c665f3519967769726563757273655f3319969d69726563757273655f3219969e6673656c665f3619969f6562797465731996a16564696769741996a36762797465735f311996db64646174611996dc6b63616c6c6261636b5f6f6b1996dd6c63616c6c6261636b5f6e6f6b1996f26673656c665f331996f362666e1996f4617a1996f669726563757273655f311996fe67726563757273651996ff6673656c665f34199700637a5f3119971d6673656c665f321997226673656c665f3119972a6473656c6619972b656f74686572199734616219973d64636f6e6419973e656d73675f32199752656d73675f31199759636d7367", "termDescriptions": "b8301905ea646d61696e1905eb646d61696e191573636c656e192b26666c656577617919319e666d70685374721931a06676616c53747219337568746e537472696e6719363868736565645478496419363c686964784279746573193642686d696e69486173681936c5687461726765744964193c1469636861727465724163193cbd69636861727465724163193d9878204361706f4374783a3a6d7573744f757470757444656c65676174656444617461193dd56b61637475616c49645374721940156473656c6619405d6473656c661940906473656c661940ec6473656c661943086473656c66194396683c7377697463683e194397683c7377697463683e1943f1636b65791943f2636b65791944256473656c6619442f683c7377697463683e194430683c7377697463683e1945756473656c6619457b6473656c6619465e683c7377697463683e19465f683c7377697463683e1946cf683c7377697463683e1946d0683c7377697463683e19478270616374734f6e546869735265636f7264194a89636d7367194a8a636d7367194ad56b617373657274696f6e4f6b194ad66b617373657274696f6e4f6b194ad9636d7367194ada636d7367194b076473656c66194b236473656c66197c9c683c61737369676e3e197cc269636f6c6c6170736564197dc36863616c6c6261636b197dc46863616c6c6261636b197e1669636f6c6c6170736564197e1769636f6c6c6170736564" } },
      scriptHash: "6ef6c22f0d086f8647fb9b9c71f9a127e3c2af37517634164f8a77c0",
      config: { "rev": "1", "delegateName": "ReqtsPolicy", "isMintDelegate": false, "isSpendDelegate": false, "isDgDataPolicy": true, "requiresGovAuthority": true }
    }
  };
  specializedDelegateModule = ReqtsPolicy_hl;
  requiresGovAuthority = true;
}

export { ReqtsConcreteBundle as default };
//# sourceMappingURL=Reqts.concrete.hlb.mjs.map
