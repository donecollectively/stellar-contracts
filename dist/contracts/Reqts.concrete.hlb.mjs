import '@helios-lang/compiler-utils';
import { C as CapoHeliosBundle } from '../CapoHeliosBundle2.mjs';
import '../HeliosScriptBundle.mjs';
import '../BasicDelegate.mjs';
import { R as ReqtsPolicy_hl, a as ReqtsData_hl } from '../ReqtsData.mjs';
import { DelegatedDataBundle } from '../DelegatedDataBundle.mjs';
import '../DefaultCapo.mjs';
import '@helios-lang/ledger';
import '@helios-lang/uplc';
import '@donecollectively/stellar-contracts/HeliosProgramWithCacheAPI';
import '@helios-lang/compiler';
import '@helios-lang/codec-utils';
import '@helios-lang/crypto';
import '@helios-lang/contract-utils';
import '@helios-lang/tx-utils';
import 'nanoid';
import '../environment.mjs';
import '../CapoDelegateHeliosBundle.mjs';

class ReqtsBundle extends DelegatedDataBundle {
  specializedDelegateModule = ReqtsPolicy_hl;
  get modules() {
    return [
      ...super.modules,
      ReqtsData_hl
    ];
  }
}

class ReqtsConcreteBundle extends ReqtsBundle.usingCapoBundleClass(CapoHeliosBundle) {
  preCompiled = {
    singleton: {
      programBundle: { "programElements": { "src/delegation/BasicDelegate.hl": "07874a5ddaf127eeecb8077bcbddd4a4ce25e596c67a2722b6292c2749e44c55", "src/CapoMintHelpers.hl": "8f780e9a5523a44dbbcaab8ccf4b94716aac9e29cfa7c98f52f3d71ae70038d4", "src/delegation/CapoDelegateHelpers.hl": "51761f4364905846422a194f77ba875c0b9f694dd6cedf65da502fcd3823a81d", "src/StellarHeliosHelpers.hl": "8494efc84f3ef859470648af3cc4b08ab12572c193d5702c69c1470300c0ff70", "src/CapoHelpers.hl": "99978d1885e50edac741a1762b2e8344c125b944f92996a9c88e71011ec473f2", "src/reqts/ReqtsData.hl": "245ece26be7869f655d06323d379097aac8c24fc9e01db7d3ac9f193bc7602c5", "generatedSpecializedDelegateModule": "098031ee2f026f1261eb399fbf411996363246b88d7eea4f20588f3285540812", "src/reqts/ReqtsPolicy.hl": "6acdcec3daba5bf9daacfa4ada7b38277c8a2fb3e1163ee12c95edda591b0d39", "params": { "BasicDelegate::rev": "const rev: Int = ##01;", "BasicDelegate::instance": "const instance: ByteArray = #67656e6572616c;", "BasicDelegate::delegateName": "const delegateName: String = ##4b5265717473506f6c696379;", "BasicDelegate::isMintDelegate": "const isMintDelegate: Bool = ##d87980;", "BasicDelegate::isSpendDelegate": "const isSpendDelegate: Bool = ##d87980;", "BasicDelegate::isDgDataPolicy": "const isDgDataPolicy: Bool = ##d87a80;", "BasicDelegate::requiresGovAuthority": "const requiresGovAuthority: Bool = ##d87a80;" } }, "version": "PlutusV2", "optimized": "", "unoptimized": "", "optimizedIR": '(__DATUM, __REDEEMER, __CONTEXT) -> {\n    __common14 = __core__unConstrData(__CONTEXT);\n    __common15 = __core__sndPair(__common14);\n    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__divideInteger(byte, 64), 2),\n            () -> {\n                callback(true, __core__modInteger(byte, 64))\n            },\n            () -> {\n                callback(false, 0)\n            }\n        )()\n    };\n    __helios__bytearray__show = (self_5) -> {\n        recurse_5 = (recurse_4, self_6) -> {\n            n_1 = __core__lengthOfByteString(self_6);\n            __core__ifThenElse(\n                __core__lessThanInteger(0, n_1),\n                () -> {\n                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_3 = __core__indexByteString__safe(self_6, 0);\n                    recurse_3 = (recurse_2, self_4, bytes_1) -> {\n                        digit = __core__modInteger(self_4, 16);\n                        bytes_2 = __core__consByteString(__core__ifThenElse(\n                            __core__lessThanInteger(digit, 10),\n                            __core__addInteger(digit, 48),\n                            __core__addInteger(digit, 87)\n                        ), bytes_1);\n                        __core__ifThenElse(\n                            __core__lessThanInteger(self_4, 16),\n                            () -> {\n                                bytes_2\n                            },\n                            () -> {\n                                recurse_2(recurse_2, __core__divideInteger(self_4, 16), bytes_2)\n                            }\n                        )()\n                    };\n                    __core__decodeUtf8__safe(__core__ifThenElse(\n                        __core__lessThanInteger(self_3, 0),\n                        () -> {\n                            __core__consByteString(45, recurse_3(recurse_3, __core__multiplyInteger(self_3, -1), #))\n                        },\n                        () -> {\n                            recurse_3(recurse_3, self_3, #)\n                        }\n                    )()));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),\n                        __core__consByteString(48, hex_bytes),\n                        hex_bytes\n                    )), recurse_4(recurse_4, __core__sliceByteString(1, n_1, self_6)))\n                },\n                () -> {\n                    ""\n                }\n            )()\n        };\n        recurse_5(recurse_5, self_5)\n    };\n    __helios__value__new = (assetClass, i_1) -> {\n        mph = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));\n        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));\n        __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i_1)), __core__mkNilPairData(())))), __core__mkNilPairData(()))\n    };\n    __helios__assetclass__new = (mph_1, token_name) -> {\n        __core__constrData(0, __core__mkCons(__core__bData(mph_1), __core__mkCons(__core__bData(token_name), __core__mkNilData(()))))\n    };\n    __helios__tx__minted = (self_18) -> {\n        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))))))\n    };\n    __helios__scriptcontext__tx = __core__headList(__common15);\n    __helios__common__assert_constr_index = (data, i_2) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_2),\n            () -> {\n                data\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__common__fold = (self_19, fn, z) -> {\n        recurse_7 = (recurse_6, self_20, z_1) -> {\n            __core__chooseList(self_20, () -> {\n                z_1\n            }, () -> {\n                recurse_6(recurse_6, __core__tailList__safe(self_20), fn(z_1, __core__headList__safe(self_20)))\n            })()\n        };\n        recurse_7(recurse_7, self_19, z)\n    };\n    __helios__int__show = (self_21) -> {\n        __core__decodeUtf8__safe(recurse_9 = (recurse_8, i_3, bytes_3) -> {\n            bytes_4 = __core__consByteString(__core__addInteger(__core__modInteger(i_3, 10), 48), bytes_3);\n            __core__ifThenElse(\n                __core__lessThanInteger(i_3, 10),\n                () -> {\n                    bytes_4\n                },\n                () -> {\n                    recurse_8(recurse_8, __core__divideInteger(i_3, 10), bytes_4)\n                }\n            )()\n        };\n        __core__ifThenElse(\n            __core__lessThanInteger(self_21, 0),\n            () -> {\n                __core__consByteString(45, recurse_9(recurse_9, __core__multiplyInteger(self_21, -1), #))\n            },\n            () -> {\n                recurse_9(recurse_9, self_21, #)\n            }\n        )())\n    };\n    __helios__data__show = (self_22) -> {\n        () -> {\n            show_data_list = (list, show_item) -> {\n                __helios__common__fold(list, (prev, item) -> {\n                    __core__ifThenElse(\n                        __core__equalsString(prev, ""),\n                        () -> {\n                            show_item(item)\n                        },\n                        () -> {\n                            __core__appendString(prev, __core__appendString(",", show_item(item)))\n                        }\n                    )()\n                }, "")\n            };\n            recurse_11 = (recurse_10, data_1) -> {\n                __core__chooseData(data_1, () -> {\n                    pair_1 = __core__unConstrData__safe(data_1);\n                    __core__appendString(__helios__int__show(__core__fstPair(pair_1)), __core__appendString("{", __core__appendString(show_data_list(__core__sndPair(pair_1), (item_2) -> {\n                        recurse_10(recurse_10, item_2)\n                    }), "}")))\n                }, () -> {\n                    __core__appendString("{", __core__appendString(show_data_list(__core__unMapData__safe(data_1), (pair) -> {\n                        __core__appendString(recurse_10(recurse_10, __core__fstPair(pair)), __core__appendString(":", recurse_10(recurse_10, __core__sndPair(pair))))\n                    }), "}"))\n                }, () -> {\n                    __core__appendString("[", __core__appendString(show_data_list(__core__unListData__safe(data_1), (item_1) -> {\n                        recurse_10(recurse_10, item_1)\n                    }), "]"))\n                }, () -> {\n                    __helios__int__show(__core__unIData__safe(data_1))\n                }, () -> {\n                    __helios__bytearray__show(__core__unBData__safe(data_1))\n                })()\n            };\n            recurse_11(recurse_11, self_22)\n        }\n    };\n    __helios__data__show_constr_data = (callback_1, data_3) -> {\n        callback_nok = __helios__data__show(data_3);\n        __core__chooseData(data_3, () -> {\n            pair_2 = __core__unConstrData__safe(data_3);\n            callback_1(__core__fstPair(pair_2), __core__sndPair(pair_2))\n        }, callback_nok, callback_nok, callback_nok, callback_nok)()\n    };\n    __helios__data__show_field = (index, callback_2, list_1) -> {\n        recurse_13 = (recurse_12, lst_1, i_4) -> {\n            __core__chooseList(lst_1, () -> {\n                "<missing>"\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(i_4, 0),\n                    () -> {\n                        callback_2(__core__headList__safe(lst_1))\n                    },\n                    () -> {\n                        recurse_12(recurse_12, __core__tailList__safe(lst_1), __core__subtractInteger(i_4, 1))\n                    }\n                )()\n            })()\n        };\n        recurse_13(recurse_13, list_1, index)\n    };\n    __helios__data__show_bdata = (callback_3) -> {\n        (data_4) -> {\n            callback_nok_1 = __helios__data__show(data_4);\n            __core__chooseData(data_4, callback_nok_1, callback_nok_1, callback_nok_1, callback_nok_1, () -> {\n                callback_3(__core__unBData__safe(data_4))\n            })()\n        }\n    };\n    __helios__common__unBData__safe = (data_5, callback_ok, callback_nok_2) -> {\n        __core__chooseData(data_5, callback_nok_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {\n            callback_ok(__core__unBData__safe(data_5))\n        })()\n    };\n    __helios__value__show = (self_29) -> {\n        __helios__common__fold(self_29, (prev_1, pair_3) -> {\n            mph_data = __core__fstPair(pair_3);\n            tokens_data = __core__sndPair(pair_3);\n            __core__appendString(prev_1, __helios__common__unBData__safe(mph_data, (mph_4) -> {\n                __core__appendString(__core__ifThenElse(\n                    __core__equalsByteString(mph_4, #),\n                    () -> {\n                        ""\n                    },\n                    () -> {\n                        __core__appendString(__helios__bytearray__show(mph_4), "\n")\n                    }\n                )(), __core__chooseData(tokens_data, () -> {\n                    ""\n                }, () -> {\n                    __helios__common__fold(__core__unMapData__safe(tokens_data), (prev_2, pair_4) -> {\n                        token_name_data = __core__fstPair(pair_4);\n                        qty_data = __core__sndPair(pair_4);\n                        __helios__common__unBData__safe(token_name_data, (token_name_2) -> {\n                            __core__chooseData(qty_data, () -> {\n                                ""\n                            }, () -> {\n                                ""\n                            }, () -> {\n                                ""\n                            }, () -> {\n                                qty = __core__unIData__safe(qty_data);\n                                __core__ifThenElse(\n                                    __core__equalsByteString(mph_4, #),\n                                    () -> {\n                                        __core__appendString("lovelace ", __core__appendString(__helios__int__show(qty), "\n"))\n                                    },\n                                    () -> {\n                                        __core__appendString("  .", __core__appendString(__core__ifThenElse(\n                                            n = __core__lengthOfByteString(token_name_2);\n                                            recurse_1 = (recurse, i) -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(i, n),\n                                                    () -> {\n                                                        true\n                                                    },\n                                                    () -> {\n                                                        b0 = __core__indexByteString__safe(token_name_2, i);\n                                                        __core__ifThenElse(\n                                                            __core__lessThanEqualsInteger(b0, 127),\n                                                            () -> {\n                                                                recurse(recurse, __core__addInteger(i, 1))\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__divideInteger(b0, 32), 6),\n                                                                    () -> {\n                                                                        inext_2 = __core__addInteger(i, 2);\n                                                                        __core__ifThenElse(\n                                                                            __core__lessThanEqualsInteger(inext_2, n),\n                                                                            () -> {\n                                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid_5, c1_2) -> {\n                                                                                    __core__ifThenElse(\n                                                                                        valid_5,\n                                                                                        () -> {\n                                                                                            c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);\n                                                                                            __core__ifThenElse(\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__lessThanEqualsInteger(128, c_2),\n                                                                                                    () -> {\n                                                                                                        __core__lessThanEqualsInteger(c_2, 2047)\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )(),\n                                                                                                () -> {\n                                                                                                    recurse(recurse, inext_2)\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    false\n                                                                                                }\n                                                                                            )()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )()\n                                                                                })\n                                                                            },\n                                                                            () -> {\n                                                                                false\n                                                                            }\n                                                                        )()\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__divideInteger(b0, 16), 14),\n                                                                            () -> {\n                                                                                inext_1 = __core__addInteger(i, 3);\n                                                                                __core__ifThenElse(\n                                                                                    __core__lessThanEqualsInteger(inext_1, n),\n                                                                                    () -> {\n                                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid_3, c1_1) -> {\n                                                                                            __core__ifThenElse(\n                                                                                                valid_3,\n                                                                                                () -> {\n                                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 2)), (valid_4, c2_1) -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            valid_4,\n                                                                                                            () -> {\n                                                                                                                c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__lessThanEqualsInteger(2048, c_1),\n                                                                                                                        () -> {\n                                                                                                                            __core__lessThanEqualsInteger(c_1, 65535)\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            false\n                                                                                                                        }\n                                                                                                                    )(),\n                                                                                                                    () -> {\n                                                                                                                        recurse(recurse, inext_1)\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        false\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                false\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    })\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    false\n                                                                                                }\n                                                                                            )()\n                                                                                        })\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )()\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__divideInteger(b0, 8), 30),\n                                                                                    () -> {\n                                                                                        inext = __core__addInteger(i, 4);\n                                                                                        __core__ifThenElse(\n                                                                                            __core__lessThanEqualsInteger(inext, n),\n                                                                                            () -> {\n                                                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 1)), (valid, c1) -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        valid,\n                                                                                                        () -> {\n                                                                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 2)), (valid_1, c2) -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    valid_1,\n                                                                                                                    () -> {\n                                                                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(token_name_2, __core__addInteger(i, 3)), (valid_2, c3) -> {\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                valid_2,\n                                                                                                                                () -> {\n                                                                                                                                    c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__lessThanEqualsInteger(65536, c),\n                                                                                                                                            () -> {\n                                                                                                                                                __core__lessThanEqualsInteger(c, 2097151)\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                false\n                                                                                                                                            }\n                                                                                                                                        )(),\n                                                                                                                                        () -> {\n                                                                                                                                            recurse(recurse, inext)\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            false\n                                                                                                                                        }\n                                                                                                                                    )()\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    false\n                                                                                                                                }\n                                                                                                                            )()\n                                                                                                                        })\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        false\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            })\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )()\n                                                                                                })\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            };\n                                            recurse_1(recurse_1, 0),\n                                            () -> {\n                                                __core__decodeUtf8__safe(token_name_2)\n                                            },\n                                            () -> {\n                                                __helios__bytearray__show(token_name_2)\n                                            }\n                                        )(), __core__appendString(" ", __core__appendString(__helios__int__show(qty), "\n"))))\n                                    }\n                                )()\n                            }, () -> {\n                                ""\n                            })()\n                        }, () -> {\n                            ""\n                        })\n                    }, prev_1)\n                }, () -> {\n                    ""\n                }, () -> {\n                    ""\n                }, () -> {\n                    ""\n                })())\n            }, () -> {\n                ""\n            }))\n        }, "")\n    };\n    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common15));\n    __helios__scriptcontext__get_current_input = () -> {\n        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));\n        recurse_17 = (recurse_16, lst_2) -> {\n            __core__chooseList(lst_2, () -> {\n                error()\n            }, () -> {\n                item_3 = __core__headList__safe(lst_2);\n                __core__ifThenElse(\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item_3))), id),\n                    () -> {\n                        item_3\n                    },\n                    () -> {\n                        recurse_16(recurse_16, __core__tailList__safe(lst_2))\n                    }\n                )()\n            })()\n        };\n        recurse_17(recurse_17, __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))\n    };\n    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {\n        recurse_21 = (recurse_20, self_39, key_2) -> {\n            __core__chooseList(self_39, fnNotFound, () -> {\n                head_1 = __core__headList__safe(self_39);\n                __core__ifThenElse(\n                    __core__equalsData(key_2, __core__fstPair(head_1)),\n                    () -> {\n                        fnFound(__core__sndPair(head_1))\n                    },\n                    () -> {\n                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)\n                    }\n                )()\n            })()\n        };\n        recurse_21(recurse_21, self_38, key_1)\n    };\n    __helios__common__all = (self_40, fn_1) -> {\n        recurse_23 = (recurse_22, self_41, fn_2) -> {\n            __core__chooseList(self_41, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    fn_2(__core__headList__safe(self_41)),\n                    () -> {\n                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_23(recurse_23, self_40, fn_1)\n    };\n    __helios__bool__from_data = (d_1) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),\n            false,\n            true\n        )\n    };\n    __helios__timerange__end = (self_43) -> {\n        __core__unIData((self_9) -> {\n            __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n        }(self_9 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_43))));\n        __core__headList(__core__sndPair(__core__unConstrData(self_9)))))\n    };\n    __helios__common__enum_fields_after_4 = (self_44) -> {\n        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44)))))))\n    };\n    __helios__timerange__start = (self_48) -> {\n        __core__unIData((self_9) -> {\n            __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n        }(self_9 = __core__headList(__core__sndPair(__core__unConstrData(self_48)));\n        __core__headList(__core__sndPair(__core__unConstrData(self_9)))))\n    };\n    __helios__timerange__contains = (self_49, t) -> {\n        lower = __core__headList(__core__sndPair(__core__unConstrData(self_49)));\n        extended = __core__headList(__core__sndPair(__core__unConstrData(lower)));\n        closed = __helios__bool__from_data(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(lower)))));\n        lowerExtType = __core__fstPair(__core__unConstrData(extended));\n        checkUpper = () -> {\n            upper = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_49))));\n            __common43 = __core__unConstrData(upper);\n            __common44 = __core__sndPair(__common43);\n            extended_1 = __core__headList(__common44);\n            __common5 = __core__unConstrData(extended_1);\n            closed_1 = __helios__bool__from_data(__core__headList(__core__tailList(__common44)));\n            upperExtType = __core__fstPair(__common5);\n            __core__ifThenElse(\n                __core__equalsInteger(upperExtType, 0),\n                () -> {\n                    false\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(upperExtType, 2),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __core__ifThenElse(\n                                    closed_1,\n                                    () -> {\n                                        __core__lessThanEqualsInteger(t, __core__unIData(__core__headList(__core__sndPair(__common5))))\n                                    },\n                                    () -> {\n                                        __core__lessThanInteger(t, __core__unIData(__core__headList(__core__sndPair(__common5))))\n                                    }\n                                )(),\n                                true,\n                                false\n                            )\n                        }\n                    )()\n                }\n            )()\n        };\n        __core__ifThenElse(\n            __core__equalsInteger(lowerExtType, 2),\n            () -> {\n                false\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(lowerExtType, 0),\n                    checkUpper,\n                    () -> {\n                        __core__ifThenElse(\n                            __core__ifThenElse(\n                                closed,\n                                () -> {\n                                    __core__lessThanEqualsInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)\n                                },\n                                () -> {\n                                    __core__lessThanInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)\n                                }\n                            )(),\n                            checkUpper,\n                            () -> {\n                                false\n                            }\n                        )()\n                    }\n                )()\n            }\n        )()\n    };\n    __helios__txoutputdatum__inline = (self_50) -> {\n        pair_5 = __core__unConstrData(self_50);\n        index_1 = __core__fstPair(pair_5);\n        fields_2 = __core__sndPair(pair_5);\n        __core__ifThenElse(\n            __core__equalsInteger(index_1, 2),\n            () -> {\n                __core__headList(fields_2)\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__txinput__address = (self_57) -> {\n        self_9 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_57))));\n        __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n    };\n    __helios__value__get_safe = (self_58, assetClass_2) -> {\n        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_2)));\n        tokenName_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_2))));\n        outer_3 = (outer_2, inner_3, map_3) -> {\n            __core__chooseList(map_3, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mintingPolicyHash),\n                    () -> {\n                        inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_3))))\n                    },\n                    () -> {\n                        outer_2(outer_2, inner_3, __core__tailList__safe(map_3))\n                    }\n                )()\n            })()\n        };\n        outer_3(outer_3, (inner_4, map_4) -> {\n            __core__chooseList(map_4, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), tokenName_2),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_4)))\n                    },\n                    () -> {\n                        inner_4(inner_4, __core__tailList__safe(map_4))\n                    }\n                )()\n            })()\n        }, self_58)\n    };\n    __helios__common__filter = (self_63, fn_3, nil) -> {\n        recurse_25 = (recurse_24, self_64, fn_4) -> {\n            __core__chooseList(self_64, () -> {\n                nil\n            }, () -> {\n                head_2 = __core__headList__safe(self_64);\n                __core__ifThenElse(\n                    fn_4(head_2),\n                    () -> {\n                        __core__mkCons(head_2, recurse_24(recurse_24, __core__tailList__safe(self_64), fn_4))\n                    },\n                    () -> {\n                        recurse_24(recurse_24, __core__tailList__safe(self_64), fn_4)\n                    }\n                )()\n            })()\n        };\n        recurse_25(recurse_25, self_63, fn_3)\n    };\n    __helios__common__mStruct_field = (self_66, name_1) -> {\n        map_5 = __core__unMapData(self_66);\n        name_data = __core__bData(name_1);\n        recurse_27 = (recurse_26, map_6) -> {\n            __core__chooseList(map_6, () -> {\n                error()\n            }, () -> {\n                head_3 = __core__headList__safe(map_6);\n                key_3 = __core__fstPair(head_3);\n                value_3 = __core__sndPair(head_3);\n                __core__ifThenElse(\n                    __core__equalsData(key_3, name_data),\n                    () -> {\n                        value_3\n                    },\n                    () -> {\n                        recurse_26(recurse_26, __core__tailList__safe(map_6))\n                    }\n                )()\n            })()\n        };\n        recurse_27(recurse_27, map_5)\n    };\n    __helios__value__contains_policy = (self_67, mph_5) -> {\n        mph_6 = __core__bData(mph_5);\n        recurse_29 = (recurse_28, map_7) -> {\n            __core__chooseList(map_7, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), mph_6),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_28(recurse_28, __core__tailList__safe(map_7))\n                    }\n                )()\n            })()\n        };\n        recurse_29(recurse_29, self_67)\n    };\n    __helios__value__is_zero = (self_68) -> {\n        recurse_33 = (recurse_32, map_8) -> {\n            __core__chooseList(map_8, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_8)));\n                    recurse_31 = (recurse_30, tokens_2) -> {\n                        __core__chooseList(tokens_2, () -> {\n                            true\n                        }, () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),\n                                () -> {\n                                    recurse_30(recurse_30, __core__tailList__safe(tokens_2))\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_31(recurse_31, tokens_1),\n                    () -> {\n                        recurse_32(recurse_32, __core__tailList__safe(map_8))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_33(recurse_33, self_68)\n    };\n    __helios__value__get_policy = (self_69, mph_7) -> {\n        mph_8 = __core__bData(mph_7);\n        recurse_35 = (recurse_34, map_9) -> {\n            __core__chooseList(map_9, () -> {\n                error()\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_8),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_9)))\n                    },\n                    () -> {\n                        recurse_34(recurse_34, __core__tailList__safe(map_9))\n                    }\n                )()\n            })()\n        };\n        recurse_35(recurse_35, self_69)\n    };\n    __helios__value__get_inner_map_int = (map_10, key_4) -> {\n        recurse_37 = (recurse_36, map_11, key_5) -> {\n            __core__chooseList(map_11, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), key_5),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_11)))\n                    },\n                    () -> {\n                        recurse_36(recurse_36, __core__tailList__safe(map_11), key_5)\n                    }\n                )()\n            })()\n        };\n        recurse_37(recurse_37, map_10, key_4)\n    };\n    __helios__common__any = (self_70, fn_6) -> {\n        recurse_41 = (recurse_40, self_71, fn_7) -> {\n            __core__chooseList(self_71, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    fn_7(__core__headList__safe(self_71)),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_40(recurse_40, __core__tailList__safe(self_71), fn_7)\n                    }\n                )()\n            })()\n        };\n        recurse_41(recurse_41, self_70, fn_6)\n    };\n    __helios__value__merge_map_keys = (a_7, b_12) -> {\n        (aKeys) -> {\n            recurse_45 = (recurse_44, keys, map_14) -> {\n                __core__chooseList(map_14, () -> {\n                    __core__mkNilData(())\n                }, () -> {\n                    key_7 = __core__fstPair(__core__headList__safe(map_14));\n                    __core__ifThenElse(\n                        __helios__common__any(aKeys, (item_4) -> {\n                            __core__equalsData(item_4, key_7)\n                        }),\n                        () -> {\n                            recurse_44(recurse_44, keys, __core__tailList__safe(map_14))\n                        },\n                        () -> {\n                            __core__mkCons(key_7, recurse_44(recurse_44, keys, __core__tailList__safe(map_14)))\n                        }\n                    )()\n                })()\n            };\n            b_11 = recurse_45(recurse_45, aKeys, b_12);\n            recurse_43 = (recurse_42, lst_6, rem) -> {\n                __core__chooseList(rem, () -> {\n                    lst_6\n                }, () -> {\n                    __core__mkCons(__core__headList__safe(rem), recurse_42(recurse_42, lst_6, __core__tailList__safe(rem)))\n                })()\n            };\n            recurse_43(recurse_43, b_11, aKeys)\n        }(recurse_39 = (recurse_38, map_13) -> {\n            __core__chooseList(map_13, () -> {\n                __core__mkNilData(())\n            }, () -> {\n                __core__mkCons(__core__fstPair(__core__headList__safe(map_13)), recurse_38(recurse_38, __core__tailList__safe(map_13)))\n            })()\n        };\n        recurse_39(recurse_39, a_7))\n    };\n    __helios__value__get_inner_map = (map_15, mph_9) -> {\n        recurse_49 = (recurse_48, map_16) -> {\n            __core__chooseList(map_16, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_16)), mph_9),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_16)))\n                    },\n                    () -> {\n                        recurse_48(recurse_48, __core__tailList__safe(map_16))\n                    }\n                )()\n            })()\n        };\n        recurse_49(recurse_49, map_15)\n    };\n    __helios__value____add = (a_10, b_15) -> {\n        recurse_51 = (recurse_50, keys_2) -> {\n            __core__chooseList(keys_2, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                key_9 = __core__headList__safe(keys_2);\n                tail_1 = recurse_50(recurse_50, __core__tailList__safe(keys_2));\n                item_5 = (a_8, b_13) -> {\n                    recurse_47 = (recurse_46, keys_1) -> {\n                        __core__chooseList(keys_1, () -> {\n                            __core__mkNilPairData(())\n                        }, () -> {\n                            key_8 = __core__headList__safe(keys_1);\n                            tail = recurse_46(recurse_46, __core__tailList__safe(keys_1));\n                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_8, key_8), __helios__value__get_inner_map_int(b_13, key_8));\n                            __core__ifThenElse(\n                                __core__equalsInteger(sum, 0),\n                                () -> {\n                                    tail\n                                },\n                                () -> {\n                                    __core__mkCons(__core__mkPairData(key_8, __core__iData(sum)), tail)\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_47(recurse_47, __helios__value__merge_map_keys(a_8, b_13))\n                }(__helios__value__get_inner_map(a_10, key_9), __helios__value__get_inner_map(b_15, key_9));\n                __core__chooseList(item_5, () -> {\n                    tail_1\n                }, () -> {\n                    __core__mkCons(__core__mkPairData(key_9, __core__mapData(item_5)), tail_1)\n                })()\n            })()\n        };\n        recurse_51(recurse_51, __helios__value__merge_map_keys(a_10, b_15))\n    };\n    __helios__common__find_safe = (self_107, fn_13) -> {\n        recurse_65 = (recurse_64, self_108, fn_14) -> {\n            __core__chooseList(self_108, () -> {\n                __core__constrData(1, __core__mkNilData(()))\n            }, () -> {\n                head_7 = __core__headList__safe(self_108);\n                __core__ifThenElse(\n                    fn_14(head_7),\n                    () -> {\n                        __core__constrData(0, __core__mkCons(head_7, __core__mkNilData(())))\n                    },\n                    () -> {\n                        recurse_64(recurse_64, __core__tailList__safe(self_108), fn_14)\n                    }\n                )()\n            })()\n        };\n        recurse_65(recurse_65, self_107, fn_13)\n    };\n    __helios__list[__helios__txoutput]__find = (self_109, fn_15) -> {\n        recurse_67 = (recurse_66, lst_12) -> {\n            __core__chooseList(lst_12, () -> {\n                error()\n            }, () -> {\n                item_6 = __core__headList__safe(lst_12);\n                __core__ifThenElse(\n                    fn_15(item_6),\n                    () -> {\n                        item_6\n                    },\n                    () -> {\n                        recurse_66(recurse_66, __core__tailList__safe(lst_12))\n                    }\n                )()\n            })()\n        };\n        recurse_67(recurse_67, self_109)\n    };\n    __module__StellarHeliosHelpers__AnyData[]__type = (self_115) -> {\n        d = __helios__common__mStruct_field(self_115, #747065);\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_6) -> {\n        __core__ifThenElse(\n            __core__chooseData(value_6, () -> {\n                true\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            })(),\n            () -> {\n                (__lhs_0) -> {\n                    fields_12 = __core__sndPair(__core__unConstrData(__lhs_0));\n                    __cond_2 = __core__headList(fields_12);\n                    __core__ifThenElse(\n                        __core__chooseData(__cond_2, () -> {\n                            false\n                        }, () -> {\n                            true\n                        }, () -> {\n                            false\n                        }, () -> {\n                            false\n                        }, () -> {\n                            false\n                        })(),\n                        () -> {\n                            (__lhs_0_1) -> {\n                                __core__headList(fields_12)\n                            }\n                        },\n                        () -> {\n                            (__3) -> {\n                                error()\n                            }\n                        }\n                    )()(__cond_2)\n                }\n            },\n            () -> {\n                (__2) -> {\n                    error()\n                }\n            }\n        )()(value_6)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_119) -> {\n        d = __core__headList(__core__sndPair(__core__unConstrData(self_119)));\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_140, mph_12) -> {\n        __helios__assetclass__new(mph_12, __core__encodeUtf8(d = __core__headList(self_140);\n        __core__decodeUtf8(__core__unBData(d))))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_147, mph_15) -> {\n        (uut) -> {\n            validatorHash = __core__headList(__core__tailList(self_147));\n            ac_1 = __helios__assetclass__new(mph_15, __core__encodeUtf8(uut));\n            hasDelegate = __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),\n                () -> {\n                    (__lhs_0_15) -> {\n                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_15))));\n                        a_3 = __helios__value__get_safe((outputs) -> {\n                            __helios__common__fold(outputs, (prev_3, txOutput) -> {\n                                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))\n                            }, __core__mkNilPairData(()))\n                        }(self_65 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__filter(self_65, (output) -> {\n                            (credential) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),\n                                    () -> {\n                                        __core__equalsByteString(vh_3, self_93 = __helios__common__assert_constr_index(credential, 1);\n                                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_93)))))\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }(self_9 = __core__headList(__core__sndPair(__core__unConstrData(output)));\n                            __core__headList(__core__sndPair(__core__unConstrData(self_9))))\n                        }, __core__mkNilData(()))), ac_1);\n                        __core__ifThenElse(\n                            __core__lessThanEqualsInteger(a_3, 0),\n                            false,\n                            true\n                        )\n                    }\n                },\n                () -> {\n                    (__lhs_0_12) -> {\n                        (__cond_10) -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_10)), 0),\n                                () -> {\n                                    (__lhs_0_14) -> {\n                                        true\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_13) -> {\n                                        false\n                                    }\n                                }\n                            )()(__cond_10)\n                        }(self_146 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__find_safe(self_146, (o) -> {\n                            a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);\n                            __core__ifThenElse(\n                                __core__lessThanEqualsInteger(a_3, 0),\n                                false,\n                                true\n                            )\n                        }))\n                    }\n                }\n            )()(validatorHash);\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __core__ifThenElse(\n                        hasDelegate,\n                        false,\n                        true\n                    ),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        false\n                    }\n                )(),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), hasDelegate)\n        }(d = __core__headList(self_147);\n        __core__decodeUtf8(__core__unBData(d)))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_165) -> {\n        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_165)))))))\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_194) -> {\n        __cond_28 = __core__headList(__core__tailList(self_194));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 0),\n            () -> {\n                (__lhs_0_56) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 1),\n                    () -> {\n                        (__lhs_0_55) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_48) -> {\n                            utxo_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_48))));\n                            (activity) -> {\n                                __common34 = __core__unConstrData(activity);\n                                __common35 = __core__fstPair(__common34);\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__common35, 2),\n                                    () -> {\n                                        (__lhs_0_54) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__common35, 4),\n                                            () -> {\n                                                (__lhs_0_53) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__common35, 1),\n                                                    () -> {\n                                                        (__lhs_0_52) -> {\n                                                            activity\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__common35, 5),\n                                                            () -> {\n                                                                (__lhs_0_51) -> {\n                                                                    activity\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__common35, 3),\n                                                                    () -> {\n                                                                        (__lhs_0_50) -> {\n                                                                            activity\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__lhs_0_49) -> {\n                                                                            activity\n                                                                        }\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()(activity)\n                            }(targetId = __core__headList(__core__sndPair(__core__unConstrData(utxo_2)));\n                            redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));\n                            (spendsExpectedInput) -> {\n                                __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {\n                                    x_4\n                                }, () -> {\n                                    error()\n                                })\n                            }(recurse_71 = (recurse_70, map_22) -> {\n                                __core__chooseList(map_22, () -> {\n                                    error()\n                                }, () -> {\n                                    item_7 = __core__fstPair(__core__headList__safe(map_22));\n                                    __core__ifThenElse(\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(item_7)), 1),\n                                            () -> {\n                                                (sp) -> {\n                                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)\n                                                }\n                                            },\n                                            () -> {\n                                                (__1) -> {\n                                                    false\n                                                }\n                                            }\n                                        )()(item_7),\n                                        () -> {\n                                            item_7\n                                        },\n                                        () -> {\n                                            recurse_70(recurse_70, __core__tailList__safe(map_22))\n                                        }\n                                    )()\n                                })()\n                            };\n                            recurse_71(recurse_71, redeemers)))\n                        }\n                    }\n                )()\n            }\n        )()(__cond_28)\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_195, key_14) -> {\n        __helios__common__map_get(self_195, __core__bData(__core__encodeUtf8(key_14)), (x_5) -> {\n            __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))\n        }, () -> {\n            __core__constrData(1, __core__mkNilData(()))\n        })\n    };\n    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3, self_201) -> {\n        __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(self_167 = __module__CapoHelpers__CapoCtx[]__getCharterData_3(self_201);\n        __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_167))), __core__unBData(__core__headList(self_201)));\n        __core__ifThenElse(\n            cond,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), self_201)\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_207) -> {\n        __cond_33 = __core__headList(__core__tailList(self_207));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 1),\n            () -> {\n                (self_170) -> {\n                    data_139 = __core__headList(__core__sndPair(__core__unConstrData(self_170)));\n                    __helios__common__assert_constr_index(data_139, 0)\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 2),\n                    () -> {\n                        (self_172) -> {\n                            data_139 = __core__headList(__core__sndPair(__core__unConstrData(self_172)));\n                            __helios__common__assert_constr_index(data_139, 0)\n                        }\n                    },\n                    () -> {\n                        (__28) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_33)\n    };\n    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__address, self_208) -> {\n        charterAc_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_208)), #63686172746572);\n        capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_208);\n        __cond_34 = __core__headList(__core__tailList(self_208));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_34)), 2),\n            () -> {\n                (__lhs_0_64) -> {\n                    __helios__common__assert_constr_index(__helios__txoutputdatum__inline(self_51 = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), (txo) -> {\n                        __core__ifThenElse(\n                            __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo))), capoAddr),\n                            () -> {\n                                a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txo))))), charterAc_2);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    });\n                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51)))))), 0)\n                }\n            },\n            () -> {\n                (__29) -> {\n                    error()\n                }\n            }\n        )()(__cond_34)\n    };\n    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1 = (self_209) -> {\n        __cond_35 = __core__headList(__core__tailList(self_209));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 1),\n            () -> {\n                (self_11) -> {\n                    __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_11))))\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 2),\n                    () -> {\n                        (self_11) -> {\n                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_11))))\n                        }\n                    },\n                    () -> {\n                        (__30) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_35)\n    };\n    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_214, __useopt__typeName, id_1) -> {\n        typeName_2 = __core__ifThenElse(\n            __useopt__typeName,\n            () -> {\n                "reqt"\n            },\n            () -> {\n                ""\n            }\n        )();\n        capoAddr_1 = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_214));\n        (txin_4) -> {\n            __core__ifThenElse(\n                __core__equalsData(__helios__txinput__address(txin_4), capoAddr_1),\n                () -> {\n                    data_161 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_4))));\n                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_161)), 2),\n                        () -> {\n                            (__lhs_0_71) -> {\n                                x_7 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_161);\n                                __core__ifThenElse(\n                                    __core__ifThenElse(\n                                        __core__equalsString(typeName_2, ""),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_7), "reqt")\n                                        }\n                                    )(),\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsByteString(id_1, #),\n                                            () -> {\n                                                true\n                                            },\n                                            () -> {\n                                                __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_7, #406964)), id_1)\n                                            }\n                                        )()\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }\n                        },\n                        () -> {\n                            (__31) -> {\n                                false\n                            }\n                        }\n                    )()(data_161)\n                },\n                () -> {\n                    false\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_219) -> {\n        charter_2 = __core__headList(__core__tailList(self_219));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),\n            () -> {\n                (__lhs_0_87) -> {\n                    self_219\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),\n                    () -> {\n                        (__lhs_0_86) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_82) -> {\n                            mph_22 = __core__unBData(__core__headList(self_219));\n                            charterAc_4 = __helios__assetclass__new(mph_22, #63686172746572);\n                            (charterUtxo_3) -> {\n                                datum_5 = __helios__common__assert_constr_index(data_139 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_3))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                __helios__common__assert_constr_index(data_139, 0), 0);\n                                __core__mkCons(__core__bData(mph_22), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_3, __core__mkNilData(())))), __core__mkNilData(())))\n                            }((__cond_45) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_45)), 0),\n                                    () -> {\n                                        (self_9) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_84) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_45)\n                            }(self_143 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                            __helios__common__find_safe(self_143, (txin_6) -> {\n                                a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_6))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_4);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_2)\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_220) -> {\n        charter_3 = __core__headList(__core__tailList(self_220));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 1),\n            () -> {\n                (__lhs_0_91) -> {\n                    self_220\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 2),\n                    () -> {\n                        (__lhs_0_90) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_88) -> {\n                            mph_23 = __core__unBData(__core__headList(self_220));\n                            (utxo_5) -> {\n                                datum_6 = __helios__common__assert_constr_index(data_139 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_5))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                __helios__common__assert_constr_index(data_139, 0), 0);\n                                __core__mkCons(__core__bData(mph_23), __core__mkCons(__core__constrData(1, __core__mkCons(datum_6, __core__mkCons(utxo_5, __core__mkNilData(())))), __core__mkNilData(())))\n                            }(charterAc = __helios__assetclass__new(mph_23, #63686172746572);\n                            (__cond_12) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 0),\n                                    () -> {\n                                        (self_9) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_19) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_12)\n                            }(self_143 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                            __helios__common__find_safe(self_143, (txin) -> {\n                                a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_3)\n    };\n    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {\n        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed_1)));\n        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed_1)))));\n        idxBytes = __core__serialiseData(__core__iData(seedIdx));\n        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));\n        txoInfo = __core__ifThenElse(\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),\n                false,\n                true\n            ),\n            () -> {\n                error()\n            },\n            () -> {\n                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)\n            }\n        )();\n        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));\n        (p) -> {\n            __core__appendString(__core__appendString(p, "-"), mhs)\n        }\n    };\n    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_230, fn_25) -> {\n        recurse_87 = (recurse_86, map_29) -> {\n            __core__chooseList(map_29, () -> {\n                ()\n            }, () -> {\n                head_43 = __core__headList__safe(map_29);\n                __core__chooseUnit(fn_25(__core__unBData(__core__fstPair(head_43)), __core__unIData(__core__sndPair(head_43))), recurse_86(recurse_86, __core__tailList__safe(map_29)))\n            })()\n        };\n        recurse_87(recurse_87, self_230)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__sort = (self_238, comp_4) -> {\n        recurse_57 = (recurse_56, lst_11) -> {\n            __core__chooseList(lst_11, () -> {\n                lst_11\n            }, () -> {\n                tail_2 = recurse_56(recurse_56, __core__tailList__safe(lst_11));\n                x_3 = __core__headList__safe(lst_11);\n                recurse_55 = (recurse_54, lst_9) -> {\n                    __core__chooseList(lst_9, () -> {\n                        __core__mkCons(x_3, lst_9)\n                    }, () -> {\n                        head_4 = __core__headList__safe(lst_9);\n                        __core__ifThenElse(\n                            comp_4(__core__unBData(__core__fstPair(x_3)), __core__unIData(__core__sndPair(x_3)), __core__unBData(__core__fstPair(head_4)), __core__unIData(__core__sndPair(head_4))),\n                            () -> {\n                                __core__mkCons(x_3, lst_9)\n                            },\n                            () -> {\n                                __core__mkCons(head_4, recurse_54(recurse_54, __core__tailList__safe(lst_9)))\n                            }\n                        )()\n                    })()\n                };\n                recurse_55(recurse_55, tail_2)\n            })()\n        };\n        recurse_57(recurse_57, self_238)\n    };\n    __module__CapoMintHelpers__validateUutMinting = (mph_27, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__otherMintedValue, otherMintedValue) -> {\n        mkTokenName_1 = __core__ifThenElse(\n            __useopt__mkTokenName,\n            () -> {\n                mkTokenName\n            },\n            () -> {\n                __module__CapoMintHelpers__mkUutTnFactory(seed_2)\n            }\n        )();\n        otherMintedValue_1 = __core__ifThenElse(\n            __useopt__otherMintedValue,\n            () -> {\n                otherMintedValue\n            },\n            () -> {\n                __core__mkNilPairData(())\n            }\n        )();\n        (delegateApproval) -> {\n            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);\n            expectedValue = __helios__value____add(__helios__value____add(__core__mkNilPairData(()), otherMintedValue_1), (self_239) -> {\n                recurse_93 = (recurse_92, lst_24) -> {\n                    __core__chooseList(lst_24, () -> {\n                        __core__mkNilPairData(())\n                    }, () -> {\n                        __helios__value____add(__core__unMapData(__core__headList__safe(lst_24)), recurse_92(recurse_92, __core__tailList__safe(lst_24)))\n                    })()\n                };\n                recurse_93(recurse_93, self_239)\n            }(recurse_53 = (recurse_52, rem_1) -> {\n                __core__chooseList(rem_1, () -> {\n                    __core__mkNilData(())\n                }, () -> {\n                    __core__mkCons(__core__mapData(purpose_2 = __core__decodeUtf8(__core__unBData(__core__headList__safe(rem_1)));\n                    tnBytes_1 = __core__encodeUtf8(mkTokenName_1(purpose_2));\n                    __core__chooseUnit(__core__ifThenElse(\n                        __core__ifThenElse(\n                            __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),\n                            false,\n                            true\n                        ),\n                        () -> {\n                            ()\n                        },\n                        () -> {\n                            error()\n                        }\n                    )(), __helios__value__new(__helios__assetclass__new(mph_27, tnBytes_1), 1))), recurse_52(recurse_52, __core__tailList__safe(rem_1)))\n                })()\n            };\n            recurse_53(recurse_53, purposes)));\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __helios__value__contains_policy(valueMinted, mph_27),\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_27), (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_3, i_15) -> {\n                ()\n            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, mph_27);\n            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_2, i_14) -> {\n                ()\n            }), msg_1 = __helios__value__show(__helios__common__filter(valueMinted, (pair_39) -> {\n                (b_21, __38) -> {\n                    __core__ifThenElse(\n                        __core__equalsByteString(b_21, mph_27),\n                        false,\n                        true\n                    )\n                }(__core__unBData(__core__fstPair(pair_39)), __core__unMapData(__core__sndPair(pair_39)))\n            }, __core__mkNilPairData(())));\n            ()), thisPolicyMintOK = __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted));\n            __core__chooseUnit(__core__ifThenElse(\n                thisPolicyMintOK,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__chooseUnit(cond = __core__chooseUnit(__core__ifThenElse(\n                b = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), (input_4) -> {\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_4))), seed_2)\n                });\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), true);\n            (), otherPoliciesMintOk = __core__ifThenElse(\n                b = __helios__value__is_zero(otherMintedValue_1);\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    true\n                },\n                () -> {\n                    remainingExpectedMint = __core__ifThenElse(\n                        __helios__value__contains_policy(expectedValue, mph_27),\n                        () -> {\n                            key_23 = __core__bData(mph_27);\n                            recurse_91 = (recurse_90, self_236) -> {\n                                __core__chooseList(self_236, () -> {\n                                    self_236\n                                }, () -> {\n                                    head_45 = __core__headList__safe(self_236);\n                                    tail_4 = __core__tailList__safe(self_236);\n                                    __core__ifThenElse(\n                                        __core__equalsData(key_23, __core__fstPair(head_45)),\n                                        () -> {\n                                            recurse_90(recurse_90, tail_4)\n                                        },\n                                        () -> {\n                                            __core__mkCons(head_45, recurse_90(recurse_90, tail_4))\n                                        }\n                                    )()\n                                })()\n                            };\n                            recurse_91(recurse_91, expectedValue)\n                        },\n                        () -> {\n                            expectedValue\n                        }\n                    )();\n                    __core__ifThenElse(\n                        __helios__value__is_zero(remainingExpectedMint),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__chooseUnit(recurse_89 = (recurse_88, map_30) -> {\n                                __core__chooseList(map_30, () -> {\n                                    ()\n                                }, () -> {\n                                    head_44 = __core__headList__safe(map_30);\n                                    __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {\n                                        mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);\n                                        __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_3, expectedCount) -> {\n                                            __core__ifThenElse(\n                                                (b) -> {\n                                                    __core__ifThenElse(\n                                                        b,\n                                                        false,\n                                                        true\n                                                    )\n                                                }(__cond_55 = __helios__common__map_get(mintedThisPolicy, __core__bData(tokenName_3), (x_12) -> {\n                                                    __core__constrData(0, __core__mkCons(x_12, __core__mkNilData(())))\n                                                }, () -> {\n                                                    __core__constrData(1, __core__mkNilData(()))\n                                                });\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_55)), 1),\n                                                    () -> {\n                                                        (__lhs_0_113) -> {\n                                                            false\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        (__lhs_0_112) -> {\n                                                            actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_112))));\n                                                            __core__equalsInteger(actualCount, expectedCount)\n                                                        }\n                                                    }\n                                                )()(__cond_55)),\n                                                () -> {\n                                                    error()\n                                                },\n                                                () -> {\n                                                    ()\n                                                }\n                                            )()\n                                        })\n                                    }(__core__unBData(__core__fstPair(head_44)), __core__unMapData(__core__sndPair(head_44))), recurse_88(recurse_88, __core__tailList__safe(map_30)))\n                                })()\n                            };\n                            recurse_89(recurse_89, remainingExpectedMint), true)\n                        }\n                    )()\n                }\n            )();\n            __core__chooseUnit(__core__ifThenElse(\n                otherPoliciesMintOk,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__ifThenElse(\n                thisPolicyMintOK,\n                () -> {\n                    otherPoliciesMintOk\n                },\n                () -> {\n                    false\n                }\n            )()))))))\n        }(__lhs_0_111 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n        charterAc_1 = __helios__assetclass__new(mph_27, #63686172746572);\n        hasCharter_1 = (txin_1) -> {\n            a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));\n            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_1);\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(a_3, 0),\n                false,\n                true\n            )\n        };\n        (charterUtxo_1) -> {\n            __helios__common__assert_constr_index(data_139 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));\n            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n            __helios__common__assert_constr_index(data_139, 0), 0)\n        }(__cond_13 = __helios__common__find_safe(refInputs_1, hasCharter_1);\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_13)), 0),\n            () -> {\n                (self_9) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                }\n            },\n            () -> {\n                (__lhs_0_21) -> {\n                    (__cond_14) -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 0),\n                            () -> {\n                                (self_9) -> {\n                                    __core__headList(__core__sndPair(__core__unConstrData(self_9)))\n                                }\n                            },\n                            () -> {\n                                (__lhs_0_22) -> {\n                                    error()\n                                }\n                            }\n                        )()(__cond_14)\n                    }(self_143 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                    __helios__common__find_safe(self_143, hasCharter_1))\n                }\n            }\n        )()(__cond_13)), 0);\n        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_111);\n        true)\n    };\n    __module__ReqtsPolicy__daysInFuture = () -> {\n        __core__chooseUnit(cond = __core__lessThanEqualsInteger(__core__subtractInteger(__helios__timerange__end(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))))), __helios__timerange__start(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))), 3600000);\n        __core__ifThenElse(\n            cond,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), latestAcceptable = __core__addInteger(__core__addInteger(__helios__timerange__end(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))))), 6307200000), 3600000);\n        a_4 = __core__addInteger(__helios__timerange__start(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))))), 6307200000);\n        __core__constrData(0, __core__mkCons(__core__constrData(0, __core__mkCons(__core__constrData(1, __core__mkCons(__core__iData(a_4), __core__mkNilData(()))), __core__mkCons(__core__constrData(1, __core__mkNilData(())), __core__mkNilData(())))), __core__mkCons(__core__constrData(0, __core__mkCons(__core__constrData(1, __core__mkCons(__core__iData(latestAcceptable), __core__mkNilData(()))), __core__mkCons(__core__constrData(1, __core__mkNilData(())), __core__mkNilData(())))), __core__mkNilData(())))))\n    };\n    __module__BasicDelegate__main_1 = (__module__BasicDelegate__main, mdd, activity_3) -> {\n        __common7 = __core__fstPair(__core__unConstrData(mdd));\n        __core__ifThenElse(\n            __core__equalsInteger(__common7, 2),\n            () -> {\n                (__lhs_0_261) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__common7, 1),\n                    () -> {\n                        (isD) -> {\n                            __common16 = __core__sndPair(__core__unConstrData(isD));\n                            __common17 = __core__headList(__common16);\n                            __common18 = __core__unListData(__common17);\n                            __common45 = __core__tailList(__common18);\n                            __common46 = __core__headList(__common45);\n                            __common47 = __core__unBData(__common46);\n                            __common48 = __core__mkCons(__core__bData(__common47), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(())));\n                            __common37 = __core__tailList(__common45);\n                            __common38 = __core__headList(__common37);\n                            __common39 = __core__unBData(__common38);\n                            __core__chooseUnit(__core__ifThenElse(\n                                __core__ifThenElse(\n                                    __core__equalsByteString(__common39, #01),\n                                    false,\n                                    true\n                                ),\n                                () -> {\n                                    ()\n                                },\n                                () -> {\n                                    error()\n                                }\n                            )(), __core__chooseUnit(__core__ifThenElse(\n                                __core__ifThenElse(\n                                    __core__equalsByteString(__common39, #67656e6572616c),\n                                    false,\n                                    true\n                                ),\n                                () -> {\n                                    ()\n                                },\n                                () -> {\n                                    error()\n                                }\n                            )(), __core__chooseUnit(__core__ifThenElse(\n                                __core__ifThenElse(\n                                    __core__equalsByteString(__common39, #5265717473506f6c696379),\n                                    false,\n                                    true\n                                ),\n                                () -> {\n                                    ()\n                                },\n                                () -> {\n                                    error()\n                                }\n                            )(), myDgTkn = __helios__value__show(self_36 = __helios__scriptcontext__get_current_input();\n                            self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_36))));\n                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))));\n                            checkNonDelegatedActivities = __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 8),\n                                () -> {\n                                    (__lhs_0_239) -> {\n                                        activities_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_239))));\n                                        cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__common48);\n                                        __helios__common__all(activities_2, (rawActivity_2) -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 6),\n                                                () -> {\n                                                    (__lhs_0_260) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 5),\n                                                        () -> {\n                                                            (__lhs_0_259) -> {\n                                                                error()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 7),\n                                                                () -> {\n                                                                    (__lhs_0_258) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 2),\n                                                                        () -> {\n                                                                            (__lhs_0_257) -> {\n                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main, mdd, rawActivity_2)\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 3),\n                                                                                () -> {\n                                                                                    (__lhs_0_256) -> {\n                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main, mdd, rawActivity_2)\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 4),\n                                                                                        () -> {\n                                                                                            (__lhs_0_255) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 1),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_254) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 0),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_253) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_252) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()(rawActivity_2)\n                                        })\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                                        () -> {\n                                            (__lhs_0_233) -> {\n                                                innerActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_233)));\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 0),\n                                                    () -> {\n                                                        (__lhs_0_237) -> {\n                                                            seed_9 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_237)));\n                                                            (purpose_8) -> {\n                                                                otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__common47, __common39), -1);\n                                                                cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common48);\n                                                                (isUpdatingCharter) -> {\n                                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__common47, seed_9, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_8)), __core__mkNilData(())), false, (), true, otherMintedValue_2);\n                                                                    __core__ifThenElse(\n                                                                        isMintingOk,\n                                                                        () -> {\n                                                                            isUpdatingCharter\n                                                                        },\n                                                                        () -> {\n                                                                            false\n                                                                        }\n                                                                    )()\n                                                                }(__cond_110 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5);\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_110)), 5),\n                                                                    () -> {\n                                                                        (__lhs_0_238) -> {\n                                                                            true\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__75) -> {\n                                                                            false\n                                                                        }\n                                                                    }\n                                                                )()(__cond_110))\n                                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_237))));\n                                                            __core__decodeUtf8(__core__unBData(d)))\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 1),\n                                                            () -> {\n                                                                (__lhs_0_236) -> {\n                                                                    __core__equalsInteger(self_13 = __helios__tx__minted(__helios__scriptcontext__tx);\n                                                                    __common40 = __core__unConstrData(__helios__assetclass__new(__common47, __common39));\n                                                                    __common41 = __core__sndPair(__common40);\n                                                                    mph_2 = __core__headList(__common41);\n                                                                    tokenName_1 = __core__headList(__core__tailList(__common41));\n                                                                    outer_1 = (outer, inner, map) -> {\n                                                                        __core__chooseList(map, () -> {\n                                                                            error()\n                                                                        }, () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),\n                                                                                () -> {\n                                                                                    inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))\n                                                                                },\n                                                                                () -> {\n                                                                                    outer(outer, inner, __core__tailList__safe(map))\n                                                                                }\n                                                                            )()\n                                                                        })()\n                                                                    };\n                                                                    outer_1(outer_1, (inner_1, map_1) -> {\n                                                                        __core__chooseList(map_1, () -> {\n                                                                            error()\n                                                                        }, () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),\n                                                                                () -> {\n                                                                                    __core__unIData(__core__sndPair(__core__headList__safe(map_1)))\n                                                                                },\n                                                                                () -> {\n                                                                                    inner_1(inner_1, __core__tailList__safe(map_1))\n                                                                                }\n                                                                            )()\n                                                                        })()\n                                                                    }, self_13), -1)\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__lhs_0_234) -> {\n                                                                    error()\n                                                                }\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(innerActivity)\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                                                () -> {\n                                                    (__lhs_0_133) -> {\n                                                        dCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_133)));\n                                                        cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common48));\n                                                        __common23 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);\n                                                        __core__chooseUnit(__cond_107 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4);\n                                                        __common36 = __core__fstPair(__core__unConstrData(__cond_107));\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__common36, 0),\n                                                            () -> {\n                                                                (__lhs_0_232) -> {\n                                                                    cCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_232)));\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsData(cCLA, dCLA),\n                                                                        () -> {\n                                                                            ()\n                                                                        },\n                                                                        () -> {\n                                                                            error()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__common36, 5),\n                                                                    () -> {\n                                                                        (__lhs_0_230) -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                                                                () -> {\n                                                                                    (__lhs_0_231) -> {\n                                                                                        ()\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    (__74) -> {\n                                                                                        error()\n                                                                                    }\n                                                                                }\n                                                                            )()(dCLA)\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__73) -> {\n                                                                            error()\n                                                                        }\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()(__cond_107), neededRole = __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 4),\n                                                            () -> {\n                                                                (__lhs_0_102) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                                    () -> {\n                                                                        (__lhs_0_101) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                                            () -> {\n                                                                                (__lhs_0_100) -> {\n                                                                                    __core__constrData(1, __core__mkNilData(()))\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                                                    () -> {\n                                                                                        (__lhs_0_99) -> {\n                                                                                            __core__constrData(0, __core__mkNilData(()))\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                                                            () -> {\n                                                                                                (__lhs_0_98) -> {\n                                                                                                    __core__constrData(1, __core__mkNilData(()))\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_97) -> {\n                                                                                                            __core__constrData(6, __core__mkNilData(()))\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_96) -> {\n                                                                                                            __core__constrData(0, __core__mkNilData(()))\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()(dCLA);\n                                                        myCurrentRole = __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 7),\n                                                            () -> {\n                                                                (__lhs_0_137) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 1),\n                                                                    () -> {\n                                                                        (__lhs_0_136) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 0),\n                                                                            () -> {\n                                                                                (__lhs_0_135) -> {\n                                                                                    error()\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 6),\n                                                                                    () -> {\n                                                                                        __common21 = __core__headList(cctx_4);\n                                                                                        __common22 = __core__unBData(__common21);\n                                                                                        (__lhs_0_134) -> {\n                                                                                            __core__ifThenElse(\n                                                                                                input_2 = __helios__scriptcontext__get_current_input();\n                                                                                                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__common23), __common22);\n                                                                                                a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_2))));\n                                                                                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), acMintDgt);\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__lessThanEqualsInteger(a_3, 0),\n                                                                                                    false,\n                                                                                                    true\n                                                                                                ),\n                                                                                                () -> {\n                                                                                                    __core__constrData(0, __core__mkNilData(()))\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        input_3 = __helios__scriptcontext__get_current_input();\n                                                                                                        acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__common23)))), __common22);\n                                                                                                        a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_3))));\n                                                                                                        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), acSpendDgt);\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__lessThanEqualsInteger(a_3, 0),\n                                                                                                            false,\n                                                                                                            true\n                                                                                                        ),\n                                                                                                        () -> {\n                                                                                                            __core__constrData(1, __core__mkNilData(()))\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__43) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()(neededRole);\n                                                        __core__ifThenElse(\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                                                () -> {\n                                                                    (__lhs_0_226) -> {\n                                                                        seed_8 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_226)));\n                                                                        (purpose_7) -> {\n                                                                            mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                                () -> {\n                                                                                    (__lhs_0_227) -> {\n                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                            __module__CapoMintHelpers__validateUutMinting(__common47, seed_8, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_7)), __core__mkNilData(())), true, mkTn_1, false, ()),\n                                                                                            () -> {\n                                                                                                ()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                ()\n                                                                                            }\n                                                                                        )(), (__cond_106) -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_106)), 1),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_229) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__lhs_0_228) -> {\n                                                                                                        dgtLink_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_228))));\n                                                                                                        __core__chooseUnit(cond = __core__equalsString(d = __core__headList(dgtLink_3);\n                                                                                                        __core__decodeUtf8(__core__unBData(d)), mkTn_1(purpose_7));\n                                                                                                        __core__ifThenElse(\n                                                                                                            cond,\n                                                                                                            () -> {\n                                                                                                                ()\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        )(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3, __common47))\n                                                                                                    }\n                                                                                                }\n                                                                                            )()(__cond_106)\n                                                                                        }((self_203) -> {\n                                                                                            __helios__common__map_get(self_203, __core__bData(__core__encodeUtf8(purpose_7)), (x_6) -> {\n                                                                                                __core__constrData(0, __core__mkCons(x_6, __core__mkNilData(())))\n                                                                                            }, () -> {\n                                                                                                __core__constrData(1, __core__mkNilData(()))\n                                                                                            })\n                                                                                        }(self_164 = __module__CapoHelpers__CapoCtx[]__getNextCharterData((self_211) -> {\n                                                                                            __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_211))\n                                                                                        }, cctx_4);\n                                                                                        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_164)))))))))\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    (__72) -> {\n                                                                                        error()\n                                                                                    }\n                                                                                }\n                                                                            )()(myCurrentRole)\n                                                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_226))));\n                                                                        __core__decodeUtf8(__core__unBData(d)))\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                                        () -> {\n                                                                            (__lhs_0_174) -> {\n                                                                                charterData_4 = __helios__common__assert_constr_index(__common23, 0);\n                                                                                __common0 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))));\n                                                                                nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData((self_211) -> {\n                                                                                    __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_211))\n                                                                                }, cctx_4);\n                                                                                nextChangeList = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData_2)))));\n                                                                                newChange = __core__headList(nextChangeList);\n                                                                                __lhs_0_175 = __helios__common__assert_constr_index(newChange, 0);\n                                                                                __lhs_0_0_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_175))));\n                                                                                __common13 = __core__tailList(__lhs_0_0_2);\n                                                                                action = __core__headList(__lhs_0_0_2);\n                                                                                __common26 = __core__unConstrData(action);\n                                                                                __common28 = __core__equalsInteger(__core__fstPair(__common26), 1);\n                                                                                role_2 = __core__headList(__common13);\n                                                                                __common3 = __core__equalsInteger(__core__fstPair(__core__unConstrData(role_2)), 4);\n                                                                                OdgtLink = __core__headList(__core__tailList(__common13));\n                                                                                newDgtRoleName = __core__ifThenElse(\n                                                                                    __common3,\n                                                                                    () -> {\n                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__56) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()(role_2);\n                                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                                    __common28,\n                                                                                    () -> {\n                                                                                        (__lhs_0_224) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__70) -> {\n                                                                                            ()\n                                                                                        }\n                                                                                    }\n                                                                                )()(action), __core__chooseUnit((cond) -> {\n                                                                                    __core__ifThenElse(\n                                                                                        cond,\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )()\n                                                                                }(self_261 = __core__tailList(nextChangeList);\n                                                                                __core__equalsData(__core__listData(self_261), __core__listData(__common0))), __core__ifThenElse(\n                                                                                    __common28,\n                                                                                    () -> {\n                                                                                        (__lhs_0_223) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                                            () -> {\n                                                                                                (__lhs_0_222) -> {\n                                                                                                    __common29 = __core__sndPair(__core__unConstrData(__lhs_0_222));\n                                                                                                    __common30 = __core__tailList(__common29);\n                                                                                                    seed_7 = __core__headList(__common29);\n                                                                                                    (purpose_6) -> {\n                                                                                                        (idPrefix_9) -> {\n                                                                                                            (callback_14) -> {\n                                                                                                                callback_14(seed_7, purpose_6, idPrefix_9)\n                                                                                                            }\n                                                                                                        }(d = __core__headList(__core__tailList(__common30));\n                                                                                                        __core__decodeUtf8(__core__unBData(d)))\n                                                                                                    }(d = __core__headList(__common30);\n                                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__lhs_0_221) -> {\n                                                                                                    seed_6 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_221)));\n                                                                                                    (purpose_5) -> {\n                                                                                                        (idPrefix_8) -> {\n                                                                                                            (callback_13) -> {\n                                                                                                                callback_13(seed_6, purpose_5, idPrefix_8)\n                                                                                                            }\n                                                                                                        }(d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_221)))));\n                                                                                                        __core__decodeUtf8(__core__unBData(d)))\n                                                                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_221))));\n                                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                                }\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()(action)((seed_5, purpose_4, pendingActionIdPrefix) -> {\n                                                                                    possibleMintDgtVerifications = __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                                        () -> {\n                                                                                            (__lhs_0_193) -> {\n                                                                                                true\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_177) -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 1),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_185) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                (__58) -> {\n                                                                                                                    mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);\n                                                                                                                    mintedDgTkn = __module__CapoMintHelpers__validateUutMinting(__common47, seed_5, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_4)), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, ());\n                                                                                                                    dgtLink_2 = __core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(OdgtLink)), 1),\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_179) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (self_202) -> {\n                                                                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_202))))\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(OdgtLink);\n                                                                                                                    (__common1) -> {\n                                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                                            __core__equalsString(__common1, mkTokenName_2(purpose_4)),\n                                                                                                                            () -> {\n                                                                                                                                ()\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        )(), (delegateTakesOwnership) -> {\n                                                                                                                            possibleExtraReplacementCheck = __core__ifThenElse(\n                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_180) -> {\n                                                                                                                                        __core__chooseUnit(__cond_88 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_88)), 0),\n                                                                                                                                            () -> {\n                                                                                                                                                (__lhs_0_182) -> {\n                                                                                                                                                    dde = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_182)));\n                                                                                                                                                    entryType_1 = __helios__common__mStruct_field(dde, #747065);\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_1)), 1),\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__lhs_0_184) -> {\n                                                                                                                                                                (idPrefix_7) -> {\n                                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                                        __core__equalsString(idPrefix_7, pendingActionIdPrefix),\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            ()\n                                                                                                                                                                        },\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            error()\n                                                                                                                                                                        }\n                                                                                                                                                                    )()\n                                                                                                                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_184))));\n                                                                                                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                                                                                                            }\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__60) -> {\n                                                                                                                                                                error()\n                                                                                                                                                            }\n                                                                                                                                                        }\n                                                                                                                                                    )()(entryType_1)\n                                                                                                                                                }\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                (__lhs_0_181) -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            }\n                                                                                                                                        )()(__cond_88), true)\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    (__59) -> {\n                                                                                                                                        true\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            )()(action);\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    mintedDgTkn,\n                                                                                                                                    () -> {\n                                                                                                                                        true\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        false\n                                                                                                                                    }\n                                                                                                                                )(),\n                                                                                                                                () -> {\n                                                                                                                                    possibleExtraReplacementCheck\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    false\n                                                                                                                                }\n                                                                                                                            )()\n                                                                                                                        }(assertion_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2, __common47);\n                                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                                            assertion_2,\n                                                                                                                            () -> {\n                                                                                                                                ()\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        )(), true)))\n                                                                                                                    }(d = __core__headList(dgtLink_2);\n                                                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                                                }\n                                                                                                            }\n                                                                                                        )()(action)\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__57) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(myCurrentRole);\n                                                                                    otherPossibleVerifications = __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                                        () -> {\n                                                                                            (__lhs_0_220) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_194) -> {\n                                                                                                        isNotADuplicate = __helios__common__all(__common0, (pdChange_2) -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(pdChange_2)), 0),\n                                                                                                                () -> {\n                                                                                                                    (__lhs_0_195) -> {\n                                                                                                                        __lhs_0_0_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_195))));\n                                                                                                                        pendingRole = __core__headList(__core__tailList(__lhs_0_0_3));\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(pendingRole)), 4),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_196) -> {\n                                                                                                                                    changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_196);\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__equalsString(changingDgtName, newDgtRoleName),\n                                                                                                                                        false,\n                                                                                                                                        true\n                                                                                                                                    )\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__64) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()(pendingRole)\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    (__63) -> {\n                                                                                                                        error()\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            )()(pdChange_2)\n                                                                                                        });\n                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                            isNotADuplicate,\n                                                                                                            () -> {\n                                                                                                                ()\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        )(), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                                        possibleReplacementIsCorrect = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_218) -> {\n                                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 0),\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_219) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__69) -> {\n                                                                                                                                ()\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(existingRoleEntryMaybe), true)\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                                    () -> {\n                                                                                                                        __common24 = __core__unConstrData(role_2);\n                                                                                                                        __common25 = __core__fstPair(__common24);\n                                                                                                                        __common31 = __core__equalsInteger(__common25, 2);\n                                                                                                                        (__lhs_0_199) -> {\n                                                                                                                            replacesDgt = __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_199))))));\n                                                                                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                __common31,\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_217) -> {\n                                                                                                                                        error()\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__common25, 3),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_216) -> {\n                                                                                                                                                error()\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __core__equalsInteger(__common25, 7),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_215) -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    (__68) -> {\n                                                                                                                                                        ()\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            )()\n                                                                                                                                        }\n                                                                                                                                    )()\n                                                                                                                                }\n                                                                                                                            )()(role_2), existingDgtLink_1 = __core__ifThenElse(\n                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 1),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_202) -> {\n                                                                                                                                        error()\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_200) -> {\n                                                                                                                                        __lhs_0_0_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_200)));\n                                                                                                                                        entryType_2 = __helios__common__mStruct_field(__lhs_0_0_4, #747065);\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_2)), 1),\n                                                                                                                                            () -> {\n                                                                                                                                                (self_156) -> {\n                                                                                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_156))))\n                                                                                                                                                }\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                (__66) -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            }\n                                                                                                                                        )()(entryType_2)\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            )()(existingRoleEntryMaybe);\n                                                                                                                            existingDgTkn = __core__ifThenElse(\n                                                                                                                                __core__equalsInteger(__common25, 0),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_210) -> {\n                                                                                                                                        some_5 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4), __common47);\n                                                                                                                                        __core__constrData(0, __core__mkCons(some_5, __core__mkNilData(())))\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__common25, 1),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_209) -> {\n                                                                                                                                                some_5 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_4)))), __common47);\n                                                                                                                                                __core__constrData(0, __core__mkCons(some_5, __core__mkNilData(())))\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __common3,\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_208) -> {\n                                                                                                                                                        some_5 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1, __common47);\n                                                                                                                                                        __core__constrData(0, __core__mkCons(some_5, __core__mkNilData(())))\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __core__equalsInteger(__common25, 5),\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__lhs_0_207) -> {\n                                                                                                                                                                error()\n                                                                                                                                                            }\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                                __core__equalsInteger(__common25, 6),\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__lhs_0_206) -> {\n                                                                                                                                                                        error()\n                                                                                                                                                                    }\n                                                                                                                                                                },\n                                                                                                                                                                () -> {\n                                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                                        __common31,\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            (__lhs_0_205) -> {\n                                                                                                                                                                                error()\n                                                                                                                                                                            }\n                                                                                                                                                                        },\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                                                __core__equalsInteger(__common25, 3),\n                                                                                                                                                                                () -> {\n                                                                                                                                                                                    (__lhs_0_204) -> {\n                                                                                                                                                                                        error()\n                                                                                                                                                                                    }\n                                                                                                                                                                                },\n                                                                                                                                                                                () -> {\n                                                                                                                                                                                    (__lhs_0_203) -> {\n                                                                                                                                                                                        error()\n                                                                                                                                                                                    }\n                                                                                                                                                                                }\n                                                                                                                                                                            )()\n                                                                                                                                                                        }\n                                                                                                                                                                    )()\n                                                                                                                                                                }\n                                                                                                                                                            )()\n                                                                                                                                                        }\n                                                                                                                                                    )()\n                                                                                                                                                }\n                                                                                                                                            )()\n                                                                                                                                        }\n                                                                                                                                    )()\n                                                                                                                                }\n                                                                                                                            )()(role_2);\n                                                                                                                            __core__chooseUnit(cond = __core__equalsData(replacesDgt, __core__headList(__core__sndPair(__core__unConstrData(existingDgTkn))));\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                cond,\n                                                                                                                                () -> {\n                                                                                                                                    ()\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            )(), true))\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_197) -> {\n                                                                                                                            error()\n                                                                                                                        }\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(action);\n                                                                                                        __core__ifThenElse(\n                                                                                                            isNotADuplicate,\n                                                                                                            () -> {\n                                                                                                                possibleReplacementIsCorrect\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                false\n                                                                                                            }\n                                                                                                        )())\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__62) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(myCurrentRole);\n                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                        __core__equalsInteger(recurse_19 = (recurse_18, lst_4) -> {\n                                                                                            __core__chooseList(lst_4, () -> {\n                                                                                                0\n                                                                                            }, () -> {\n                                                                                                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)\n                                                                                            })()\n                                                                                        };\n                                                                                        recurse_19(recurse_19, __common0), 0),\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )(), __core__ifThenElse(\n                                                                                        possibleMintDgtVerifications,\n                                                                                        () -> {\n                                                                                            otherPossibleVerifications\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )())\n                                                                                })))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                                                () -> {\n                                                                                    (__lhs_0_173) -> {\n                                                                                        error()\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                                        () -> {\n                                                                                            (__lhs_0_150) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_140) -> {\n                                                                                                        manifestActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_140)));\n                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 0),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_149) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 1),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_148) -> {\n                                                                                                                            error()\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 2),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_142) -> {\n                                                                                                                                    (key_31) -> {\n                                                                                                                                        tokenName_5 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_142)))));\n                                                                                                                                        charterData_3 = __helios__common__assert_constr_index(__common23, 0);\n                                                                                                                                        nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData((self_211) -> {\n                                                                                                                                            __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_211))\n                                                                                                                                        }, cctx_4);\n                                                                                                                                        __common2 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData))));\n                                                                                                                                        (__lhs_0_143) -> {\n                                                                                                                                            __core__chooseUnit(__cond_66 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__common2, key_31);\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_66)), 1),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_147) -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_144) -> {\n                                                                                                                                                        __lhs_0_0 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_144)));\n                                                                                                                                                        entryType = __helios__common__mStruct_field(__lhs_0_0, #747065);\n                                                                                                                                                        tn_4 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0, #746e));\n                                                                                                                                                        mph_28 = __helios__common__mStruct_field(__lhs_0_0, #6d7068);\n                                                                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                                            __core__equalsByteString(tn_4, tokenName_5),\n                                                                                                                                                            () -> {\n                                                                                                                                                                ()\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                error()\n                                                                                                                                                            }\n                                                                                                                                                        )(), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_28)), 0),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_146) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__46) -> {\n                                                                                                                                                                    ()\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        )()(mph_28), __core__ifThenElse(\n                                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType)), 0),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_145) -> {\n                                                                                                                                                                    ()\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__45) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        )()(entryType)))\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            )()(__cond_66), (cond) -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    cond,\n                                                                                                                                                    () -> {\n                                                                                                                                                        ()\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }(self_278 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_3))));\n                                                                                                                                            __core__equalsData(__core__mapData(self_278), __core__mapData(key_30 = __core__bData(__core__encodeUtf8(key_31));\n                                                                                                                                            recurse_101 = (recurse_100, self_277) -> {\n                                                                                                                                                __core__chooseList(self_277, () -> {\n                                                                                                                                                    self_277\n                                                                                                                                                }, () -> {\n                                                                                                                                                    head_49 = __core__headList__safe(self_277);\n                                                                                                                                                    tail_6 = __core__tailList__safe(self_277);\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __core__equalsData(key_30, __core__fstPair(head_49)),\n                                                                                                                                                        () -> {\n                                                                                                                                                            recurse_100(recurse_100, tail_6)\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            __core__mkCons(head_49, recurse_100(recurse_100, tail_6))\n                                                                                                                                                        }\n                                                                                                                                                    )()\n                                                                                                                                                })()\n                                                                                                                                            };\n                                                                                                                                            recurse_101(recurse_101, __common2)))))\n                                                                                                                                        }(hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_4, false, tokenName_5);\n                                                                                                                                        recIdStr = __core__decodeUtf8(tokenName_5);\n                                                                                                                                        (__cond_36) -> {\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 1),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_68) -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_67) -> {\n                                                                                                                                                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_67)))\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            )()(__cond_36)\n                                                                                                                                        }(self_143 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                                                                                                                                        __helios__common__find_safe(self_143, hasDD)))\n                                                                                                                                    }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_142)));\n                                                                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 3),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_141) -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__44) -> {\n                                                                                                                                            ()\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(manifestActivity), true)\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_139) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_138) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()(dCLA),\n                                                            () -> {\n                                                                true\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )())\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 5),\n                                                        () -> {\n                                                            (__lhs_0_132) -> {\n                                                                error()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 6),\n                                                                () -> {\n                                                                    (__lhs_0_131) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 7),\n                                                                        () -> {\n                                                                            (__lhs_0_129) -> {\n                                                                                error()\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),\n                                                                                () -> {\n                                                                                    (__lhs_0_128) -> {\n                                                                                        true\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),\n                                                                                        () -> {\n                                                                                            (__lhs_0_127) -> {\n                                                                                                true\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__lhs_0_126) -> {\n                                                                                                true\n                                                                                            }\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()(activity_3);\n                            __core__chooseUnit(__core__ifThenElse(\n                                checkNonDelegatedActivities,\n                                () -> {\n                                    ()\n                                },\n                                () -> {\n                                    error()\n                                }\n                            )(), (cctx_7) -> {\n                                __core__ifThenElse(\n                                    self_227 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_7);\n                                    true,\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__ifThenElse(\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                                                    () -> {\n                                                        (__lhs_0_121) -> {\n                                                            true\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                                                            () -> {\n                                                                (__lhs_0_120) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),\n                                                                    () -> {\n                                                                        __common32 = __core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx));\n                                                                        __common33 = __core__tailList(__common32);\n                                                                        __common42 = __core__headList(__common33);\n                                                                        (__lhs_0_118) -> {\n                                                                            VMA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_118)));\n                                                                            seed_3 = __core__headList(__core__sndPair(__core__unConstrData(VMA)));\n                                                                            mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);\n                                                                            __core__chooseUnit((cond) -> {\n                                                                                ()\n                                                                            }(self_227 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx_7);\n                                                                            true), (newReqt) -> {\n                                                                                reqtData_1 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(newReqt))))));\n                                                                                __core__chooseUnit(cond = __core__lessThanEqualsInteger(__core__subtractInteger(__helios__timerange__end(__common42), __helios__timerange__start(__common42)), 3600000);\n                                                                                __core__ifThenElse(\n                                                                                    cond,\n                                                                                    () -> {\n                                                                                        ()\n                                                                                    },\n                                                                                    () -> {\n                                                                                        error()\n                                                                                    }\n                                                                                )(), acceptableExpiry = __module__ReqtsPolicy__daysInFuture();\n                                                                                discountEnds = __core__unIData(__helios__common__mStruct_field(reqtData_1, #657870));\n                                                                                __core__chooseUnit((cond, msg_2) -> {\n                                                                                    __core__ifThenElse(\n                                                                                        cond,\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )()\n                                                                                }(__helios__timerange__contains(acceptableExpiry, discountEnds), __core__appendString("wrong discount expiry date too late seconds: ", __helios__int__show(__core__quotientInteger(__core__subtractInteger(discountEnds, __helios__timerange__end(acceptableExpiry)), 1000)))), __module__CapoMintHelpers__validateUutMinting(__common47, seed_3, __core__mkCons(__core__bData(#72657174), __core__mkNilData(())), true, mkTn, false, ())))\n                                                                            }(recId_5 = __core__encodeUtf8(mkTn("reqt"));\n                                                                            recIdStr_3 = __core__decodeUtf8(recId_5);\n                                                                            ac_2 = __helios__assetclass__new(__core__unBData(__core__headList(cctx_7)), recId_5);\n                                                                            capoAddr_3 = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(cctx_7));\n                                                                            (__cond_41) -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_41)), 1),\n                                                                                    () -> {\n                                                                                        (__lhs_0_75) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__lhs_0_74) -> {\n                                                                                            __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_74)))\n                                                                                        }\n                                                                                    }\n                                                                                )()(__cond_41)\n                                                                            }(self_146 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                                                                            __helios__common__find_safe(self_146, (txout) -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txout))))), ac_2), 1),\n                                                                                    () -> {\n                                                                                        __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txout))), capoAddr_3)\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )()\n                                                                            }))))\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),\n                                                                            () -> {\n                                                                                (__lhs_0_114) -> {\n                                                                                    VSA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_114)));\n                                                                                    __core__chooseUnit((cond) -> {\n                                                                                        ()\n                                                                                    }(self_227 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx_7);\n                                                                                    true), __core__chooseUnit(msg_1 = __core__appendString("\ncapo addr", self_56 = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(cctx_7));\n                                                                                    __helios__data__show_constr_data((tag_5, fields_7) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(tag_5, 0),\n                                                                                            () -> {\n                                                                                                __core__appendString("{spending_credential:", __core__appendString(__helios__data__show_field(0, (self_52) -> {\n                                                                                                    __helios__data__show_constr_data((tag_2, fields_3) -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__equalsInteger(tag_2, 0),\n                                                                                                            () -> {\n                                                                                                                __core__appendString("PubKey{hash:", __core__appendString(__helios__data__show_field(0, __helios__data__show_bdata(__helios__bytearray__show), fields_3), "}"))\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(tag_2, 1),\n                                                                                                                    () -> {\n                                                                                                                        __core__appendString("Validator{hash:", __core__appendString(__helios__data__show_field(0, __helios__data__show_bdata(__helios__bytearray__show), fields_3), "}"))\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __helios__data__show(__core__constrData(tag_2, fields_3))()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }, self_52)\n                                                                                                }, fields_7), __core__appendString(",staking_credential:", __core__appendString(__helios__data__show_field(1, (self_55) -> {\n                                                                                                    __core__chooseData(self_55, () -> {\n                                                                                                        pair_6 = __core__unConstrData__safe(self_55);\n                                                                                                        fields_6 = __core__sndPair(pair_6);\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(pair_6), 0),\n                                                                                                            () -> {\n                                                                                                                __core__chooseList(fields_6, () -> {\n                                                                                                                    "Some{<missing>}"\n                                                                                                                }, () -> {\n                                                                                                                    value_2 = __core__headList__safe(fields_6);\n                                                                                                                    __core__appendString("Some{", __core__appendString(__helios__data__show_constr_data((tag_4, fields_5) -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(tag_4, 0),\n                                                                                                                            () -> {\n                                                                                                                                __core__appendString("Hash{hash:", __core__appendString(__helios__data__show_field(0, (self_53) -> {\n                                                                                                                                    __helios__data__show_constr_data((tag_3, fields_4) -> {\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(tag_3, 0),\n                                                                                                                                            () -> {\n                                                                                                                                                __core__appendString("StakeKey{hash:", __core__appendString(__helios__data__show_field(0, __helios__data__show_bdata(__helios__bytearray__show), fields_4), "}"))\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __core__equalsInteger(tag_3, 1),\n                                                                                                                                                    () -> {\n                                                                                                                                                        __core__appendString("Validator{hash:", __core__appendString(__helios__data__show_field(0, __helios__data__show_bdata(__helios__bytearray__show), fields_4), "}"))\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        __helios__data__show(__core__constrData(tag_3, fields_4))()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }\n                                                                                                                                        )()\n                                                                                                                                    }, self_53)\n                                                                                                                                }, fields_5), "}"))\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(tag_4, 1),\n                                                                                                                                    () -> {\n                                                                                                                                        __common6 = __helios__data__show_field(2, (data_13) -> {\n                                                                                                                                            callback_nok_6 = __helios__data__show(data_13);\n                                                                                                                                            __core__chooseData(data_13, callback_nok_6, callback_nok_6, callback_nok_6, () -> {\n                                                                                                                                                __helios__int__show(__core__unIData__safe(data_13))\n                                                                                                                                            }, callback_nok_6)()\n                                                                                                                                        }, fields_5);\n                                                                                                                                        __core__appendString("Ptr{i:", __core__appendString(__common6, __core__appendString(",j:", __core__appendString(__common6, __core__appendString(",k:", __core__appendString(__common6, "}"))))))\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __helios__data__show(value_2)()\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }, value_2), "}"))\n                                                                                                                })()\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                "None"\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }, () -> {\n                                                                                                        __helios__data__show(self_55)()\n                                                                                                    }, () -> {\n                                                                                                        __helios__data__show(self_55)()\n                                                                                                    }, () -> {\n                                                                                                        __helios__data__show(self_55)()\n                                                                                                    }, () -> {\n                                                                                                        __helios__data__show(self_55)()\n                                                                                                    })()\n                                                                                                }, fields_7), "}"))))\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __helios__data__show(self_56)()\n                                                                                            }\n                                                                                        )()\n                                                                                    }, self_56));\n                                                                                    (), recId_6 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(VSA))));\n                                                                                    hasDD_2 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_7, true, recId_6);\n                                                                                    (hasDDOutput) -> {\n                                                                                        __core__chooseUnit((self_256) -> {\n                                                                                            recurse_95 = (recurse_94, lst_25) -> {\n                                                                                                __core__chooseList(lst_25, () -> {\n                                                                                                    ()\n                                                                                                }, () -> {\n                                                                                                    __core__chooseUnit(utxo_6 = __core__headList__safe(lst_25);\n                                                                                                    reqtData = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_6))));\n                                                                                                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                                                                                    updatedUtxo = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), hasDDOutput);\n                                                                                                    updatedReqt = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(updatedUtxo))))));\n                                                                                                    (__lhs_0_116) -> {\n                                                                                                        (__lhs_0_117) -> {\n                                                                                                            freshExpiry = __module__ReqtsPolicy__daysInFuture();\n                                                                                                            __core__ifThenElse(\n                                                                                                                (a_3, b_3) -> {\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__lessThanEqualsInteger(a_3, b_3),\n                                                                                                                        false,\n                                                                                                                        true\n                                                                                                                    )\n                                                                                                                }(__helios__timerange__end(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))))), __core__unIData(__helios__common__mStruct_field(reqtData, #657870))),\n                                                                                                                () -> {\n                                                                                                                    cond = __helios__timerange__contains(freshExpiry, __core__unIData(__helios__common__mStruct_field(updatedReqt, #657870)));\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        cond,\n                                                                                                                        () -> {\n                                                                                                                            ()\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            error()\n                                                                                                                        }\n                                                                                                                    )()\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    ()\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        }(self_59 = __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(updatedUtxo)))));\n                                                                                                        __helios__value__get_safe(self_59, __core__constrData(0, __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(#), __core__mkNilData(()))))))\n                                                                                                    }((self_59) -> {\n                                                                                                        __helios__value__get_safe(self_59, __core__constrData(0, __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(#), __core__mkNilData(())))))\n                                                                                                    }(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_6))));\n                                                                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))))), recurse_94(recurse_94, __core__tailList__safe(lst_25)))\n                                                                                                })()\n                                                                                            };\n                                                                                            recurse_95(recurse_95, self_256)\n                                                                                        }(self_65 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                                                                                        __helios__common__filter(self_65, hasDD_2, __core__mkNilData(()))), true)\n                                                                                    }(capoAddr_2 = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(cctx_7));\n                                                                                    (txo_1) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo_1))), capoAddr_2),\n                                                                                            () -> {\n                                                                                                data_162 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(txo_1))))));\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(data_162)), 2),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_72) -> {\n                                                                                                            x_8 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_162);\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_8), "reqt"),\n                                                                                                                () -> {\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__equalsByteString(recId_6, #),\n                                                                                                                        () -> {\n                                                                                                                            true\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_8, #406964)), recId_6)\n                                                                                                                        }\n                                                                                                                    )()\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    false\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__32) -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()(data_162)\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    })))\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__39) -> {\n                                                                                    false\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(activity_3),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    __core__equalsByteString(__core__serialiseData(__helios__scriptcontext__tx), __core__serialiseData(isD))\n                                                }\n                                            )(),\n                                            () -> {\n                                                true\n                                            },\n                                            () -> {\n                                                error()\n                                            }\n                                        )()\n                                    },\n                                    ()\n                                )()\n                            }(charter_1 = __core__headList(__core__tailList(__common48));\n                            __common19 = __core__unConstrData(charter_1);\n                            __common20 = __core__fstPair(__common19);\n                            __core__ifThenElse(\n                                __core__equalsInteger(__common20, 1),\n                                () -> {\n                                    (__lhs_0_81) -> {\n                                        __common48\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__common20, 2),\n                                        () -> {\n                                            (__lhs_0_80) -> {\n                                                __common48\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0_76) -> {\n                                                mph_21 = __core__unBData(__core__headList(__common48));\n                                                charterAc_3 = __helios__assetclass__new(mph_21, #63686172746572);\n                                                (__cond_43) -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_43)), 1),\n                                                        () -> {\n                                                            (__lhs_0_79) -> {\n                                                                __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__common48)\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__lhs_0_78) -> {\n                                                                charterUtxo_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_78)));\n                                                                datum_4 = __helios__common__assert_constr_index(data_139 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));\n                                                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                                                __helios__common__assert_constr_index(data_139, 0), 0);\n                                                                __core__mkCons(__core__bData(mph_21), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))\n                                                            }\n                                                        }\n                                                    )()(__cond_43)\n                                                }(self_143 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                                                __helios__common__find_safe(self_143, (txin_5) -> {\n                                                    a_3 = __helios__value__get_safe(self_35 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_5))));\n                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_35))))), charterAc_3);\n                                                    __core__ifThenElse(\n                                                        __core__lessThanEqualsInteger(a_3, 0),\n                                                        false,\n                                                        true\n                                                    )\n                                                }))\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(charter_1))))))\n                        }\n                    },\n                    () -> {\n                        (__41) -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                                () -> {\n                                    (__lhs_0_125) -> {\n                                        error()\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                                        () -> {\n                                            (__lhs_0_124) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            (__42) -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),\n                                                    () -> {\n                                                        (__lhs_0_123) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),\n                                                            () -> {\n                                                                (__lhs_0_122) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__40) -> {\n                                                                    false\n                                                                }\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(activity_3)\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(activity_3)\n                        }\n                    }\n                )()\n            }\n        )()(mdd)\n    };\n    __core__ifThenElse(\n        __module__BasicDelegate__main_1(__module__BasicDelegate__main_1, __DATUM, __REDEEMER),\n        () -> {\n            ()\n        },\n        () -> {\n            error()\n        }\n    )()\n}', "unoptimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __helios__error = (msg) -> {
        __core__trace(msg, () -> {
            error()
        })()
    };
    __helios__print = (msg_1) -> {
        __core__trace(msg_1, ())
    };
    __helios__string____add = __core__appendString;
    __helios__assert = (cond, msg_2) -> {
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                __core__trace(msg_2, () -> {
                    error()
                })()
            }
        )()
    };
    __helios__bool____not = (b) -> {
        __core__ifThenElse(
            b,
            false,
            true
        )
    };
    __helios__bytearray____eq = __core__equalsByteString;
    __helios__bytearray____neq = (self, other) -> {
        __helios__bool____not(__helios__bytearray____eq(self, other))
    };
    __helios__int____to_data = __core__iData;
    __helios__int__serialize = (self_1) -> {
        () -> {
            __core__serialiseData(__helios__int____to_data(self_1))
        }
    };
    __helios__string__encode_utf8 = (self_2) -> {
        () -> {
            __core__encodeUtf8(self_2)
        }
    };
    __helios__bool__and = (a, b_1) -> {
        __core__ifThenElse(
            a(),
            () -> {
                b_1()
            },
            () -> {
                false
            }
        )()
    };
    __helios__bool__or = (a_1, b_2) -> {
        __core__ifThenElse(
            a_1(),
            () -> {
                true
            },
            () -> {
                b_2()
            }
        )()
    };
    __helios__string____to_data = (s) -> {
        __core__bData(__core__encodeUtf8(s))
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes) -> {
        n = __core__lengthOfByteString(bytes);
        recurse_1 = (recurse, i) -> {
            __core__ifThenElse(
                __core__equalsInteger(i, n),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes, i);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse(recurse, __core__addInteger(i, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __core__lessThanEqualsInteger(128, c_2)
                                                            }, () -> {
                                                                __core__lessThanEqualsInteger(c_2, 2047)
                                                            }),
                                                            () -> {
                                                                recurse(recurse, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __helios__bool__and(() -> {
                                                                                    __core__lessThanEqualsInteger(2048, c_1)
                                                                                }, () -> {
                                                                                    __core__lessThanEqualsInteger(c_1, 65535)
                                                                                }),
                                                                                () -> {
                                                                                    recurse(recurse, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes, __core__addInteger(i, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __core__lessThanEqualsInteger(65536, c)
                                                                                                    }, () -> {
                                                                                                        __core__lessThanEqualsInteger(c, 2097151)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        recurse(recurse, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_1(recurse_1, 0)
    };
    __helios__int__to_hex = (self_3) -> {
        () -> {
            recurse_3 = (recurse_2) -> {
                (self_4, bytes_1) -> {
                    digit = __core__modInteger(self_4, 16);
                    bytes_2 = __core__consByteString(__core__ifThenElse(
                        __core__lessThanInteger(digit, 10),
                        __core__addInteger(digit, 48),
                        __core__addInteger(digit, 87)
                    ), bytes_1);
                    __core__ifThenElse(
                        __core__lessThanInteger(self_4, 16),
                        () -> {
                            bytes_2
                        },
                        () -> {
                            recurse_2(recurse_2)(__core__divideInteger(self_4, 16), bytes_2)
                        }
                    )()
                }
            };
            __core__decodeUtf8__safe(__core__ifThenElse(
                __core__lessThanInteger(self_3, 0),
                () -> {
                    __core__consByteString(45, recurse_3(recurse_3)(__core__multiplyInteger(self_3, -1), #))
                },
                () -> {
                    recurse_3(recurse_3)(self_3, #)
                }
            )())
        }
    };
    __helios__bytearray__show = (self_5) -> {
        () -> {
            recurse_5 = (recurse_4, self_6) -> {
                n_1 = __core__lengthOfByteString(self_6);
                __core__ifThenElse(
                    __core__lessThanInteger(0, n_1),
                    () -> {
                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_6, 0))());
                        __core__ifThenElse(
                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                            __core__consByteString(48, hex_bytes),
                            hex_bytes
                        )), recurse_4(recurse_4, __core__sliceByteString(1, n_1, self_6)))
                    },
                    () -> {
                        ""
                    }
                )()
            };
            recurse_5(recurse_5, self_5)
        }
    };
    __helios__bytearray__decode_utf8_safe = (self_7) -> {
        () -> {
            __core__ifThenElse(
                __helios__string__is_valid_utf8(self_7),
                () -> {
                    __core__decodeUtf8__safe(self_7)
                },
                () -> {
                    __helios__bytearray__show(self_7)()
                }
            )()
        }
    };
    __helios__value__ZERO = __core__mkNilPairData(());
    __helios__common__enum_fields = (self_8) -> {
        __core__sndPair(__core__unConstrData(self_8))
    };
    __helios__common__enum_field_0 = (self_9) -> {
        __core__headList(__helios__common__enum_fields(self_9))
    };
    __helios__common__enum_fields_after_0 = (self_10) -> {
        __core__tailList(__helios__common__enum_fields(self_10))
    };
    __helios__common__enum_field_1 = (self_11) -> {
        __core__headList(__helios__common__enum_fields_after_0(self_11))
    };
    __helios__value__new = (assetClass, i_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(0, i_1),
            () -> {
                __helios__value__ZERO
            },
            () -> {
                mph = __helios__common__enum_field_0(assetClass);
                tokenName = __helios__common__enum_field_1(assetClass);
                __core__mkCons(__core__mkPairData(mph, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i_1)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
            }
        )()
    };
    __helios__common__list_0 = __core__mkNilData(());
    __helios__common__list_1 = (a_2) -> {
        __core__mkCons(a_2, __helios__common__list_0)
    };
    __helios__common__list_2 = (arg0, arg1) -> {
        __core__mkCons(arg0, __helios__common__list_1(arg1))
    };
    __helios__bytearray____to_data = __core__bData;
    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;
    __helios__assetclass__new = (mph_1, token_name) -> {
        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_1), __helios__bytearray____to_data(token_name)))
    };
    __helios__int____neg = (self_12) -> {
        __core__multiplyInteger(self_12, -1)
    };
    __helios__int____eq = __core__equalsInteger;
    __helios__mintingpolicyhash__show = __helios__bytearray__show;
    __helios__value__get = (self_13) -> {
        (assetClass_1) -> {
            mph_2 = __helios__common__enum_field_0(assetClass_1);
            tokenName_1 = __helios__common__enum_field_1(assetClass_1);
            outer_1 = (outer, inner, map) -> {
                __core__chooseList(map, () -> {
                    __helios__error(__helios__string____add(__helios__string____add("policy ", __helios__mintingpolicyhash__show(__core__unBData(mph_2))()), " not found"))
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_2),
                        () -> {
                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                        },
                        () -> {
                            outer(outer, inner, __core__tailList__safe(map))
                        }
                    )()
                })()
            };
            inner_2 = (inner_1, map_1) -> {
                __core__chooseList(map_1, () -> {
                    __helios__error("tokenName not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                        },
                        () -> {
                            inner_1(inner_1, __core__tailList__safe(map_1))
                        }
                    )()
                })()
            };
            outer_1(outer_1, inner_2, self_13)
        }
    };
    __helios__common__enum_fields_after_1 = (self_14) -> {
        __core__tailList(__helios__common__enum_fields_after_0(self_14))
    };
    __helios__common__enum_fields_after_2 = (self_15) -> {
        __core__tailList(__helios__common__enum_fields_after_1(self_15))
    };
    __helios__common__enum_fields_after_3 = (self_16) -> {
        __core__tailList(__helios__common__enum_fields_after_2(self_16))
    };
    __helios__common__enum_field_4 = (self_17) -> {
        __core__headList(__helios__common__enum_fields_after_3(self_17))
    };
    __helios__tx__minted = (self_18) -> {
        __core__unMapData(__helios__common__enum_field_4(self_18))
    };
    __helios__scriptcontext__data = __CONTEXT;
    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);
    __helios__common__assert_constr_index = (data, i_2) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i_2),
            () -> {
                data
            },
            () -> {
                __helios__error("unexpected constructor index")
            }
        )()
    };
    __helios__string____eq = __core__equalsString;
    __helios__common____eq = __core__equalsData;
    __helios__assetclass____eq = __helios__common____eq;
    __helios__common__fold = (self_19, fn, z) -> {
        recurse_7 = (recurse_6, self_20, z_1) -> {
            __core__chooseList(self_20, () -> {
                z_1
            }, () -> {
                recurse_6(recurse_6, __core__tailList__safe(self_20), fn(z_1, __core__headList__safe(self_20)))
            })()
        };
        recurse_7(recurse_7, self_19, z)
    };
    __helios__int__show_digit = (x) -> {
        __core__addInteger(__core__modInteger(x, 10), 48)
    };
    __helios__int__show = (self_21) -> {
        () -> {
            __core__decodeUtf8__safe(recurse_9 = (recurse_8, i_3, bytes_3) -> {
                bytes_4 = __core__consByteString(__helios__int__show_digit(i_3), bytes_3);
                __core__ifThenElse(
                    __core__lessThanInteger(i_3, 10),
                    () -> {
                        bytes_4
                    },
                    () -> {
                        recurse_8(recurse_8, __core__divideInteger(i_3, 10), bytes_4)
                    }
                )()
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_21, 0),
                () -> {
                    __core__consByteString(45, recurse_9(recurse_9, __core__multiplyInteger(self_21, -1), #))
                },
                () -> {
                    recurse_9(recurse_9, self_21, #)
                }
            )())
        }
    };
    __helios__data__show = (self_22) -> {
        () -> {
            show_data_list = (list, show_item) -> {
                __helios__common__fold(list, (prev, item) -> {
                    __core__ifThenElse(
                        __helios__string____eq(prev, ""),
                        () -> {
                            show_item(item)
                        },
                        () -> {
                            __helios__string____add(prev, __helios__string____add(",", show_item(item)))
                        }
                    )()
                }, "")
            };
            (recurse_11, data_2) -> {
                recurse_11(recurse_11, data_2)
            }((recurse_10, data_1) -> {
                __core__chooseData(data_1, () -> {
                    pair_1 = __core__unConstrData__safe(data_1);
                    tag = __core__fstPair(pair_1);
                    fields = __core__sndPair(pair_1);
                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add("{", __helios__string____add(show_data_list(fields, (item_2) -> {
                        recurse_10(recurse_10, item_2)
                    }), "}")))
                }, () -> {
                    map_2 = __core__unMapData__safe(data_1);
                    __helios__string____add("{", __helios__string____add(show_data_list(map_2, (pair) -> {
                        key = recurse_10(recurse_10, __core__fstPair(pair));
                        value_1 = recurse_10(recurse_10, __core__sndPair(pair));
                        __helios__string____add(key, __helios__string____add(":", value_1))
                    }), "}"))
                }, () -> {
                    lst = __core__unListData__safe(data_1);
                    __helios__string____add("[", __helios__string____add(show_data_list(lst, (item_1) -> {
                        recurse_10(recurse_10, item_1)
                    }), "]"))
                }, () -> {
                    value = __core__unIData__safe(data_1);
                    __helios__int__show(value)()
                }, () -> {
                    bytes_5 = __core__unBData__safe(data_1);
                    __helios__bytearray__show(bytes_5)()
                })()
            }, self_22)
        }
    };
    __helios__data__show_constr_data = (callback_1) -> {
        (data_3) -> {
            callback_nok = __helios__data__show(data_3);
            __core__chooseData(data_3, () -> {
                pair_2 = __core__unConstrData__safe(data_3);
                callback_1(__core__fstPair(pair_2), __core__sndPair(pair_2))
            }, callback_nok, callback_nok, callback_nok, callback_nok)()
        }
    };
    __helios__data__show_field = (index, callback_2) -> {
        (list_1) -> {
            recurse_13 = (recurse_12) -> {
                (lst_1, i_4) -> {
                    __core__chooseList(lst_1, () -> {
                        "<missing>"
                    }, () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(i_4, 0),
                            () -> {
                                head = __core__headList__safe(lst_1);
                                callback_2(head)
                            },
                            () -> {
                                recurse_12(recurse_12)(__core__tailList__safe(lst_1), __core__subtractInteger(i_4, 1))
                            }
                        )()
                    })()
                }
            };
            recurse_13(recurse_13)(list_1, index)
        }
    };
    __helios__data__show_bdata = (callback_3) -> {
        (data_4) -> {
            callback_nok_1 = __helios__data__show(data_4);
            __core__chooseData(data_4, callback_nok_1, callback_nok_1, callback_nok_1, callback_nok_1, () -> {
                callback_3(__core__unBData__safe(data_4))
            })()
        }
    };
    __helios__assetclass__show = (self_23) -> {
        () -> {
            __helios__data__show_constr_data((tag_1, fields_1) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_1, 0),
                    () -> {
                        mph_str = __helios__data__show_field(0, __helios__data__show_bdata((mph_3) -> {
                            __helios__bytearray__show(mph_3)()
                        }))(fields_1);
                        token_name_str = __helios__data__show_field(1, __helios__data__show_bdata((token_name_1) -> {
                            __helios__bytearray__show(token_name_1)()
                        }))(fields_1);
                        __core__appendString(mph_str, __core__appendString(".", token_name_str))
                    },
                    () -> {
                        __helios__data__show(self_23)()
                    }
                )()
            })(self_23)
        }
    };
    __helios__string____neq = (self_24, other_1) -> {
        __helios__bool____not(__helios__string____eq(self_24, other_1))
    };
    __helios__int____gt = (a_3, b_3) -> {
        __helios__bool____not(__core__lessThanEqualsInteger(a_3, b_3))
    };
    __helios__common__unBData__safe = (data_5, callback_ok, callback_nok_2) -> {
        __core__chooseData(data_5, callback_nok_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
            callback_ok(__core__unBData__safe(data_5))
        })()
    };
    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;
    __helios__common__unMapData__safe = (data_6, callback_ok_1, callback_nok_3) -> {
        __core__chooseData(data_6, callback_nok_3, () -> {
            callback_ok_1(__core__unMapData__safe(data_6))
        }, callback_nok_3, callback_nok_3, callback_nok_3)()
    };
    __helios__common__unIData__safe = (data_7, callback_ok_2, callback_nok_4) -> {
        __core__chooseData(data_7, callback_nok_4, callback_nok_4, callback_nok_4, () -> {
            callback_ok_2(__core__unIData__safe(data_7))
        }, callback_nok_4)()
    };
    __helios__real__ONE = 1000000;
    __helios__real__floor = (self_25) -> {
        () -> {
            __core__divideInteger(self_25, __helios__real__ONE)
        }
    };
    __helios__int__abs = (self_26) -> {
        () -> {
            __core__ifThenElse(
                __core__lessThanInteger(self_26, 0),
                () -> {
                    __core__multiplyInteger(self_26, -1)
                },
                () -> {
                    self_26
                }
            )()
        }
    };
    __helios__real__abs = __helios__int__abs;
    __helios__int__show_padded = (self_27, n_2) -> {
        recurse_15 = (recurse_14, x_1, pos, bytes_6) -> {
            __core__ifThenElse(
                __core__equalsInteger(x_1, 0),
                () -> {
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(n_2, pos),
                        () -> {
                            bytes_6
                        },
                        () -> {
                            recurse_14(recurse_14, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_6))
                        }
                    )()
                },
                () -> {
                    recurse_14(recurse_14, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__helios__int__show_digit(x_1), bytes_6))
                }
            )()
        };
        recurse_15(recurse_15, self_27, 0, #)
    };
    __helios__int____mod = __core__modInteger;
    __helios__real__PRECISION = 6;
    __helios__real__show = (self_28) -> {
        () -> {
            show_positive = (x_2) -> {
                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_2)())())(), __helios__string____add(".", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_2, __helios__real__ONE), __helios__real__PRECISION))))
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_28, 0),
                () -> {
                    __helios__string____add("-", show_positive(__core__multiplyInteger(self_28, -1)))
                },
                () -> {
                    show_positive(self_28)
                }
            )()
        }
    };
    __helios__value__show = (self_29) -> {
        (__useopt__ada, ada) -> {
            __helios__common__fold(self_29, (prev_1, pair_3) -> {
                mph_data = __core__fstPair(pair_3);
                tokens_data = __core__sndPair(pair_3);
                __helios__string____add(prev_1, __helios__common__unBData__safe(mph_data, (mph_4) -> {
                    __helios__string____add(__core__ifThenElse(
                        __helios__mintingpolicyhash____eq(mph_4, #),
                        () -> {
                            ""
                        },
                        () -> {
                            __helios__string____add(__helios__mintingpolicyhash__show(mph_4)(), "
")
                        }
                    )(), __helios__common__unMapData__safe(tokens_data, (tokens) -> {
                        __helios__common__fold(tokens, (prev_2, pair_4) -> {
                            token_name_data = __core__fstPair(pair_4);
                            qty_data = __core__sndPair(pair_4);
                            __helios__common__unBData__safe(token_name_data, (token_name_2) -> {
                                __helios__common__unIData__safe(qty_data, (qty) -> {
                                    __core__ifThenElse(
                                        __helios__mintingpolicyhash____eq(mph_4, #),
                                        () -> {
                                            __core__ifThenElse(
                                                __helios__bool__and(() -> {
                                                    __useopt__ada
                                                }, () -> {
                                                    ada
                                                }),
                                                () -> {
                                                    __helios__string____add("ada ", __helios__string____add(__helios__real__show(qty)(), "
"))
                                                },
                                                () -> {
                                                    __helios__string____add("lovelace ", __helios__string____add(__helios__int__show(qty)(), "
"))
                                                }
                                            )()
                                        },
                                        () -> {
                                            __helios__string____add("  .", __helios__string____add(__helios__bytearray__decode_utf8_safe(token_name_2)(), __helios__string____add(" ", __helios__string____add(__helios__int__show(qty)(), "
"))))
                                        }
                                    )()
                                }, () -> {
                                    ""
                                })
                            }, () -> {
                                ""
                            })
                        }, prev_1)
                    }, () -> {
                        ""
                    }))
                }, () -> {
                    ""
                }))
            }, "")
        }
    };
    __helios__int____neq = (self_30, other_2) -> {
        __helios__bool____not(__helios__int____eq(self_30, other_2))
    };
    __helios__int____sub = __core__subtractInteger;
    __helios__value__to_map = (self_31) -> {
        () -> {
            self_31
        }
    };
    __helios__string__show = (self_32) -> {
        () -> {
            __core__appendString("'", __core__appendString(self_32, "'"))
        }
    };
    __helios__txinput____eq = __helios__common____eq;
    __helios__bool__show = (self_33) -> {
        () -> {
            __core__ifThenElse(
                self_33,
                "true",
                "false"
            )
        }
    };
    __helios__bool__trace = (self_34) -> {
        (prefix) -> {
            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_34)()), self_34)
        }
    };
    __helios__txoutput__value = (self_35) -> {
        __core__unMapData(__helios__common__enum_field_1(self_35))
    };
    __helios__txinput__output = __helios__common__enum_field_1;
    __helios__txinput__value = (self_36) -> {
        __helios__txoutput__value(__helios__txinput__output(self_36))
    };
    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);
    __helios__scriptcontext__get_spending_purpose_output_id = () -> {
        __helios__common__enum_field_0(__helios__scriptcontext__purpose)
    };
    __helios__txinput__output_id = __helios__common__enum_field_0;
    __helios__tx__inputs = (self_37) -> {
        __core__unListData(__helios__common__enum_field_0(self_37))
    };
    __helios__scriptcontext__get_current_input = () -> {
        id = __helios__scriptcontext__get_spending_purpose_output_id();
        recurse_17 = (recurse_16, lst_2) -> {
            __core__chooseList(lst_2, () -> {
                __helios__error("not found")
            }, () -> {
                item_3 = __core__headList__safe(lst_2);
                __core__ifThenElse(
                    __core__equalsData(__helios__txinput__output_id(item_3), id),
                    () -> {
                        item_3
                    },
                    () -> {
                        recurse_16(recurse_16, __core__tailList__safe(lst_2))
                    }
                )()
            })()
        };
        recurse_17(recurse_17, __helios__tx__inputs(__helios__scriptcontext__tx))
    };
    __helios__bytearray__from_data = __core__unBData;
    __helios__string__from_data = (d) -> {
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__common__length = (lst_3) -> {
        recurse_19 = (recurse_18, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_19(recurse_19, lst_3)
    };
    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {
        recurse_21 = (recurse_20, self_39, key_2) -> {
            __core__chooseList(self_39, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_39);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_38, key_1)
    };
    __helios__common__enum_tag_equals = (data_8, i_5) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_8)), i_5)
    };
    __helios__option__NONE_FUNC = (callback_4) -> {
        callback_4(false, ())
    };
    __helios__option__SOME_FUNC = (some) -> {
        (callback_5) -> {
            callback_5(true, some)
        }
    };
    __helios__bytearray__from_data_safe = (data_9) -> {
        __core__chooseData(data_9, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unBData__safe(data_9))
        })()
    };
    __helios__int__from_data_safe = (data_10) -> {
        __core__chooseData(data_10, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unIData__safe(data_10))
        }, () -> {
            __helios__option__NONE_FUNC
        })()
    };
    __helios__common__all = (self_40, fn_1) -> {
        recurse_23 = (recurse_22, self_41, fn_2) -> {
            __core__chooseList(self_41, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_41)),
                    () -> {
                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_23(recurse_23, self_40, fn_1)
    };
    __helios__common__identity = (self_42) -> {
        self_42
    };
    __helios__assetclass____to_data = __helios__common__identity;
    __helios__assetclass__from_data = __helios__common__identity;
    __helios__data__from_data = __helios__common__identity;
    __helios__bool__from_data = (d_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),
            false,
            true
        )
    };
    __helios__int__from_data = __core__unIData;
    __helios__int____leq = __core__lessThanEqualsInteger;
    __helios__duration____leq = __helios__int____leq;
    __helios__time____sub = __helios__int____sub;
    __helios__time__from_data = __helios__int__from_data;
    __helios__timerange__end = (self_43) -> {
        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_1(self_43))))
    };
    __helios__common__enum_fields_after_4 = (self_44) -> {
        __core__tailList(__helios__common__enum_fields_after_3(self_44))
    };
    __helios__common__enum_fields_after_5 = (self_45) -> {
        __core__tailList(__helios__common__enum_fields_after_4(self_45))
    };
    __helios__common__enum_fields_after_6 = (self_46) -> {
        __core__tailList(__helios__common__enum_fields_after_5(self_46))
    };
    __helios__common__enum_field_7 = (self_47) -> {
        __core__headList(__helios__common__enum_fields_after_6(self_47))
    };
    __helios__tx__time_range = __helios__common__enum_field_7;
    __helios__timerange__start = (self_48) -> {
        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_0(self_48))))
    };
    __helios__duration__HOUR = 3600000;
    __helios__timerange__contains = (self_49) -> {
        (t) -> {
            lower = __helios__common__enum_field_0(self_49);
            extended = __helios__common__enum_field_0(lower);
            closed = __helios__bool__from_data(__helios__common__enum_field_1(lower));
            lowerExtType = __core__fstPair(__core__unConstrData(extended));
            checkUpper = () -> {
                upper = __helios__common__enum_field_1(self_49);
                extended_1 = __helios__common__enum_field_0(upper);
                closed_1 = __helios__bool__from_data(__helios__common__enum_field_1(upper));
                upperExtType = __core__fstPair(__core__unConstrData(extended_1));
                __core__ifThenElse(
                    __core__equalsInteger(upperExtType, 0),
                    () -> {
                        false
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(upperExtType, 2),
                            () -> {
                                true
                            },
                            () -> {
                                __core__ifThenElse(
                                    __core__ifThenElse(
                                        closed_1,
                                        () -> {
                                            __core__lessThanEqualsInteger(t, __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended_1)))))
                                        },
                                        () -> {
                                            __core__lessThanInteger(t, __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended_1)))))
                                        }
                                    )(),
                                    true,
                                    false
                                )
                            }
                        )()
                    }
                )()
            };
            __core__ifThenElse(
                __core__equalsInteger(lowerExtType, 2),
                () -> {
                    false
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(lowerExtType, 0),
                        () -> {
                            checkUpper()
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__ifThenElse(
                                    closed,
                                    () -> {
                                        __core__lessThanEqualsInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)
                                    },
                                    () -> {
                                        __core__lessThanInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)
                                    }
                                )(),
                                () -> {
                                    checkUpper()
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __helios__int____div = __core__quotientInteger;
    __helios__duration____div1 = __helios__int____div;
    __helios__duration__SECOND = 1000;
    __helios__txoutputdatum__inline = (self_50) -> {
        pair_5 = __core__unConstrData(self_50);
        index_1 = __core__fstPair(pair_5);
        fields_2 = __core__sndPair(pair_5);
        __core__ifThenElse(
            __core__equalsInteger(index_1, 2),
            () -> {
                __core__headList(fields_2)
            },
            () -> {
                __helios__error("not an inline datum")
            }
        )()
    };
    __helios__common__enum_field_2 = (self_51) -> {
        __core__headList(__helios__common__enum_fields_after_1(self_51))
    };
    __helios__txoutput__datum = __helios__common__enum_field_2;
    __helios__spendingcredential__show = (self_52) -> {
        () -> {
            __helios__data__show_constr_data((tag_2, fields_3) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_2, 0),
                    () -> {
                        pkh_str = __helios__data__show_field(0, __helios__data__show_bdata((b_5) -> {
                            __helios__bytearray__show(b_5)()
                        }))(fields_3);
                        __core__appendString("PubKey{hash:", __core__appendString(pkh_str, "}"))
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(tag_2, 1),
                            () -> {
                                vh_str = __helios__data__show_field(0, __helios__data__show_bdata((b_4) -> {
                                    __helios__bytearray__show(b_4)()
                                }))(fields_3);
                                __core__appendString("Validator{hash:", __core__appendString(vh_str, "}"))
                            },
                            () -> {
                                __helios__data__show(__core__constrData(tag_2, fields_3))()
                            }
                        )()
                    }
                )()
            })(self_52)
        }
    };
    __helios__common__unConstrData__safe = (data_11, callback_ok_3, callback_nok_5) -> {
        __core__chooseData(data_11, () -> {
            pair_6 = __core__unConstrData__safe(data_11);
            callback_ok_3(__core__fstPair(pair_6), __core__sndPair(pair_6))
        }, callback_nok_5, callback_nok_5, callback_nok_5, callback_nok_5)()
    };
    __helios__stakingcredential__from_data_safe = (data_12) -> {
        __helios__option__SOME_FUNC(data_12)
    };
    __helios__stakinghash__show = (self_53) -> {
        () -> {
            __helios__data__show_constr_data((tag_3, fields_4) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_3, 0),
                    () -> {
                        pkh_str_1 = __helios__data__show_field(0, __helios__data__show_bdata((b_7) -> {
                            __helios__bytearray__show(b_7)()
                        }))(fields_4);
                        __core__appendString("StakeKey{hash:", __core__appendString(pkh_str_1, "}"))
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(tag_3, 1),
                            () -> {
                                vh_str_1 = __helios__data__show_field(0, __helios__data__show_bdata((b_6) -> {
                                    __helios__bytearray__show(b_6)()
                                }))(fields_4);
                                __core__appendString("Validator{hash:", __core__appendString(vh_str_1, "}"))
                            },
                            () -> {
                                __helios__data__show(__core__constrData(tag_3, fields_4))()
                            }
                        )()
                    }
                )()
            })(self_53)
        }
    };
    __helios__data__show_idata = (callback_6) -> {
        (data_13) -> {
            callback_nok_6 = __helios__data__show(data_13);
            __core__chooseData(data_13, callback_nok_6, callback_nok_6, callback_nok_6, () -> {
                callback_6(__core__unIData__safe(data_13))
            }, callback_nok_6)()
        }
    };
    __helios__stakingcredential__show = (self_54) -> {
        () -> {
            __helios__data__show_constr_data((tag_4, fields_5) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_4, 0),
                    () -> {
                        hash_str = __helios__data__show_field(0, (hash_data) -> {
                            __helios__stakinghash__show(hash_data)()
                        })(fields_5);
                        __core__appendString("Hash{hash:", __core__appendString(hash_str, "}"))
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(tag_4, 1),
                            () -> {
                                i_str = __helios__data__show_field(0, __helios__data__show_idata((i_6) -> {
                                    __helios__int__show(i_6)()
                                }))(fields_5);
                                j_str = __helios__data__show_field(1, __helios__data__show_idata((i_7) -> {
                                    __helios__int__show(i_7)()
                                }))(fields_5);
                                k_str = __helios__data__show_field(2, __helios__data__show_idata((i_8) -> {
                                    __helios__int__show(i_8)()
                                }))(fields_5);
                                __core__appendString("Ptr{i:", __core__appendString(i_str, __core__appendString(",j:", __core__appendString(j_str, __core__appendString(",k:", __core__appendString(k_str, "}"))))))
                            },
                            () -> {
                                __helios__data__show(self_54)()
                            }
                        )()
                    }
                )()
            })(self_54)
        }
    };
    __helios__option[__helios__stakingcredential]__show = (self_55) -> {
        () -> {
            __helios__common__unConstrData__safe(self_55, (index_2, fields_6) -> {
                __core__ifThenElse(
                    __core__equalsInteger(index_2, 0),
                    () -> {
                        __core__chooseList(fields_6, () -> {
                            "Some{<missing>}"
                        }, () -> {
                            some_data = __core__headList__safe(fields_6);
                            some_1 = __helios__stakingcredential__from_data_safe(some_data);
                            some_1((valid_6, value_2) -> {
                                __core__ifThenElse(
                                    valid_6,
                                    () -> {
                                        __core__appendString("Some{", __core__appendString(__helios__stakingcredential__show(value_2)(), "}"))
                                    },
                                    () -> {
                                        __core__appendString("Some{", __core__appendString(__helios__data__show(some_data)(), "}"))
                                    }
                                )()
                            })
                        })()
                    },
                    () -> {
                        "None"
                    }
                )()
            }, () -> {
                __helios__data__show(self_55)()
            })
        }
    };
    __helios__address__show = (self_56) -> {
        () -> {
            __helios__data__show_constr_data((tag_5, fields_7) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_5, 0),
                    () -> {
                        spending_cred_str = __helios__data__show_field(0, (cred_data) -> {
                            __helios__spendingcredential__show(cred_data)()
                        })(fields_7);
                        staking_cred_option_str = __helios__data__show_field(1, (option_data) -> {
                            __helios__option[__helios__stakingcredential]__show(option_data)()
                        })(fields_7);
                        __core__appendString("{spending_credential:", __core__appendString(spending_cred_str, __core__appendString(",staking_credential:", __core__appendString(staking_cred_option_str, "}"))))
                    },
                    () -> {
                        __helios__data__show(self_56)()
                    }
                )()
            })(self_56)
        }
    };
    __helios__txoutput__address = __helios__common__enum_field_0;
    __helios__txinput__address = (self_57) -> {
        __helios__txoutput__address(__helios__txinput__output(self_57))
    };
    __helios__time____gt = __helios__int____gt;
    __helios__value__get_safe = (self_58) -> {
        (assetClass_2) -> {
            mintingPolicyHash = __helios__common__enum_field_0(assetClass_2);
            tokenName_2 = __helios__common__enum_field_1(assetClass_2);
            outer_3 = (outer_2, inner_3, map_3) -> {
                __core__chooseList(map_3, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mintingPolicyHash),
                        () -> {
                            inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_3))))
                        },
                        () -> {
                            outer_2(outer_2, inner_3, __core__tailList__safe(map_3))
                        }
                    )()
                })()
            };
            inner_5 = (inner_4, map_4) -> {
                __core__chooseList(map_4, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), tokenName_2),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_4)))
                        },
                        () -> {
                            inner_4(inner_4, __core__tailList__safe(map_4))
                        }
                    )()
                })()
            };
            outer_3(outer_3, inner_5, self_58)
        }
    };
    __helios__assetclass__ADA = __helios__assetclass__new(#, #);
    __helios__value__get_lovelace = (self_59) -> {
        () -> {
            __helios__value__get_safe(self_59)(__helios__assetclass__ADA)
        }
    };
    __helios__tx__outputs = (self_60) -> {
        __core__unListData(__helios__common__enum_field_2(self_60))
    };
    __helios__txinput__datum = (self_61) -> {
        __helios__txoutput__datum(__helios__txinput__output(self_61))
    };
    __helios__common__serialize = (self_62) -> {
        () -> {
            __core__serialiseData(self_62)
        }
    };
    __helios__tx__serialize = __helios__common__serialize;
    __helios__common__filter = (self_63, fn_3, nil) -> {
        recurse_25 = (recurse_24, self_64, fn_4) -> {
            __core__chooseList(self_64, () -> {
                nil
            }, () -> {
                head_2 = __core__headList__safe(self_64);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__mkCons(head_2, recurse_24(recurse_24, __core__tailList__safe(self_64), fn_4))
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(self_64), fn_4)
                    }
                )()
            })()
        };
        recurse_25(recurse_25, self_63, fn_3)
    };
    __helios__common__filter_list = (self_65, fn_5) -> {
        __helios__common__filter(self_65, fn_5, __helios__common__list_0)
    };
    __helios__txinput__from_data = __helios__common__identity;
    __helios__string__is_valid_data = (data_14) -> {
        __core__chooseData(data_14, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__string__is_valid_utf8(__core__unBData__safe(data_14))
        })()
    };
    __helios__bytearray__is_valid_data = (data_15) -> {
        __core__chooseData(data_15, false, false, false, false, true)
    };
    __helios__txoutputid__from_data = __helios__common__identity;
    __helios__common__test_constr_data_2 = (data_16, index_3, test_a, test_b) -> {
        __core__chooseData(data_16, () -> {
            pair_7 = __core__unConstrData__safe(data_16);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_7), index_3),
                () -> {
                    fields_8 = __core__sndPair(pair_7);
                    __core__chooseList(fields_8, () -> {
                        false
                    }, () -> {
                        __core__ifThenElse(
                            test_a(__core__headList__safe(fields_8)),
                            () -> {
                                tail = __core__tailList__safe(fields_8);
                                __core__chooseList(tail, () -> {
                                    false
                                }, () -> {
                                    __core__ifThenElse(
                                        test_b(__core__headList__safe(tail)),
                                        () -> {
                                            __core__chooseList(__core__tailList__safe(tail), () -> {
                                                true
                                            }, () -> {
                                                false
                                            })()
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data_fixed_length = (n_3) -> {
        (data_17) -> {
            __core__chooseData(data_17, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_7 = __core__unBData__safe(data_17);
                __core__ifThenElse(
                    __core__equalsInteger(__core__lengthOfByteString(bytes_7), n_3),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__txid__is_valid_data = (data_18) -> {
        __core__chooseData(data_18, () -> {
            pair_8 = __core__unConstrData__safe(data_18);
            index_4 = __core__fstPair(pair_8);
            fields_9 = __core__sndPair(pair_8);
            __core__ifThenElse(
                __core__equalsInteger(0, index_4),
                () -> {
                    __core__chooseList(fields_9, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_9), () -> {
                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_9))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__int__is_valid_data = (data_19) -> {
        __core__chooseData(data_19, false, false, false, true, false)
    };
    __helios__txoutputid__is_valid_data = (data_20) -> {
        __helios__common__test_constr_data_2(data_20, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)
    };
    __helios__time____to_data = __helios__int____to_data;
    __helios__bool____to_data = (b_8) -> {
        __core__constrData(__core__ifThenElse(
            b_8,
            1,
            0
        ), __helios__common__list_0)
    };
    __helios__timerange__new = (a_4, b_9) -> {
        a_5 = __helios__time____to_data(a_4);
        b_10 = __helios__time____to_data(b_9);
        __core__constrData(0, __helios__common__list_2(__core__constrData(0, __helios__common__list_2(__core__constrData(1, __helios__common__list_1(a_5)), __helios__bool____to_data(true))), __core__constrData(0, __helios__common__list_2(__core__constrData(1, __helios__common__list_1(b_10)), __helios__bool____to_data(true)))))
    };
    __helios__int____add = __core__addInteger;
    __helios__time____add = __helios__int____add;
    __helios__int____mul = __core__multiplyInteger;
    __helios__duration____mul = __helios__int____mul;
    __helios__duration__DAY = 86400000;
    __helios__data__is_valid_data = (data_21) -> {
        true
    };
    __helios__common__mStruct_field_internal = (map_5, name) -> {
        name_data = __core__bData(name);
        recurse_27 = (recurse_26, map_6) -> {
            __core__chooseList(map_6, () -> {
                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name))), ": field not found"))
            }, () -> {
                head_3 = __core__headList__safe(map_6);
                key_3 = __core__fstPair(head_3);
                value_3 = __core__sndPair(head_3);
                __core__ifThenElse(
                    __core__equalsData(key_3, name_data),
                    () -> {
                        value_3
                    },
                    () -> {
                        recurse_26(recurse_26, __core__tailList__safe(map_6))
                    }
                )()
            })()
        };
        recurse_27(recurse_27, map_5)
    };
    __helios__common__mStruct_field = (self_66, name_1) -> {
        __helios__common__mStruct_field_internal(__core__unMapData(self_66), name_1)
    };
    __helios__common__test_mStruct_field = (self_67, name_2, inner_test) -> {
        __core__chooseData(self_67, () -> {
            false
        }, () -> {
            map_7 = __core__unMapData__safe(self_67);
            recurse_29 = (recurse_28, map_8) -> {
                __core__chooseList(map_8, () -> {
                    __core__trace(__core__appendString("Warning: field not found: ", __core__decodeUtf8__safe(__core__unBData__safe(name_2))), () -> {
                        false
                    })()
                }, () -> {
                    head_4 = __core__headList__safe(map_8);
                    key_4 = __core__fstPair(head_4);
                    value_4 = __core__sndPair(head_4);
                    __core__ifThenElse(
                        __core__equalsData(key_4, name_2),
                        () -> {
                            inner_test(value_4)
                        },
                        () -> {
                            recurse_28(recurse_28, __core__tailList__safe(map_8))
                        }
                    )()
                })()
            };
            recurse_29(recurse_29, map_7)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__time__is_valid_data = __helios__int__is_valid_data;
    __helios__value__contains_policy = (self_68) -> {
        (mph_5) -> {
            mph_6 = __helios__mintingpolicyhash____to_data(mph_5);
            recurse_31 = (recurse_30, map_9) -> {
                __core__chooseList(map_9, () -> {
                    false
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_6),
                        () -> {
                            true
                        },
                        () -> {
                            recurse_30(recurse_30, __core__tailList__safe(map_9))
                        }
                    )()
                })()
            };
            recurse_31(recurse_31, self_68)
        }
    };
    __helios__value__from_map = __helios__common__identity;
    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;
    __helios__value__is_zero_inner = (tokens_1) -> {
        recurse_33 = (recurse_32, tokens_2) -> {
            __core__chooseList(tokens_2, () -> {
                true
            }, () -> {
                __helios__bool__and(() -> {
                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)
                }, () -> {
                    recurse_32(recurse_32, __core__tailList__safe(tokens_2))
                })
            })()
        };
        recurse_33(recurse_33, tokens_1)
    };
    __helios__value__is_zero = (self_69) -> {
        () -> {
            recurse_35 = (recurse_34, map_10) -> {
                __core__chooseList(map_10, () -> {
                    true
                }, () -> {
                    __helios__bool__and(() -> {
                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_10))))
                    }, () -> {
                        recurse_34(recurse_34, __core__tailList__safe(map_10))
                    })
                })()
            };
            recurse_35(recurse_35, self_69)
        }
    };
    __helios__value__get_policy = (self_70) -> {
        (mph_7) -> {
            mph_8 = __helios__mintingpolicyhash____to_data(mph_7);
            recurse_37 = (recurse_36, map_11) -> {
                __core__chooseList(map_11, () -> {
                    __helios__error("policy not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), mph_8),
                        () -> {
                            __core__unMapData(__core__sndPair(__core__headList__safe(map_11)))
                        },
                        () -> {
                            recurse_36(recurse_36, __core__tailList__safe(map_11))
                        }
                    )()
                })()
            };
            recurse_37(recurse_37, self_70)
        }
    };
    __helios__value__get_inner_map_int = (map_12, key_5) -> {
        recurse_39 = (recurse_38, map_13, key_6) -> {
            __core__chooseList(map_13, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), key_6),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_13)))
                    },
                    () -> {
                        recurse_38(recurse_38, __core__tailList__safe(map_13), key_6)
                    }
                )()
            })()
        };
        recurse_39(recurse_39, map_12, key_5)
    };
    __helios__value__get_map_keys = (map_14) -> {
        recurse_41 = (recurse_40, map_15) -> {
            __core__chooseList(map_15, () -> {
                __helios__common__list_0
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_15)), recurse_40(recurse_40, __core__tailList__safe(map_15)))
            })()
        };
        recurse_41(recurse_41, map_14)
    };
    __helios__common__any = (self_71, fn_6) -> {
        recurse_43 = (recurse_42, self_72, fn_7) -> {
            __core__chooseList(self_72, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_7(__core__headList__safe(self_72)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_42(recurse_42, __core__tailList__safe(self_72), fn_7)
                    }
                )()
            })()
        };
        recurse_43(recurse_43, self_71, fn_6)
    };
    __helios__common__is_in_bytearray_list = (lst_5, key_7) -> {
        __helios__common__any(lst_5, (item_4) -> {
            __core__equalsData(item_4, key_7)
        })
    };
    __helios__common__concat = (a_6, b_11) -> {
        recurse_45 = (recurse_44, lst_6, rem) -> {
            __core__chooseList(rem, () -> {
                lst_6
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_44(recurse_44, lst_6, __core__tailList__safe(rem)))
            })()
        };
        recurse_45(recurse_45, b_11, a_6)
    };
    __helios__value__merge_map_keys = (a_7, b_12) -> {
        aKeys = __helios__value__get_map_keys(a_7);
        recurse_47 = (recurse_46, keys, map_16) -> {
            __core__chooseList(map_16, () -> {
                __helios__common__list_0
            }, () -> {
                key_8 = __core__fstPair(__core__headList__safe(map_16));
                __core__ifThenElse(
                    __helios__common__is_in_bytearray_list(aKeys, key_8),
                    () -> {
                        recurse_46(recurse_46, keys, __core__tailList__safe(map_16))
                    },
                    () -> {
                        __core__mkCons(key_8, recurse_46(recurse_46, keys, __core__tailList__safe(map_16)))
                    }
                )()
            })()
        };
        uniqueBKeys = recurse_47(recurse_47, aKeys, b_12);
        __helios__common__concat(aKeys, uniqueBKeys)
    };
    __helios__value__add_or_subtract_inner = (op) -> {
        (a_8, b_13) -> {
            recurse_49 = (recurse_48, keys_1, result) -> {
                __core__chooseList(keys_1, () -> {
                    result
                }, () -> {
                    key_9 = __core__headList__safe(keys_1);
                    tail_1 = recurse_48(recurse_48, __core__tailList__safe(keys_1), result);
                    sum = op(__helios__value__get_inner_map_int(a_8, key_9), __helios__value__get_inner_map_int(b_13, key_9));
                    __core__ifThenElse(
                        __core__equalsInteger(sum, 0),
                        () -> {
                            tail_1
                        },
                        () -> {
                            __core__mkCons(__core__mkPairData(key_9, __core__iData(sum)), tail_1)
                        }
                    )()
                })()
            };
            recurse_49(recurse_49, __helios__value__merge_map_keys(a_8, b_13), __core__mkNilPairData(()))
        }
    };
    __helios__value__get_inner_map = (map_17, mph_9) -> {
        recurse_51 = (recurse_50, map_18) -> {
            __core__chooseList(map_18, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_18)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_18)))
                    },
                    () -> {
                        recurse_50(recurse_50, __core__tailList__safe(map_18))
                    }
                )()
            })()
        };
        recurse_51(recurse_51, map_17)
    };
    __helios__value__add_or_subtract = (a_9, b_14, op_1) -> {
        recurse_53 = (recurse_52, keys_2, result_1) -> {
            __core__chooseList(keys_2, () -> {
                result_1
            }, () -> {
                key_10 = __core__headList__safe(keys_2);
                tail_2 = recurse_52(recurse_52, __core__tailList__safe(keys_2), result_1);
                item_5 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_9, key_10), __helios__value__get_inner_map(b_14, key_10));
                __core__chooseList(item_5, () -> {
                    tail_2
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_10, __core__mapData(item_5)), tail_2)
                })()
            })()
        };
        recurse_53(recurse_53, __helios__value__merge_map_keys(a_9, b_14), __core__mkNilPairData(()))
    };
    __helios__value____add = (a_10, b_15) -> {
        __helios__value__add_or_subtract(a_10, b_15, __core__addInteger)
    };
    __helios__common__map = (self_73, fn_8, init) -> {
        recurse_55 = (recurse_54, rem_1, lst_7) -> {
            __core__chooseList(rem_1, () -> {
                lst_7
            }, () -> {
                __core__mkCons(fn_8(__core__headList__safe(rem_1)), recurse_54(recurse_54, __core__tailList__safe(rem_1), lst_7))
            })()
        };
        recurse_55(recurse_55, self_73, init)
    };
    __helios__value____to_data = __core__mapData;
    __helios__value__value = __helios__common__identity;
    __helios__value__from_data = __core__unMapData;
    __helios__common__insert_in_sorted = (x_3, lst_8, comp) -> {
        recurse_57 = (recurse_56, lst_9) -> {
            __core__chooseList(lst_9, () -> {
                __core__mkCons(x_3, lst_9)
            }, () -> {
                head_5 = __core__headList__safe(lst_9);
                __core__ifThenElse(
                    comp(x_3, head_5),
                    () -> {
                        __core__mkCons(x_3, lst_9)
                    },
                    () -> {
                        __core__mkCons(head_5, recurse_56(recurse_56, __core__tailList__safe(lst_9)))
                    }
                )()
            })()
        };
        recurse_57(recurse_57, lst_8)
    };
    __helios__common__sort = (lst_10, comp_1) -> {
        recurse_59 = (recurse_58, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                (head_6, tail_3) -> {
                    __helios__common__insert_in_sorted(head_6, tail_3, comp_1)
                }(__core__headList__safe(lst_11), recurse_58(recurse_58, __core__tailList__safe(lst_11)))
            })()
        };
        recurse_59(recurse_59, lst_10)
    };
    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;
    __helios__common__filter_map = (self_74, fn_9) -> {
        __helios__common__filter(self_74, fn_9, __core__mkNilPairData(()))
    };
    __helios__bytearray____lt = __core__lessThanByteString;
    __helios__int__max = (a_11, b_16) -> {
        __core__ifThenElse(
            __core__lessThanInteger(a_11, b_16),
            b_16,
            a_11
        )
    };
    __helios__common__slice_bytearray = (self_75, selfLengthFn) -> {
        (start, end) -> {
            normalize = (pos_1) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(pos_1, 0),
                    () -> {
                        __core__addInteger(__core__addInteger(selfLengthFn(self_75), 1), pos_1)
                    },
                    () -> {
                        pos_1
                    }
                )()
            };
            fn_11 = (start_1) -> {
                fn_10 = (end_1) -> {
                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_75)
                };
                fn_10(normalize(end))
            };
            fn_11(normalize(start))
        }
    };
    __helios__bytearray__slice = (self_76) -> {
        __helios__common__slice_bytearray(self_76, __core__lengthOfByteString)
    };
    __helios__bytearray__blake2b = (self_77) -> {
        () -> {
            __core__blake2b_256(self_77)
        }
    };
    __helios__bytearray__length = __core__lengthOfByteString;
    __helios__bytearray____add = __core__appendByteString;
    __helios__txid__serialize = __helios__common__serialize;
    __helios__txoutputid__index = (self_78) -> {
        __helios__int__from_data(__helios__common__enum_field_1(self_78))
    };
    __helios__txoutputid__tx_id = __helios__common__enum_field_0;
    __helios__common__enum_fields_after_7 = (self_79) -> {
        __core__tailList(__helios__common__enum_fields_after_6(self_79))
    };
    __helios__common__enum_fields_after_8 = (self_80) -> {
        __core__tailList(__helios__common__enum_fields_after_7(self_80))
    };
    __helios__common__enum_field_9 = (self_81) -> {
        __core__headList(__helios__common__enum_fields_after_8(self_81))
    };
    __helios__tx__redeemers = (self_82) -> {
        __core__unMapData(__helios__common__enum_field_9(self_82))
    };
    __helios__scriptpurpose__spending____is = (data_22) -> {
        __helios__common__enum_tag_equals(data_22, 1)
    };
    __helios__txoutputid____eq = __helios__common____eq;
    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;
    __helios__scriptpurpose____to_data = __helios__common__identity;
    __helios__txid__show = (self_83) -> {
        () -> {
            __helios__data__show_constr_data((tag_6, fields_10) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_6, 0),
                    () -> {
                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_8) -> {
                            __helios__bytearray__show(bytes_8)()
                        }))(fields_10)
                    },
                    () -> {
                        __helios__data__show(self_83)()
                    }
                )()
            })(self_83)
        }
    };
    __helios__txoutputid__show = (self_84) -> {
        () -> {
            __helios__data__show_constr_data((tag_7, fields_11) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_7, 0),
                    () -> {
                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {
                            __helios__txid__show(tx_id_data)()
                        })(fields_11);
                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_9) -> {
                            __helios__int__show(i_9)()
                        }))(fields_11);
                        __core__appendString(tx_id_str, __core__appendString("#", index_str))
                    },
                    () -> {
                        __helios__data__show(self_84)()
                    }
                )()
            })(self_84)
        }
    };
    __helios__tx__ref_inputs = (self_85) -> {
        __core__unListData(__helios__common__enum_field_1(self_85))
    };
    __helios__address____eq = __helios__common____eq;
    __helios__bytearray__decode_utf8 = (self_86) -> {
        () -> {
            __core__decodeUtf8(self_86)
        }
    };
    __helios__string__serialize = (self_87) -> {
        () -> {
            __core__serialiseData(__helios__string____to_data(self_87))
        }
    };
    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);
    __helios__txoutput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_0 = __core__tailList;
    __helios__common__struct_field_1 = (self_88) -> {
        __core__headList(__helios__common__struct_fields_after_0(self_88))
    };
    __helios__common__struct_field_0 = __core__headList;
    __helios__struct____to_data = __core__listData;
    __helios__struct__serialize = (self_89) -> {
        () -> {
            __core__serialiseData(__helios__struct____to_data(self_89))
        }
    };
    __helios__struct____eq = (self_90, other_3) -> {
        __core__equalsData(__helios__struct____to_data(self_90), __helios__struct____to_data(other_3))
    };
    __helios__value__compare_inner = (comp_2, a_12, b_17) -> {
        recurse_61 = (recurse_60, keys_3) -> {
            __core__chooseList(keys_3, () -> {
                true
            }, () -> {
                key_11 = __core__headList__safe(keys_3);
                __core__ifThenElse(
                    __helios__bool____not(comp_2(__helios__value__get_inner_map_int(a_12, key_11), __helios__value__get_inner_map_int(b_17, key_11))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_60(recurse_60, __core__tailList__safe(keys_3))
                    }
                )()
            })()
        };
        recurse_61(recurse_61, __helios__value__merge_map_keys(a_12, b_17))
    };
    __helios__value__compare = (a_13, b_18, comp_3) -> {
        recurse_63 = (recurse_62, keys_4) -> {
            __core__chooseList(keys_4, () -> {
                true
            }, () -> {
                key_12 = __core__headList__safe(keys_4);
                __core__ifThenElse(
                    __helios__bool____not(__helios__value__compare_inner(comp_3, __helios__value__get_inner_map(a_13, key_12), __helios__value__get_inner_map(b_18, key_12))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_62(recurse_62, __core__tailList__safe(keys_4))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, __helios__value__merge_map_keys(a_13, b_18))
    };
    __helios__value____geq = (a_14, b_19) -> {
        __helios__value__compare(a_14, b_19, (a_qty, b_qty) -> {
            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))
        })
    };
    __helios__value__contains = (self_91) -> {
        (value_5) -> {
            __helios__value____geq(self_91, value_5)
        }
    };
    __helios__txoutput__sum_values = (outputs) -> {
        __helios__common__fold(outputs, (prev_3, txOutput) -> {
            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))
        }, __helios__value__ZERO)
    };
    __helios__tx__filter_outputs = (self_92, fn_12) -> {
        __helios__common__filter_list(__helios__tx__outputs(self_92), fn_12)
    };
    __helios__address__credential = __helios__common__enum_field_0;
    __helios__spendingcredential__is_validator = (self_93) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_93)), 1)
    };
    __helios__validatorhash____eq = __helios__bytearray____eq;
    __helios__validatorhash__from_data = __helios__bytearray__from_data;
    __helios__spendingcredential__validator__hash = (self_94) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_94))
    };
    __helios__spendingcredential__validator__cast = (data_23) -> {
        __helios__common__assert_constr_index(data_23, 1)
    };
    __helios__txoutput__is_locked_by = (self_95) -> {
        (hash) -> {
            credential = __helios__address__credential(__helios__txoutput__address(self_95));
            __core__ifThenElse(
                __helios__spendingcredential__is_validator(credential),
                () -> {
                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))
                },
                () -> {
                    false
                }
            )()
        }
    };
    __helios__tx__outputs_locked_by = (self_96) -> {
        (vh) -> {
            __helios__tx__filter_outputs(self_96, (output) -> {
                __helios__txoutput__is_locked_by(output)(vh)
            })
        }
    };
    __helios__tx__value_locked_by = (self_97) -> {
        (vh_1) -> {
            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_97)(vh_1))
        }
    };
    __helios__txoutputdatum__serialize = __helios__common__serialize;
    __helios__data__constrdata____is = (data_24) -> {
        __core__chooseData(data_24, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__data__constrdata__fields = (data_25) -> {
        __core__sndPair(__core__unConstrData(data_25))
    };
    __helios__data__constrdata__tag = (data_26) -> {
        __core__fstPair(__core__unConstrData(data_26))
    };
    __helios__common__struct_fields_after_1 = (self_98) -> {
        __core__tailList(__helios__common__struct_fields_after_0(self_98))
    };
    __helios__common__struct_fields_after_2 = (self_99) -> {
        __core__tailList(__helios__common__struct_fields_after_1(self_99))
    };
    __helios__common__struct_fields_after_3 = (self_100) -> {
        __core__tailList(__helios__common__struct_fields_after_2(self_100))
    };
    __helios__common__struct_field_4 = (self_101) -> {
        __core__headList(__helios__common__struct_fields_after_3(self_101))
    };
    __helios__common__struct_field_3 = (self_102) -> {
        __core__headList(__helios__common__struct_fields_after_2(self_102))
    };
    __helios__common__struct_field_2 = (self_103) -> {
        __core__headList(__helios__common__struct_fields_after_1(self_103))
    };
    __helios__txoutput__is_valid_data = (data_27) -> {
        __core__chooseData(data_27, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__txinput__is_valid_data = (data_28) -> {
        __helios__common__test_constr_data_2(data_28, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)
    };
    __helios__txinput____to_data = __helios__common__identity;
    __helios__common__enum_field_6 = (self_104) -> {
        __core__headList(__helios__common__enum_fields_after_5(self_104))
    };
    __helios__common__enum_field_5 = (self_105) -> {
        __core__headList(__helios__common__enum_fields_after_4(self_105))
    };
    __helios__common__enum_field_3 = (self_106) -> {
        __core__headList(__helios__common__enum_fields_after_2(self_106))
    };
    __helios__mintingpolicyhash__is_valid_data = (data_29) -> {
        __core__chooseData(data_29, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            bytes_9 = __core__unBData__safe(data_29);
            n_4 = __core__lengthOfByteString(bytes_9);
            __core__ifThenElse(
                __core__equalsInteger(n_4, 0),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(n_4, 28),
                        true,
                        false
                    )
                }
            )()
        })()
    };
    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__spendingcredential__is_valid_data = (data_30) -> {
        __core__chooseData(data_30, () -> {
            pair_9 = __core__unConstrData__safe(data_30);
            index_5 = __core__fstPair(pair_9);
            fields_12 = __core__sndPair(pair_9);
            __core__ifThenElse(
                __core__equalsInteger(index_5, 0),
                () -> {
                    __core__chooseList(fields_12, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_12), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_12))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_5, 1),
                        () -> {
                            __core__chooseList(fields_12, () -> {
                                false
                            }, () -> {
                                __core__chooseList(__core__tailList__safe(fields_12), () -> {
                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_12))
                                }, () -> {
                                    false
                                })()
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__common__test_list_head_data = (test_head, test_tail) -> {
        (list_2) -> {
            __core__chooseList(list_2, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    test_head(__core__headList(list_2)),
                    () -> {
                        test_tail(__core__tailList(list_2))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;
    __helios__common__test_list_empty = (list_3) -> {
        __core__chooseList(list_3, true, false)
    };
    __helios__stakingcredential__is_valid_data = (data_31) -> {
        __core__chooseData(data_31, () -> {
            pair_10 = __core__unConstrData__safe(data_31);
            tag_8 = __core__fstPair(pair_10);
            fields_13 = __core__sndPair(pair_10);
            __core__ifThenElse(
                __core__equalsInteger(tag_8, 0),
                () -> {
                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_13)
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(tag_8, 1),
                        () -> {
                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_13)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__stakingcredential]__is_valid_data = (data_32) -> {
        __core__chooseData(data_32, () -> {
            pair_11 = __core__unConstrData__safe(data_32);
            index_6 = __core__fstPair(pair_11);
            fields_14 = __core__sndPair(pair_11);
            __core__ifThenElse(
                __core__equalsInteger(index_6, 0),
                () -> {
                    __core__chooseList(fields_14, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_14), () -> {
                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_14))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_6, 1),
                        () -> {
                            __core__chooseList(fields_14, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__address__is_valid_data = (data_33) -> {
        __helios__common__test_constr_data_2(data_33, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)
    };
    __helios__validatorhash__show = __helios__bytearray__show;
    __helios__common__find_safe = (self_107, fn_13, callback_7) -> {
        recurse_65 = (recurse_64, self_108, fn_14) -> {
            __core__chooseList(self_108, () -> {
                __core__constrData(1, __helios__common__list_0)
            }, () -> {
                head_7 = __core__headList__safe(self_108);
                __core__ifThenElse(
                    fn_14(head_7),
                    () -> {
                        __core__constrData(0, __helios__common__list_1(callback_7(head_7)))
                    },
                    () -> {
                        recurse_64(recurse_64, __core__tailList__safe(self_108), fn_14)
                    }
                )()
            })()
        };
        recurse_65(recurse_65, self_107, fn_13)
    };
    __helios__spendingcredential____eq = __helios__common____eq;
    __helios__validatorhash____to_data = __helios__bytearray____to_data;
    __helios__spendingcredential__new_validator = (hash_1) -> {
        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))
    };
    __helios__bytearray__is_valid_data_max_length = (n_5) -> {
        (data_34) -> {
            __core__chooseData(data_34, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_10 = __core__unBData__safe(data_34);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_10), n_5),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__assetclass__is_valid_data = (data_35) -> {
        __helios__common__test_constr_data_2(data_35, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))
    };
    __helios__data__mapdata____is = (data_36) -> {
        __core__chooseData(data_36, () -> {
            false
        }, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__scriptpurpose__from_data = __helios__common__identity;
    __module__StellarHeliosHelpers__TODO = (task) -> {
        __helios__print(__helios__string____add(__helios__string____add("  \u{1F7E5}  \u{1F633}\u{1F4A6}  TODO: ", task), "
"))
    };
    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion) -> {
        assertion_1 = __core__ifThenElse(
            __useopt__assertion,
            () -> {
                assertion
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__helios__print(__helios__string____add("\u2757 ", reqt)), __helios__assert(assertion_1, __helios__string____add("  \u274C\u274C ^ failed: ", reqt)))
    };
    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2) -> {
        assertion_3 = __core__ifThenElse(
            __useopt__assertion_1,
            () -> {
                assertion_2
            },
            () -> {
                true
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3), true)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {
        tn_1 = __core__ifThenElse(
            __useopt__tn,
            () -> {
                tn
            },
            () -> {
                ""
            }
        )();
        tnBytes_1 = __core__ifThenElse(
            __useopt__tnBytes,
            () -> {
                tnBytes
            },
            () -> {
                __helios__string__encode_utf8(tn_1)()
            }
        )();
        count_1 = __core__ifThenElse(
            __useopt__count,
            () -> {
                count
            },
            () -> {
                1
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), "missing reqd tn or tnBytes"), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), count_1))
    };
    __helios__list[__helios__txoutput]__find = (self_109) -> {
        (fn_15) -> {
            recurse_67 = (recurse_66, lst_12) -> {
                __core__chooseList(lst_12, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_6 = __helios__txoutput__from_data(__core__headList__safe(lst_12));
                    __core__ifThenElse(
                        fn_15(item_6),
                        () -> {
                            item_6
                        },
                        () -> {
                            recurse_66(recurse_66, __core__tailList__safe(lst_12))
                        }
                    )()
                })()
            };
            recurse_67(recurse_67, self_109)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length = (self_110) -> {
        __helios__common__length(self_110)
    };
    __helios__map[__helios__bytearray@__helios__int]__length = (self_111) -> {
        __helios__common__length(self_111)
    };
    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_19) -> {
        recurse_69 = (recurse_68, map_20) -> {
            __core__chooseList(map_20, () -> {
                true
            }, () -> {
                head_8 = __core__headList__safe(map_20);
                __core__ifThenElse(
                    __helios__bytearray__is_valid_data(__core__fstPair(head_8)),
                    () -> {
                        __core__ifThenElse(
                            __helios__int__is_valid_data(__core__sndPair(head_8)),
                            () -> {
                                recurse_68(recurse_68, __core__tailList__safe(map_20))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_69(recurse_69, map_19)
    };
    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_37) -> {
        map_21 = __core__unMapData(data_37);
        _ = __core__ifThenElse(
            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_21),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_21
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_112) -> {
        (key_13) -> {
            __helios__common__map_get(self_112, __helios__scriptpurpose____to_data(key_13), (x_4) -> {
                __helios__data__from_data(x_4)
            }, () -> {
                __helios__error("key not found")
            })
        }
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_113) -> {
        (fn_16) -> {
            recurse_71 = (recurse_70, map_22) -> {
                __core__chooseList(map_22, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_7 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_22)));
                    __core__ifThenElse(
                        fn_16(item_7),
                        () -> {
                            item_7
                        },
                        () -> {
                            recurse_70(recurse_70, __core__tailList__safe(map_22))
                        }
                    )()
                })()
            };
            recurse_71(recurse_71, self_113)
        }
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __helios__txinput__output_id(txInput);
        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);
        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {
            __cond = purpose;
            __core__ifThenElse(
                __helios__scriptpurpose__spending____is(__cond),
                () -> {
                    (sp) -> {
                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)
                    }
                },
                () -> {
                    (__1) -> {
                        false
                    }
                }
            )()(__cond)
        });
        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)
    };
    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_38) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_38, __core__bData(#747065), __helios__string__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_38, __core__bData(#406964), __helios__bytearray__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid data in AnyData.@id", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in AnyData.tpe", () -> {
                    false
                })()
            }
        )()
    };
    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_39) -> {
        ignore = __core__ifThenElse(
            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_39),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", ())
            }
        )();
        data_39
    };
    __module__StellarHeliosHelpers__AnyData[]__id = (self_114) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_114, #406964))
    };
    __module__StellarHeliosHelpers__AnyData[]__type = (self_115) -> {
        __helios__string__from_data(__helios__common__mStruct_field(self_115, #747065))
    };
    __helios__list[__helios__data]__head = (self_116) -> {
        __helios__data__from_data(__core__headList(self_116))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_6) -> {
        __cond_1 = value_6;
        __core__ifThenElse(
            __helios__data__constrdata____is(__cond_1),
            () -> {
                (__lhs_0) -> {
                    fields_15 = __helios__data__constrdata__fields(__lhs_0);
                    __cond_2 = __helios__list[__helios__data]__head(fields_15);
                    __core__ifThenElse(
                        __helios__data__mapdata____is(__cond_2),
                        () -> {
                            (__lhs_0_1) -> {
                                __helios__list[__helios__data]__head(fields_15)
                            }
                        },
                        () -> {
                            (__3) -> {
                                __helios__error("bad cast from ConstrData{_, ...fields} to mStruct: first field must be a map")
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    __helios__error("bad cast to mStruct from non-ConstrData")
                }
            }
        )()(__cond_1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {
        (data_40) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_40),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_40),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_40),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {
        (data_41) -> {
            ignore_1 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_41),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateLifecycleActivity data", ())
                }
            )();
            data_41
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_42) -> {
        __helios__common__enum_tag_equals(data_42, 0)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_43) -> {
        __core__chooseData(data_43, () -> {
            pair_12 = __core__unConstrData__safe(data_43);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_12), 0),
                () -> {
                    data_44 = __core__listData(__core__sndPair(pair_12));
                    __core__chooseData(data_44, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_16 = __core__unListData__safe(data_44);
                        __core__chooseList(fields_16, () -> {
                            false
                        }, () -> {
                            head_9 = __core__headList__safe(fields_16);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_9),
                                () -> {
                                    fields_17 = __core__tailList__safe(fields_16);
                                    __core__chooseList(fields_17, () -> {
                                        false
                                    }, () -> {
                                        head_10 = __core__headList__safe(fields_17);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_10),
                                            () -> {
                                                fields_18 = __core__tailList__safe(fields_17);
                                                __core__chooseList(fields_18, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed = (self_117) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_117))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose = (self_118) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_118))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_45) -> {
        __helios__common__enum_tag_equals(data_45, 1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_46) -> {
        __core__chooseData(data_46, () -> {
            pair_13 = __core__unConstrData__safe(data_46);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_13), 1),
                () -> {
                    data_47 = __core__listData(__core__sndPair(pair_13));
                    __core__chooseData(data_47, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_19 = __core__unListData__safe(data_47);
                        __core__chooseList(fields_19, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is = (data_48) -> {
        __helios__common__enum_tag_equals(data_48, 2)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_49) -> {
        __core__chooseData(data_49, () -> {
            pair_14 = __core__unConstrData__safe(data_49);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_14), 2),
                () -> {
                    data_50 = __core__listData(__core__sndPair(pair_14));
                    __core__chooseData(data_50, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_20 = __core__unListData__safe(data_50);
                        __core__chooseList(fields_20, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {
        (data_51) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_51),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_51),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_51),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_51),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_51),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_51),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_51),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_51),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__from_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1) -> {
        (data_52) -> {
            ignore_2 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(data_52),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateRole data", ())
                }
            )();
            data_52
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_53) -> {
        __helios__common__enum_tag_equals(data_53, 0)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2 = (data_54) -> {
        __core__chooseData(data_54, () -> {
            pair_15 = __core__unConstrData__safe(data_54);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_15), 0),
                () -> {
                    data_55 = __core__listData(__core__sndPair(pair_15));
                    __core__chooseData(data_55, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_21 = __core__unListData__safe(data_55);
                        __core__chooseList(fields_21, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_56) -> {
        __helios__common__enum_tag_equals(data_56, 1)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2 = (data_57) -> {
        __core__chooseData(data_57, () -> {
            pair_16 = __core__unConstrData__safe(data_57);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_16), 1),
                () -> {
                    data_58 = __core__listData(__core__sndPair(pair_16));
                    __core__chooseData(data_58, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_22 = __core__unListData__safe(data_58);
                        __core__chooseList(fields_22, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is = (data_59) -> {
        __helios__common__enum_tag_equals(data_59, 2)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2 = (data_60) -> {
        __core__chooseData(data_60, () -> {
            pair_17 = __core__unConstrData__safe(data_60);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_17), 2),
                () -> {
                    data_61 = __core__listData(__core__sndPair(pair_17));
                    __core__chooseData(data_61, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_23 = __core__unListData__safe(data_61);
                        __core__chooseList(fields_23, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is = (data_62) -> {
        __helios__common__enum_tag_equals(data_62, 3)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2 = (data_63) -> {
        __core__chooseData(data_63, () -> {
            pair_18 = __core__unConstrData__safe(data_63);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_18), 3),
                () -> {
                    data_64 = __core__listData(__core__sndPair(pair_18));
                    __core__chooseData(data_64, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_24 = __core__unListData__safe(data_64);
                        __core__chooseList(fields_24, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is = (data_65) -> {
        __helios__common__enum_tag_equals(data_65, 4)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2 = (data_66) -> {
        __core__chooseData(data_66, () -> {
            pair_19 = __core__unConstrData__safe(data_66);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_19), 4),
                () -> {
                    data_67 = __core__listData(__core__sndPair(pair_19));
                    __core__chooseData(data_67, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_25 = __core__unListData__safe(data_67);
                        __core__chooseList(fields_25, () -> {
                            false
                        }, () -> {
                            head_11 = __core__headList__safe(fields_25);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_11),
                                () -> {
                                    fields_26 = __core__tailList__safe(fields_25);
                                    __core__chooseList(fields_26, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_119) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_119))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new = (self_120) -> {
        __core__constrData(4, __helios__common__list_1(__helios__string____to_data(self_120)))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is = (data_68) -> {
        __helios__common__enum_tag_equals(data_68, 5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2 = (data_69) -> {
        __core__chooseData(data_69, () -> {
            pair_20 = __core__unConstrData__safe(data_69);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_20), 5),
                () -> {
                    data_70 = __core__listData(__core__sndPair(pair_20));
                    __core__chooseData(data_70, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_27 = __core__unListData__safe(data_70);
                        __core__chooseList(fields_27, () -> {
                            false
                        }, () -> {
                            head_12 = __core__headList__safe(fields_27);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_12),
                                () -> {
                                    fields_28 = __core__tailList__safe(fields_27);
                                    __core__chooseList(fields_28, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_71) -> {
        __helios__common__enum_tag_equals(data_71, 6)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2 = (data_72) -> {
        __core__chooseData(data_72, () -> {
            pair_21 = __core__unConstrData__safe(data_72);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_21), 6),
                () -> {
                    data_73 = __core__listData(__core__sndPair(pair_21));
                    __core__chooseData(data_73, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_29 = __core__unListData__safe(data_73);
                        __core__chooseList(fields_29, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {
        __core__constrData(6, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_74) -> {
        __helios__common__enum_tag_equals(data_74, 7)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2 = (data_75) -> {
        __core__chooseData(data_75, () -> {
            pair_22 = __core__unConstrData__safe(data_75);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_22), 7),
                () -> {
                    data_76 = __core__listData(__core__sndPair(pair_22));
                    __core__chooseData(data_76, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_30 = __core__unListData__safe(data_76);
                        __core__chooseList(fields_30, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {
        (data_77) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_77),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_77),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_77),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_77),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_77),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__from_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1) -> {
        (data_78) -> {
            ignore_3 = __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(data_78),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestActivity data", ())
                }
            )();
            data_78
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is = (data_79) -> {
        __helios__common__enum_tag_equals(data_79, 0)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2 = (data_80) -> {
        __core__chooseData(data_80, () -> {
            pair_23 = __core__unConstrData__safe(data_80);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_23), 0),
                () -> {
                    data_81 = __core__listData(__core__sndPair(pair_23));
                    __core__chooseData(data_81, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_31 = __core__unListData__safe(data_81);
                        __core__chooseList(fields_31, () -> {
                            false
                        }, () -> {
                            head_13 = __core__headList__safe(fields_31);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_13),
                                () -> {
                                    fields_32 = __core__tailList__safe(fields_31);
                                    __core__chooseList(fields_32, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is = (data_82) -> {
        __helios__common__enum_tag_equals(data_82, 1)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2 = (data_83) -> {
        __core__chooseData(data_83, () -> {
            pair_24 = __core__unConstrData__safe(data_83);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_24), 1),
                () -> {
                    data_84 = __core__listData(__core__sndPair(pair_24));
                    __core__chooseData(data_84, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_33 = __core__unListData__safe(data_84);
                        __core__chooseList(fields_33, () -> {
                            false
                        }, () -> {
                            head_14 = __core__headList__safe(fields_33);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_14),
                                () -> {
                                    fields_34 = __core__tailList__safe(fields_33);
                                    __core__chooseList(fields_34, () -> {
                                        false
                                    }, () -> {
                                        head_15 = __core__headList__safe(fields_34);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_15),
                                            () -> {
                                                fields_35 = __core__tailList__safe(fields_34);
                                                __core__chooseList(fields_35, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is = (data_85) -> {
        __helios__common__enum_tag_equals(data_85, 2)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2 = (data_86) -> {
        __core__chooseData(data_86, () -> {
            pair_25 = __core__unConstrData__safe(data_86);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_25), 2),
                () -> {
                    data_87 = __core__listData(__core__sndPair(pair_25));
                    __core__chooseData(data_87, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_36 = __core__unListData__safe(data_87);
                        __core__chooseList(fields_36, () -> {
                            false
                        }, () -> {
                            head_16 = __core__headList__safe(fields_36);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_16),
                                () -> {
                                    fields_37 = __core__tailList__safe(fields_36);
                                    __core__chooseList(fields_37, () -> {
                                        false
                                    }, () -> {
                                        head_17 = __core__headList__safe(fields_37);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_17),
                                            () -> {
                                                fields_38 = __core__tailList__safe(fields_37);
                                                __core__chooseList(fields_38, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key = (self_121) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_121))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName = (self_122) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_122))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is = (data_88) -> {
        __helios__common__enum_tag_equals(data_88, 3)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2 = (data_89) -> {
        __core__chooseData(data_89, () -> {
            pair_26 = __core__unConstrData__safe(data_89);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_26), 3),
                () -> {
                    data_90 = __core__listData(__core__sndPair(pair_26));
                    __core__chooseData(data_90, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_39 = __core__unListData__safe(data_90);
                        __core__chooseList(fields_39, () -> {
                            false
                        }, () -> {
                            head_18 = __core__headList__safe(fields_39);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_18),
                                () -> {
                                    fields_40 = __core__tailList__safe(fields_39);
                                    __core__chooseList(fields_40, () -> {
                                        false
                                    }, () -> {
                                        head_19 = __core__headList__safe(fields_40);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_19),
                                            () -> {
                                                fields_41 = __core__tailList__safe(fields_40);
                                                __core__chooseList(fields_41, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2 = (data_91) -> {
        __core__chooseData(data_91, () -> {
            pair_27 = __core__unConstrData__safe(data_91);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_27), 4),
                () -> {
                    data_92 = __core__listData(__core__sndPair(pair_27));
                    __core__chooseData(data_92, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_42 = __core__unListData__safe(data_92);
                        __core__chooseList(fields_42, () -> {
                            false
                        }, () -> {
                            head_20 = __core__headList__safe(fields_42);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_20),
                                () -> {
                                    fields_43 = __core__tailList__safe(fields_42);
                                    __core__chooseList(fields_43, () -> {
                                        false
                                    }, () -> {
                                        head_21 = __core__headList__safe(fields_43);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_21),
                                            () -> {
                                                fields_44 = __core__tailList__safe(fields_43);
                                                __core__chooseList(fields_44, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {
        (data_93) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_93),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_93),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_93),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1) -> {
        (data_94) -> {
            ignore_4 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(data_94),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingDelegateAction data", ())
                }
            )();
            data_94
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is = (data_95) -> {
        __helios__common__enum_tag_equals(data_95, 0)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2 = (data_96) -> {
        __core__chooseData(data_96, () -> {
            pair_28 = __core__unConstrData__safe(data_96);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_28), 0),
                () -> {
                    data_97 = __core__listData(__core__sndPair(pair_28));
                    __core__chooseData(data_97, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_45 = __core__unListData__safe(data_97);
                        __core__chooseList(fields_45, () -> {
                            false
                        }, () -> {
                            head_22 = __core__headList__safe(fields_45);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_22),
                                () -> {
                                    fields_46 = __core__tailList__safe(fields_45);
                                    __core__chooseList(fields_46, () -> {
                                        false
                                    }, () -> {
                                        head_23 = __core__headList__safe(fields_46);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_23),
                                            () -> {
                                                fields_47 = __core__tailList__safe(fields_46);
                                                __core__chooseList(fields_47, () -> {
                                                    false
                                                }, () -> {
                                                    head_24 = __core__headList__safe(fields_47);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_24),
                                                        () -> {
                                                            fields_48 = __core__tailList__safe(fields_47);
                                                            __core__chooseList(fields_48, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed = (self_123) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_123))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose = (self_124) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_124))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_125) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_125))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is = (data_98) -> {
        __helios__common__enum_tag_equals(data_98, 1)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2 = (data_99) -> {
        __core__chooseData(data_99, () -> {
            pair_29 = __core__unConstrData__safe(data_99);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_29), 1),
                () -> {
                    data_100 = __core__listData(__core__sndPair(pair_29));
                    __core__chooseData(data_100, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_49 = __core__unListData__safe(data_100);
                        __core__chooseList(fields_49, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is = (data_101) -> {
        __helios__common__enum_tag_equals(data_101, 2)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2 = (data_102) -> {
        __core__chooseData(data_102, () -> {
            pair_30 = __core__unConstrData__safe(data_102);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_30), 2),
                () -> {
                    data_103 = __core__listData(__core__sndPair(pair_30));
                    __core__chooseData(data_103, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_50 = __core__unListData__safe(data_103);
                        __core__chooseList(fields_50, () -> {
                            false
                        }, () -> {
                            head_25 = __core__headList__safe(fields_50);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_25),
                                () -> {
                                    fields_51 = __core__tailList__safe(fields_50);
                                    __core__chooseList(fields_51, () -> {
                                        false
                                    }, () -> {
                                        head_26 = __core__headList__safe(fields_51);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_26),
                                            () -> {
                                                fields_52 = __core__tailList__safe(fields_51);
                                                __core__chooseList(fields_52, () -> {
                                                    false
                                                }, () -> {
                                                    head_27 = __core__headList__safe(fields_52);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_27),
                                                        () -> {
                                                            fields_53 = __core__tailList__safe(fields_52);
                                                            __core__chooseList(fields_53, () -> {
                                                                false
                                                            }, () -> {
                                                                head_28 = __core__headList__safe(fields_53);
                                                                __core__ifThenElse(
                                                                    __helios__assetclass__is_valid_data(head_28),
                                                                    () -> {
                                                                        fields_54 = __core__tailList__safe(fields_53);
                                                                        __core__chooseList(fields_54, true, false)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed = (self_126) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_126))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose = (self_127) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_127))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_128) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_128))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt = (self_129) -> {
        __helios__assetclass__from_data(__helios__common__enum_field_3(self_129))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {
        (data_104) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_104),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_104),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_104),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_104),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_104),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_104),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_104),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {
        (data_105) -> {
            ignore_5 = __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_105),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoLifecycleActivity data", ())
                }
            )();
            data_105
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_106) -> {
        __helios__common__enum_tag_equals(data_106, 0)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_107) -> {
        __core__chooseData(data_107, () -> {
            pair_31 = __core__unConstrData__safe(data_107);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_31), 0),
                () -> {
                    data_108 = __core__listData(__core__sndPair(pair_31));
                    __core__chooseData(data_108, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_55 = __core__unListData__safe(data_108);
                        __core__chooseList(fields_55, () -> {
                            false
                        }, () -> {
                            head_29 = __core__headList__safe(fields_55);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_29),
                                () -> {
                                    fields_56 = __core__tailList__safe(fields_55);
                                    __core__chooseList(fields_56, () -> {
                                        false
                                    }, () -> {
                                        head_30 = __core__headList__safe(fields_56);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_30),
                                            () -> {
                                                fields_57 = __core__tailList__safe(fields_56);
                                                __core__chooseList(fields_57, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed = (self_130) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_130))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose = (self_131) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_131))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_109) -> {
        __helios__common__enum_tag_equals(data_109, 1)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_110) -> {
        __core__chooseData(data_110, () -> {
            pair_32 = __core__unConstrData__safe(data_110);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_32), 1),
                () -> {
                    data_111 = __core__listData(__core__sndPair(pair_32));
                    __core__chooseData(data_111, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_58 = __core__unListData__safe(data_111);
                        __core__chooseList(fields_58, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_112) -> {
        __helios__common__enum_tag_equals(data_112, 2)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_113) -> {
        __core__chooseData(data_113, () -> {
            pair_33 = __core__unConstrData__safe(data_113);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_33), 2),
                () -> {
                    data_114 = __core__listData(__core__sndPair(pair_33));
                    __core__chooseData(data_114, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_59 = __core__unListData__safe(data_114);
                        __core__chooseList(fields_59, () -> {
                            false
                        }, () -> {
                            head_31 = __core__headList__safe(fields_59);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_31),
                                () -> {
                                    fields_60 = __core__tailList__safe(fields_59);
                                    __core__chooseList(fields_60, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_115) -> {
        __helios__common__enum_tag_equals(data_115, 3)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_116) -> {
        __core__chooseData(data_116, () -> {
            pair_34 = __core__unConstrData__safe(data_116);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_34), 3),
                () -> {
                    data_117 = __core__listData(__core__sndPair(pair_34));
                    __core__chooseData(data_117, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_61 = __core__unListData__safe(data_117);
                        __core__chooseList(fields_61, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_118) -> {
        __helios__common__enum_tag_equals(data_118, 4)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_119) -> {
        __core__chooseData(data_119, () -> {
            pair_35 = __core__unConstrData__safe(data_119);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_35), 4),
                () -> {
                    data_120 = __core__listData(__core__sndPair(pair_35));
                    __core__chooseData(data_120, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_62 = __core__unListData__safe(data_120);
                        __core__chooseList(fields_62, () -> {
                            false
                        }, () -> {
                            head_32 = __core__headList__safe(fields_62);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_32),
                                () -> {
                                    fields_63 = __core__tailList__safe(fields_62);
                                    __core__chooseList(fields_63, () -> {
                                        false
                                    }, () -> {
                                        head_33 = __core__headList__safe(fields_63);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_33),
                                            () -> {
                                                fields_64 = __core__tailList__safe(fields_63);
                                                __core__chooseList(fields_64, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_121) -> {
        __helios__common__enum_tag_equals(data_121, 5)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_122) -> {
        __core__chooseData(data_122, () -> {
            pair_36 = __core__unConstrData__safe(data_122);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_36), 5),
                () -> {
                    data_123 = __core__listData(__core__sndPair(pair_36));
                    __core__chooseData(data_123, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_65 = __core__unListData__safe(data_123);
                        __core__chooseList(fields_65, () -> {
                            false
                        }, () -> {
                            head_34 = __core__headList__safe(fields_65);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_34),
                                () -> {
                                    fields_66 = __core__tailList__safe(fields_65);
                                    __core__chooseList(fields_66, () -> {
                                        false
                                    }, () -> {
                                        head_35 = __core__headList__safe(fields_66);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_35),
                                            () -> {
                                                fields_67 = __core__tailList__safe(fields_66);
                                                __core__chooseList(fields_67, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_124) -> {
        __helios__common__enum_tag_equals(data_124, 6)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_125) -> {
        __core__chooseData(data_125, () -> {
            pair_37 = __core__unConstrData__safe(data_125);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_37), 6),
                () -> {
                    data_126 = __core__listData(__core__sndPair(pair_37));
                    __core__chooseData(data_126, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_68 = __core__unListData__safe(data_126);
                        __core__chooseList(fields_68, () -> {
                            false
                        }, () -> {
                            head_36 = __core__headList__safe(fields_68);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_36),
                                () -> {
                                    fields_69 = __core__tailList__safe(fields_68);
                                    __core__chooseList(fields_69, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity = (self_132) -> {
        __module__CapoDelegateHelpers__ManifestActivity[]__from_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(__helios__common__enum_field_0(self_132))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_127) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_127),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_127),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_127),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_127),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_127),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_127),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_127),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_127),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_127),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_128) -> {
            ignore_6 = __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1)(data_128),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid AbstractDelegateActivitiesEnum data", ())
                }
            )();
            data_128
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_129) -> {
        __core__chooseData(data_129, () -> {
            pair_38 = __core__unConstrData__safe(data_129);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_38), 0),
                () -> {
                    data_130 = __core__listData(__core__sndPair(pair_38));
                    __core__chooseData(data_130, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_70 = __core__unListData__safe(data_130);
                        __core__chooseList(fields_70, () -> {
                            false
                        }, () -> {
                            head_37 = __core__headList__safe(fields_70);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_37),
                                () -> {
                                    fields_71 = __core__tailList__safe(fields_70);
                                    __core__chooseList(fields_71, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_131) -> {
        __helios__common__enum_tag_equals(data_131, 1)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_132) -> {
        __core__chooseData(data_132, () -> {
            pair_39 = __core__unConstrData__safe(data_132);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_39), 1),
                () -> {
                    data_133 = __core__listData(__core__sndPair(pair_39));
                    __core__chooseData(data_133, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_72 = __core__unListData__safe(data_133);
                        __core__chooseList(fields_72, () -> {
                            false
                        }, () -> {
                            head_38 = __core__headList__safe(fields_72);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_38),
                                () -> {
                                    fields_73 = __core__tailList__safe(fields_72);
                                    __core__chooseList(fields_73, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_133) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_133))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_134) -> {
        __helios__common__enum_tag_equals(data_134, 2)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_135) -> {
        __core__chooseData(data_135, () -> {
            pair_40 = __core__unConstrData__safe(data_135);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_40), 2),
                () -> {
                    data_136 = __core__listData(__core__sndPair(pair_40));
                    __core__chooseData(data_136, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_74 = __core__unListData__safe(data_136);
                        __core__chooseList(fields_74, () -> {
                            false
                        }, () -> {
                            head_39 = __core__headList__safe(fields_74);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_39),
                                () -> {
                                    fields_75 = __core__tailList__safe(fields_74);
                                    __core__chooseList(fields_75, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_134) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_134))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_137) -> {
        __helios__common__enum_tag_equals(data_137, 3)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_138) -> {
        __core__chooseData(data_138, () -> {
            pair_41 = __core__unConstrData__safe(data_138);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_41), 3),
                () -> {
                    data_139 = __core__listData(__core__sndPair(pair_41));
                    __core__chooseData(data_139, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_76 = __core__unListData__safe(data_139);
                        __core__chooseList(fields_76, () -> {
                            false
                        }, () -> {
                            head_40 = __core__headList__safe(fields_76);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_40),
                                () -> {
                                    fields_77 = __core__tailList__safe(fields_76);
                                    __core__chooseList(fields_77, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity = (self_135) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_135))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_140) -> {
        __core__chooseData(data_140, () -> {
            pair_42 = __core__unConstrData__safe(data_140);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_42), 4),
                () -> {
                    data_141 = __core__listData(__core__sndPair(pair_42));
                    __core__chooseData(data_141, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_78 = __core__unListData__safe(data_141);
                        __core__chooseList(fields_78, () -> {
                            false
                        }, () -> {
                            head_41 = __core__headList__safe(fields_78);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_41),
                                () -> {
                                    fields_79 = __core__tailList__safe(fields_78);
                                    __core__chooseList(fields_79, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_142) -> {
        __helios__common__enum_tag_equals(data_142, 5)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_143) -> {
        __core__chooseData(data_143, () -> {
            pair_43 = __core__unConstrData__safe(data_143);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_43), 5),
                () -> {
                    data_144 = __core__listData(__core__sndPair(pair_43));
                    __core__chooseData(data_144, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_80 = __core__unListData__safe(data_144);
                        __core__chooseList(fields_80, () -> {
                            false
                        }, () -> {
                            head_42 = __core__headList__safe(fields_80);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_42),
                                () -> {
                                    fields_81 = __core__tailList__safe(fields_80);
                                    __core__chooseList(fields_81, () -> {
                                        false
                                    }, () -> {
                                        head_43 = __core__headList__safe(fields_81);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_43),
                                            () -> {
                                                fields_82 = __core__tailList__safe(fields_81);
                                                __core__chooseList(fields_82, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_145) -> {
        __helios__common__enum_tag_equals(data_145, 6)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_146) -> {
        __core__chooseData(data_146, () -> {
            pair_44 = __core__unConstrData__safe(data_146);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_44), 6),
                () -> {
                    data_147 = __core__listData(__core__sndPair(pair_44));
                    __core__chooseData(data_147, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_83 = __core__unListData__safe(data_147);
                        __core__chooseList(fields_83, () -> {
                            false
                        }, () -> {
                            head_44 = __core__headList__safe(fields_83);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_44),
                                () -> {
                                    fields_84 = __core__tailList__safe(fields_83);
                                    __core__chooseList(fields_84, () -> {
                                        false
                                    }, () -> {
                                        head_45 = __core__headList__safe(fields_84);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_45),
                                            () -> {
                                                fields_85 = __core__tailList__safe(fields_84);
                                                __core__chooseList(fields_85, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_148) -> {
        __helios__common__enum_tag_equals(data_148, 7)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_149) -> {
        __core__chooseData(data_149, () -> {
            pair_45 = __core__unConstrData__safe(data_149);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_45), 7),
                () -> {
                    data_150 = __core__listData(__core__sndPair(pair_45));
                    __core__chooseData(data_150, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_86 = __core__unListData__safe(data_150);
                        __core__chooseList(fields_86, () -> {
                            false
                        }, () -> {
                            head_46 = __core__headList__safe(fields_86);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_46),
                                () -> {
                                    fields_87 = __core__tailList__safe(fields_86);
                                    __core__chooseList(fields_87, () -> {
                                        false
                                    }, () -> {
                                        head_47 = __core__headList__safe(fields_87);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_47),
                                            () -> {
                                                fields_88 = __core__tailList__safe(fields_87);
                                                __core__chooseList(fields_88, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_151) -> {
        __helios__common__enum_tag_equals(data_151, 8)
    };
    __helios__list[__helios__data]__is_valid_data_internal = (lst_13) -> {
        recurse_73 = (recurse_72, lst_14) -> {
            __core__chooseList(lst_14, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__data__is_valid_data(__core__headList__safe(lst_14)),
                    () -> {
                        recurse_72(recurse_72, __core__tailList__safe(lst_14))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_73(recurse_73, lst_13)
    };
    __helios__list[__helios__data]__is_valid_data = (data_152) -> {
        __core__chooseData(data_152, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_152))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_153) -> {
        __core__chooseData(data_153, () -> {
            pair_46 = __core__unConstrData__safe(data_153);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_46), 8),
                () -> {
                    data_154 = __core__listData(__core__sndPair(pair_46));
                    __core__chooseData(data_154, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_89 = __core__unListData__safe(data_154);
                        __core__chooseList(fields_89, () -> {
                            false
                        }, () -> {
                            head_48 = __core__headList__safe(fields_89);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_48),
                                () -> {
                                    fields_90 = __core__tailList__safe(fields_89);
                                    __core__chooseList(fields_90, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__data]__from_data = (data_155) -> {
        lst_15 = __core__unListData(data_155);
        __4 = __core__ifThenElse(
            __helios__list[__helios__data]__is_valid_data_internal(lst_15),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_15
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_136) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_136))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_156) -> {
        __helios__common__enum_tag_equals(data_156, 0)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_157) -> {
        __helios__common__enum_tag_equals(data_157, 1)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __helios__option[__helios__validatorhash]__is_valid_data = (data_158) -> {
        __core__chooseData(data_158, () -> {
            pair_47 = __core__unConstrData__safe(data_158);
            index_7 = __core__fstPair(pair_47);
            fields_91 = __core__sndPair(pair_47);
            __core__ifThenElse(
                __core__equalsInteger(index_7, 0),
                () -> {
                    __core__chooseList(fields_91, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_91), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_91))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_7, 1),
                        () -> {
                            __core__chooseList(fields_91, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_159) -> {
        __core__chooseData(data_159, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_92 = __core__unListData__safe(data_159);
            __core__chooseList(fields_92, () -> {
                false
            }, () -> {
                head_49 = __core__headList__safe(fields_92);
                __core__ifThenElse(
                    __helios__string__is_valid_data(head_49),
                    () -> {
                        fields_93 = __core__tailList__safe(fields_92);
                        __core__chooseList(fields_93, () -> {
                            false
                        }, () -> {
                            head_50 = __core__headList__safe(fields_93);
                            __core__ifThenElse(
                                __helios__option[__helios__validatorhash]__is_valid_data(head_50),
                                () -> {
                                    fields_94 = __core__tailList__safe(fields_93);
                                    __core__chooseList(fields_94, () -> {
                                        false
                                    }, () -> {
                                        head_51 = __core__headList__safe(fields_94);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_51),
                                            () -> {
                                                fields_95 = __core__tailList__safe(fields_94);
                                                __core__chooseList(fields_95, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_160) -> {
        ignore_7 = __core__ifThenElse(
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_160),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid RelativeDelegateLink data", ())
            }
        )();
        __core__unListData(data_160)
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_137) -> {
        __helios__string__from_data(__helios__common__struct_field_0(self_137))
    };
    __helios__option[__helios__validatorhash]__from_data = (data_161) -> {
        __5 = __core__ifThenElse(
            __helios__option[__helios__validatorhash]__is_valid_data(data_161),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_161
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_138) -> {
        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_138))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken = (self_139) -> {
        (mph_11) -> {
            __module__StellarHeliosHelpers__mkTv(mph_11, true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_139), false, (), false, ())
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_140) -> {
        (mph_12) -> {
            __helios__assetclass__new(mph_12, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_140))())
        }
    };
    __helios__option[__helios__txinput]__none____is = (data_162) -> {
        __helios__common__enum_tag_equals(data_162, 1)
    };
    __helios__option[__helios__bool]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bool]__some____new = (some_2) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bool____to_data(some_2)))
    };
    __helios__option[__helios__txinput]__some__some = (self_141) -> {
        __helios__txinput__from_data(__helios__common__enum_field_0(self_141))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings = (__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput) -> {
        (self_142) -> {
            (inputs, mph_13, inputRequired) -> {
                __cond_3 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_142)(inputs, mph_13, true, inputRequired);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_3),
                    () -> {
                        (__lhs_0_5) -> {
                            __helios__option[__helios__bool]__none____new()
                        }
                    },
                    () -> {
                        (__lhs_0_2) -> {
                            spendDelegateInput = __helios__option[__helios__txinput]__some__some(__lhs_0_2);
                            (spendDelegateIsValid) -> {
                                __core__chooseUnit(__helios__assert(spendDelegateIsValid, "no way o"), __helios__option[__helios__bool]__some____new(spendDelegateIsValid))
                            }(__cond_4 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput));
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_4),
                                () -> {
                                    (__lhs_0_3) -> {
                                        a_15 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_3);
                                        __cond_5 = a_15;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is(__cond_5),
                                            () -> {
                                                (__lhs_0_4) -> {
                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_142)(mph_13, false, (), false, ())
                                                }
                                            },
                                            () -> {
                                                (__7) -> {
                                                    __helios__error(__helios__string____add("delegate not ValidatingSettings: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_142)))
                                                }
                                            }
                                        )()(__cond_5)
                                    }
                                },
                                () -> {
                                    (__6) -> {
                                        __helios__error("no way n")
                                    }
                                }
                            )()(__cond_4))
                        }
                    }
                )()(__cond_3)
            }
        }
    };
    __helios__option[__helios__validatorhash]__none____is = (data_163) -> {
        __helios__common__enum_tag_equals(data_163, 1)
    };
    __helios__option[__helios__txinput]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__txinput]__some____is = (data_164) -> {
        __helios__common__enum_tag_equals(data_164, 0)
    };
    __helios__list[__helios__txinput]__find_safe = (self_143) -> {
        (fn_17) -> {
            __helios__common__find_safe(self_143, (item_8) -> {
                fn_17(__helios__txinput__from_data(item_8))
            }, __helios__common__identity)
        }
    };
    __helios__option[__helios__validatorhash]__some__some = (self_144) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_144))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1 = (self_145) -> {
        (inputs_1, mph_14, __useopt__required, required) -> {
            required_1 = __core__ifThenElse(
                __useopt__required,
                () -> {
                    required
                },
                () -> {
                    true
                }
            )();
            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_145);
            __cond_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_145);
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__none____is(__cond_6),
                () -> {
                    (__lhs_0_8) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                __helios__error(__helios__string____add("\u274C\u274C \u27A1\uFE0F \u{1F481} missing required input with dgTkn ", uutName))
                            },
                            () -> {
                                () -> {
                                    __helios__option[__helios__txinput]__none____new()
                                }()
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0_6) -> {
                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_6);
                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);
                        ac = __helios__assetclass__new(mph_14, __helios__string__encode_utf8(uutName)());
                        __core__chooseUnit(__helios__print(__helios__string____add("  -- seeking input dgTkn: ", uutName)), __cond_7 = __helios__list[__helios__txinput]__find_safe(inputs_1)((i_10) -> {
                            __helios__bool__and(() -> {
                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_10)), needsAddrWithCred)
                            }, () -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(ac), 0)
                            })
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txinput]__some____is(__cond_7),
                            () -> {
                                (foundGood) -> {
                                    __core__chooseUnit(__helios__print("  \u2705 \u27A1\uFE0F  \u{1F481} found ^ input dgTkn"), foundGood)
                                }
                            },
                            () -> {
                                (__lhs_0_7) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            __helios__error(__helios__string____add("_\u274C \u27A1\uFE0F  \u{1F481} missing req'd input dgTkn (at script addr) ", uutName))
                                        },
                                        () -> {
                                            () -> {
                                                __core__chooseUnit(__helios__print(" <- \u{1F6AB} \u27A1\uFE0F \u{1F481} no input with ^ dgTkn; not req'd; returning false
"), __helios__option[__helios__txinput]__none____new())
                                            }()
                                        }
                                    )()
                                }
                            }
                        )()(__cond_7))
                    }
                }
            )()(__cond_6)
        }
    };
    __helios__option[__helios__validatorhash]__some____is = (data_165) -> {
        __helios__common__enum_tag_equals(data_165, 0)
    };
    __helios__option[__helios__txoutput]__some____is = (data_166) -> {
        __helios__common__enum_tag_equals(data_166, 0)
    };
    __helios__list[__helios__txoutput]__find_safe = (self_146) -> {
        (fn_18) -> {
            __helios__common__find_safe(self_146, (item_9) -> {
                fn_18(__helios__txoutput__from_data(item_9))
            }, __helios__common__identity)
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_147) -> {
        (mph_15, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {
            required_3 = __core__ifThenElse(
                __useopt__required_1,
                () -> {
                    required_2
                },
                () -> {
                    true
                }
            )();
            createdOrReturned_1 = __core__ifThenElse(
                __useopt__createdOrReturned,
                () -> {
                    createdOrReturned
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __lhs_0_9 = self_147;
            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_9);
            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_9);
            ac_1 = __helios__assetclass__new(mph_15, __helios__string__encode_utf8(uut)());
            (cOrR) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u{1F50E} \u{1F481} expect dgTkn ", cOrR), ": "), uut)), (hasDelegate) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__and(() -> {
                            __helios__bool____not(hasDelegate)
                        }, () -> {
                            required_3
                        }),
                        () -> {
                            __cond_11 = createdOrReturned_1;
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_11),
                                () -> {
                                    (__lhs_0_18) -> {
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not created: ", uut))
                                    }
                                },
                                () -> {
                                    (__lhs_0_16) -> {
                                        __lhs_0_17 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(self_147)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_15, true, true);
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not returned: ", uut))
                                    }
                                }
                            )()(__cond_11)
                        },
                        () -> {
                            () -> {
                                __core__ifThenElse(
                                    hasDelegate,
                                    () -> {
                                        __helios__print(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u2705 \u{1F481} ok:  ^ dgTkn has ", cOrR), " a valid output
"))
                                    },
                                    () -> {
                                        () -> {
                                            __helios__print(" \u2B05\uFE0F \u{1F6AB} \u{1F481} no delegate but not req'd; false")
                                        }()
                                    }
                                )()
                            }()
                        }
                    )(), hasDelegate)
                }(__cond_9 = validatorHash;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_9),
                    () -> {
                        (__lhs_0_15) -> {
                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_15);
                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("  ... ^ sent to validator: ", __helios__validatorhash__show(vh_3)()), "
")), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))
                        }
                    },
                    () -> {
                        (__lhs_0_12) -> {
                            __core__chooseUnit(__helios__print("   (to anywhere)"), __cond_10 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_10),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10))
                        }
                    }
                )()(__cond_9)))
            }(__cond_8 = createdOrReturned_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_8),
                () -> {
                    (__lhs_0_11) -> {
                        "returned"
                    }
                },
                () -> {
                    (__lhs_0_10) -> {
                        "created"
                    }
                }
            )()(__cond_8))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_167) -> {
        __core__chooseData(data_167, () -> {
            pair_48 = __core__unConstrData__safe(data_167);
            index_8 = __core__fstPair(pair_48);
            fields_96 = __core__sndPair(pair_48);
            __core__ifThenElse(
                __core__equalsInteger(index_8, 0),
                () -> {
                    __core__chooseList(fields_96, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_96), () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_96))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_8, 1),
                        () -> {
                            __core__chooseList(fields_96, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_168) -> {
        __core__chooseData(data_168, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_97 = __core__unListData__safe(data_168);
            __core__chooseList(fields_97, () -> {
                false
            }, () -> {
                head_52 = __core__headList__safe(fields_97);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(head_52),
                    () -> {
                        fields_98 = __core__tailList__safe(fields_97);
                        __core__chooseList(fields_98, () -> {
                            false
                        }, () -> {
                            head_53 = __core__headList__safe(fields_98);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_53),
                                () -> {
                                    fields_99 = __core__tailList__safe(fields_98);
                                    __core__chooseList(fields_99, () -> {
                                        false
                                    }, () -> {
                                        head_54 = __core__headList__safe(fields_99);
                                        __core__ifThenElse(
                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_54),
                                            () -> {
                                                fields_100 = __core__tailList__safe(fields_99);
                                                __core__chooseList(fields_100, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data = (data_169) -> {
        ignore_8 = __core__ifThenElse(
            __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(data_169),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid PendingDelegateChange data", ())
            }
        )();
        __core__unListData(data_169)
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__action = (self_148) -> {
        __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(__helios__common__struct_field_0(self_148))
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__role = (self_149) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_149))
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_170) -> {
        __8 = __core__ifThenElse(
            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(data_170),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_170
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink = (self_150) -> {
        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__struct_field_2(self_150))
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {
        (data_171) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_171),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_171),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__from_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1) -> {
        (data_172) -> {
            ignore_9 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(data_172),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingCharterChange data", ())
                }
            )();
            data_172
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is = (data_173) -> {
        __helios__common__enum_tag_equals(data_173, 0)
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2 = (data_174) -> {
        __core__chooseData(data_174, () -> {
            pair_49 = __core__unConstrData__safe(data_174);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_49), 0),
                () -> {
                    data_175 = __core__listData(__core__sndPair(pair_49));
                    __core__chooseData(data_175, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_101 = __core__unListData__safe(data_175);
                        __core__chooseList(fields_101, () -> {
                            false
                        }, () -> {
                            head_55 = __core__headList__safe(fields_101);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_55),
                                () -> {
                                    fields_102 = __core__tailList__safe(fields_101);
                                    __core__chooseList(fields_102, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change = (self_151) -> {
        __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data(__helios__common__enum_field_0(self_151))
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_16) -> {
        recurse_75 = (recurse_74, lst_17) -> {
            __core__chooseList(lst_17, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__core__headList__safe(lst_17)),
                    () -> {
                        recurse_74(recurse_74, __core__tailList__safe(lst_17))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_75(recurse_75, lst_16)
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_176) -> {
        __core__chooseData(data_176, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_176))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2 = (data_177) -> {
        __core__chooseData(data_177, () -> {
            pair_50 = __core__unConstrData__safe(data_177);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_50), 1),
                () -> {
                    data_178 = __core__listData(__core__sndPair(pair_50));
                    __core__chooseData(data_178, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_103 = __core__unListData__safe(data_178);
                        __core__chooseList(fields_103, () -> {
                            false
                        }, () -> {
                            head_56 = __core__headList__safe(fields_103);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_56),
                                () -> {
                                    fields_104 = __core__tailList__safe(fields_103);
                                    __core__chooseList(fields_104, () -> {
                                        false
                                    }, () -> {
                                        head_57 = __core__headList__safe(fields_104);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_57),
                                            () -> {
                                                fields_105 = __core__tailList__safe(fields_104);
                                                __core__chooseList(fields_105, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data = (data_179) -> {
        __core__chooseData(data_179, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_106 = __core__unListData__safe(data_179);
            __core__chooseList(fields_106, () -> {
                false
            }, () -> {
                head_58 = __core__headList__safe(fields_106);
                __core__ifThenElse(
                    __helios__address__is_valid_data(head_58),
                    () -> {
                        fields_107 = __core__tailList__safe(fields_106);
                        __core__chooseList(fields_107, () -> {
                            false
                        }, () -> {
                            head_59 = __core__headList__safe(fields_107);
                            __core__ifThenElse(
                                __helios__mintingpolicyhash__is_valid_data(head_59),
                                () -> {
                                    fields_108 = __core__tailList__safe(fields_107);
                                    __core__chooseList(fields_108, () -> {
                                        false
                                    }, () -> {
                                        head_60 = __core__headList__safe(fields_108);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_60),
                                            () -> {
                                                fields_109 = __core__tailList__safe(fields_108);
                                                __core__chooseList(fields_109, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__from_data = (data_180) -> {
        ignore_10 = __core__ifThenElse(
            __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(data_180),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid DelegationDetail data", ())
            }
        )();
        __core__unListData(data_180)
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__mph = (self_152) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_1(self_152))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__tn = (self_153) -> {
        __helios__bytearray__from_data(__helios__common__struct_field_2(self_153))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken = (self_154) -> {
        () -> {
            __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(self_154), __module__CapoDelegateHelpers__DelegationDetail[]__tn(self_154))
        }
    };
    __helios__list[__helios__txinput]__any = (self_155) -> {
        (fn_19) -> {
            __helios__common__any(self_155, (item_10) -> {
                fn_19(__helios__txinput__from_data(item_10))
            })
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {
        (data_181) -> {
            __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_181),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_181),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_181),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_181),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_181),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__from_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1) -> {
        (data_182) -> {
            ignore_11 = __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)(data_182),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestEntryType data", ())
                }
            )();
            data_182
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is = (data_183) -> {
        __helios__common__enum_tag_equals(data_183, 0)
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2 = (data_184) -> {
        __core__chooseData(data_184, () -> {
            pair_51 = __core__unConstrData__safe(data_184);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_51), 0),
                () -> {
                    data_185 = __core__listData(__core__sndPair(pair_51));
                    __core__chooseData(data_185, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_110 = __core__unListData__safe(data_185);
                        __core__chooseList(fields_110, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is = (data_186) -> {
        __helios__common__enum_tag_equals(data_186, 1)
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2 = (data_187) -> {
        __core__chooseData(data_187, () -> {
            pair_52 = __core__unConstrData__safe(data_187);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_52), 1),
                () -> {
                    data_188 = __core__listData(__core__sndPair(pair_52));
                    __core__chooseData(data_188, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_111 = __core__unListData__safe(data_188);
                        __core__chooseList(fields_111, () -> {
                            false
                        }, () -> {
                            head_61 = __core__headList__safe(fields_111);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_61),
                                () -> {
                                    fields_112 = __core__tailList__safe(fields_111);
                                    __core__chooseList(fields_112, () -> {
                                        false
                                    }, () -> {
                                        head_62 = __core__headList__safe(fields_112);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_62),
                                            () -> {
                                                fields_113 = __core__tailList__safe(fields_112);
                                                __core__chooseList(fields_113, () -> {
                                                    false
                                                }, () -> {
                                                    head_63 = __core__headList__safe(fields_113);
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(head_63),
                                                        () -> {
                                                            fields_114 = __core__tailList__safe(fields_113);
                                                            __core__chooseList(fields_114, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink = (self_156) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_156))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix = (self_157) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_157))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount = (self_158) -> {
        __helios__int__from_data(__helios__common__enum_field_2(self_158))
    };
    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2 = (data_189) -> {
        __core__chooseData(data_189, () -> {
            pair_53 = __core__unConstrData__safe(data_189);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_53), 2),
                () -> {
                    data_190 = __core__listData(__core__sndPair(pair_53));
                    __core__chooseData(data_190, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_115 = __core__unListData__safe(data_190);
                        __core__chooseList(fields_115, () -> {
                            false
                        }, () -> {
                            head_64 = __core__headList__safe(fields_115);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_64),
                                () -> {
                                    fields_116 = __core__tailList__safe(fields_115);
                                    __core__chooseList(fields_116, () -> {
                                        false
                                    }, () -> {
                                        head_65 = __core__headList__safe(fields_116);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_65),
                                            () -> {
                                                fields_117 = __core__tailList__safe(fields_116);
                                                __core__chooseList(fields_117, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2 = (data_191) -> {
        __core__chooseData(data_191, () -> {
            pair_54 = __core__unConstrData__safe(data_191);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_54), 3),
                () -> {
                    data_192 = __core__listData(__core__sndPair(pair_54));
                    __core__chooseData(data_192, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_118 = __core__unListData__safe(data_192);
                        __core__chooseList(fields_118, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2 = (data_193) -> {
        __core__chooseData(data_193, () -> {
            pair_55 = __core__unConstrData__safe(data_193);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_55), 4),
                () -> {
                    data_194 = __core__listData(__core__sndPair(pair_55));
                    __core__chooseData(data_194, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_119 = __core__unListData__safe(data_194);
                        __core__chooseList(fields_119, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_195) -> {
        __core__chooseData(data_195, () -> {
            pair_56 = __core__unConstrData__safe(data_195);
            index_9 = __core__fstPair(pair_56);
            fields_120 = __core__sndPair(pair_56);
            __core__ifThenElse(
                __core__equalsInteger(index_9, 0),
                () -> {
                    __core__chooseList(fields_120, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_120), () -> {
                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_120))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_9, 1),
                        () -> {
                            __core__chooseList(fields_120, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_196) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_196, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_196, __core__bData(#746e), __helios__bytearray__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_196, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)),
                            () -> {
                                true
                            },
                            () -> {
                                __core__trace("Warning: invalid data in CapoManifestEntry.tpe", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in CapoManifestEntry.tn", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in CapoManifestEntry.mph", () -> {
                    false
                })()
            }
        )()
    };
    __module__CapoHelpers__CapoManifestEntry[]__from_data = (data_197) -> {
        ignore_12 = __core__ifThenElse(
            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(data_197),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", ())
            }
        )();
        data_197
    };
    __module__CapoHelpers__CapoManifestEntry[]__entryType = (self_159) -> {
        __module__CapoHelpers__ManifestEntryType[]__from_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)(__helios__common__mStruct_field(self_159, #747065))
    };
    __module__CapoHelpers__CapoManifestEntry[]__tokenName = (self_160) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_160, #746e))
    };
    __helios__option[__helios__mintingpolicyhash]__from_data = (data_198) -> {
        __9 = __core__ifThenElse(
            __helios__option[__helios__mintingpolicyhash]__is_valid_data(data_198),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_198
    };
    __module__CapoHelpers__CapoManifestEntry[]__mph = (self_161) -> {
        __helios__option[__helios__mintingpolicyhash]__from_data(__helios__common__mStruct_field(self_161, #6d7068))
    };
    __helios__option[__helios__mintingpolicyhash]__some____is = (data_199) -> {
        __helios__common__enum_tag_equals(data_199, 0)
    };
    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {
        (data_200) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_200),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_200),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_200),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {
        (data_201) -> {
            ignore_13 = __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_201),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoDatum data", ())
                }
            )();
            data_201
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_18) -> {
        recurse_77 = (recurse_76, lst_19) -> {
            __core__chooseList(lst_19, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_19)),
                    () -> {
                        recurse_76(recurse_76, __core__tailList__safe(lst_19))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_77(recurse_77, lst_18)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_202) -> {
        __core__chooseData(data_202, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_202))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_23) -> {
        recurse_79 = (recurse_78, map_24) -> {
            __core__chooseList(map_24, () -> {
                true
            }, () -> {
                head_66 = __core__headList__safe(map_24);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_66)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_66)),
                            () -> {
                                recurse_78(recurse_78, __core__tailList__safe(map_24))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_79(recurse_79, map_23)
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_203) -> {
        __core__chooseData(data_203, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_203))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_25) -> {
        recurse_81 = (recurse_80, map_26) -> {
            __core__chooseList(map_26, () -> {
                true
            }, () -> {
                head_67 = __core__headList__safe(map_26);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_67)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_67)),
                            () -> {
                                recurse_80(recurse_80, __core__tailList__safe(map_26))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_81(recurse_81, map_25)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_204) -> {
        __core__chooseData(data_204, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_204))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_20) -> {
        recurse_83 = (recurse_82, lst_21) -> {
            __core__chooseList(lst_21, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList__safe(lst_21)),
                    () -> {
                        recurse_82(recurse_82, __core__tailList__safe(lst_21))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_83(recurse_83, lst_20)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_205) -> {
        __core__chooseData(data_205, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_205))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_206) -> {
        __core__chooseData(data_206, () -> {
            pair_57 = __core__unConstrData__safe(data_206);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_57), 0),
                () -> {
                    data_207 = __core__listData(__core__sndPair(pair_57));
                    __core__chooseData(data_207, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_121 = __core__unListData__safe(data_207);
                        __core__chooseList(fields_121, () -> {
                            false
                        }, () -> {
                            head_68 = __core__headList__safe(fields_121);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_68),
                                () -> {
                                    fields_122 = __core__tailList__safe(fields_121);
                                    __core__chooseList(fields_122, () -> {
                                        false
                                    }, () -> {
                                        head_69 = __core__headList__safe(fields_122);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_69),
                                            () -> {
                                                fields_123 = __core__tailList__safe(fields_122);
                                                __core__chooseList(fields_123, () -> {
                                                    false
                                                }, () -> {
                                                    head_70 = __core__headList__safe(fields_123);
                                                    __core__ifThenElse(
                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_70),
                                                        () -> {
                                                            fields_124 = __core__tailList__safe(fields_123);
                                                            __core__chooseList(fields_124, () -> {
                                                                false
                                                            }, () -> {
                                                                head_71 = __core__headList__safe(fields_124);
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_71),
                                                                    () -> {
                                                                        fields_125 = __core__tailList__safe(fields_124);
                                                                        __core__chooseList(fields_125, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            head_72 = __core__headList__safe(fields_125);
                                                                            __core__ifThenElse(
                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_72),
                                                                                () -> {
                                                                                    fields_126 = __core__tailList__safe(fields_125);
                                                                                    __core__chooseList(fields_126, () -> {
                                                                                        false
                                                                                    }, () -> {
                                                                                        head_73 = __core__headList__safe(fields_126);
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_73),
                                                                                            () -> {
                                                                                                fields_127 = __core__tailList__safe(fields_126);
                                                                                                __core__chooseList(fields_127, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    head_74 = __core__headList__safe(fields_127);
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_74),
                                                                                                        () -> {
                                                                                                            fields_128 = __core__tailList__safe(fields_127);
                                                                                                            __core__chooseList(fields_128, () -> {
                                                                                                                false
                                                                                                            }, () -> {
                                                                                                                head_75 = __core__headList__safe(fields_128);
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_75),
                                                                                                                    () -> {
                                                                                                                        fields_129 = __core__tailList__safe(fields_128);
                                                                                                                        __core__chooseList(fields_129, true, false)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })()
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_208) -> {
        ignore_14 = __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_208),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CharterData data", ())
            }
        )();
        data_208
    };
    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;
    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_162) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_162))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_209) -> {
        lst_22 = __core__unListData(data_209);
        __10 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_22),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_22
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_163) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_163))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_210) -> {
        map_27 = __core__unMapData(data_210);
        __11 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_27),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_27
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_164) -> {
        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_164))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_165) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_165))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_166) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_166))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_167) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_167))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_211) -> {
        map_28 = __core__unMapData(data_211);
        __12 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_28),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_28
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_168) -> {
        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_168))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_212) -> {
        lst_23 = __core__unListData(data_212);
        __13 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_23
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_169) -> {
        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_169))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;
    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_213) -> {
        __core__chooseData(data_213, () -> {
            pair_58 = __core__unConstrData__safe(data_213);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_58), 1),
                () -> {
                    data_214 = __core__listData(__core__sndPair(pair_58));
                    __core__chooseData(data_214, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_130 = __core__unListData__safe(data_214);
                        __core__chooseList(fields_130, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_215) -> {
        __helios__common__enum_tag_equals(data_215, 2)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_29) -> {
        recurse_85 = (recurse_84, map_30) -> {
            __core__chooseList(map_30, () -> {
                true
            }, () -> {
                head_76 = __core__headList__safe(map_30);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_76)),
                    () -> {
                        __core__ifThenElse(
                            __helios__data__is_valid_data(__core__sndPair(head_76)),
                            () -> {
                                recurse_84(recurse_84, __core__tailList__safe(map_30))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_85(recurse_85, map_29)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_216) -> {
        __core__chooseData(data_216, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_216))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_217) -> {
        __core__chooseData(data_217, () -> {
            pair_59 = __core__unConstrData__safe(data_217);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_59), 2),
                () -> {
                    data_218 = __core__listData(__core__sndPair(pair_59));
                    __core__chooseData(data_218, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_131 = __core__unListData__safe(data_218);
                        __core__chooseList(fields_131, () -> {
                            false
                        }, () -> {
                            head_77 = __core__headList__safe(fields_131);
                            __core__ifThenElse(
                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_77),
                                () -> {
                                    fields_132 = __core__tailList__safe(fields_131);
                                    __core__chooseList(fields_132, () -> {
                                        false
                                    }, () -> {
                                        head_78 = __core__headList__safe(fields_132);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_78),
                                            () -> {
                                                fields_133 = __core__tailList__safe(fields_132);
                                                __core__chooseList(fields_133, () -> {
                                                    false
                                                }, () -> {
                                                    head_79 = __core__headList__safe(fields_133);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_79),
                                                        () -> {
                                                            fields_134 = __core__tailList__safe(fields_133);
                                                            __core__chooseList(fields_134, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;
    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {
        (data_219) -> {
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_219),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_219),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_219),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {
        (data_220) -> {
            ignore_15 = __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_220),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid cctx_CharterInputType data", ())
                }
            )();
            data_220
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_221) -> {
        __helios__common__enum_tag_equals(data_221, 0)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_222) -> {
        __core__chooseData(data_222, () -> {
            pair_60 = __core__unConstrData__safe(data_222);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_60), 0),
                () -> {
                    data_223 = __core__listData(__core__sndPair(pair_60));
                    __core__chooseData(data_223, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_135 = __core__unListData__safe(data_223);
                        __core__chooseList(fields_135, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_224) -> {
        __helios__common__enum_tag_equals(data_224, 1)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_225) -> {
        __core__chooseData(data_225, () -> {
            pair_61 = __core__unConstrData__safe(data_225);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_61), 1),
                () -> {
                    data_226 = __core__listData(__core__sndPair(pair_61));
                    __core__chooseData(data_226, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_136 = __core__unListData__safe(data_226);
                        __core__chooseList(fields_136, () -> {
                            false
                        }, () -> {
                            head_80 = __core__headList__safe(fields_136);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_80),
                                () -> {
                                    fields_137 = __core__tailList__safe(fields_136);
                                    __core__chooseList(fields_137, () -> {
                                        false
                                    }, () -> {
                                        head_81 = __core__headList__safe(fields_137);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_81),
                                            () -> {
                                                fields_138 = __core__tailList__safe(fields_137);
                                                __core__chooseList(fields_138, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_170) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_170))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_171) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_171))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo) -> {
        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo), __core__mkNilData(()))))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_227) -> {
        __helios__common__enum_tag_equals(data_227, 2)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_228) -> {
        __core__chooseData(data_228, () -> {
            pair_62 = __core__unConstrData__safe(data_228);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_62), 2),
                () -> {
                    data_229 = __core__listData(__core__sndPair(pair_62));
                    __core__chooseData(data_229, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_139 = __core__unListData__safe(data_229);
                        __core__chooseList(fields_139, () -> {
                            false
                        }, () -> {
                            head_82 = __core__headList__safe(fields_139);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_82),
                                () -> {
                                    fields_140 = __core__tailList__safe(fields_139);
                                    __core__chooseList(fields_140, () -> {
                                        false
                                    }, () -> {
                                        head_83 = __core__headList__safe(fields_140);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_83),
                                            () -> {
                                                fields_141 = __core__tailList__safe(fields_140);
                                                __core__chooseList(fields_141, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_172) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_172))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_173) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_173))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_1) -> {
        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))
    };
    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {
        (data_230) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_230),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_230),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_230),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_230),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_230),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_230),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {
        (data_231) -> {
            ignore_16 = __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_231),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoActivity data", ())
                }
            )();
            data_231
        }
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_232) -> {
        __helios__common__enum_tag_equals(data_232, 0)
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_233) -> {
        __core__chooseData(data_233, () -> {
            pair_63 = __core__unConstrData__safe(data_233);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_63), 0),
                () -> {
                    data_234 = __core__listData(__core__sndPair(pair_63));
                    __core__chooseData(data_234, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_142 = __core__unListData__safe(data_234);
                        __core__chooseList(fields_142, () -> {
                            false
                        }, () -> {
                            head_84 = __core__headList__safe(fields_142);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_84),
                                () -> {
                                    fields_143 = __core__tailList__safe(fields_142);
                                    __core__chooseList(fields_143, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_174) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_174))
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_235) -> {
        __helios__common__enum_tag_equals(data_235, 1)
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_236) -> {
        __core__chooseData(data_236, () -> {
            pair_64 = __core__unConstrData__safe(data_236);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_64), 1),
                () -> {
                    data_237 = __core__listData(__core__sndPair(pair_64));
                    __core__chooseData(data_237, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_144 = __core__unListData__safe(data_237);
                        __core__chooseList(fields_144, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_238) -> {
        __helios__common__enum_tag_equals(data_238, 2)
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_239) -> {
        __core__chooseData(data_239, () -> {
            pair_65 = __core__unConstrData__safe(data_239);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_65), 2),
                () -> {
                    data_240 = __core__listData(__core__sndPair(pair_65));
                    __core__chooseData(data_240, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_145 = __core__unListData__safe(data_240);
                        __core__chooseList(fields_145, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_241) -> {
        __helios__common__enum_tag_equals(data_241, 3)
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_242) -> {
        __core__chooseData(data_242, () -> {
            pair_66 = __core__unConstrData__safe(data_242);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_66), 3),
                () -> {
                    data_243 = __core__listData(__core__sndPair(pair_66));
                    __core__chooseData(data_243, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_146 = __core__unListData__safe(data_243);
                        __core__chooseList(fields_146, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_244) -> {
        __helios__common__enum_tag_equals(data_244, 4)
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_245) -> {
        __core__chooseData(data_245, () -> {
            pair_67 = __core__unConstrData__safe(data_245);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_67), 4),
                () -> {
                    data_246 = __core__listData(__core__sndPair(pair_67));
                    __core__chooseData(data_246, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_147 = __core__unListData__safe(data_246);
                        __core__chooseList(fields_147, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_247) -> {
        __helios__common__enum_tag_equals(data_247, 5)
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_248) -> {
        __core__chooseData(data_248, () -> {
            pair_68 = __core__unConstrData__safe(data_248);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_68), 5),
                () -> {
                    data_249 = __core__listData(__core__sndPair(pair_68));
                    __core__chooseData(data_249, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_148 = __core__unListData__safe(data_249);
                        __core__chooseList(fields_148, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__getRefCharterUtxo = (mph_16) -> {
        charterAc = __helios__assetclass__new(mph_16, __helios__string__encode_utf8("charter")());
        hasCharter = (txin) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)
        };
        __core__chooseUnit(__helios__print("getting ref_input for charter
"), (charterUtxo) -> {
            charterUtxo
        }(__cond_12 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_12),
            () -> {
                (__lhs_0_20) -> {
                    ch = __helios__option[__helios__txinput]__some__some(__lhs_0_20);
                    ch
                }
            },
            () -> {
                (__lhs_0_19) -> {
                    __helios__error("Missing charter in required ref_inputs (use tcxWithCharterRef(tcx) in txn building functions)")
                }
            }
        )()(__cond_12)))
    };
    __module__CapoHelpers__getTxCharterData = (mph_17, __useopt__refInputs, refInputs) -> {
        refInputs_1 = __core__ifThenElse(
            __useopt__refInputs,
            () -> {
                refInputs
            },
            () -> {
                __helios__tx__ref_inputs(__helios__scriptcontext__tx)
            }
        )();
        charterAc_1 = __helios__assetclass__new(mph_17, __helios__string__encode_utf8("charter")());
        hasCharter_1 = (txin_1) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)
        };
        (charterUtxo_1) -> {
            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);
            ctd
        }(__cond_13 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter_1);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_13),
            () -> {
                (__lhs_0_24) -> {
                    ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_24);
                    ch_2
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_1);
                    __core__ifThenElse(
                        __helios__option[__helios__txinput]__some____is(__cond_14),
                        () -> {
                            (__lhs_0_23) -> {
                                ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_23);
                                ch_1
                            }
                        },
                        () -> {
                            (__lhs_0_22) -> {
                                __helios__error("Missing charter inputs / ref_inputs")
                            }
                        }
                    )()(__cond_14)
                }
            }
        )()(__cond_13))
    };
    __helios__option[__helios__string]__is_valid_data = (data_250) -> {
        __core__chooseData(data_250, () -> {
            pair_69 = __core__unConstrData__safe(data_250);
            index_10 = __core__fstPair(pair_69);
            fields_149 = __core__sndPair(pair_69);
            __core__ifThenElse(
                __core__equalsInteger(index_10, 0),
                () -> {
                    __core__chooseList(fields_149, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_149), () -> {
                            __helios__string__is_valid_data(__core__headList__safe(fields_149))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_10, 1),
                        () -> {
                            __core__chooseList(fields_149, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__txinput]__is_valid_data = (data_251) -> {
        __core__chooseData(data_251, () -> {
            pair_70 = __core__unConstrData__safe(data_251);
            index_11 = __core__fstPair(pair_70);
            fields_150 = __core__sndPair(pair_70);
            __core__ifThenElse(
                __core__equalsInteger(index_11, 0),
                () -> {
                    __core__chooseList(fields_150, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_150), () -> {
                            __helios__txinput__is_valid_data(__core__headList__safe(fields_150))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_11, 1),
                        () -> {
                            __core__chooseList(fields_150, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__DelegateInput[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__DelegateInput[]__link = (self_175) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_175))
    };
    __module__CapoHelpers__DelegateInput[]__role = (self_176) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_176))
    };
    __helios__option[__helios__string]__from_data = (data_252) -> {
        __14 = __core__ifThenElse(
            __helios__option[__helios__string]__is_valid_data(data_252),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_252
    };
    __module__CapoHelpers__DelegateInput[]__idPrefix = (self_177) -> {
        __helios__option[__helios__string]__from_data(__helios__common__struct_field_2(self_177))
    };
    __helios__option[__helios__txinput]__from_data = (data_253) -> {
        __15 = __core__ifThenElse(
            __helios__option[__helios__txinput]__is_valid_data(data_253),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_253
    };
    __module__CapoHelpers__DelegateInput[]__input = (self_178) -> {
        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_178))
    };
    __module__CapoHelpers__DelegateInput[]__mph = (self_179) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_179))
    };
    __helios__option[__helios__string]____to_data = __helios__common__identity;
    __helios__option[__helios__txinput]____to_data = __helios__common__identity;
    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_18) -> {
        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_18), __core__mkNilData(()))))))
    };
    __helios__option[__helios__txinput]__unwrap = (self_180) -> {
        () -> {
            __helios__txinput__from_data(__helios__common__enum_field_0(self_180))
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_181) -> {
        () -> {
            i_11 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_181))();
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_11);
            __core__chooseUnit(__cond_15 = inputData;
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_15),
                () -> {
                    (__lhs_0_25) -> {
                        index_12 = __helios__data__constrdata__tag(__lhs_0_25);
                        fields_151 = __helios__data__constrdata__fields(__lhs_0_25);
                        __core__chooseUnit(__helios__print(__helios__string____add("    --\u{1F41E} generic delegate activity at index ", __helios__int__show(index_12)())), __cond_16 = __helios__list[__helios__data]__head(fields_151);
                        __core__ifThenElse(
                            __helios__data__constrdata____is(__cond_16),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __helios__data__constrdata__tag(__lhs_0_26);
                                    __helios__print(__helios__string____add("    --\u{1F41E} nested activity at index ", __helios__int__show(index2)()))
                                }
                            },
                            () -> {
                                (__17) -> {
                                    ()
                                }
                            }
                        )()(__cond_16))
                    }
                },
                () -> {
                    (__16) -> {
                        ()
                    }
                }
            )()(__cond_15), inputData)
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {
        (self_182) -> {
            () -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_182)())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__assert = (__module__CapoHelpers__DelegateInput[]__error) -> {
        (self_183) -> {
            (assertionOk, msg_3) -> {
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    true
                }, () -> {
                    __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_183)(), __module__CapoHelpers__DelegateInput[]__serialize(self_183)())
                }), msg_3), __core__ifThenElse(
                    assertionOk,
                    () -> {
                        __helios__assert(true, "")
                    },
                    () -> {
                        () -> {
                            __module__CapoHelpers__DelegateInput[]__error(self_183)(msg_3)
                        }()
                    }
                )())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__error_1 = (self_184) -> {
        (msg_4) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_184)(), __module__CapoHelpers__DelegateInput[]__serialize(self_184)())
            }), msg_4), __core__chooseUnit(__helios__print(__helios__string____add("\u26A0\uFE0F \u26A0\uFE0F \u26A0\uFE0F error executing policy for dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__DelegateInput[]__link(self_184)))), __core__chooseUnit(__helios__print(__helios__string____add("     ---- with input value: ", __helios__value__show(__helios__txinput__value(__helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_184))()))(false, ()))), __core__chooseUnit(__helios__print("
"), __helios__assert(false, msg_4)))))
        }
    };
    __helios__list[__helios__data]__get = (self_185) -> {
        (index_13) -> {
            recurse_87 = (recurse_86, self_186, i_12) -> {
                __core__chooseList(self_186, () -> {
                    __helios__error("index out of range")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_13, i_12),
                        () -> {
                            __core__headList__safe(self_186)
                        },
                        () -> {
                            recurse_86(recurse_86, __core__tailList__safe(self_186), __core__addInteger(i_12, 1))
                        }
                    )()
                })()
            };
            recurse_87(recurse_87, self_185, 0)
        }
    };
    __helios__list[__helios__data]__length = __helios__common__length;
    __helios__list[__helios__data]__filter = (self_187) -> {
        (fn_20) -> {
            __helios__common__filter_list(self_187, (item_11) -> {
                fn_20(__helios__data__from_data(item_11))
            })
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged) -> {
        (self_188) -> {
            (seed) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqSeededMinting: ensures the delegate is unchanged, so callers needn't.", false, ()), __cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_188)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_17),
                    () -> {
                        (__lhs_0_30) -> {
                            ma_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_30);
                            __core__chooseUnit(__cond_20 = ma_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_20),
                                () -> {
                                    (__lhs_0_31) -> {
                                        fields_153 = __helios__data__constrdata__fields(__lhs_0_31);
                                        __helios__assert(__helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__get(fields_153)(0))), "seed mismatch")
                                    }
                                },
                                () -> {
                                    (__21) -> {
                                        __helios__error("no way")
                                    }
                                }
                            )()(__cond_20), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_188)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_17),
                            () -> {
                                (__lhs_0_27) -> {
                                    activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_27);
                                    __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__list[__helios__data]__length(activities), 0), "no minting activities found"), foundWithThisSeed = __helios__list[__helios__data]__filter(activities)((a_16) -> {
                                        __cond_18 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_16);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_18),
                                            () -> {
                                                (__lhs_0_28) -> {
                                                    ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_28);
                                                    __cond_19 = ma;
                                                    __core__ifThenElse(
                                                        __helios__data__constrdata____is(__cond_19),
                                                        () -> {
                                                            (__lhs_0_29) -> {
                                                                index_14 = __helios__data__constrdata__tag(__lhs_0_29);
                                                                fields_152 = __helios__data__constrdata__fields(__lhs_0_29);
                                                                __core__chooseUnit(__helios__assert(__helios__int____eq(index_14, index_14), "no way c"), __helios__bool__and(() -> {
                                                                    __helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__head(fields_152)))
                                                                }, () -> {
                                                                    true
                                                                }))
                                                            }
                                                        },
                                                        () -> {
                                                            (__20) -> {
                                                                __helios__error("no way d")
                                                            }
                                                        }
                                                    )()(__cond_19)
                                                }
                                            },
                                            () -> {
                                                (__19) -> {
                                                    false
                                                }
                                            }
                                        )()(__cond_18)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate multi-activities must be minting with this seed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_188)(__helios__int____gt(__helios__list[__helios__data]__length(foundWithThisSeed), 0), "no minting activity found for seed!"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given seed is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_188)(__helios__int____eq(__helios__list[__helios__data]__length(foundWithThisSeed), 1), "multiple minting activities found for seed"), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_188)())))))
                                }
                            },
                            () -> {
                                (__18) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_188)("non-mint activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_17))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1) -> {
        (self_189) -> {
            (recId) -> {
                __core__chooseUnit(__cond_25 = __module__CapoHelpers__DelegateInput[]__role(self_189);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_25),
                    () -> {
                        (__lhs_0_40) -> {
                            __helios__print("ok, checking spending activity for a DgData Policy")
                        }
                    },
                    () -> {
                        (__26) -> {
                            __helios__error("withUniqueDDSpendingActivity: only valid for DgDataPolicy")
                        }
                    }
                )()(__cond_25), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("withUniqueDDSpendingActivity: checks presence of delegated-data controller's spending activity for recId", false, ()), strId = __helios__bytearray__decode_utf8(recId)();
                __core__chooseUnit(__helios__print(__helios__string____add("    -- recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("TEST THIS v"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spendDgt must be acting on the matching record-id", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the delegate is unchanged, so callers needn't also check that", false, ()), __cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_189)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_21),
                    () -> {
                        (__lhs_0_38) -> {
                            sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_38);
                            __core__chooseUnit(__cond_24 = sa_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_24),
                                () -> {
                                    (__lhs_0_39) -> {
                                        index_16 = __helios__data__constrdata__tag(__lhs_0_39);
                                        fields_155 = __helios__data__constrdata__fields(__lhs_0_39);
                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_16, index_16), "no way e"), foundRecId_1 = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_155));
                                        __core__ifThenElse(
                                            __helios__bytearray____neq(recId, foundRecId_1),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending:", strId)), __core__chooseUnit(__helios__print(__helios__string____add("  -- actual: Spending:", __helios__bytearray__show(foundRecId_1)())), __module__CapoHelpers__DelegateInput[]__error_1(self_189)("recId mismatch")))
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__print(__helios__string____add("  -- ok: DD controller spending activity for ", strId))
                                                }()
                                            }
                                        )())
                                    }
                                },
                                () -> {
                                    (__25) -> {
                                        __helios__error("no way f")
                                    }
                                }
                            )()(__cond_24), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_189)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_21),
                            () -> {
                                (__lhs_0_32) -> {
                                    activities_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_32);
                                    __core__chooseUnit(__helios__print("    -- multiple activities found
"), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_189)(__helios__int____gt(__helios__list[__helios__data]__length(activities_1), 0), "no spending activities found"), actsOnThisRecord = __helios__list[__helios__data]__filter(activities_1)((a_17) -> {
                                        __cond_22 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(a_17);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_22),
                                            () -> {
                                                (__lhs_0_37) -> {
                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("dgInput: withSpendingActivity: CreatingDelegatedData invalid"), __helios__error(""))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_22),
                                                    () -> {
                                                        (__lhs_0_36) -> {
                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("dgInput: withSpendingActivity: UpdatingDgData invalid; use a Spending variant in the delegated-data policy"), __helios__error(""))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_22),
                                                            () -> {
                                                                (__lhs_0_35) -> {
                                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("dgInput: withSpendingActivity: DeletingDelegatedData invalid"), __helios__error(""))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_22),
                                                                    () -> {
                                                                        (__lhs_0_33) -> {
                                                                            sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_33);
                                                                            __cond_23 = sa;
                                                                            __core__ifThenElse(
                                                                                __helios__data__constrdata____is(__cond_23),
                                                                                () -> {
                                                                                    (__lhs_0_34) -> {
                                                                                        index_15 = __helios__data__constrdata__tag(__lhs_0_34);
                                                                                        fields_154 = __helios__data__constrdata__fields(__lhs_0_34);
                                                                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_15, index_15), "no way h"), foundRecId = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_154));
                                                                                        __core__ifThenElse(
                                                                                            __helios__bytearray____neq(recId, foundRecId),
                                                                                            () -> {
                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending: ", strId)), __core__chooseUnit(__helios__print(__helios__string____add("
  -- actual: Spending: ", __helios__bytearray__show(foundRecId)())), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("recId mismatch"), __helios__error(""))))
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    true
                                                                                                }()
                                                                                            }
                                                                                        )())
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__24) -> {
                                                                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("wrong structure for spending activity"), __helios__error(""))
                                                                                    }
                                                                                }
                                                                            )()(__cond_23)
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__23) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(__cond_22)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate data-controller multi-activities must treat this recId", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_189)(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(actsOnThisRecord), 0))("dgt acting on this recId? "), __helios__string____add("no spending activity found for recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given recId is allowed", false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_189)(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(actsOnThisRecord), 1))("exactly one activity? "), __helios__string____add("multiple spending activities found for recId: ", strId)), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_189)()))))))
                                }
                            },
                            () -> {
                                (__22) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)("non-spend activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_21)))))))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_190) -> {
        () -> {
            __lhs_0_41 = self_190;
            link_1 = __module__CapoHelpers__DelegateInput[]__link(__lhs_0_41);
            input_1 = __module__CapoHelpers__DelegateInput[]__input(__lhs_0_41);
            mph_19 = __module__CapoHelpers__DelegateInput[]__mph(__lhs_0_41);
            __lhs_0_42 = link_1;
            uut_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_42);
            validatorHash_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_42);
            targetValue = __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken(link_1)(mph_19);
            (returnedUnchanged) -> {
                __core__chooseUnit(__helios__assert(returnedUnchanged, "no"), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1)(mph_19, false, (), false, ()), "no"), self_190))
            }(__cond_26 = validatorHash_1;
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__some____is(__cond_26),
                () -> {
                    (__lhs_0_44) -> {
                        vh_4 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_44);
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_190)(__helios__value__contains(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_4))(targetValue), __helios__string____add("dgTkn not returned: ", uut_1)), __cond_27 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o_1) -> {
                            __helios__bytearray____eq(__helios__txoutputdatum__serialize(__helios__txoutput__datum(o_1))(), __helios__txoutputdatum__serialize(__helios__txinput__datum(__helios__option[__helios__txinput]__unwrap(input_1)()))())
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txoutput]__some____is(__cond_27),
                            () -> {
                                (__lhs_0_46) -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add(" -- good, the dgTkn is unchanged: ", uut_1)), true)
                                }
                            },
                            () -> {
                                (__lhs_0_45) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_190)("dgt modified"), __helios__error(""))
                                }
                            }
                        )()(__cond_27))
                    }
                },
                () -> {
                    (__lhs_0_43) -> {
                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_190)("unchOut - no vh"), __helios__error(""))
                    }
                }
            )()(__cond_26))
        }
    };
    __module__CapoHelpers__DelegateInput[]__orFail = (self_191) -> {
        () -> {
            __lhs_0_47 = self_191;
            true
        }
    };
    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;
    __module__CapoHelpers__CapoCtx[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__CapoCtx[]__mph = (self_192) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_192))
    };
    __module__CapoHelpers__CapoCtx[]__charter = (self_193) -> {
        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_193))
    };
    __module__CapoHelpers__CapoCtx[]____new = (mph_20, charter) -> {
        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_20), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_194) -> {
        () -> {
            e = "requires charter as input";
            __cond_28 = __module__CapoHelpers__CapoCtx[]__charter(self_194);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_28),
                () -> {
                    (__lhs_0_56) -> {
                        __helios__error(e)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_28),
                        () -> {
                            (__lhs_0_55) -> {
                                __helios__error(e)
                            }
                        },
                        () -> {
                            (__lhs_0_48) -> {
                                utxo_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_48);
                                activity = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2));
                                wrongActivity = () -> {
                                    __core__ifThenElse(
                                        true,
                                        () -> {
                                            __helios__error("non-CharterData activity")
                                        },
                                        () -> {
                                            () -> {
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()
                                            }()
                                        }
                                    )()
                                };
                                __cond_29 = activity;
                                __core__ifThenElse(
                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_29),
                                    () -> {
                                        (__lhs_0_54) -> {
                                            wrongActivity()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_29),
                                            () -> {
                                                (__lhs_0_53) -> {
                                                    wrongActivity()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_29),
                                                    () -> {
                                                        (__lhs_0_52) -> {
                                                            activity
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_29),
                                                            () -> {
                                                                (__lhs_0_51) -> {
                                                                    activity
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_29),
                                                                    () -> {
                                                                        (__lhs_0_50) -> {
                                                                            activity
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_49) -> {
                                                                            activity
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_29)
                            }
                        }
                    )()
                }
            )()(__cond_28)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_195) -> {
        (key_14) -> {
            __helios__common__map_get(self_195, __helios__string____to_data(key_14), (x_5) -> {
                __core__constrData(0, __helios__common__list_1(x_5))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__findManifestEntry = (__module__CapoHelpers__CapoCtx[]__getCharterData) -> {
        (self_196) -> {
            (key_15) -> {
                __core__chooseUnit(__helios__print(__helios__string____add("    -- looking for capo's manifest entry: ", key_15)), charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData(self_196)(), 0);
                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData))(key_15))
            }
        }
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is = (data_254) -> {
        __helios__common__enum_tag_equals(data_254, 0)
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some = (self_197) -> {
        __module__CapoHelpers__CapoManifestEntry[]__from_data(__helios__common__enum_field_0(self_197))
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is = (data_255) -> {
        __helios__common__enum_tag_equals(data_255, 1)
    };
    __helios__option[__helios__bytearray]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bytearray]__some____new = (some_3) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bytearray____to_data(some_3)))
    };
    __module__CapoHelpers__CapoCtx[]__findManifestTokenName = (__module__CapoHelpers__CapoCtx[]__getCharterData_1) -> {
        (self_198) -> {
            (key_16, __useopt__required_2, required_4) -> {
                required_5 = __core__ifThenElse(
                    __useopt__required_2,
                    () -> {
                        required_4
                    },
                    () -> {
                        true
                    }
                )();
                oe = __module__CapoHelpers__CapoCtx[]__findManifestEntry(__module__CapoHelpers__CapoCtx[]__getCharterData_1)(self_198)(key_16);
                __cond_30 = oe;
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_30),
                    () -> {
                        (__lhs_0_58) -> {
                            __core__chooseUnit(__helios__assert(__helios__bool____not(required_5), __helios__string____add("missing required manifest entry: ", key_16)), __helios__option[__helios__bytearray]__none____new())
                        }
                    },
                    () -> {
                        (__lhs_0_57) -> {
                            e_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_57);
                            __helios__option[__helios__bytearray]__some____new(__module__CapoHelpers__CapoManifestEntry[]__tokenName(e_1))
                        }
                    }
                )()(__cond_30)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getSettingsId = (__module__CapoHelpers__CapoCtx[]__getCharterData_2) -> {
        (self_199) -> {
            (__useopt__required_3, required_6) -> {
                required_7 = __core__ifThenElse(
                    __useopt__required_3,
                    () -> {
                        required_6
                    },
                    () -> {
                        true
                    }
                )();
                __module__CapoHelpers__CapoCtx[]__findManifestTokenName(__module__CapoHelpers__CapoCtx[]__getCharterData_2)(self_199)("currentSettings", true, required_7)
            }
        }
    };
    __helios__option[__helios__txoutput]__some__some = (self_200) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_200))
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3) -> {
        (self_201) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must have the Capo's govAuthority approval", false, ()), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData_3(self_201)()))(__module__CapoHelpers__CapoCtx[]__mph(self_201), false, (), false, ()), "no way m"), self_201))
            }
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_256) -> {
        __helios__common__enum_tag_equals(data_256, 1)
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_202) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_202))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_203) -> {
        (key_17) -> {
            __helios__common__map_get(self_203, __helios__string____to_data(key_17), (x_6) -> {
                __core__constrData(0, __helios__common__list_1(x_6))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__option[__helios__string]__some____new = (some_4) -> {
        __core__constrData(0, __helios__common__list_1(__helios__string____to_data(some_4)))
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput) -> {
        (self_204) -> {
            (typeName, __useopt__required_4, required_8) -> {
                required_9 = __core__ifThenElse(
                    __useopt__required_4,
                    () -> {
                        required_8
                    },
                    () -> {
                        true
                    }
                )();
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- requiresDgDataPolicyInput(): locates the manifest's data-policy for this record-type", false, ()), __cond_31 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_4(self_204)()))(typeName);
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_31),
                    () -> {
                        (__lhs_0_61) -> {
                            __helios__error(__helios__string____add(__helios__string____add("missing data-policy manifest for record-type '", typeName), "'"))
                        }
                    },
                    () -> {
                        (__lhs_0_59) -> {
                            entry = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_59);
                            __cond_32 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry);
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_32),
                                () -> {
                                    (__lhs_0_60) -> {
                                        policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_60);
                                        idPrefix_2 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_60);
                                        (callback_8) -> {
                                            callback_8(policyLink, idPrefix_2)
                                        }
                                    }
                                },
                                () -> {
                                    (__27) -> {
                                        __helios__error(__helios__string____add("manifest entry is not a data policy: ", typeName))
                                    }
                                }
                            )()(__cond_32)((dgtLink, idPrefix_1) -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(__helios__string____add("requires the delegated-data policy for type=", typeName), false, ()), __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_204)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new(typeName), true, required_9, true, __helios__option[__helios__string]__some____new(idPrefix_1)))
                            })
                        }
                    }
                )()(__cond_31))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5) -> {
        (self_205) -> {
            (__useopt__required_5, required_10) -> {
                required_11 = __core__ifThenElse(
                    __useopt__required_5,
                    () -> {
                        required_10
                    },
                    () -> {
                        true
                    }
                )();
                input_2 = __helios__scriptcontext__get_current_input();
                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_205)()))(__module__CapoHelpers__CapoCtx[]__mph(self_205));
                isUsingMintDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_2))(acMintDgt), 0))("    -- acting on mintDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingMintDgt
                }, () -> {
                    __helios__bool____not(required_11)
                }), "not acting as mint delegate!"), isUsingMintDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6) -> {
        (self_206) -> {
            (__useopt__required_6, required_12) -> {
                required_13 = __core__ifThenElse(
                    __useopt__required_6,
                    () -> {
                        required_12
                    },
                    () -> {
                        true
                    }
                )();
                input_3 = __helios__scriptcontext__get_current_input();
                acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_6(self_206)()))(__module__CapoHelpers__CapoCtx[]__mph(self_206));
                isUsingSpendDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_3))(acSpendDgt), 0))("    -- acting on spendDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingSpendDgt
                }, () -> {
                    __helios__bool____not(required_13)
                }), "not acting as spend delegate!"), isUsingSpendDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_207) -> {
        () -> {
            __cond_33 = __module__CapoHelpers__CapoCtx[]__charter(self_207);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_33),
                () -> {
                    (__lhs_0_63) -> {
                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_63);
                        datum_3
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_33),
                        () -> {
                            (__lhs_0_62) -> {
                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_62);
                                datum_2
                            }
                        },
                        () -> {
                            (__28) -> {
                                __helios__error("CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first")
                            }
                        }
                    )()
                }
            )()(__cond_33)
        }
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address) -> {
        (self_208) -> {
            () -> {
                charterAc_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_208), __helios__string__encode_utf8("charter")());
                capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_208)();
                __cond_34 = __module__CapoHelpers__CapoCtx[]__charter(self_208);
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_34),
                    () -> {
                        (__lhs_0_64) -> {
                            charterData_1 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo) -> {
                                __helios__bool__and(() -> {
                                    __helios__address____eq(__helios__txoutput__address(txo), capoAddr)
                                }, () -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo))(charterAc_2), 0)
                                })
                            })))), 0);
                            charterData_1
                        }
                    },
                    () -> {
                        (__29) -> {
                            __helios__error("CapoCtx.getNextCharterData(): invalid except with charter strategy Input")
                        }
                    }
                )()(__cond_34)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1 = (self_209) -> {
        () -> {
            __cond_35 = __module__CapoHelpers__CapoCtx[]__charter(self_209);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_35),
                () -> {
                    (__lhs_0_66) -> {
                        utxo_4 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_66);
                        utxo_4
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_35),
                        () -> {
                            (__lhs_0_65) -> {
                                utxo_3 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_65);
                                utxo_3
                            }
                        },
                        () -> {
                            (__30) -> {
                                __helios__error("CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first")
                            }
                        }
                    )()
                }
            )()(__cond_35)
        }
    };
    __helios__option[__helios__string]__none____new = () -> {
        __helios__option__NONE
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_210) -> {
        (dgtLink_1, role_1, __useopt__required_7, required_14, __useopt__idPrefix, idPrefix_3) -> {
            required_15 = __core__ifThenElse(
                __useopt__required_7,
                () -> {
                    required_14
                },
                () -> {
                    true
                }
            )();
            idPrefix_4 = __core__ifThenElse(
                __useopt__idPrefix,
                () -> {
                    idPrefix_3
                },
                () -> {
                    __helios__option[__helios__string]__none____new()
                }
            )();
            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_4, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_210), true, required_15), __module__CapoHelpers__CapoCtx[]__mph(self_210))
        }
    };
    __module__CapoHelpers__CapoCtx[]__address_1 = (self_211) -> {
        () -> {
            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_211)());
            addr
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataRef = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate) -> {
        (self_212) -> {
            (__useopt__recId, recId_1, __useopt__recIdBytes, recIdBytes) -> {
                recId_2 = __core__ifThenElse(
                    __useopt__recId,
                    () -> {
                        recId_1
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_1 = __core__ifThenElse(
                    __useopt__recIdBytes,
                    () -> {
                        recIdBytes
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_2)()
                    }
                )();
                hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate(self_212)(false, (), true, recIdBytes_1);
                recIdStr = __helios__bytearray__decode_utf8(recIdBytes_1)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting refDD ", recIdStr)), __cond_36 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasDD);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_36),
                    () -> {
                        (__lhs_0_68) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ refDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_67) -> {
                            txin_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_67);
                            __core__chooseUnit(__helios__print("\u2705 \u{1F4CE} ^ refDD: ok
"), txin_2)
                        }
                    }
                )()(__cond_36))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1) -> {
        (self_213) -> {
            (__useopt__recId_1, recId_3, __useopt__recIdBytes_1, recIdBytes_2) -> {
                recId_4 = __core__ifThenElse(
                    __useopt__recId_1,
                    () -> {
                        recId_3
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_3 = __core__ifThenElse(
                    __useopt__recIdBytes_1,
                    () -> {
                        recIdBytes_2
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_4)()
                    }
                )();
                hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1(self_213)(false, (), true, recIdBytes_3);
                recIdStr_1 = __helios__bytearray__decode_utf8(recIdBytes_3)();
                __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting inDD ", recIdStr_1)), __cond_37 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_1);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_37),
                    () -> {
                        (__lhs_0_70) -> {
                            __helios__error("\u274C\u274C \u{1F4CE} ^ inDD: not found
")
                        }
                    },
                    () -> {
                        (__lhs_0_69) -> {
                            txin_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_69);
                            __core__chooseUnit(__helios__print("    \u2705 \u{1F4CE} ^ inDD: ok
"), txin_3)
                        }
                    }
                )()(__cond_37))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_214) -> {
        (__useopt__typeName, typeName_1, __useopt__id, id_1) -> {
            typeName_2 = __core__ifThenElse(
                __useopt__typeName,
                () -> {
                    typeName_1
                },
                () -> {
                    ""
                }
            )();
            id_2 = __core__ifThenElse(
                __useopt__id,
                () -> {
                    id_1
                },
                () -> {
                    #
                }
            )();
            capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_1(self_214)();
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                __helios__int____gt(__helios__bytearray__length(id_2), 0)
            }, () -> {
                __helios__int____gt(__helios__bytearray__length(__helios__string__serialize(typeName_2)()), 0)
            }), "data predicate must have id or typeName"), (txin_4) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txinput__address(txin_4), capoAddr_1),
                    () -> {
                        data_257 = __helios__txoutputdatum__inline(__helios__txinput__datum(txin_4));
                        __cond_38 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_257);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_38),
                            () -> {
                                (__lhs_0_71) -> {
                                    x_7 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_257));
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            true
                                        }, () -> {
                                            __helios__bool__or(() -> {
                                                __helios__string____eq(typeName_2, "")
                                            }, () -> {
                                                __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_7), typeName_2)
                                            })
                                        })
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_2, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_7), id_2)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__31) -> {
                                    false
                                }
                            }
                        )()(__cond_38)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate = (self_215) -> {
        (typeName_3, __useopt__id_1, id_3) -> {
            id_4 = __core__ifThenElse(
                __useopt__id_1,
                () -> {
                    id_3
                },
                () -> {
                    #
                }
            )();
            capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_1(self_215)();
            (txo_1) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txoutput__address(txo_1), capoAddr_2),
                    () -> {
                        data_258 = __helios__txoutputdatum__inline(__helios__txoutput__datum(txo_1));
                        __cond_39 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_258);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_39),
                            () -> {
                                (__lhs_0_72) -> {
                                    x_8 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_258));
                                    __helios__bool__and(() -> {
                                        __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_8), typeName_3)
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_4, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_8), id_4)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__32) -> {
                                    false
                                }
                            }
                        )()(__cond_39)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput) -> {
        (self_216) -> {
            (newDataId, dataTypePurpose) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record is stored in the Capo address", false, ()), dgData = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_216)(newDataId)));
                dgDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(dgData);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- validates that the new record matches the type-name indicated in the dgDataPolicy manifest", false, ()), __cond_40 = dgDatum;
                __core__ifThenElse(
                    __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_40),
                    () -> {
                        (__lhs_0_73) -> {
                            data_259 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(dgData));
                            recIdStr_2 = __helios__bytearray__decode_utf8(newDataId)();
                            __core__ifThenElse(
                                __helios__bytearray____neq(__module__StellarHeliosHelpers__AnyData[]__id(data_259), newDataId),
                                () -> {
                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- expected id: ", recIdStr_2)), actualIdStr = __helios__bytearray__decode_utf8(__module__StellarHeliosHelpers__AnyData[]__id(data_259))();
                                    __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: wrong id: ", actualIdStr)))
                                },
                                () -> {
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__string____neq(__module__StellarHeliosHelpers__AnyData[]__type(data_259), dataTypePurpose),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected type: ", dataTypePurpose)), __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: bad type: ", __module__StellarHeliosHelpers__AnyData[]__type(data_259))))
                                            },
                                            () -> {
                                                () -> {
                                                    __core__chooseUnit(__helios__print(__helios__string____add("\u2705 \u{1F4CE} outDD: ok: ^ outDD to Capo: ", recIdStr_2)), true)
                                                }()
                                            }
                                        )()
                                    }()
                                }
                            )()
                        }
                    },
                    () -> {
                        (__33) -> {
                            __helios__error("output not delegated data")
                        }
                    }
                )()(__cond_40)))
            }
        }
    };
    __helios__option[__helios__txoutput]__none____is = (data_260) -> {
        __helios__common__enum_tag_equals(data_260, 1)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1 = (self_217) -> {
        (recId_5) -> {
            recIdStr_3 = __helios__bytearray__decode_utf8(recId_5)();
            ac_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_217), recId_5);
            capoAddr_3 = __module__CapoHelpers__CapoCtx[]__address_1(self_217)();
            __cond_41 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((txout) -> {
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        true
                    }, () -> {
                        __helios__bool__trace(__helios__int____eq(__helios__value__get_safe(__helios__txoutput__value(txout))(ac_2), 1))("  -- output has value? ")
                    })
                }, () -> {
                    __helios__bool__trace(__helios__address____eq(__helios__txoutput__address(txout), capoAddr_3))("     -- found output... is it at the right capoAddr? ")
                })
            });
            __core__ifThenElse(
                __helios__option[__helios__txoutput]__none____is(__cond_41),
                () -> {
                    (__lhs_0_75) -> {
                        __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} ^ outDD: not found: ", recIdStr_3))
                    }
                },
                () -> {
                    (__lhs_0_74) -> {
                        txout_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_74);
                        __core__chooseUnit(__helios__print(__helios__string____add("     \u2705 \u{1F4CE} ^ outDD: found ", recIdStr_3)), txout_1)
                    }
                }
            )()(__cond_41)
        }
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {
        (self_218) -> {
            () -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be available in the transaction (input or ref)", false, ()), charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_218);
                __cond_42 = charter_1;
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_42),
                    () -> {
                        (__lhs_0_81) -> {
                            self_218
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_42),
                            () -> {
                                (__lhs_0_80) -> {
                                    self_218
                                }
                            },
                            () -> {
                                (__lhs_0_76) -> {
                                    __lhs_0_77 = self_218;
                                    mph_21 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_77);
                                    charterAc_3 = __helios__assetclass__new(mph_21, __helios__string__encode_utf8("charter")());
                                    hasCharter_2 = (txin_5) -> {
                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_5))(charterAc_3), 0)
                                    };
                                    __cond_43 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_2);
                                    __core__ifThenElse(
                                        __helios__option[__helios__txinput]__none____is(__cond_43),
                                        () -> {
                                            (__lhs_0_79) -> {
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): no charter ref; must be in inputs...
"), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_218)())
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_78) -> {
                                                charterUtxo_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_78);
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): found charter ref
"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);
                                                __module__CapoHelpers__CapoCtx[]____new(mph_21, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_2)))
                                            }
                                        }
                                    )()(__cond_43)
                                }
                            }
                        )()
                    }
                )()(__cond_42))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_219) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be spent in the inputs", false, ()), charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_219);
            __cond_44 = charter_2;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_44),
                () -> {
                    (__lhs_0_87) -> {
                        self_219
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_44),
                        () -> {
                            (__lhs_0_86) -> {
                                __helios__error("CapoCtx.withCharterInput(): charter is from ref!")
                            }
                        },
                        () -> {
                            (__lhs_0_82) -> {
                                __lhs_0_83 = self_219;
                                mph_22 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_83);
                                charterAc_4 = __helios__assetclass__new(mph_22, __helios__string__encode_utf8("charter")());
                                hasCharter_3 = (txin_6) -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_6))(charterAc_4), 0)
                                };
                                __core__chooseUnit(__helios__print("    -- CapoCtx finding charter in inputs
"), (charterUtxo_3) -> {
                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_3))), 0);
                                    __module__CapoHelpers__CapoCtx[]____new(mph_22, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_3))
                                }(__cond_45 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_3);
                                __core__ifThenElse(
                                    __helios__option[__helios__txinput]__some____is(__cond_45),
                                    () -> {
                                        (__lhs_0_85) -> {
                                            ch_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_85);
                                            ch_3
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_84) -> {
                                            __helios__error("Missing required charter input")
                                        }
                                    }
                                )()(__cond_45)))
                            }
                        }
                    )()
                }
            )()(__cond_44))
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_220) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be referenced in the txn, but unspent", false, ()), charter_3 = __module__CapoHelpers__CapoCtx[]__charter(self_220);
            __cond_46 = charter_3;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_46),
                () -> {
                    (__lhs_0_91) -> {
                        self_220
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_46),
                        () -> {
                            (__lhs_0_90) -> {
                                __helios__error("CapoCtx.withCharterRef(): charter is from inputs!")
                            }
                        },
                        () -> {
                            (__lhs_0_88) -> {
                                __lhs_0_89 = self_220;
                                mph_23 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_89);
                                utxo_5 = __module__CapoHelpers__getRefCharterUtxo(mph_23);
                                datum_6 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_5))), 0);
                                __module__CapoHelpers__CapoCtx[]____new(mph_23, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_6, utxo_5))
                            }
                        }
                    )()
                }
            )()(__cond_46))
        }
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_221) -> {
        (fn_21, z_2) -> {
            __helios__common__fold(self_221, (z_3, pair_71) -> {
                fn_21(z_3, __helios__string__from_data(__core__fstPair(pair_71)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_71)))
            }, z_2)
        }
    };
    __helios__option[__helios__bool]__unwrap = (self_222) -> {
        () -> {
            __helios__bool__from_data(__helios__common__enum_field_0(self_222))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all = (self_223) -> {
        (fn_22) -> {
            fn_23 = (pair_72) -> {
                fn_22(__helios__string__from_data(__core__fstPair(pair_72)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(pair_72)))
            };
            __helios__common__all(self_223, fn_23)
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all = (self_224) -> {
        (fn_24) -> {
            __helios__common__all(self_224, (item_12) -> {
                fn_24(__module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(item_12))
            })
        }
    };
    __helios__option[__helios__bool]__some____is = (data_261) -> {
        __helios__common__enum_tag_equals(data_261, 0)
    };
    __module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings = (self_225) -> {
        () -> {
            charterData_2 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_225)();
            mph_24 = __module__CapoHelpers__CapoCtx[]__mph(self_225);
            __lhs_0_92 = __helios__common__assert_constr_index(charterData_2, 0);
            spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_92);
            otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_92);
            mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_92);
            govDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_92);
            manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_92);
            inputs_2 = __helios__tx__inputs(__helios__scriptcontext__tx);
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- only the spend delegate calls this function", false, ()), spendDelegateIsValidating = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(self_225)(false, ());
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- spend delegate requires the other delegates validate (except mint delegate == same as spend delegate)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("govDelegate MAY contribute to settings validation", false, ()), (govDelegateMaybeValidating) -> {
                checkOneInvariant = (oneDgt) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariant must validate settings", false, ()), __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(oneDgt)(inputs_2, mph_24, true))())
                };
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spend invariants must validate settings", false, ()), spendInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(spendInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("mint invariants must validate settings", false, ()), mintInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(mintInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("dgDataControllers must validate settings", false, ()), dgDataPoliciesAreValidating = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all(manifest)((key_18, entry_1) -> {
                    __cond_48 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry_1);
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_48),
                        () -> {
                            (__lhs_0_95) -> {
                                policyLink_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_95);
                                __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(policyLink_1)(inputs_2, mph_24, true))()
                            }
                        },
                        () -> {
                            (__34) -> {
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ignoring manifest entry (not a data policy): ", key_18)), true)
                            }
                        }
                    )()(__cond_48)
                });
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("named delegates must validate settings", false, ()), namedDelegatesAreValidating = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)(__core__chooseUnit(__module__StellarHeliosHelpers__REQT("  - each other-named-delegate must validate settings", false, ()), (ok, key_19, dgt) -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("  - other-named-delegate: ", key_19)), __core__chooseUnit(__helios__print("
"), __helios__bool__and(() -> {
                        ok
                    }, () -> {
                        __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(dgt)(inputs_2, mph_24, true))()
                    })))
                }), true);
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        __helios__bool__and(() -> {
                            __helios__bool__and(() -> {
                                __helios__bool__and(() -> {
                                    dgDataPoliciesAreValidating
                                }, () -> {
                                    spendDelegateIsValidating
                                })
                            }, () -> {
                                govDelegateMaybeValidating
                            })
                        }, () -> {
                            spendInvariantsAreValidating
                        })
                    }, () -> {
                        mintInvariantsAreValidating
                    })
                }, () -> {
                    namedDelegatesAreValidating
                })))))
            }(__cond_47 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(govDelegate)(inputs_2, mph_24, false);
            __core__ifThenElse(
                __helios__option[__helios__bool]__some____is(__cond_47),
                () -> {
                    (__lhs_0_94) -> {
                        true
                    }
                },
                () -> {
                    (__lhs_0_93) -> {
                        __core__chooseUnit(__helios__print("  -- govAuthority isn't a script-based validator; doesn't validate new settings
"), true)
                    }
                }
            )()(__cond_47)))))
        }
    };
    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_226) -> {
        (activity_1) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__CapoHelpers__CapoCtx[]____eq(self_226, self_226)
            }), "prevent unused var"), __cond_49 = activity_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_49),
                () -> {
                    (__lhs_0_102) -> {
                        __helios__error("the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_49),
                        () -> {
                            (__lhs_0_101) -> {
                                __helios__error("the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo")
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_49),
                                () -> {
                                    (__lhs_0_100) -> {
                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for updating the Capo manifest...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_49),
                                        () -> {
                                            (__lhs_0_99) -> {
                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for queuing a pending dgt-change...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_49),
                                                () -> {
                                                    (__lhs_0_98) -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for removing a pending dgt-change entry...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_49),
                                                        () -> {
                                                            (__lhs_0_97) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for committing pending dgt-changes...", false, ()), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_96) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for creating a new delegate (deprecated path)...", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("deprecate use of CLA::CreatingDelegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()(__cond_49))
        }
    };
    __module__CapoHelpers__CapoCtx[]__orFail = (self_227) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__CapoCtx[]__serialize(self_227)(), __module__CapoHelpers__CapoCtx[]__serialize(self_227)())
            }), "crazy talk"), true)
        }
    };
    __module__CapoHelpers__mkCapoCtx = (mph_25) -> {
        __module__CapoHelpers__CapoCtx[]____new(mph_25, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())
    };
    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo) -> {
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It must spend the indicated seed UTXO", false, ()), __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_4) -> {
                __helios__txoutputid____eq(__helios__txinput__output_id(input_4), seedUtxo)
            })),
            () -> {
                __core__chooseUnit(__helios__print(" - expected seedUtxo: "), __core__chooseUnit(__helios__print(__helios__txoutputid__show(seedUtxo)()), __core__chooseUnit(__helios__print("
"), __helios__assert(false, "missing expected seed input for minting"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__helios__print("  -- has seed -> ok
"), true)))
    };
    __module__CapoMintHelpers__noOtherActivitiesSupported = (__35) -> {
        __core__chooseUnit(__helios__print("yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...
"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("   -- note: for other cases, a context-specific check via validateUutMinting's (
", "  ...
  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)
"), ") option can be used to steer around this failure.
")), __core__chooseUnit(__helios__assert(false, "unexpected delegate activity"), false)))
    };
    __helios__option[__helios__data]__none____is = (data_262) -> {
        __helios__common__enum_tag_equals(data_262, 1)
    };
    __helios__option[__helios__data]__some__some = (self_228) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_228))
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_229) -> {
        (key_20) -> {
            __helios__common__map_get(self_229, __helios__scriptpurpose____to_data(key_20), (x_9) -> {
                __core__constrData(0, __helios__common__list_1(x_9))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_26, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {
        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck,
            () -> {
                extraMintDelegateRedeemerCheck
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_1 = __core__ifThenElse(
            __useopt__checkMintDgtActivity,
            () -> {
                checkMintDgtActivity
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_26);
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter's mint-delegate to authorize this mint activity", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- finding input dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {
            __core__chooseUnit(__helios__print("    -- \u2705 \u27A1\uFE0F  \u{1F481}found dgTkn ^"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {
                __cond_51 = purpose_1;
                __core__ifThenElse(
                    __helios__scriptpurpose__spending____is(__cond_51),
                    () -> {
                        (sp_1) -> {
                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)
                        }
                    },
                    () -> {
                        (__36) -> {
                            false
                        }
                    }
                )()(__cond_51)
            });
            err = __helios__string____add(__helios__string____add("dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), " not being spent as expected");
            (maybeCheckedMintDelegateAuthority) -> {
                delegateDidAuthorize = true;
                __helios__bool__and(() -> {
                    delegateDidAuthorize
                }, () -> {
                    maybeCheckedMintDelegateAuthority
                })
            }(__cond_52 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);
            __core__ifThenElse(
                __helios__option[__helios__data]__none____is(__cond_52),
                () -> {
                    (__lhs_0_110) -> {
                        __helios__error(err)
                    }
                },
                () -> {
                    (__lhs_0_105) -> {
                        x_11 = __helios__option[__helios__data]__some__some(__lhs_0_105);
                        activity_2 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2)(x_11);
                        __cond_53 = activity_2;
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_53),
                            () -> {
                                (__lhs_0_106) -> {
                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_106);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY we ---------------- don't need the funny redeemer-check skipping"), __core__chooseUnit(__core__ifThenElse(
                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),
                                        () -> {
                                            __core__chooseUnit(__helios__print(" vvv wherever it is, probably best it uses the checkMintDgtActivity option"), __helios__error("where is extraMintDelegateRedeemerCheck=false really needed?"))
                                        },
                                        () -> {
                                            () -> {
                                                ()
                                            }()
                                        }
                                    )(), __cond_54 = DLA;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_54),
                                        () -> {
                                            (__lhs_0_109) -> {
                                                __core__chooseUnit(__helios__print("  -- ok, dgTkn spent
"), true)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_54),
                                                () -> {
                                                    (__lhs_0_108) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_107) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_54)))
                                }
                            },
                            () -> {
                                (__37) -> {
                                    checkMintDgtActivity_1(activity_2)
                                }
                            }
                        )()(__cond_53)
                    }
                }
            )()(__cond_52)))
        }(__cond_50 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_13) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_13))(authzAc), 0)
        });
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_50),
            () -> {
                (__lhs_0_104) -> {
                    x_10 = __helios__option[__helios__txinput]__some__some(__lhs_0_104);
                    __helios__txinput__output_id(x_10)
                }
            },
            () -> {
                (__lhs_0_103) -> {
                    __helios__error(__helios__string____add("  \u274C\u274C missing dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))
                }
            }
        )()(__cond_50))))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __helios__txoutputid__tx_id(seed_1);
        seedIdx = __helios__txoutputid__index(seed_1);
        idxBytes = __helios__int__serialize(seedIdx)();
        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);
        txoInfo = __core__ifThenElse(
            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),
            () -> {
                __core__chooseUnit(__helios__assert(false, "cbor(txoId) len > 9 !!"), idxBytes)
            },
            () -> {
                () -> {
                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8("@")()), idxBytes)
                }()
            }
        )();
        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);
        mhs = __helios__bytearray__show(miniHash)();
        (p) -> {
            __helios__string____add(__helios__string____add(p, "-"), mhs)
        }
    };
    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {
        __helios__bytearray____lt(k1, k2)
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_230) -> {
        (fn_25) -> {
            recurse_89 = (recurse_88, map_31) -> {
                __core__chooseList(map_31, () -> {
                    ()
                }, () -> {
                    head_85 = __core__headList__safe(map_31);
                    __core__chooseUnit(fn_25(__helios__bytearray__from_data(__core__fstPair(head_85)), __helios__int__from_data(__core__sndPair(head_85))), recurse_88(recurse_88, __core__tailList__safe(map_31)))
                })()
            };
            recurse_89(recurse_89, self_230)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_231) -> {
        (fn_26) -> {
            __helios__common__filter_map(self_231, (pair_73) -> {
                fn_26(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_73)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_73)))
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_232) -> {
        (fn_27) -> {
            recurse_91 = (recurse_90, map_32) -> {
                __core__chooseList(map_32, () -> {
                    ()
                }, () -> {
                    head_86 = __core__headList__safe(map_32);
                    __core__chooseUnit(fn_27(__helios__mintingpolicyhash__from_data(__core__fstPair(head_86)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_86))), recurse_90(recurse_90, __core__tailList__safe(map_32)))
                })()
            };
            recurse_91(recurse_91, self_232)
        }
    };
    __helios__option[__helios__int]__none____is = (data_263) -> {
        __helios__common__enum_tag_equals(data_263, 1)
    };
    __helios__option[__helios__int]__some__some = (self_233) -> {
        __helios__int__from_data(__helios__common__enum_field_0(self_233))
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_234) -> {
        (key_21) -> {
            __helios__common__map_get(self_234, __helios__bytearray____to_data(key_21), (x_12) -> {
                __core__constrData(0, __helios__common__list_1(x_12))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_235) -> {
        (key_22) -> {
            key_23 = __helios__mintingpolicyhash____to_data(key_22);
            recurse_93 = (recurse_92, self_236) -> {
                __core__chooseList(self_236, () -> {
                    self_236
                }, () -> {
                    head_87 = __core__headList__safe(self_236);
                    tail_4 = __core__tailList__safe(self_236);
                    __core__ifThenElse(
                        __core__equalsData(key_23, __core__fstPair(head_87)),
                        () -> {
                            recurse_92(recurse_92, tail_4)
                        },
                        () -> {
                            __core__mkCons(head_87, recurse_92(recurse_92, tail_4))
                        }
                    )()
                })()
            };
            recurse_93(recurse_93, self_235)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;
    __helios__map[__helios__bytearray@__helios__int]____eq = (self_237, other_4) -> {
        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_237), __helios__map[__helios__bytearray@__helios__int]____to_data(other_4))
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_238) -> {
        (comp_4) -> {
            __helios__common__sort(self_238, (a_18, b_20) -> {
                comp_4(__helios__bytearray__from_data(__core__fstPair(a_18)), __helios__int__from_data(__core__sndPair(a_18)), __helios__bytearray__from_data(__core__fstPair(b_20)), __helios__int__from_data(__core__sndPair(b_20)))
            })
        }
    };
    __helios__value__sum[__helios__value] = (self_239) -> {
        recurse_95 = (recurse_94, lst_24) -> {
            __core__chooseList(lst_24, () -> {
                __helios__value__ZERO
            }, () -> {
                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_24))), recurse_94(recurse_94, __core__tailList__safe(lst_24)))
            })()
        };
        recurse_95(recurse_95, self_239)
    };
    __helios__list[__helios__string]__map[__helios__value] = (self_240) -> {
        (fn_28) -> {
            __helios__common__map(self_240, (item_13) -> {
                __helios__value____to_data(fn_28(__helios__string__from_data(item_13)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_27, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        bootstrapCharter_1 = __core__ifThenElse(
            __useopt__bootstrapCharter,
            () -> {
                bootstrapCharter
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        needsMintDelegateApproval_1 = __core__ifThenElse(
            __useopt__needsMintDelegateApproval,
            () -> {
                needsMintDelegateApproval
            },
            () -> {
                true
            }
        )();
        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck_1,
            () -> {
                extraMintDelegateRedeemerCheck_2
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_3 = __core__ifThenElse(
            __useopt__checkMintDgtActivity_1,
            () -> {
                checkMintDgtActivity_2
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());
        delegateApproval = __core__ifThenElse(
            isBootstrapping,
            () -> {
                true
            },
            () -> {
                () -> {
                    __lhs_0_111 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_27, false, ()), 0);
                    mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_111);
                    __core__ifThenElse(
                        needsMintDelegateApproval_1,
                        () -> {
                            __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_27, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3)
                        },
                        () -> {
                            () -> {
                                true
                            }()
                        }
                    )()
                }()
            }
        )();
        valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
        expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](purposes)((purpose_2) -> {
            __module__StellarHeliosHelpers__mkTv(mph_27, true, mkTokenName_1(purpose_2), false, (), false, ())
        })));
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_27)),
            () -> {
                mphStr = __helios__mintingpolicyhash__show(mph_27)();
                valStr = __helios__value__show(valueMinted)(false, ());
                __core__chooseUnit(__helios__print(__helios__string____add("  -- no mint from our policy ", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print("^^  value minted"), __helios__error("\u274C\u274C validateUutMinting(): no mint from our policy"))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_27))(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_3, i_15) -> {
            tnStr_1 = __helios__bytearray__decode_utf8_safe(tn_3)();
            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E} expected: ", __helios__int__show(i_15)()), "x "), tnStr_1))
        }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_27);
        actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);
        __core__chooseUnit(__core__ifThenElse(
            true,
            () -> {
                __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_2, i_14) -> {
                    tnStr = __helios__bytearray__decode_utf8_safe(tn_2)();
                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E}   actual: ", __helios__int__show(i_14)()), "x "), tnStr))
                }), __core__chooseUnit(__helios__print("other policy values minted: 
"), __helios__print(__helios__value__show(__helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_21, __38) -> {
                    __helios__mintingpolicyhash____neq(b_21, mph_27)
                })))(false, ()))))
            },
            () -> {
                () -> {
                    ()
                }()
            }
        )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Ensures the mint for this policy-id is exactly the expected value", false, ()), thisPolicyMintOK = __helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted);
        __core__chooseUnit(__helios__assert(thisPolicyMintOK, "mismatch in UUT mint"), __core__chooseUnit(__helios__print("  -- this-policy mint ok"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_2), "no seed"), __core__chooseUnit(__helios__print("  -- ok: has seed and expected this-policy mint value"), otherPoliciesMintOk = __core__ifThenElse(
            __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),
            () -> {
                true
            },
            () -> {
                () -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with an additional mint-value indicated", false, ()), remainingExpectedMint = __core__ifThenElse(
                        __helios__value__contains_policy(expectedValue)(mph_27),
                        () -> {
                            __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_27))
                        },
                        () -> {
                            () -> {
                                expectedValue
                            }()
                        }
                    )();
                    __core__ifThenElse(
                        __helios__value__is_zero(remainingExpectedMint)(),
                        () -> {
                            true
                        },
                        () -> {
                            () -> {
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...with other-policy values expected: ", false, ()), __core__chooseUnit(__helios__print(__helios__string____add(__helios__value__show(remainingExpectedMint)(false, ()), "^ other-mint value expected")), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It should mint exactly the indicated token names", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Doesn't constrain any mentioned policy's minting of any other tokens", false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {
                                    mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);
                                    __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_3, expectedCount) -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__cond_55 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_3);
                                            __core__ifThenElse(
                                                __helios__option[__helios__int]__none____is(__cond_55),
                                                () -> {
                                                    (__lhs_0_113) -> {
                                                        false
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_112) -> {
                                                        actualCount = __helios__option[__helios__int]__some__some(__lhs_0_112);
                                                        __helios__int____eq(actualCount, expectedCount)
                                                    }
                                                }
                                            )()(__cond_55)),
                                            () -> {
                                                tnString = __helios__bytearray__decode_utf8_safe(tokenName_3)();
                                                __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C validateUutMinting(): wrong mint for ", __helios__mintingpolicyhash__show(otherMph)()), ":"), tnString))
                                            },
                                            () -> {
                                                () -> {
                                                    ()
                                                }()
                                            }
                                        )()
                                    })
                                }), true)))))
                            }()
                        }
                    )())
                }()
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)("  -- other-expected-mints ok? "), "unreachable exception: otherPoliciesMintOk"), __core__chooseUnit(__helios__print(" \u2705 validateUutMinting:  ok!
"), __helios__bool__and(() -> {
            __helios__bool__and(() -> {
                delegateApproval
            }, () -> {
                thisPolicyMintOK
            })
        }, () -> {
            otherPoliciesMintOk
        })))))))))))
    };
    __helios__list[__helios__string]__is_valid_data_internal = (lst_25) -> {
        recurse_97 = (recurse_96, lst_26) -> {
            __core__chooseList(lst_26, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__headList__safe(lst_26)),
                    () -> {
                        recurse_96(recurse_96, __core__tailList__safe(lst_26))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_97(recurse_97, lst_25)
    };
    __helios__list[__helios__string]__is_valid_data = (data_264) -> {
        __core__chooseData(data_264, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__string]__is_valid_data_internal(__core__unListData__safe(data_264))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__ReqtData[]__is_valid_data = (data_265) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_265, __core__bData(#7265717569726573), __helios__list[__helios__string]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_265, __core__bData(#696d706c), __helios__string__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_265, __core__bData(#6d656368), __helios__list[__helios__string]__is_valid_data),
                            () -> {
                                __core__ifThenElse(
                                    __helios__common__test_mStruct_field(data_265, __core__bData(#64746c73), __helios__list[__helios__string]__is_valid_data),
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__common__test_mStruct_field(data_265, __core__bData(#70727073), __helios__string__is_valid_data),
                                            () -> {
                                                __core__ifThenElse(
                                                    __helios__common__test_mStruct_field(data_265, __core__bData(#746774), __helios__bytearray__is_valid_data),
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __helios__common__test_mStruct_field(data_265, __core__bData(#657870), __helios__time__is_valid_data),
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __helios__common__test_mStruct_field(data_265, __core__bData(#6465736372697074696f6e), __helios__string__is_valid_data),
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __helios__common__test_mStruct_field(data_265, __core__bData(#696d616765), __helios__string__is_valid_data),
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __helios__common__test_mStruct_field(data_265, __core__bData(#6e616d65), __helios__string__is_valid_data),
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __helios__common__test_mStruct_field(data_265, __core__bData(#636174), __helios__string__is_valid_data),
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __helios__common__test_mStruct_field(data_265, __core__bData(#747065), __helios__string__is_valid_data),
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __helios__common__test_mStruct_field(data_265, __core__bData(#406964), __helios__bytearray__is_valid_data),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__trace("Warning: invalid data in ReqtData.@id", () -> {
                                                                                                                    false
                                                                                                                })()
                                                                                                            }
                                                                                                        )()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__trace("Warning: invalid data in ReqtData.tpe", () -> {
                                                                                                            false
                                                                                                        })()
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                __core__trace("Warning: invalid data in ReqtData.cat", () -> {
                                                                                                    false
                                                                                                })()
                                                                                            }
                                                                                        )()
                                                                                    },
                                                                                    () -> {
                                                                                        __core__trace("Warning: invalid data in ReqtData.name", () -> {
                                                                                            false
                                                                                        })()
                                                                                    }
                                                                                )()
                                                                            },
                                                                            () -> {
                                                                                __core__trace("Warning: invalid data in ReqtData.image", () -> {
                                                                                    false
                                                                                })()
                                                                            }
                                                                        )()
                                                                    },
                                                                    () -> {
                                                                        __core__trace("Warning: invalid data in ReqtData.description", () -> {
                                                                            false
                                                                        })()
                                                                    }
                                                                )()
                                                            },
                                                            () -> {
                                                                __core__trace("Warning: invalid data in ReqtData.exp", () -> {
                                                                    false
                                                                })()
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        __core__trace("Warning: invalid data in ReqtData.tgt", () -> {
                                                            false
                                                        })()
                                                    }
                                                )()
                                            },
                                            () -> {
                                                __core__trace("Warning: invalid data in ReqtData.prps", () -> {
                                                    false
                                                })()
                                            }
                                        )()
                                    },
                                    () -> {
                                        __core__trace("Warning: invalid data in ReqtData.dtls", () -> {
                                            false
                                        })()
                                    }
                                )()
                            },
                            () -> {
                                __core__trace("Warning: invalid data in ReqtData.mech", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in ReqtData.impl", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in ReqtData.requires", () -> {
                    false
                })()
            }
        )()
    };
    __module__ReqtsData__ReqtData[]__serialize = __helios__common__serialize;
    __module__ReqtsData__ReqtData[]__from_data = (data_266) -> {
        ignore_17 = __core__ifThenElse(
            __module__ReqtsData__ReqtData[]__is_valid_data(data_266),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid ReqtData data", ())
            }
        )();
        data_266
    };
    __module__ReqtsData__ReqtData[]__mustFreshenBy = (self_241) -> {
        __helios__time__from_data(__helios__common__mStruct_field(self_241, #657870))
    };
    __module__ReqtsData__ReqtData[]__validate = (self_242) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__ReqtsData__ReqtData[]__serialize(self_242)(), __module__ReqtsData__ReqtData[]__serialize(self_242)())
            }), "no"), true)
        }
    };
    __module__ReqtsData__DelegateDatum[]__is_valid_data = (__module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data, __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data, __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data) -> {
        (data_267) -> {
            __core__ifThenElse(
                __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data(data_267),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data(data_267),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data(data_267),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__ReqtsData__DelegateDatum[]__from_data = (__module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data_1) -> {
        (data_268) -> {
            ignore_18 = __core__ifThenElse(
                __module__ReqtsData__DelegateDatum[]__is_valid_data(__module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data_1)(data_268),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateDatum data", ())
                }
            )();
            data_268
        }
    };
    __module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data_2 = (data_269) -> {
        __core__chooseData(data_269, () -> {
            pair_74 = __core__unConstrData__safe(data_269);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_74), 0),
                () -> {
                    data_270 = __core__listData(__core__sndPair(pair_74));
                    __core__chooseData(data_270, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_156 = __core__unListData__safe(data_270);
                        __core__chooseList(fields_156, () -> {
                            false
                        }, () -> {
                            head_88 = __core__headList__safe(fields_156);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_88),
                                () -> {
                                    fields_157 = __core__tailList__safe(fields_156);
                                    __core__chooseList(fields_157, () -> {
                                        false
                                    }, () -> {
                                        head_89 = __core__headList__safe(fields_157);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_89),
                                            () -> {
                                                fields_158 = __core__tailList__safe(fields_157);
                                                __core__chooseList(fields_158, () -> {
                                                    false
                                                }, () -> {
                                                    head_90 = __core__headList__safe(fields_158);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_90),
                                                        () -> {
                                                            fields_159 = __core__tailList__safe(fields_158);
                                                            __core__chooseList(fields_159, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__DelegateDatum[]__IsDelegation__serialize = __helios__common__serialize;
    __module__ReqtsData__DelegateDatum[]__IsDelegation____is = (data_271) -> {
        __helios__common__enum_tag_equals(data_271, 1)
    };
    __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data_2 = (data_272) -> {
        __core__chooseData(data_272, () -> {
            pair_75 = __core__unConstrData__safe(data_272);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_75), 1),
                () -> {
                    data_273 = __core__listData(__core__sndPair(pair_75));
                    __core__chooseData(data_273, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_160 = __core__unListData__safe(data_273);
                        __core__chooseList(fields_160, () -> {
                            false
                        }, () -> {
                            head_91 = __core__headList__safe(fields_160);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(head_91),
                                () -> {
                                    fields_161 = __core__tailList__safe(fields_160);
                                    __core__chooseList(fields_161, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__DelegateDatum[]__IsDelegation__dd = (self_243) -> {
        __module__CapoDelegateHelpers__DelegationDetail[]__from_data(__helios__common__enum_field_0(self_243))
    };
    __module__ReqtsData__DelegateDatum[]__capoStoredData____is = (data_274) -> {
        __helios__common__enum_tag_equals(data_274, 2)
    };
    __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data_2 = (data_275) -> {
        __core__chooseData(data_275, () -> {
            pair_76 = __core__unConstrData__safe(data_275);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_76), 2),
                () -> {
                    data_276 = __core__listData(__core__sndPair(pair_76));
                    __core__chooseData(data_276, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_162 = __core__unListData__safe(data_276);
                        __core__chooseList(fields_162, () -> {
                            false
                        }, () -> {
                            head_92 = __core__headList__safe(fields_162);
                            __core__ifThenElse(
                                __module__ReqtsData__ReqtData[]__is_valid_data(head_92),
                                () -> {
                                    fields_163 = __core__tailList__safe(fields_162);
                                    __core__chooseList(fields_163, () -> {
                                        false
                                    }, () -> {
                                        head_93 = __core__headList__safe(fields_163);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_93),
                                            () -> {
                                                fields_164 = __core__tailList__safe(fields_163);
                                                __core__chooseList(fields_164, () -> {
                                                    false
                                                }, () -> {
                                                    head_94 = __core__headList__safe(fields_164);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_94),
                                                        () -> {
                                                            fields_165 = __core__tailList__safe(fields_164);
                                                            __core__chooseList(fields_165, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__MintingActivity[]__is_valid_data = (__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data) -> {
        (data_277) -> {
            __core__ifThenElse(
                __module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data(data_277),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__ReqtsData__MintingActivity[]__from_data = (__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_1) -> {
        (data_278) -> {
            ignore_19 = __core__ifThenElse(
                __module__ReqtsData__MintingActivity[]__is_valid_data(__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_1)(data_278),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid MintingActivity data", ())
                }
            )();
            data_278
        }
    };
    __module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_2 = (data_279) -> {
        __core__chooseData(data_279, () -> {
            pair_77 = __core__unConstrData__safe(data_279);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_77), 0),
                () -> {
                    data_280 = __core__listData(__core__sndPair(pair_77));
                    __core__chooseData(data_280, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_166 = __core__unListData__safe(data_280);
                        __core__chooseList(fields_166, () -> {
                            false
                        }, () -> {
                            head_95 = __core__headList__safe(fields_166);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_95),
                                () -> {
                                    fields_167 = __core__tailList__safe(fields_166);
                                    __core__chooseList(fields_167, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__MintingActivity[]__CreatingRecord__seed = (self_244) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_244))
    };
    __module__ReqtsData__SpendingActivity[]__is_valid_data = (__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data) -> {
        (data_281) -> {
            __core__ifThenElse(
                __module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data(data_281),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__ReqtsData__SpendingActivity[]__from_data = (__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_1) -> {
        (data_282) -> {
            ignore_20 = __core__ifThenElse(
                __module__ReqtsData__SpendingActivity[]__is_valid_data(__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_1)(data_282),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid SpendingActivity data", ())
                }
            )();
            data_282
        }
    };
    __module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_2 = (data_283) -> {
        __core__chooseData(data_283, () -> {
            pair_78 = __core__unConstrData__safe(data_283);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_78), 0),
                () -> {
                    data_284 = __core__listData(__core__sndPair(pair_78));
                    __core__chooseData(data_284, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_168 = __core__unListData__safe(data_284);
                        __core__chooseList(fields_168, () -> {
                            false
                        }, () -> {
                            head_96 = __core__headList__safe(fields_168);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_96),
                                () -> {
                                    fields_169 = __core__tailList__safe(fields_168);
                                    __core__chooseList(fields_169, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsData__SpendingActivity[]__UpdatingRecord__id = (self_245) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_0(self_245))
    };
    __module__ReqtsData__BurningActivity[]__is_valid_data = (__module__ReqtsData__BurningActivity[]__DeletingRecord__is_valid_data) -> {
        (data_285) -> {
            __core__ifThenElse(
                __module__ReqtsData__BurningActivity[]__DeletingRecord__is_valid_data(data_285),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__ReqtsData__BurningActivity[]__DeletingRecord__is_valid_data_1 = (data_286) -> {
        __core__chooseData(data_286, () -> {
            pair_79 = __core__unConstrData__safe(data_286);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_79), 0),
                () -> {
                    data_287 = __core__listData(__core__sndPair(pair_79));
                    __core__chooseData(data_287, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_170 = __core__unListData__safe(data_287);
                        __core__chooseList(fields_170, () -> {
                            false
                        }, () -> {
                            head_97 = __core__headList__safe(fields_170);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_97),
                                () -> {
                                    fields_171 = __core__tailList__safe(fields_170);
                                    __core__chooseList(fields_171, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__ensureConstrainedTxValidity = () -> {
        __helios__assert(__helios__duration____leq(__helios__time____sub(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), __helios__timerange__start(__helios__tx__time_range(__helios__scriptcontext__tx))), __helios__duration__HOUR), "txn duration err")
    };
    __module__ReqtsPolicy__daysInFuture = (nowPlusDays) -> {
        __core__chooseUnit(__module__ReqtsPolicy__ensureConstrainedTxValidity(), expiryDuration = __helios__duration____mul(__helios__duration__DAY, nowPlusDays);
        leeway = __helios__duration____mul(__helios__duration__HOUR, 1);
        latestAcceptable = __helios__time____add(__helios__time____add(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), expiryDuration), leeway);
        __helios__timerange__new(__helios__time____add(__helios__timerange__start(__helios__tx__time_range(__helios__scriptcontext__tx)), expiryDuration), latestAcceptable))
    };
    __module__ReqtsPolicy__DelegateActivity[]__is_valid_data = (__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data) -> {
        (data_288) -> {
            __core__ifThenElse(
                __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data(data_288),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data(data_288),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data(data_288),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data(data_288),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data(data_288),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data(data_288),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data(data_288),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data(data_288),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data(data_288),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__ReqtsPolicy__DelegateActivity[]__from_data = (__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1) -> {
        (data_289) -> {
            ignore_21 = __core__ifThenElse(
                __module__ReqtsPolicy__DelegateActivity[]__is_valid_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1)(data_289),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateActivity data", ())
                }
            )();
            data_289
        }
    };
    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is = (data_290) -> {
        __helios__common__enum_tag_equals(data_290, 0)
    };
    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2 = (data_291) -> {
        __core__chooseData(data_291, () -> {
            pair_80 = __core__unConstrData__safe(data_291);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_80), 0),
                () -> {
                    data_292 = __core__listData(__core__sndPair(pair_80));
                    __core__chooseData(data_292, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_172 = __core__unListData__safe(data_292);
                        __core__chooseList(fields_172, () -> {
                            false
                        }, () -> {
                            head_98 = __core__headList__safe(fields_172);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_98),
                                () -> {
                                    fields_173 = __core__tailList__safe(fields_172);
                                    __core__chooseList(fields_173, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__activity = (self_246) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_246))
    };
    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is = (data_293) -> {
        __helios__common__enum_tag_equals(data_293, 1)
    };
    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2 = (data_294) -> {
        __core__chooseData(data_294, () -> {
            pair_81 = __core__unConstrData__safe(data_294);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_81), 1),
                () -> {
                    data_295 = __core__listData(__core__sndPair(pair_81));
                    __core__chooseData(data_295, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_174 = __core__unListData__safe(data_295);
                        __core__chooseList(fields_174, () -> {
                            false
                        }, () -> {
                            head_99 = __core__headList__safe(fields_174);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_99),
                                () -> {
                                    fields_175 = __core__tailList__safe(fields_174);
                                    __core__chooseList(fields_175, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity = (self_247) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_247))
    };
    __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities____is = (data_296) -> {
        __helios__common__enum_tag_equals(data_296, 2)
    };
    __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2 = (data_297) -> {
        __core__chooseData(data_297, () -> {
            pair_82 = __core__unConstrData__safe(data_297);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_82), 2),
                () -> {
                    data_298 = __core__listData(__core__sndPair(pair_82));
                    __core__chooseData(data_298, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_176 = __core__unListData__safe(data_298);
                        __core__chooseList(fields_176, () -> {
                            false
                        }, () -> {
                            head_100 = __core__headList__safe(fields_176);
                            __core__ifThenElse(
                                __module__ReqtsData__SpendingActivity[]__is_valid_data(__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(head_100),
                                () -> {
                                    fields_177 = __core__tailList__safe(fields_176);
                                    __core__chooseList(fields_177, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__activity = (self_248) -> {
        __module__ReqtsData__SpendingActivity[]__from_data(__module__ReqtsData__SpendingActivity[]__UpdatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_248))
    };
    __module__ReqtsPolicy__DelegateActivity[]__MintingActivities____is = (data_299) -> {
        __helios__common__enum_tag_equals(data_299, 3)
    };
    __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2 = (data_300) -> {
        __core__chooseData(data_300, () -> {
            pair_83 = __core__unConstrData__safe(data_300);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_83), 3),
                () -> {
                    data_301 = __core__listData(__core__sndPair(pair_83));
                    __core__chooseData(data_301, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_178 = __core__unListData__safe(data_301);
                        __core__chooseList(fields_178, () -> {
                            false
                        }, () -> {
                            head_101 = __core__headList__safe(fields_178);
                            __core__ifThenElse(
                                __module__ReqtsData__MintingActivity[]__is_valid_data(__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_2)(head_101),
                                () -> {
                                    fields_179 = __core__tailList__safe(fields_178);
                                    __core__chooseList(fields_179, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__activity = (self_249) -> {
        __module__ReqtsData__MintingActivity[]__from_data(__module__ReqtsData__MintingActivity[]__CreatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_249))
    };
    __module__ReqtsPolicy__DelegateActivity[]__BurningActivities____is = (data_302) -> {
        __helios__common__enum_tag_equals(data_302, 4)
    };
    __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2 = (data_303) -> {
        __core__chooseData(data_303, () -> {
            pair_84 = __core__unConstrData__safe(data_303);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_84), 4),
                () -> {
                    data_304 = __core__listData(__core__sndPair(pair_84));
                    __core__chooseData(data_304, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_180 = __core__unListData__safe(data_304);
                        __core__chooseList(fields_180, () -> {
                            false
                        }, () -> {
                            head_102 = __core__headList__safe(fields_180);
                            __core__ifThenElse(
                                __module__ReqtsData__BurningActivity[]__is_valid_data(__module__ReqtsData__BurningActivity[]__DeletingRecord__is_valid_data_1)(head_102),
                                () -> {
                                    fields_181 = __core__tailList__safe(fields_180);
                                    __core__chooseList(fields_181, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is = (data_305) -> {
        __helios__common__enum_tag_equals(data_305, 5)
    };
    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2 = (data_306) -> {
        __core__chooseData(data_306, () -> {
            pair_85 = __core__unConstrData__safe(data_306);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_85), 5),
                () -> {
                    data_307 = __core__listData(__core__sndPair(pair_85));
                    __core__chooseData(data_307, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_182 = __core__unListData__safe(data_307);
                        __core__chooseList(fields_182, () -> {
                            false
                        }, () -> {
                            head_103 = __core__headList__safe(fields_182);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_103),
                                () -> {
                                    fields_183 = __core__tailList__safe(fields_182);
                                    __core__chooseList(fields_183, () -> {
                                        false
                                    }, () -> {
                                        head_104 = __core__headList__safe(fields_183);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_104),
                                            () -> {
                                                fields_184 = __core__tailList__safe(fields_183);
                                                __core__chooseList(fields_184, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__seed = (self_250) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_250))
    };
    __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__dataType = (self_251) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_251))
    };
    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is = (data_308) -> {
        __helios__common__enum_tag_equals(data_308, 6)
    };
    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2 = (data_309) -> {
        __core__chooseData(data_309, () -> {
            pair_86 = __core__unConstrData__safe(data_309);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_86), 6),
                () -> {
                    data_310 = __core__listData(__core__sndPair(pair_86));
                    __core__chooseData(data_310, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_185 = __core__unListData__safe(data_310);
                        __core__chooseList(fields_185, () -> {
                            false
                        }, () -> {
                            head_105 = __core__headList__safe(fields_185);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_105),
                                () -> {
                                    fields_186 = __core__tailList__safe(fields_185);
                                    __core__chooseList(fields_186, () -> {
                                        false
                                    }, () -> {
                                        head_106 = __core__headList__safe(fields_186);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_106),
                                            () -> {
                                                fields_187 = __core__tailList__safe(fields_186);
                                                __core__chooseList(fields_187, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_252) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_252))
    };
    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__recId = (self_253) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_253))
    };
    __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is = (data_311) -> {
        __helios__common__enum_tag_equals(data_311, 7)
    };
    __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2 = (data_312) -> {
        __core__chooseData(data_312, () -> {
            pair_87 = __core__unConstrData__safe(data_312);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_87), 7),
                () -> {
                    data_313 = __core__listData(__core__sndPair(pair_87));
                    __core__chooseData(data_313, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_188 = __core__unListData__safe(data_313);
                        __core__chooseList(fields_188, () -> {
                            false
                        }, () -> {
                            head_107 = __core__headList__safe(fields_188);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_107),
                                () -> {
                                    fields_189 = __core__tailList__safe(fields_188);
                                    __core__chooseList(fields_189, () -> {
                                        false
                                    }, () -> {
                                        head_108 = __core__headList__safe(fields_189);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_108),
                                            () -> {
                                                fields_190 = __core__tailList__safe(fields_189);
                                                __core__chooseList(fields_190, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__recId = (self_254) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_254))
    };
    __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities____is = (data_314) -> {
        __helios__common__enum_tag_equals(data_314, 8)
    };
    __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2 = (data_315) -> {
        __core__chooseData(data_315, () -> {
            pair_88 = __core__unConstrData__safe(data_315);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_88), 8),
                () -> {
                    data_316 = __core__listData(__core__sndPair(pair_88));
                    __core__chooseData(data_316, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_191 = __core__unListData__safe(data_316);
                        __core__chooseList(fields_191, () -> {
                            false
                        }, () -> {
                            head_109 = __core__headList__safe(fields_191);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_109),
                                () -> {
                                    fields_192 = __core__tailList__safe(fields_191);
                                    __core__chooseList(fields_192, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__activities = (self_255) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_255))
    };
    __helios__list[__helios__txinput]__for_each = (self_256) -> {
        (fn_29) -> {
            recurse_99 = (recurse_98, lst_27) -> {
                __core__chooseList(lst_27, () -> {
                    ()
                }, () -> {
                    __core__chooseUnit(fn_29(__helios__txinput__from_data(__core__headList__safe(lst_27))), recurse_98(recurse_98, __core__tailList__safe(lst_27)))
                })()
            };
            recurse_99(recurse_99, self_256)
        }
    };
    __helios__list[__helios__txinput]__filter = (self_257) -> {
        (fn_30) -> {
            __helios__common__filter_list(self_257, (item_14) -> {
                fn_30(__helios__txinput__from_data(item_14))
            })
        }
    };
    __module__ReqtsPolicy__DelegateActivity[]__additionalDelegateValidation = (self_258) -> {
        (priorMddd, cctx) -> {
            __core__chooseUnit(__helios__print("  -- addl dgt validity check"), __helios__bool__or(() -> {
                __cond_56 = self_258;
                __core__ifThenElse(
                    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_56),
                    () -> {
                        (__lhs_0_121) -> {
                            true
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_56),
                            () -> {
                                (__lhs_0_120) -> {
                                    __helios__error("unreachable")
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __module__ReqtsPolicy__DelegateActivity[]__MintingActivities____is(__cond_56),
                                    () -> {
                                        (__lhs_0_118) -> {
                                            VMA = __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__activity(__lhs_0_118);
                                            __cond_58 = VMA;
                                            __lhs_0_119 = __cond_58;
                                            seed_3 = __module__ReqtsData__MintingActivity[]__CreatingRecord__seed(__lhs_0_119);
                                            __core__chooseUnit(__helios__print("creating reqt record...
"), mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);
                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "can't"), tokenName_4 = mkTn("reqt");
                                            newReqt = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1(cctx)(__helios__string__encode_utf8(tokenName_4)());
                                            reqtData_1 = __module__ReqtsData__ReqtData[]__from_data(__helios__txoutputdatum__inline(__helios__txoutput__datum(newReqt)));
                                            __core__chooseUnit(__helios__assert(__helios__duration____leq(__helios__time____sub(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), __helios__timerange__start(__helios__tx__time_range(__helios__scriptcontext__tx))), __helios__duration__HOUR), "txn duration err"), acceptableExpiry = __module__ReqtsPolicy__daysInFuture(73);
                                            discountEnds = __module__ReqtsData__ReqtData[]__mustFreshenBy(reqtData_1);
                                            __core__chooseUnit(__helios__assert(__helios__timerange__contains(acceptableExpiry)(discountEnds), __helios__string____add("wrong discount expiry date too late seconds: ", __helios__int__show(__helios__duration____div1(__helios__time____sub(discountEnds, __helios__timerange__end(acceptableExpiry)), __helios__duration__SECOND))())), __helios__bool__and(() -> {
                                                __module__ReqtsData__ReqtData[]__validate(reqtData_1)()
                                            }, () -> {
                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__ReqtsData__DelegateDatum[]__IsDelegation__dd(priorMddd)), seed_3, __core__mkCons(__helios__string____to_data("reqt"), __core__mkNilData(())), true, mkTn, false, (), false, (), true, false, false, (), false, ())
                                            })))))
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities____is(__cond_56),
                                            () -> {
                                                (__lhs_0_114) -> {
                                                    VSA = __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__activity(__lhs_0_114);
                                                    __core__chooseUnit(__helios__print(__helios__string____add("capo mph: ", __helios__mintingpolicyhash__show(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__ReqtsData__DelegateDatum[]__IsDelegation__dd(priorMddd)))())), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "can't"), __core__chooseUnit(__helios__print(__helios__string____add("
capo addr", __helios__address__show(__helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(cctx)()))())), __core__chooseUnit(__helios__print("
"), __cond_57 = VSA;
                                                    __lhs_0_115 = __cond_57;
                                                    recId_6 = __module__ReqtsData__SpendingActivity[]__UpdatingRecord__id(__lhs_0_115);
                                                    hasDD_2 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx)(true, "reqt", true, recId_6);
                                                    hasDDOutput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate(cctx)("reqt", true, recId_6);
                                                    __core__chooseUnit(__helios__list[__helios__txinput]__for_each(__helios__list[__helios__txinput]__filter(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_2))((utxo_6) -> {
                                                        reqtData = __module__ReqtsData__ReqtData[]__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_6)));
                                                        updatedUtxo = __helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))(hasDDOutput);
                                                        updatedReqt = __module__ReqtsData__ReqtData[]__from_data(__helios__txoutputdatum__inline(__helios__txoutput__datum(updatedUtxo)));
                                                        __lhs_0_116 = __helios__value__get_lovelace(__helios__txinput__value(utxo_6))();
                                                        __lhs_0_117 = __helios__value__get_lovelace(__helios__txoutput__value(updatedUtxo))();
                                                        freshExpiry = __module__ReqtsPolicy__daysInFuture(73);
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("changes the expiration date on each update", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("uses the expiration-date policy from settings", false, ()), __core__ifThenElse(
                                                            __helios__time____gt(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), __module__ReqtsData__ReqtData[]__mustFreshenBy(reqtData)),
                                                            () -> {
                                                                __core__chooseUnit(__helios__print("  -- reqt expired.  freshening.
"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("updates the expiration date if it's expired", false, ()), __helios__assert(__helios__timerange__contains(freshExpiry)(__module__ReqtsData__ReqtData[]__mustFreshenBy(updatedReqt)), "wrong expiry date @expired")))
                                                            },
                                                            () -> {
                                                                () -> {
                                                                    ()
                                                                }()
                                                            }
                                                        )()))
                                                    }), true)))))
                                                }
                                            },
                                            () -> {
                                                (__39) -> {
                                                    false
                                                }
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()
                    }
                )()(__cond_56)
            }, () -> {
                __helios__bytearray____eq(__helios__tx__serialize(__helios__scriptcontext__tx)(), __module__ReqtsData__DelegateDatum[]__IsDelegation__serialize(priorMddd)())
            }))
        }
    };
    __module__ReqtsPolicy__DelegateActivity[]__otherDatumValidation = (self_259) -> {
        (_priorMdd) -> {
            neverTriggered = () -> {
                __helios__error("never called")
            };
            __cond_59 = self_259;
            __core__ifThenElse(
                __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_59),
                () -> {
                    (__lhs_0_123) -> {
                        neverTriggered()
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_59),
                        () -> {
                            (__lhs_0_122) -> {
                                neverTriggered()
                            }
                        },
                        () -> {
                            (__40) -> {
                                false
                            }
                        }
                    )()
                }
            )()(__cond_59)
        }
    };
    __module__BasicDelegate__rev = __helios__int__from_data(__core__iData(1));
    __module__BasicDelegate__instance = #67656e6572616c;
    __module__BasicDelegate__delegateName = __helios__string__from_data(__core__bData(#5265717473506f6c696379));
    __module__BasicDelegate__isMintDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isSpendDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__isDgDataPolicy = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__requiresGovAuthority = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __helios__list[__helios__data]__all = (self_260) -> {
        (fn_31) -> {
            __helios__common__all(self_260, (item_15) -> {
                fn_31(__helios__data__from_data(item_15))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq = (self_261, other_5) -> {
        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_261), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(other_5))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail = __core__tailList;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;
    __helios__option[__helios__assetclass]__unwrap = (self_262) -> {
        () -> {
            __helios__assetclass__from_data(__helios__common__enum_field_0(self_262))
        }
    };
    __helios__option[__helios__assetclass]__some____new = (some_5) -> {
        __core__constrData(0, __helios__common__list_1(__helios__assetclass____to_data(some_5)))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all = (self_263) -> {
        (fn_32) -> {
            __helios__common__all(self_263, (item_16) -> {
                fn_32(__module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_16))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head = (self_264) -> {
        __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList(self_264))
    };
    __helios__map[__helios__bytearray@__helios__int]__show = (self_265) -> {
        () -> {
            recurse_101 = (recurse_100, self_266, first) -> {
                __core__chooseList(self_266, () -> {
                    ""
                }, () -> {
                    __core__appendString(__core__ifThenElse(
                        first,
                        "",
                        ","
                    ), head_110 = __core__headList__safe(self_266);
                    key_data = __core__fstPair(head_110);
                    key_24 = __helios__bytearray__from_data_safe(key_data);
                    value_data = __core__sndPair(head_110);
                    value_7 = __helios__int__from_data_safe(value_data);
                    __core__appendString(__core__appendString(__core__appendString(key_24((valid_8, key_25) -> {
                        __core__ifThenElse(
                            valid_8,
                            () -> {
                                __helios__bytearray__show(key_25)()
                            },
                            () -> {
                                __helios__data__show(key_data)()
                            }
                        )()
                    }), ":"), value_7((valid_7, value_8) -> {
                        __core__ifThenElse(
                            valid_7,
                            () -> {
                                __helios__int__show(value_8)()
                            },
                            () -> {
                                __helios__data__show(value_data)()
                            }
                        )()
                    })), recurse_100(recurse_100, __core__tailList__safe(self_266), false)))
                })()
            };
            __core__appendString("{", __core__appendString(recurse_101(recurse_101, self_265, true), "}"))
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]] = (self_267) -> {
        (fn_33, a0) -> {
            __helios__common__fold(self_267, (prev_4, item_17) -> {
                fn_33(prev_4, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_17))
            }, a0)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__delete = (self_268) -> {
        (key_26) -> {
            key_27 = __helios__bytearray____to_data(key_26);
            recurse_103 = (recurse_102, self_269) -> {
                __core__chooseList(self_269, () -> {
                    self_269
                }, () -> {
                    head_111 = __core__headList__safe(self_269);
                    tail_5 = __core__tailList__safe(self_269);
                    __core__ifThenElse(
                        __core__equalsData(key_27, __core__fstPair(head_111)),
                        () -> {
                            recurse_102(recurse_102, tail_5)
                        },
                        () -> {
                            __core__mkCons(head_111, recurse_102(recurse_102, tail_5))
                        }
                    )()
                })()
            };
            recurse_103(recurse_103, self_268)
        }
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is = (data_317) -> {
        __helios__common__enum_tag_equals(data_317, 0)
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some = (self_270) -> {
        __helios__map[__helios__bytearray@__helios__int]__from_data(__helios__common__enum_field_0(self_270))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe = (self_271) -> {
        (key_28) -> {
            __helios__common__map_get(self_271, __helios__mintingpolicyhash____to_data(key_28), (x_13) -> {
                __core__constrData(0, __helios__common__list_1(x_13))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]] = (self_272) -> {
        (fn_34, a0_1, b0_1) -> {
            __helios__common__fold(self_272, (prev_5, item_18) -> {
                prev_5((a_19, b_22) -> {
                    fn_34(a_19, b_22, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_18))
                })
            }, (callback_9) -> {
                callback_9(a0_1, b0_1)
            })
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_273) -> {
        __helios__common__length(self_273)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head = (self_274) -> {
        head_112 = __core__headList(self_274);
        (callback_10) -> {
            callback_10(__helios__string__from_data(__core__fstPair(head_112)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(head_112)))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail = __core__tailList;
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap = (self_275) -> {
        () -> {
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_275))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_276) -> {
        (key_29) -> {
            key_30 = __helios__string____to_data(key_29);
            recurse_105 = (recurse_104, self_277) -> {
                __core__chooseList(self_277, () -> {
                    self_277
                }, () -> {
                    head_113 = __core__headList__safe(self_277);
                    tail_6 = __core__tailList__safe(self_277);
                    __core__ifThenElse(
                        __core__equalsData(key_30, __core__fstPair(head_113)),
                        () -> {
                            recurse_104(recurse_104, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_113, recurse_104(recurse_104, tail_6))
                        }
                    )()
                })()
            };
            recurse_105(recurse_105, self_276)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq = (self_278, other_6) -> {
        __core__equalsData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_278), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(other_6))
    };
    __helios__option[__helios__string]__unwrap = (self_279) -> {
        () -> {
            __helios__string__from_data(__helios__common__enum_field_0(self_279))
        }
    };
    __helios__option[__helios__bytearray]__unwrap = (self_280) -> {
        () -> {
            __helios__bytearray__from_data(__helios__common__enum_field_0(self_280))
        }
    };
    __module__BasicDelegate__main_1 = (__module__BasicDelegate__main) -> {
        (mdd, activity_3) -> {
            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(" \u{1F6A5}\u2753delegate: ", __module__BasicDelegate__delegateName), "
")), (result_2) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("\u{1F6A5}\u{1F7E2} delegate: ", __module__BasicDelegate__delegateName), ": ok!
")), result_2)
            }(__cond_60 = mdd;
            __core__ifThenElse(
                __module__ReqtsData__DelegateDatum[]__capoStoredData____is(__cond_60),
                () -> {
                    (__lhs_0_261) -> {
                        __helios__error("Data Delegates must never store the capoStoredData variant in the script; used only for data-structuring capo-stored utxo datum")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__ReqtsData__DelegateDatum[]__IsDelegation____is(__cond_60),
                        () -> {
                            (isD) -> {
                                dd = __module__ReqtsData__DelegateDatum[]__IsDelegation__dd(isD);
                                __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __helios__int__serialize(__module__BasicDelegate__rev)()), "uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __module__BasicDelegate__instance), "uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd), __helios__string__encode_utf8(__module__BasicDelegate__delegateName)()), "uniqueness"), myDgTkn = __helios__value__show(__helios__txinput__value(__helios__scriptcontext__get_current_input()))(false, ());
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- is spending dgTkn ", myDgTkn)), (checkNonDelegatedActivities) -> {
                                    __core__chooseUnit(__helios__assert(checkNonDelegatedActivities, "checkNonDelegatedActivities failed"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... final checks:", false, ()), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__ReqtsData__DelegateDatum[]__IsDelegation__dd(isD))))();
                                    __helios__bool__and(() -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__isDgDataPolicy),
                                            () -> {
                                                true
                                            },
                                            () -> {
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__BasicDelegate__requiresGovAuthority),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_7)())()
                                                            }()
                                                        }
                                                    )()
                                                }()
                                            }
                                        )()
                                    }, () -> {
                                        __core__ifThenElse(
                                            __helios__bool__and(() -> {
                                                __module__StellarHeliosHelpers__bREQT("... additionalDelegateValidation", false, ())
                                            }, () -> {
                                                __module__ReqtsPolicy__DelegateActivity[]__additionalDelegateValidation(activity_3)(isD, cctx_7)
                                            }),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation ok!
")), true)
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__error(__helios__string____add(__helios__string____add("delegate: ", __module__BasicDelegate__delegateName), ": additionalDelegateValidation returned false (without any thrown error)"))
                                                }()
                                            }
                                        )()
                                    })))
                                }(__cond_62 = activity_3;
                                __core__ifThenElse(
                                    __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_62),
                                    () -> {
                                        (__lhs_0_239) -> {
                                            activities_2 = __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__activities(__lhs_0_239);
                                            cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                            mintDgtCheck_1 = __core__ifThenElse(
                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __helios__list[__helios__data]__all(activities_2)((rawActivity) -> {
                                                                    a_20 = __module__ReqtsPolicy__DelegateActivity[]__from_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity);
                                                                    __core__chooseUnit(__helios__print("  -- mintDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the mint delegate, only {Create,Delete}DelegatedData activities are valid in multi-activities", false, ()), __cond_111 = a_20;
                                                                    __core__ifThenElse(
                                                                        __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_111),
                                                                        () -> {
                                                                            (__lhs_0_245) -> {
                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_20)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_111),
                                                                                () -> {
                                                                                    (__lhs_0_244) -> {
                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_20)
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_111),
                                                                                        () -> {
                                                                                            (__lhs_0_243) -> {
                                                                                                __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_111),
                                                                                                () -> {
                                                                                                    (__lhs_0_242) -> {
                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_111),
                                                                                                        () -> {
                                                                                                            (__lhs_0_241) -> {
                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_111),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_240) -> {
                                                                                                                        __helios__error("multi:multi: nesting not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__76) -> {
                                                                                                                        __helios__error("multi:non-minting activities are invalid for mintDgt")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_111)))
                                                                })
                                                            }()
                                                        }
                                                    )()
                                                }
                                            )();
                                            spendDgtCheck_1 = __core__ifThenElse(
                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            () -> {
                                                                __helios__list[__helios__data]__all(activities_2)((rawActivity_1) -> {
                                                                    a_21 = __module__ReqtsPolicy__DelegateActivity[]__from_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_1);
                                                                    __core__chooseUnit(__helios__print("  -- spendDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities", false, ()), __cond_112 = a_21;
                                                                    __core__ifThenElse(
                                                                        __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_112),
                                                                        () -> {
                                                                            (__lhs_0_251) -> {
                                                                                __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                    __module__BasicDelegate__isSpendDelegate
                                                                                }, () -> {
                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(false, ())
                                                                                }), "UpdatingDelegatedData only ok at level-1 spendDgt"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_21))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_112),
                                                                                () -> {
                                                                                    (__lhs_0_250) -> {
                                                                                        __helios__error("CreatingDelegatedData only ok in mintDgt")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_112),
                                                                                        () -> {
                                                                                            (__lhs_0_249) -> {
                                                                                                __helios__error("TODO: validate spending the datum for burn")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_112),
                                                                                                () -> {
                                                                                                    (__lhs_0_248) -> {
                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_112),
                                                                                                        () -> {
                                                                                                            (__lhs_0_247) -> {
                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_112),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_246) -> {
                                                                                                                        __helios__error("multi:multi: nesting not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__77) -> {
                                                                                                                        __helios__error("multi: non-spending activities are invalid for spendDgt")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_112)))
                                                                })
                                                            }()
                                                        }
                                                    )()
                                                }
                                            )();
                                            dgDataPolicyCheck = __core__ifThenElse(
                                                __helios__bool__or(() -> {
                                                    __module__BasicDelegate__isMintDelegate
                                                }, () -> {
                                                    __module__BasicDelegate__isSpendDelegate
                                                }),
                                                () -> {
                                                    __core__chooseUnit(__helios__assert(__module__BasicDelegate__isDgDataPolicy, "ack! delegated-data policy can't be a mint/spend delegate"), true)
                                                },
                                                () -> {
                                                    () -> {
                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("assert isDgDataPolicy"), __helios__list[__helios__data]__all(activities_2)((rawActivity_2) -> {
                                                            a_22 = __module__ReqtsPolicy__DelegateActivity[]__from_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(rawActivity_2);
                                                            __core__chooseUnit(__helios__print("  -- dgDataPolicy checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("in DgDataPolicy, only Minting/Burning/Spending activities are valid", false, ()), __cond_113 = a_22;
                                                            __core__ifThenElse(
                                                                __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_113),
                                                                () -> {
                                                                    (__lhs_0_260) -> {
                                                                        __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt (use a SpendingActivity in dgDataPolicy)")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_113),
                                                                        () -> {
                                                                            (__lhs_0_259) -> {
                                                                                __helios__error("CreatingDelegatedData only ok in mintDgt (use a MintingActivity in dgDataPolicy)")
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_113),
                                                                                () -> {
                                                                                    (__lhs_0_258) -> {
                                                                                        __helios__error("DeletingDelegatedData only ok at mint/spend dgt (use BurningActivity in dgDataPolicy)")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities____is(__cond_113),
                                                                                        () -> {
                                                                                            (__lhs_0_257) -> {
                                                                                                __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_22)
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__ReqtsPolicy__DelegateActivity[]__MintingActivities____is(__cond_113),
                                                                                                () -> {
                                                                                                    (__lhs_0_256) -> {
                                                                                                        __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_22)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__ReqtsPolicy__DelegateActivity[]__BurningActivities____is(__cond_113),
                                                                                                        () -> {
                                                                                                            (__lhs_0_255) -> {
                                                                                                                __core__chooseUnit(__helios__assert(false, "TODO: support multi:BurningActivities for dgDataPolicy or other delegate"), __module__BasicDelegate__main(__module__BasicDelegate__main)(mdd, a_22))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_113),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_254) -> {
                                                                                                                        __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_113),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_253) -> {
                                                                                                                                __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_252) -> {
                                                                                                                                __helios__error("multi:multi: nesting not ok")
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_113)))
                                                        }))
                                                    }()
                                                }
                                            )();
                                            __helios__bool__and(() -> {
                                                __helios__bool__and(() -> {
                                                    mintDgtCheck_1
                                                }, () -> {
                                                    spendDgtCheck_1
                                                })
                                            }, () -> {
                                                dgDataPolicyCheck
                                            })
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_62),
                                            () -> {
                                                (__lhs_0_233) -> {
                                                    innerActivity = __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity(__lhs_0_233);
                                                    __cond_109 = innerActivity;
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_109),
                                                        () -> {
                                                            (__lhs_0_237) -> {
                                                                seed_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed(__lhs_0_237);
                                                                purpose_8 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose(__lhs_0_237);
                                                                BURNED = __helios__int____neg(1);
                                                                otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), __module__CapoDelegateHelpers__DelegationDetail[]__tn(dd)), BURNED);
                                                                tnStr_3 = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd))();
                                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("checking ReplacingMe on ", purpose_8), ": "), tnStr_3)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("needs the charter to be approving the the new mint-delegate", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("  ^^^ should queue the new delegate in pendingChanges"), cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                (isUpdatingCharter) -> {
                                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_9, __core__mkCons(__helios__string____to_data(purpose_8), __core__mkNilData(())), false, (), false, (), true, otherMintedValue_2, true, false, true, false, false, ());
                                                                    __helios__bool__and(() -> {
                                                                        isMintingOk
                                                                    }, () -> {
                                                                        isUpdatingCharter
                                                                    })
                                                                }(__cond_110 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5)();
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_110),
                                                                    () -> {
                                                                        (__lhs_0_238) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__75) -> {
                                                                            false
                                                                        }
                                                                    }
                                                                )()(__cond_110)))))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_109),
                                                                () -> {
                                                                    (__lhs_0_236) -> {
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... Retiring delegate authority token", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- must burn the indicated authority token", false, ()), __helios__int____eq(__helios__value__get(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken(dd)()), __helios__int____neg(1))))
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_234) -> {
                                                                        __lhs_0_235 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), false, ()), 0);
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("import settings from delegate and validate them"), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                            false
                                                                        }, () -> {
                                                                            true
                                                                        }), "ValidateSettings temporarily disabled"), false))
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()(__cond_109)
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_62),
                                                    () -> {
                                                        (__lhs_0_133) -> {
                                                            dCLA = __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_133);
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with any CapoLifecycle activity: ", false, ()), cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))())();
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the Capo's CharterData activity to match this delegate's activity", false, ()), __core__chooseUnit(__cond_107 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4)();
                                                            __core__ifThenElse(
                                                                __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_107),
                                                                () -> {
                                                                    (__lhs_0_232) -> {
                                                                        cCLA = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_232);
                                                                        __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cCLA, dCLA), "activity mismatch with Capo's CharterData activity"), __helios__print("  -- ok, CharterData capoLifecycleActivity matches ours
"))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_107),
                                                                        () -> {
                                                                            (__lhs_0_230) -> {
                                                                                __cond_108 = dCLA;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_108),
                                                                                    () -> {
                                                                                        (__lhs_0_231) -> {
                                                                                            __helios__print("ok, Capo:updatingCharter works for now with CreatingDelegate
")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__74) -> {
                                                                                            __helios__error("when Capo is UpdatingCharter, the mintDelegate must be CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_108)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__73) -> {
                                                                                __helios__error("this activity must match the capo's own CharterData activity")
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_107), neededRole = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx_4)(dCLA);
                                                            (myCurrentRole) -> {
                                                                __helios__bool__and(() -> {
                                                                    __cond_64 = dCLA;
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_64),
                                                                        () -> {
                                                                            (__lhs_0_226) -> {
                                                                                seed_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_226);
                                                                                purpose_7 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_226);
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("XXX it should output the new delegate token to the Capo as a PendingDelegate datum"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... here in the MintDgt: validates creation of UUT for the new delegate, aligned to the purpose indicated", false, ()), mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);
                                                                                __cond_105 = myCurrentRole;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_105),
                                                                                    () -> {
                                                                                        (__lhs_0_227) -> {
                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates the new delegate's UUT is minted", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_8, __core__mkCons(__helios__string____to_data(purpose_7), __core__mkNilData(())), true, mkTn_1, false, (), false, (), true, false, false, (), false, ()),
                                                                                                () -> {
                                                                                                    __helios__print("  -- ok, minted the new delegate's UUT
")
                                                                                                },
                                                                                                () -> {
                                                                                                    () -> {
                                                                                                        ()
                                                                                                    }()
                                                                                                }
                                                                                            )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the UUT must have the right disposition (is it checked somewhere else?!?)", false, ()), __cond_106 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)()))(purpose_7);
                                                                                            __core__ifThenElse(
                                                                                                __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_106),
                                                                                                () -> {
                                                                                                    (__lhs_0_229) -> {
                                                                                                        __helios__error("the new delegate is not present in the Capo's named-delegates list")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_228) -> {
                                                                                                        dgtLink_3 = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_228);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_3), mkTn_1(purpose_7)), "uutName mismatch"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_106))))
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__72) -> {
                                                                                            __helios__error("unreachable wrong role for CreatingDelegate")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_105)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_64),
                                                                                () -> {
                                                                                    (__lhs_0_174) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for the addingPendingDgt activity:", false, ()), charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new pending-delegate action is found at the head of the new change-list", false, ()), oldPendingChanges = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4);
                                                                                        nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                        nextChangeList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_2);
                                                                                        newChange = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head(nextChangeList);
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support otherManifestChange here"), __lhs_0_175 = __helios__common__assert_constr_index(newChange, 0);
                                                                                        __lhs_0_0_2 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_175);
                                                                                        action = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(__lhs_0_0_2);
                                                                                        role_2 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_2);
                                                                                        OdgtLink = __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(__lhs_0_0_2);
                                                                                        (newDgtRoleName) -> {
                                                                                            __core__chooseUnit(__cond_103 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_103),
                                                                                                () -> {
                                                                                                    (__lhs_0_224) -> {
                                                                                                        __core__chooseUnit(__helios__print("   -- another delegate-role check would be redundant."), __cond_104 = myCurrentRole;
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_104),
                                                                                                            () -> {
                                                                                                                (__lhs_0_225) -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that the delegate queued for removal is present in the Capo's charterData", false, ()), __helios__error("implement me"))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__71) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_104))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__70) -> {
                                                                                                        __helios__assert(true, "no way l")
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_103), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the change-list should be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail(nextChangeList), oldPendingChanges), "invalid update of pendingChanges; the new action must be prepended to the existing list."), __cond_102 = action;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_102),
                                                                                                () -> {
                                                                                                    (__lhs_0_223) -> {
                                                                                                        __helios__error("unreachable")
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_102),
                                                                                                        () -> {
                                                                                                            (__lhs_0_222) -> {
                                                                                                                seed_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed(__lhs_0_222);
                                                                                                                purpose_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose(__lhs_0_222);
                                                                                                                idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_222);
                                                                                                                (callback_14) -> {
                                                                                                                    callback_14(seed_7, purpose_6, idPrefix_9)
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_221) -> {
                                                                                                                seed_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed(__lhs_0_221);
                                                                                                                purpose_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose(__lhs_0_221);
                                                                                                                idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_221);
                                                                                                                (callback_13) -> {
                                                                                                                    callback_13(seed_6, purpose_5, idPrefix_8)
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(__cond_102)((seed_5, purpose_4, pendingActionIdPrefix) -> {
                                                                                                (possibleMintDgtVerifications) -> {
                                                                                                    (otherPossibleVerifications) -> {
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("TEMPORARY: only one pending change is allowed", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(oldPendingChanges), 0), "only one pending change is allowed for now (avoids resource-exhaustion)"), __helios__bool__and(() -> {
                                                                                                            __helios__bool__and(() -> {
                                                                                                                true
                                                                                                            }, () -> {
                                                                                                                possibleMintDgtVerifications
                                                                                                            })
                                                                                                        }, () -> {
                                                                                                            otherPossibleVerifications
                                                                                                        })))
                                                                                                    }(__cond_91 = myCurrentRole;
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_91),
                                                                                                        () -> {
                                                                                                            (__lhs_0_220) -> {
                                                                                                                __helios__error(__helios__string____add(__helios__string____add("this block had been run by spendDgt, but
", "... it's much cheaper to let the MintDgt do it ...
"), "... since it's already involved anyway"))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_91),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_194) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a queued change to duplicate any other pending entry for the same delegate name", false, ()), isNotADuplicate = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4))((pdChange_2) -> {
                                                                                                                            __cond_92 = pdChange_2;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_92),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_195) -> {
                                                                                                                                        __lhs_0_0_3 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_195);
                                                                                                                                        pendingRole = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_3);
                                                                                                                                        __cond_93 = pendingRole;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_93),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_196) -> {
                                                                                                                                                    changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_196);
                                                                                                                                                    __helios__string____neq(changingDgtName, newDgtRoleName)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__64) -> {
                                                                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_93)
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__63) -> {
                                                                                                                                        __helios__error("otherManifestChange not yet supported")
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_92)
                                                                                                                        });
                                                                                                                        __core__chooseUnit(__helios__assert(isNotADuplicate, __helios__string____add("already has a pending change for this delegate: ", newDgtRoleName)), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                        (possibleReplacementIsCorrect) -> {
                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                    true
                                                                                                                                }, () -> {
                                                                                                                                    isNotADuplicate
                                                                                                                                })
                                                                                                                            }, () -> {
                                                                                                                                possibleReplacementIsCorrect
                                                                                                                            })
                                                                                                                        }(__cond_94 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_94),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_218) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow an Add for an existing policy name", false, ()), __core__chooseUnit(__cond_101 = existingRoleEntryMaybe;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_101),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_219) -> {
                                                                                                                                                __helios__error(__helios__string____add("queuing Add failed: already has a delegate for policy name: ", newDgtRoleName))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__69) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_101), true))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_94),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_199) -> {
                                                                                                                                            replacesDgt = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt(__lhs_0_199);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("For Replace on an existing delegate... ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: invariants cannot be replaced", false, ()), __core__chooseUnit(__cond_100 = role_2;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_100),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_217) -> {
                                                                                                                                                        __helios__error("cannot Replace role: MintInvariant")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_100),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_216) -> {
                                                                                                                                                                __helios__error("cannot Replace role: SpendInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_100),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_215) -> {
                                                                                                                                                                        __helios__error("HandledByCapoOnly role is not applicable in delegate context")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__68) -> {
                                                                                                                                                                        __helios__print("  -- ok (not trying to replace an invariant)")
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_100), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- doesn't allow a Replace if the policy-name doesn't already exist", false, ()), (existingDgtLink_1) -> {
                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: the PendingDelegateAction's role + replacesDgt must match the existing delegate's authority token", false, ()), (existingDgTkn) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__helios__assetclass____eq(replacesDgt, __helios__option[__helios__assetclass]__unwrap(existingDgTkn)()), __helios__string____add(__helios__string____add(__helios__string____add("the current ", __cond_99 = role_2;
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_99),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_214) -> {
                                                                                                                                                                "mint"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_99),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_213) -> {
                                                                                                                                                                        "spend"
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_99),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_212) -> {
                                                                                                                                                                                "dgDataPolicy"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_99),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_211) -> {
                                                                                                                                                                                        "named"
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__67) -> {
                                                                                                                                                                                        "\u2039incontheeiieivable\u203A"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_99)), " delegate's authority token doesn't match the queued action's token name "), __helios__assetclass__show(replacesDgt)())), true)
                                                                                                                                                }(__cond_98 = role_2;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_98),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_210) -> {
                                                                                                                                                            __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_98),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_209) -> {
                                                                                                                                                                    __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_98),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_208) -> {
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: dgDataPolicy: the named policy must be present in the Capo manifest", false, ()), __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_98),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_207) -> {
                                                                                                                                                                                    __helios__error("unreachable: OtherNamedDgt deprecated")
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_98),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_206) -> {
                                                                                                                                                                                            __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_98),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_205) -> {
                                                                                                                                                                                                    __helios__error("unreachable")
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_98),
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_204) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    },
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        (__lhs_0_203) -> {
                                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                )()
                                                                                                                                                                                            }
                                                                                                                                                                                        )()
                                                                                                                                                                                    }
                                                                                                                                                                                )()
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()(__cond_98)))
                                                                                                                                            }(__cond_96 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_96),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_202) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Replace failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_200) -> {
                                                                                                                                                        __lhs_0_0_4 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_200);
                                                                                                                                                        entryType_2 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_4);
                                                                                                                                                        __cond_97 = entryType_2;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_97),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_201) -> {
                                                                                                                                                                    existingDgtLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_201);
                                                                                                                                                                    existingDgtLink
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__66) -> {
                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_97)
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_96))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_197) -> {
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove if the policy-name doesn't already exist", false, ()), __core__chooseUnit(__cond_95 = existingRoleEntryMaybe;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_95),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_198) -> {
                                                                                                                                                        __helios__error(__helios__string____add("queuing Remove failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__65) -> {
                                                                                                                                                        ()
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_95), __helios__error("unreachable: Remove not yet supported")))
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()(__cond_94))))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__62) -> {
                                                                                                                        __helios__error("unreachable")
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()(__cond_91))
                                                                                                }(__cond_84 = myCurrentRole;
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_84),
                                                                                                    () -> {
                                                                                                        (__lhs_0_193) -> {
                                                                                                            true
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_84),
                                                                                                            () -> {
                                                                                                                (__lhs_0_177) -> {
                                                                                                                    __helios__bool__and(() -> {
                                                                                                                        __module__StellarHeliosHelpers__bREQT("(general) the mintDgt checks everything about the mint", false, ())
                                                                                                                    }, () -> {
                                                                                                                        __cond_85 = action;
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_85),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_185) -> {
                                                                                                                                    __core__chooseUnit(__cond_90 = role_2;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_90),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_192) -> {
                                                                                                                                                __helios__error("cannot Remove role: MintDgt")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_90),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_191) -> {
                                                                                                                                                        __helios__error("cannot Remove role: SpendDgt")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_90),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_190) -> {
                                                                                                                                                                __helios__error("cannot Remove role: MintInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_90),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_189) -> {
                                                                                                                                                                        __helios__error("cannot Remove role: SpendInvariant")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_90),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_188) -> {
                                                                                                                                                                                __helios__assert(false, "todo")
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_90),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_187) -> {
                                                                                                                                                                                        __helios__assert(false, "todo")
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_90),
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__lhs_0_186) -> {
                                                                                                                                                                                                __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        () -> {
                                                                                                                                                                                            (__61) -> {
                                                                                                                                                                                                ()
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    )()
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(__cond_90), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove to duplicate an Add or Replace or Remove entry", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("^^^"), __core__chooseUnit(__helios__assert(false, "what else should be checked here?"), false))))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__58) -> {
                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                        false,
                                                                                                                                        () -> {
                                                                                                                                            __helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't")
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            () -> {
                                                                                                                                                ()
                                                                                                                                            }()
                                                                                                                                        }
                                                                                                                                    )(), mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                                                                                    dgTknName = mkTokenName_2(purpose_4);
                                                                                                                                    mintedDgTkn = __helios__bool__and(() -> {
                                                                                                                                        __module__StellarHeliosHelpers__bREQT("the new delegate is created with the indicated authority token", false, ())
                                                                                                                                    }, () -> {
                                                                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_5, __core__mkCons(__helios__string____to_data(purpose_4), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, (), false, (), true, false, false, (), false, ())
                                                                                                                                    });
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new policy-token must match the seed", false, ()), (dgtLink_2) -> {
                                                                                                                                        __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2), dgTknName), __helios__string____add(__helios__string____add(__helios__string____add("uutName mismatch; expected ", dgTknName), " but found "), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2))), delegateTakesOwnership = __module__StellarHeliosHelpers__bREQT("the new policy-delegate-script must take ownership of the dgTkn", true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()));
                                                                                                                                        (possibleExtraReplacementCheck) -> {
                                                                                                                                            __helios__bool__and(() -> {
                                                                                                                                                __helios__bool__and(() -> {
                                                                                                                                                    mintedDgTkn
                                                                                                                                                }, () -> {
                                                                                                                                                    delegateTakesOwnership
                                                                                                                                                })
                                                                                                                                            }, () -> {
                                                                                                                                                possibleExtraReplacementCheck
                                                                                                                                            })
                                                                                                                                        }(__cond_87 = action;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_87),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_180) -> {
                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Replace: the queued change must match the idPrefix of the current delegate ", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VALIDATE this through a unit-test ^"), __core__chooseUnit(__cond_88 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_88),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_182) -> {
                                                                                                                                                                dde = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_182);
                                                                                                                                                                __lhs_0_183 = dde;
                                                                                                                                                                entryType_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_183);
                                                                                                                                                                __cond_89 = entryType_1;
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_89),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_184) -> {
                                                                                                                                                                            idPrefix_7 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_184);
                                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("expects the queued idPrefix to match the existing policy's idPrefix", false, ()), __core__chooseUnit(__helios__print(__helios__string____add("   -- expected: ", idPrefix_7)), __core__chooseUnit(__helios__print(__helios__string____add("   --   actual: ", pendingActionIdPrefix)), __helios__assert(__helios__string____eq(idPrefix_7, pendingActionIdPrefix), "idPrefix mismatch"))))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__60) -> {
                                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_89)
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_181) -> {
                                                                                                                                                                __helios__error(__helios__string____add("no existing dgDataPolicy found with key: ", newDgtRoleName))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_88), true)))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__59) -> {
                                                                                                                                                    true
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_87)))
                                                                                                                                    }(__cond_86 = OdgtLink;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_86),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_179) -> {
                                                                                                                                                __helios__error("missing required delegate link in pending dgt change")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_178) -> {
                                                                                                                                                dl = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_178);
                                                                                                                                                dl
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_86))))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_85)
                                                                                                                    })
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__57) -> {
                                                                                                                    __helios__error("unreachable")
                                                                                                                }
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()(__cond_84))
                                                                                            }))))
                                                                                        }(__cond_83 = role_2;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_83),
                                                                                            () -> {
                                                                                                (__lhs_0_176) -> {
                                                                                                    dgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_176);
                                                                                                    dgtName
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__56) -> {
                                                                                                    __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_83)))))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_64),
                                                                                        () -> {
                                                                                            (__lhs_0_173) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement removePendDgt"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("allows the removal of a queued pending-delegate-change that can't be completed", false, ()), __core__chooseUnit(__helios__assert(false, "not yet implemented"), false)))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_64),
                                                                                                () -> {
                                                                                                    (__lhs_0_150) -> {
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... To commit pending changes:", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariants cannot be replaced", false, ()), pendingChangesList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        previousManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                        nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                        nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData_1);
                                                                                                        __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                                            __module__StellarHeliosHelpers__bREQT("the next-changes list must be empty", false, ())
                                                                                                        }, () -> {
                                                                                                            __helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_1)), 0)
                                                                                                        }), "pendingChanges must be emptied"), spendDgtCheck = __core__ifThenElse(
                                                                                                            __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __core__ifThenElse(
                                                                                                                        __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                        () -> {
                                                                                                                            true
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            () -> {
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...spendDgt: validates that all the pending delegates are installed", false, ()), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]](pendingChangesList)((prevManifestRemainder_1, nextCMEs, pcChange) -> {
                                                                                                                                    (pdChange) -> {
                                                                                                                                        (pendingTypeName) -> {
                                                                                                                                            __core__chooseUnit(__cond_72 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_72),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_159) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Remove: verifies that the delegate queued for removal is now removed from the Capo manifest", false, ()), __cond_75 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(nextCMEs)(pendingTypeName);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_75),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_160) -> {
                                                                                                                                                                    __helios__error(__helios__string____add("queued Remove failed: name still present in next-manifest item: ", pendingTypeName))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__52) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_75))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__49) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- verifies that added & replaced entries are present in the updated map (at its next position)", false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                            __helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(nextCMEs), 0),
                                                                                                                                                            () -> {
                                                                                                                                                                __helios__error("queued Add/Replace failed: no more items in next-manifest map")
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                () -> {
                                                                                                                                                                    ()
                                                                                                                                                                }()
                                                                                                                                                            }
                                                                                                                                                        )(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head(nextCMEs)((CME_key, __lhs_1) -> {
                                                                                                                                                            ME_type = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_1);
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("vv @CME entry: ", CME_key)), __lhs_0_155 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                            ME_policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_155);
                                                                                                                                                            ME_idPrefix = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_155);
                                                                                                                                                            refCount = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_155);
                                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support minting multiple threads of a dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__int____eq(refCount, 1), "refCount must be 1 when adding a new dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__string____eq(pendingTypeName, CME_key), "queued change: name mismatch with next-manifest item"), ME_name = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(ME_policyLink))();
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("    -- ME policy link ", ME_name)), pendingLink = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange))();
                                                                                                                                                            pendingName = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(pendingLink))();
                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("    -- pdChange policy link ", pendingName)), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(ME_policyLink, pendingLink), "queued change: policyLink mismatch with next-manifest item"), (nextIdPrefix) -> {
                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- @each manifest entry: next-manifest's idPrefix must match the queued change", false, ()), __helios__assert(__helios__string____eq(nextIdPrefix, ME_idPrefix), "idPrefix mismatch with next-manifest's dgDataPolicy"))
                                                                                                                                                            }(__cond_73 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_73),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_157) -> {
                                                                                                                                                                        idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_157);
                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- Replace: verifies that the next-manifest no longer has the replaced entry", false, ()), __core__chooseUnit(__cond_74 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))(pendingTypeName);
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_74),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_158) -> {
                                                                                                                                                                                    __helios__error(__helios__string____add("queued Replace failed: duplicate name remaining in next-manifest map: ", pendingTypeName))
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__51) -> {
                                                                                                                                                                                    ()
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        )()(__cond_74), idPrefix_6))
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_73),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_156) -> {
                                                                                                                                                                                idPrefix_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_156);
                                                                                                                                                                                idPrefix_5
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__50) -> {
                                                                                                                                                                                __helios__error("unreachable")
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()(__cond_73)))))))))
                                                                                                                                                        })))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_72), __cond_71 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_71),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_154) -> {
                                                                                                                                                        (callback_12) -> {
                                                                                                                                                            callback_12(prevManifestRemainder_1, __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__48) -> {
                                                                                                                                                        (callback_11) -> {
                                                                                                                                                            callback_11(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(prevManifestRemainder_1)(pendingTypeName), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_71))
                                                                                                                                        }(__cond_70 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_70),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_153) -> {
                                                                                                                                                    typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_153);
                                                                                                                                                    __core__chooseUnit(__helios__print("  -- ok: DgDataPolicy in commitPendingChanges"), typeName_4)
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__47) -> {
                                                                                                                                                    __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_70))
                                                                                                                                    }(__cond_69 = pcChange;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_69),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_152) -> {
                                                                                                                                                dgtChange = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_152);
                                                                                                                                                dgtChange
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_151) -> {
                                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_69))
                                                                                                                                }, previousManifest, nextManifest)((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                                    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(nextManifestRemainder, prevManifestRemainder)
                                                                                                                                }))
                                                                                                                            }()
                                                                                                                        }
                                                                                                                    )()
                                                                                                                }()
                                                                                                            }
                                                                                                        )();
                                                                                                        mintDgtCheck = __core__ifThenElse(
                                                                                                            __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                    () -> {
                                                                                                                        true
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        () -> {
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... mintDgt: validates that all the removed dgTkns are burned", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the txn must have all the expected burns", false, ()), mint = __helios__value__to_map(__helios__tx__minted(__helios__scriptcontext__tx))();
                                                                                                                            mintThisPolicy = __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe(mint)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd));
                                                                                                                            len = __helios__int____sub(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(mint), 1);
                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                __helios__int____gt(len, 1),
                                                                                                                                () -> {
                                                                                                                                    __core__chooseUnit(__helios__print(__helios__value__show(__helios__tx__minted(__helios__scriptcontext__tx))(false, ())), __helios__error(__helios__string____add("currently supporting only one minting policy being burned in the tx ", __helios__int__show(len)())))
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    }()
                                                                                                                                }
                                                                                                                            )(), (observedTokenBurn) -> {
                                                                                                                                remainingMint = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]](pendingChangesList)((foldingBurn, pcChange_1) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS the spendDgt to check details of Replace activities", false, ()), (pdChange_1) -> {
                                                                                                                                        __cond_78 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange_1);
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_78),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_165) -> {
                                                                                                                                                    typeName_5 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_165);
                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("  -- ok: DgDataPolicy in commitPendingChanges: ", typeName_5)), __cond_79 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_79),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_172) -> {
                                                                                                                                                                foldingBurn
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__54) -> {
                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that a delegate queued for removal or replacement is burned", false, ()), __cond_80 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest)(typeName_5);
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_80),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_171) -> {
                                                                                                                                                                            __helios__error(__helios__string____add("queued Remove failed: not present in previous-manifest map: ", typeName_5))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_166) -> {
                                                                                                                                                                            __lhs_0_0_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_166);
                                                                                                                                                                            ME_type_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_1);
                                                                                                                                                                            tn_5 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0_1);
                                                                                                                                                                            mph_29 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0_1);
                                                                                                                                                                            __cond_81 = mph_29;
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __helios__option[__helios__mintingpolicyhash]__some____is(__cond_81),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_170) -> {
                                                                                                                                                                                        __core__chooseUnit(__helios__print("    -- TODO: manifest entry with other-mph: allow optional burn"), foldingBurn)
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__55) -> {
                                                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("each pending change must have a name recognized by the manifest", false, ()), __lhs_0_167 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                                                        refCount_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_167);
                                                                                                                                                                                        tnStr_2 = __helios__bytearray__decode_utf8_safe(tn_5)();
                                                                                                                                                                                        __cond_82 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn)(tn_5);
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __helios__option[__helios__int]__none____is(__cond_82),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_169) -> {
                                                                                                                                                                                                    __helios__error(__helios__string____add("queued Remove/Replace failed: no burn, or double-burn: ", tnStr_2))
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_168) -> {
                                                                                                                                                                                                    burningCount = __helios__option[__helios__int]__some__some(__lhs_0_168);
                                                                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    -- ok: BURN \u{1F525}", __helios__int__show(burningCount)()), "\xD7\u{1F4B4} "), tnStr_2)), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                                        __helios__int____neq(__helios__int____sub(0, refCount_1), burningCount),
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("queued Remove/Replace failed: expected burn of ", __helios__int__show(refCount_1)()), "\xD7\u{1F4B4} "), tnStr_2))
                                                                                                                                                                                                        },
                                                                                                                                                                                                        () -> {
                                                                                                                                                                                                            () -> {
                                                                                                                                                                                                                ()
                                                                                                                                                                                                            }()
                                                                                                                                                                                                        }
                                                                                                                                                                                                    )(), __helios__map[__helios__bytearray@__helios__int]__delete(foldingBurn)(tn_5)))
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        )()(__cond_82))
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()(__cond_81)
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_80))
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_79))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__53) -> {
                                                                                                                                                    __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()(__cond_78)
                                                                                                                                    }(__cond_77 = pcChange_1;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_77),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_164) -> {
                                                                                                                                                dgtChange_1 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_164);
                                                                                                                                                dgtChange_1
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_163) -> {
                                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_77)))
                                                                                                                                }, observedTokenBurn);
                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires all the burns of our policy-id to be accounted for", false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(remainingMint), 0), __helios__string____add("extra burns found in the transaction: 
", __helios__map[__helios__bytearray@__helios__int]__show(remainingMint)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... -- end of commitPendingChanges", false, ()), true)))
                                                                                                                            }(__cond_76 = mintThisPolicy;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is(__cond_76),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_162) -> {
                                                                                                                                        minted = __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some(__lhs_0_162);
                                                                                                                                        minted
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_161) -> {
                                                                                                                                        __core__mkNilPairData(())
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_76)))))
                                                                                                                        }()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )();
                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                            __helios__bool__and(() -> {
                                                                                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate)
                                                                                                            }, () -> {
                                                                                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate)
                                                                                                            }),
                                                                                                            () -> {
                                                                                                                __helios__error("unreachable? not mintDgt or spendDgt")
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                }()
                                                                                                            }
                                                                                                        )(), __helios__bool__and(() -> {
                                                                                                            mintDgtCheck
                                                                                                        }, () -> {
                                                                                                            spendDgtCheck
                                                                                                        })))))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_64),
                                                                                                        () -> {
                                                                                                            (__lhs_0_140) -> {
                                                                                                                manifestActivity = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity(__lhs_0_140);
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow updating anything except the manifest", false, ()), __core__chooseUnit(__cond_65 = manifestActivity;
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is(__cond_65),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_149) -> {
                                                                                                                            __core__chooseUnit(__helios__assert(false, "TODO: support retirement activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't remove a dgDataPolicy entry from the manifest (use queuePendingChange instead)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("removes the indicated key from the manifest", false, ()), __module__StellarHeliosHelpers__REQT("delegates MUST be allowed to validate that this doesn't drop something they need", false, ()))))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is(__cond_65),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_148) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("if delegates need a hook to validate that the updte is acceptable, that might be enforced here"), __core__chooseUnit(__helios__assert(false, "TODO: support updatingEntry activity"), __module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ())))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is(__cond_65),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_142) -> {
                                                                                                                                            key_31 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key(__lhs_0_142);
                                                                                                                                            tokenName_5 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName(__lhs_0_142);
                                                                                                                                            charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                                                                            nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __lhs_0_143 = __module__CapoHelpers__CapoCtx[]__delegatedDataRef(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_4)(false, (), true, tokenName_5);
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry MUST be found in the new manifest", false, ()), __core__chooseUnit(__cond_66 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_66),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_147) -> {
                                                                                                                                                        __helios__error(__helios__string____add("the new manifest entry is missing: ", key_31))
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_144) -> {
                                                                                                                                                        __lhs_0_0 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_144);
                                                                                                                                                        entryType = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0);
                                                                                                                                                        tn_4 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0);
                                                                                                                                                        mph_28 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0);
                                                                                                                                                        __core__chooseUnit(__helios__print(__helios__string____add("   -- ok, found the manifest entry for ", key_31)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry must have the right token-name", false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(tn_4, tokenName_5), "token-name mismatch"), __core__chooseUnit(__cond_68 = mph_28;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__helios__mintingpolicyhash]__some____is(__cond_68),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_146) -> {
                                                                                                                                                                    __helios__error("other-mph not yet supported")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__46) -> {
                                                                                                                                                                    ()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_68), __cond_67 = entryType;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is(__cond_67),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_145) -> {
                                                                                                                                                                    __helios__print("   -- ok: matching name, with NamedTokenRef added in updatingManifest")
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__45) -> {
                                                                                                                                                                    __helios__error("addingEntry: the new manifest entry must be a NamedTokenRef for now")
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_67)))))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_66), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the manifest must be unchanged", false, ()), __core__chooseUnit(__helios__assert(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_3), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31)), "manifest modified in an unexpected way"), __helios__print("  -- ok! new manifest as expected"))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is(__cond_65),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_141) -> {
                                                                                                                                                    __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__assert(false, "TODO: support forkingThreadToken activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates that another copy of the token name is minted", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("when the key is a DgDataPolicy, the existing manifest entry is updated", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("for mint/spend delegates and otherNamedDelegates, a new manifest entry is created with refCount=1+newThreadCount, if it doesn't exist", false, ()), __module__StellarHeliosHelpers__REQT("when the manifest already has the entry, the refCount is incremented by newThreadCount", false, ())))))))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__44) -> {
                                                                                                                                                    ()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(__cond_65), true))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_64),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_139) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the minter is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__lhs_0_138) -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, ()), __helios__error("the mint/spend delegate never is involved when the spender is instructed to force a new delegate"))
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()(__cond_64)
                                                                }, () -> {
                                                                    __core__ifThenElse(
                                                                        true,
                                                                        () -> {
                                                                            __core__chooseUnit(__helios__print("BasicDelegate harness deferring to specialization for CapoLifecycleActivities
"), true)
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                false
                                                                            }()
                                                                        }
                                                                    )()
                                                                })
                                                            }(__cond_63 = neededRole;
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_63),
                                                                () -> {
                                                                    (__lhs_0_137) -> {
                                                                        __helios__error("delegate invoked with invalid escape-hatch activity (always handled directly by the Capo)")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_63),
                                                                        () -> {
                                                                            (__lhs_0_136) -> {
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on spend delegate", true, __module__BasicDelegate__isSpendDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: spendDgt checking CapoLifecycleActivity"), neededRole)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_63),
                                                                                () -> {
                                                                                    (__lhs_0_135) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on mint delegate", true, __module__BasicDelegate__isMintDelegate), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: mintDgt checking CapoLifecycleActivity"), neededRole)))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_63),
                                                                                        () -> {
                                                                                            (__lhs_0_134) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It EXPECTS the Capo to enforce the presence of the mintDgt (to check the right mint) and spendDgt (to validate the charter-update logic)", false, ()), __core__ifThenElse(
                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                    () -> {
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                            () -> {
                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __helios__error(__helios__string____add("this Capo lifecycle activity is only valid on mint/spend delegate, not ", __module__BasicDelegate__delegateName))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )())
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__43) -> {
                                                                                                __helios__error("no way k")
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_63)))))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_62),
                                                            () -> {
                                                                (__lhs_0_132) -> {
                                                                    seed_4 = __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__seed(__lhs_0_132);
                                                                    dDataTypeName_1 = __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_132);
                                                                    __core__ifThenElse(
                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                        () -> {
                                                                            __helios__error("CreatingDelegatedData activity is only allowed in the mint delegate")
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_3)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("context: CreatingDelegatedData", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- ensures the data-controller is invoked with its minting activity for the indicated recId", false, ()), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_3)(dDataTypeName_1, false, ());
                                                                                tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);
                                                                                purpose_3 = __helios__option[__helios__string]__unwrap(__module__CapoHelpers__DelegateInput[]__idPrefix(policyDelegateInput))();
                                                                                newDataId_1 = __helios__string__encode_utf8(tnFactory(purpose_3))();
                                                                                __helios__bool__and(() -> {
                                                                                    __helios__bool__and(() -> {
                                                                                        __helios__bool__and(() -> {
                                                                                            __helios__bool__and(() -> {
                                                                                                __helios__bool__and(() -> {
                                                                                                    true
                                                                                                }, () -> {
                                                                                                    __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd), seed_4, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())
                                                                                                })
                                                                                            }, () -> {
                                                                                                __module__StellarHeliosHelpers__bREQT("it outputs the new delegated-data record to the Capo address", false, ())
                                                                                            })
                                                                                        }, () -> {
                                                                                            __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_3)(newDataId_1, dDataTypeName_1)
                                                                                        })
                                                                                    }, () -> {
                                                                                        __module__StellarHeliosHelpers__bREQT("ensures the data-controller is invoked with ONE minting activity for the indicated recId", false, ())
                                                                                    })
                                                                                }, () -> {
                                                                                    __module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(policyDelegateInput)(seed_4))()
                                                                                }))))
                                                                            }()
                                                                        }
                                                                    )()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_62),
                                                                    () -> {
                                                                        (__lhs_0_131) -> {
                                                                            dDataTypeName = __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_131);
                                                                            recId_8 = __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__recId(__lhs_0_131);
                                                                            __core__ifThenElse(
                                                                                __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                () -> {
                                                                                    __helios__error("UpdatingDelegatedData activity is only allowed in the spend delegate")
                                                                                },
                                                                                () -> {
                                                                                    () -> {
                                                                                        cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedData activity", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("implements a generic data-controller re-delegation convention based on the capo's manifest (those with type= DgDataPolicy)", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the data-controller is invoked with ONE spending activity for the indicated recId", false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_2)(dDataTypeName, false, ()))(recId_8))(), "^^^ those can fail, this assert won't."), inputDD = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_2)(false, (), true, recId_8);
                                                                                        __core__chooseUnit(__helios__assert(__helios__txinput____eq(inputDD, inputDD), "no way m"), __core__chooseUnit(__core__ifThenElse(
                                                                                            __helios__string____eq("settings", dDataTypeName),
                                                                                            () -> {
                                                                                                curSettingsId = __helios__option[__helios__bytearray]__unwrap(__module__CapoHelpers__CapoCtx[]__getSettingsId(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(true, true))();
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO(__helios__string____add("when updating the current Capo settings, the delegates must all ", "have a chance to ensure the settings are valid for their needs")), __core__ifThenElse(
                                                                                                    false,
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __helios__bytearray____eq(curSettingsId, recId_8),
                                                                                                            () -> {
                                                                                                                __core__chooseUnit(__helios__print(" -> "), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings(cctx_2)(), "no way jose"), __helios__print(" <- ")))
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    recIdStr_4 = __helios__bytearray__decode_utf8_safe(recId_8)();
                                                                                                                    curSettingsIdStr = __helios__bytearray__decode_utf8_safe(curSettingsId)();
                                                                                                                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  -- NOTE: updating ", recIdStr_4), ", which isn't currentSettings="), curSettingsIdStr))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        }()
                                                                                                    }
                                                                                                )())
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    ()
                                                                                                }()
                                                                                            }
                                                                                        )(), __helios__bool__and(() -> {
                                                                                            __helios__bool__trace(__module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_2)(recId_8, dDataTypeName))("  -- did output delegated data? ")
                                                                                        }, () -> {
                                                                                            true
                                                                                        }))))))))
                                                                                    }()
                                                                                }
                                                                            )()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_62),
                                                                            () -> {
                                                                                (__lhs_0_129) -> {
                                                                                    recId_7 = __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__recId(__lhs_0_129);
                                                                                    __core__ifThenElse(
                                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                        () -> {
                                                                                            __helios__error("DeletingDelegatedData activity is only allowed in the mint delegate")
                                                                                        },
                                                                                        () -> {
                                                                                            () -> {
                                                                                                cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterRef(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd)))();
                                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_1)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("this code is triggered by both the mintDgt and spendDgt, with each doing their parts of the job", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the spendDgt allows the spending of the utxo", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the mintDgt requires the burning of its UUT", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must not delete a record that's still referenced by the Capo manifest", false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a matching manifest entry has to be changed or removed prior to deletion", false, ()), __lhs_0_130 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_1)(false, (), true, recId_7);
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("verify the input was found ^"), __core__chooseUnit(__helios__assert(false, "Delete not supported yet"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement the generic data-controller re-delegation convention here"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("ensure that the right delegate is consulted with its BurningActivities.*"), false))))))))))
                                                                                            }()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities____is(__cond_62),
                                                                                    () -> {
                                                                                        (__lhs_0_128) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__ReqtsPolicy__DelegateActivity[]__MintingActivities____is(__cond_62),
                                                                                            () -> {
                                                                                                (__lhs_0_127) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_126) -> {
                                                                                                    true
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_62))))))
                            }
                        },
                        () -> {
                            (__41) -> {
                                kaboomInvalidRedeemer = () -> {
                                    __helios__error("wrong Actvy/dtm")
                                };
                                __cond_61 = activity_3;
                                __core__ifThenElse(
                                    __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_61),
                                    () -> {
                                        (__lhs_0_125) -> {
                                            kaboomInvalidRedeemer()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_61),
                                            () -> {
                                                (__lhs_0_124) -> {
                                                    kaboomInvalidRedeemer()
                                                }
                                            },
                                            () -> {
                                                (__42) -> {
                                                    __module__ReqtsPolicy__DelegateActivity[]__otherDatumValidation(activity_3)(mdd)
                                                }
                                            }
                                        )()
                                    }
                                )()(__cond_61)
                            }
                        }
                    )()
                }
            )()(__cond_60)))
        }
    };
    __core__ifThenElse(
        __module__BasicDelegate__main_1(__module__BasicDelegate__main_1)(__module__ReqtsData__DelegateDatum[]__from_data(__module__ReqtsData__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__ReqtsData__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__ReqtsData__DelegateDatum[]__capoStoredData__is_valid_data_2)(__DATUM), __module__ReqtsPolicy__DelegateActivity[]__from_data(__module__ReqtsPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__ReqtsPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2)(__REDEEMER)),
        () -> {
            ()
        },
        () -> {
            __helios__error("validation returned false")
        }
    )()
}`, "optimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/reqts/ReqtsPolicy.hl", "src/CapoMintHelpers.hl", "src/StellarHeliosHelpers.hl", "src/delegation/CapoDelegateHelpers.hl"], "indices": "9f18690019056b08187f01190572041880011905720419012f0119055b182d19018b0218de181f19018d0218e1141901980218e2181f1902140218ea182d19029d0218e6181e1902db0219011e183a1902dc0219011e183a1902e302190120181b19048102190121182b1904a90219012a183b1905140219013018351905bb001905d8181e19061d021901261838190622021901261834190650001906cf08190679001906d81833190a6c01190231182419124700190597182019129801190464183a191410011901f91821191425011901f9182119143a011901f9182119144f011901f91821191464011901f91821191479011901f91821191481011901f91821191489011901cb1827191698031901bb182e191699031901bb182e1916a8031901c018391916a9031901c0183919170003182216191743031901d818371918e40418360e1919ad001901b8184b1919cf001901b8184d1919ed031901601834191ad30319012a181b191b1f0019071808191b980019072014191bd600190196184b191c0700190196184d191c1a001906ef08191c96001906fa1846191c97001906fa1825191d25001905c2181f191d9d001905c31822191e8d0019055c0c191ef3001904ed09191f3d0019044d15191f3e0019044d151920910519014e0c1920c30519013f183f19218f05190146181b1921a7051901360b1921e50418a20aff", "variableNames": "", "termDescriptions": "a919018d646d6b546e1904a9647574786f190650676368617274657219169862746e19169962746e191b1f6763686172746572191c1a6763686172746572191f3d683c7377697463683e191f3e683c7377697463683e" }, "unoptimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/reqts/ReqtsPolicy.hl", "src/reqts/ReqtsData.hl", "src/CapoMintHelpers.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f19041b00190195183219044b00190289182a19044d001902fd183a19044f0019032a0b19048100190552081904850019056b08190599011905720419059a01190572041905c90118bf183a1905ca0118bf183a1905cd0118c0182e1905ce0118c0182e1905cf0118c0091905d00118c0041905d10118c018271905d30118c018271905d40118c018191905d60118c018191905d70118c00a1905e4011905700a1905e70119057018291905e801190570181a1906730119055a101906810119055b18361906830119055b182d19071e0119014c181c19080401190128181c1908d20118f5181c190a58011901a41826190b870119023118241910a7011902ac18281912d70119044d181c1913010119040118371913490119040418201914630119043318651914e50119040218351914ea0119040218311915080119038b182919150f0119038b18251917030119037f183219170d0119037e18521917130119037d184e19186601190466183419186f01190466183019187301190464183a19187e01190463184f19189c0119047f182f1918a30119047f182b19192901190496181d19195b01190203182719196201190203182319198b0119020c18271919920119020c18231919ba0119021418241919c10119021418201919cd01190216182b1919d40119021618271919ea011901f918251919ee011901f918211919f4011901cb1827191a0c011904a41826191a20011904a714191a28011904a8181f191a2f011904a8181b191a79011904cc181f191a7c011904cd181e191a7d011904cd181e191a99011904d7181b191aa0011904d717191aab011904dc1838191ac4011904ac182e191ace011904ac182a191ad1011904a71831191b00011904f114191b08011904f2181f191b0f011904f2181b191b42011904f81820191b4c011904f8181c191b9f011905201828191bc101190526182b191bc90119050a1845191bcc0119050a182c191bd30119050a1828191be00119052d1818191be70119052d14191bec011904ff182c191bf5011904ff1828191bf9011904f11831191c260119053514191c2e01190536181f191c3501190536181b191c900119053e182d191c990119053e1829191c9d011905351831191f1002190156181f191f3b0218d21827191f3c0218d408191f3d0218d408191f7a0218de181f191f830218e114191f8e0218e2181f191fd60218fd188a191ff502190114181e191ff602190114181e191fff0219011718251920160218ea182d19201c0218ea18291920200218e6181e19204e0219011e183a19204f0219011e183a19205602190120181b19206a02190121182b19207002190121184d19207102190121184d19208d0219012a183b1920ec02190130183519210802190128183f19210e02190128183b192111021901261838192118021901261834192bc103181f12192bd30318201831192bd70318201845192e0a041901b31826192e0b041901b31831192e28041901bb182e192e29041901bb182e192e2b041901bc0c192e3c041901bd182c192e58041901c01839192e59041901c01839192e60041901c210192ec5041901d81837192f00041901e3182d1930420419016018341931de0419012a181b1931fa0419011e0e19321504190114181b19325c04185d0519325d04185b182d193273041863141932a604186d1719330d04184d0919330e04184d182e19332804184706193329041844181919339f04183018441933a004183018441933c104181f021933c204181f021933dc041822161933e30418230d1933f20418260e193411001907d6182719342d001907d0182c193446001907ad101935a90019079718321935ac0019077e182c1935b200190780181f1935d000190782183b19360a0019076b1219360b0019076b182b19360d001907610d19360e0019075c182a1936320019075d18301936bb00190718081936bc001907190f1936f70019072014193712001906ef08193713001906f00f19375a001906fa184619375b001906fa18251937a7001906cf081937a8001906d00f1937ce001906d8183319388c0019068e18251938b1001906601833193966001905d8181e1939e7001905be0f1939f7001905c2181f193a4e001905c31822193a9e001905b310193ace001905a51823193acf001905a51823193ae1001905971820193aeb0019059608193afe0019059910193b23001905911828193b24001905911841193b3f0019058711193b890019056a181c193bbc00190559181c193bfe001905611818193c0b0019055c0c193c18001905511818193c540019053909193c5b00190537181d193c740019052e1820193c9a0019052609193ca100190524181b193cdc001905031869193d320019050c184d193d400019050c1844193d6600190505181b193d6700190505181b193d9e001904e5181e193d9f001904e6183d193daa001904ed09193dc3001904ea10193df90019047b0b193dfa0019047b0b193e000019047d184c193e520019046d183f193e540019046c1821193e550019046c1821193e880019044b181c193e920019044d15193e930019044d15193f4f0019032810193f55001902fc181b193f68001903221827193f7100190323182e193f82001903230f193f970019030e11193fbe001903131847193fcc001903171832193fd6001903171822193ff70019031d182d19401e001902860919403c00190288187819404700190290081940490019028a18261940530019028a0e1940540019028c181b19405b0019028d18411940660019028e18551940780019029018271940790019029018271940810019029f111940970019029418381940b20019029718431940bd00190298184d1940cd001902981845194101001902a3183d194108001902a4185219411a001902a4182619411c001902a61019411d001902d41862194128001902d811194143001902d9185119414e001902dd11194180001902ab181d194198001902b1181d1941b0001902b9181d1941dc001902c118441941f7001902c41850194202001902c5185c194210001902c61844194212001902c51854194213001902c5185419422d001902cb185719425c001902e1183119427600190253185d1942910019025f111942d300190264184c1942e10019026418211942e400190274185b1942ef00190275186019430200190276185019430d00190277186819434b0019026a18441943950019027c18301943f10019021718561943f300190216151943f400190216151943f800190217141943fd001902170f19440900190217184419440a00190219184f19440c00190217184e19440d00190217184e1944190019021a184f1944300019021a182e1944310019021f1319443f0019020c171944400019020c171944410019020d18561944430019020c182b1944440019020c182b1944480019020d1419444d0019020d0f1944590019020d184419445e0019020d184e19445f0019020d184e19447100190202182119448b001901ed182719448e001901ff08194490001901fe091944a6001901f318531944b1001901f3184b1944cd001901f6184a19469c001901bc131946ac001901b8184b1946b1001901b818301946b4001901b8184d1946fd00190196184b19470200190196183019470500190196184d1959640519014e0c195983051901551837195997051901510c1959a40519015b151959a70519015b18361959a90519015b18361959aa0519015b18311959db0519013f183f1959de051901401834195a10051901461829195a1105190146181b195a2d051901360b195a3f051901330a195aed0519011416195b000519010f13195b060519010a185a195b460518e50a196ecf05182b0419731f0618a20a1973460618a5121974e90618360e19750a0618321819197513061829181919752406182a0819752506182a0819752f061824181819753e0618260eff", "variableNames": "b90d7d00675f5f444154554d016a5f5f52454445454d455202695f5f434f4e54455854046f5f5f68656c696f735f5f6572726f72066f5f5f68656c696f735f5f7072696e7408775f5f68656c696f735f5f737472696e675f5f5f5f6164640a705f5f68656c696f735f5f6173736572740c755f5f68656c696f735f5f626f6f6c5f5f5f5f6e6f740e78195f5f68656c696f735f5f6279746561727261795f5f5f5f657110781a5f5f68656c696f735f5f6279746561727261795f5f5f5f6e65711278185f5f68656c696f735f5f696e745f5f5f5f746f5f646174611478185f5f68656c696f735f5f696e745f5f73657269616c697a6516781d5f5f68656c696f735f5f737472696e675f5f656e636f64655f757466381818735f5f68656c696f735f5f626f6f6c5f5f616e64181a725f5f68656c696f735f5f626f6f6c5f5f6f72181c781b5f5f68656c696f735f5f737472696e675f5f5f5f746f5f64617461181e78265f5f68656c696f735f5f737472696e675f5f70617273655f757466385f636f6e745f627974651820781f5f5f68656c696f735f5f737472696e675f5f69735f76616c69645f757466381822755f5f68656c696f735f5f696e745f5f746f5f686578182478195f5f68656c696f735f5f6279746561727261795f5f73686f77182678255f5f68656c696f735f5f6279746561727261795f5f6465636f64655f757466385f736166651828755f5f68656c696f735f5f76616c75655f5f5a45524f182a781d5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c6473182c781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f30182e78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f301830781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f311832745f5f68656c696f735f5f76616c75655f5f6e6577183478185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f30183678185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f31183878185f5f68656c696f735f5f636f6d6d6f6e5f5f6c6973745f32183a781e5f5f68656c696f735f5f6279746561727261795f5f5f5f746f5f64617461183c78265f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f746f5f64617461183e78195f5f68656c696f735f5f6173736574636c6173735f5f6e65771840745f5f68656c696f735f5f696e745f5f5f5f6e65671842735f5f68656c696f735f5f696e745f5f5f5f6571184478215f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f73686f771846745f5f68656c696f735f5f76616c75655f5f676574184878255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f31184a78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f32184c78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f33184e781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f341850745f5f68656c696f735f5f74785f5f6d696e7465641852781d5f5f68656c696f735f5f736372697074636f6e746578745f5f646174611854781b5f5f68656c696f735f5f736372697074636f6e746578745f5f7478185678255f5f68656c696f735f5f636f6d6d6f6e5f5f6173736572745f636f6e7374725f696e6465781858765f5f68656c696f735f5f737472696e675f5f5f5f6571185a765f5f68656c696f735f5f636f6d6d6f6e5f5f5f5f6571185c781a5f5f68656c696f735f5f6173736574636c6173735f5f5f5f6571185e765f5f68656c696f735f5f636f6d6d6f6e5f5f666f6c64186078195f5f68656c696f735f5f696e745f5f73686f775f64696769741862735f5f68656c696f735f5f696e745f5f73686f771864745f5f68656c696f735f5f646174615f5f73686f77186678205f5f68656c696f735f5f646174615f5f73686f775f636f6e7374725f646174611868781a5f5f68656c696f735f5f646174615f5f73686f775f6669656c64186a781a5f5f68656c696f735f5f646174615f5f73686f775f6264617461186c781a5f5f68656c696f735f5f6173736574636c6173735f5f73686f77186e775f5f68656c696f735f5f737472696e675f5f5f5f6e65711870735f5f68656c696f735f5f696e745f5f5f5f67741872781f5f5f68656c696f735f5f636f6d6d6f6e5f5f756e42446174615f5f73616665187478215f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f6571187678215f5f68656c696f735f5f636f6d6d6f6e5f5f756e4d6170446174615f5f736166651878781f5f5f68656c696f735f5f636f6d6d6f6e5f5f756e49446174615f5f73616665187a735f5f68656c696f735f5f7265616c5f5f4f4e45187c755f5f68656c696f735f5f7265616c5f5f666c6f6f72187e725f5f68656c696f735f5f696e745f5f6162731880735f5f68656c696f735f5f7265616c5f5f6162731882781a5f5f68656c696f735f5f696e745f5f73686f775f7061646465641884745f5f68656c696f735f5f696e745f5f5f5f6d6f64188678195f5f68656c696f735f5f7265616c5f5f505245434953494f4e1888745f5f68656c696f735f5f7265616c5f5f73686f77188a755f5f68656c696f735f5f76616c75655f5f73686f77188c745f5f68656c696f735f5f696e745f5f5f5f6e6571188e745f5f68656c696f735f5f696e745f5f5f5f7375621890775f5f68656c696f735f5f76616c75655f5f746f5f6d61701892765f5f68656c696f735f5f737472696e675f5f73686f771894775f5f68656c696f735f5f7478696e7075745f5f5f5f65711896745f5f68656c696f735f5f626f6f6c5f5f73686f771898755f5f68656c696f735f5f626f6f6c5f5f7472616365189a78195f5f68656c696f735f5f74786f75747075745f5f76616c7565189c78195f5f68656c696f735f5f7478696e7075745f5f6f7574707574189e78185f5f68656c696f735f5f7478696e7075745f5f76616c756518a078205f5f68656c696f735f5f736372697074636f6e746578745f5f707572706f736518a278375f5f68656c696f735f5f736372697074636f6e746578745f5f6765745f7370656e64696e675f707572706f73655f6f75747075745f696418a4781c5f5f68656c696f735f5f7478696e7075745f5f6f75747075745f696418a6745f5f68656c696f735f5f74785f5f696e7075747318a8782a5f5f68656c696f735f5f736372697074636f6e746578745f5f6765745f63757272656e745f696e70757418aa781e5f5f68656c696f735f5f6279746561727261795f5f66726f6d5f6461746118ac781b5f5f68656c696f735f5f737472696e675f5f66726f6d5f6461746118ae78185f5f68656c696f735f5f636f6d6d6f6e5f5f6c656e67746818b078195f5f68656c696f735f5f636f6d6d6f6e5f5f6d61705f67657418b278215f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f7461675f657175616c7318b4781b5f5f68656c696f735f5f6f7074696f6e5f5f4e4f4e455f46554e4318b6781b5f5f68656c696f735f5f6f7074696f6e5f5f534f4d455f46554e4318b878235f5f68656c696f735f5f6279746561727261795f5f66726f6d5f646174615f7361666518ba781d5f5f68656c696f735f5f696e745f5f66726f6d5f646174615f7361666518bc755f5f68656c696f735f5f636f6d6d6f6e5f5f616c6c18be781a5f5f68656c696f735f5f636f6d6d6f6e5f5f6964656e7469747918c0781f5f5f68656c696f735f5f6173736574636c6173735f5f5f5f746f5f6461746118c2781f5f5f68656c696f735f5f6173736574636c6173735f5f66726f6d5f6461746118c478195f5f68656c696f735f5f646174615f5f66726f6d5f6461746118c678195f5f68656c696f735f5f626f6f6c5f5f66726f6d5f6461746118c878185f5f68656c696f735f5f696e745f5f66726f6d5f6461746118ca745f5f68656c696f735f5f696e745f5f5f5f6c657118cc78195f5f68656c696f735f5f6475726174696f6e5f5f5f5f6c657118ce755f5f68656c696f735f5f74696d655f5f5f5f73756218d078195f5f68656c696f735f5f74696d655f5f66726f6d5f6461746118d278185f5f68656c696f735f5f74696d6572616e67655f5f656e6418d478255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3418d678255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3518d878255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3618da781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f3718dc78185f5f68656c696f735f5f74785f5f74696d655f72616e676518de781a5f5f68656c696f735f5f74696d6572616e67655f5f737461727418e078185f5f68656c696f735f5f6475726174696f6e5f5f484f555218e2781d5f5f68656c696f735f5f74696d6572616e67655f5f636f6e7461696e7318e4745f5f68656c696f735f5f696e745f5f5f5f64697618e6781a5f5f68656c696f735f5f6475726174696f6e5f5f5f5f6469763118e8781a5f5f68656c696f735f5f6475726174696f6e5f5f5345434f4e4418ea781f5f5f68656c696f735f5f74786f7574707574646174756d5f5f696e6c696e6518ec781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f3218ee78195f5f68656c696f735f5f74786f75747075745f5f646174756d18f078225f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f73686f7718f278245f5f68656c696f735f5f636f6d6d6f6e5f5f756e436f6e737472446174615f5f7361666518f4782b5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5f5f66726f6d5f646174615f7361666518f6781b5f5f68656c696f735f5f7374616b696e67686173685f5f73686f7718f8781a5f5f68656c696f735f5f646174615f5f73686f775f696461746118fa78215f5f68656c696f735f5f7374616b696e6763726564656e7469616c5f5f73686f7718fc78335f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5d5f5f73686f7718fe775f5f68656c696f735f5f616464726573735f5f73686f77190100781b5f5f68656c696f735f5f74786f75747075745f5f61646472657373190102781a5f5f68656c696f735f5f7478696e7075745f5f61646472657373190104745f5f68656c696f735f5f74696d655f5f5f5f677419010678195f5f68656c696f735f5f76616c75655f5f6765745f7361666519010878195f5f68656c696f735f5f6173736574636c6173735f5f41444119010a781d5f5f68656c696f735f5f76616c75655f5f6765745f6c6f76656c61636519010c755f5f68656c696f735f5f74785f5f6f75747075747319010e78185f5f68656c696f735f5f7478696e7075745f5f646174756d190110781b5f5f68656c696f735f5f636f6d6d6f6e5f5f73657269616c697a65190112775f5f68656c696f735f5f74785f5f73657269616c697a6519011478185f5f68656c696f735f5f636f6d6d6f6e5f5f66696c746572190116781d5f5f68656c696f735f5f636f6d6d6f6e5f5f66696c7465725f6c697374190118781c5f5f68656c696f735f5f7478696e7075745f5f66726f6d5f6461746119011a781f5f5f68656c696f735f5f737472696e675f5f69735f76616c69645f6461746119011c78225f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f6461746119011e781f5f5f68656c696f735f5f74786f757470757469645f5f66726f6d5f6461746119012078245f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f636f6e7374725f646174615f32190122782f5f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f646174615f66697865645f6c656e677468190124781d5f5f68656c696f735f5f747869645f5f69735f76616c69645f64617461190126781c5f5f68656c696f735f5f696e745f5f69735f76616c69645f6461746119012878235f5f68656c696f735f5f74786f757470757469645f5f69735f76616c69645f6461746119012a78195f5f68656c696f735f5f74696d655f5f5f5f746f5f6461746119012c78195f5f68656c696f735f5f626f6f6c5f5f5f5f746f5f6461746119012e78185f5f68656c696f735f5f74696d6572616e67655f5f6e6577190130745f5f68656c696f735f5f696e745f5f5f5f616464190132755f5f68656c696f735f5f74696d655f5f5f5f616464190134745f5f68656c696f735f5f696e745f5f5f5f6d756c19013678195f5f68656c696f735f5f6475726174696f6e5f5f5f5f6d756c190138775f5f68656c696f735f5f6475726174696f6e5f5f44415919013a781d5f5f68656c696f735f5f646174615f5f69735f76616c69645f6461746119013c78285f5f68656c696f735f5f636f6d6d6f6e5f5f6d5374727563745f6669656c645f696e7465726e616c19013e781f5f5f68656c696f735f5f636f6d6d6f6e5f5f6d5374727563745f6669656c6419014078245f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6d5374727563745f6669656c64190142781d5f5f68656c696f735f5f74696d655f5f69735f76616c69645f6461746119014478205f5f68656c696f735f5f76616c75655f5f636f6e7461696e735f706f6c69637919014678195f5f68656c696f735f5f76616c75655f5f66726f6d5f6d617019014878225f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f5f5f6e657119014a781e5f5f68656c696f735f5f76616c75655f5f69735f7a65726f5f696e6e657219014c78185f5f68656c696f735f5f76616c75655f5f69735f7a65726f19014e781b5f5f68656c696f735f5f76616c75655f5f6765745f706f6c69637919015078225f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d61705f696e74190152781d5f5f68656c696f735f5f76616c75655f5f6765745f6d61705f6b657973190154755f5f68656c696f735f5f636f6d6d6f6e5f5f616e7919015678265f5f68656c696f735f5f636f6d6d6f6e5f5f69735f696e5f6279746561727261795f6c69737419015878185f5f68656c696f735f5f636f6d6d6f6e5f5f636f6e63617419015a781f5f5f68656c696f735f5f76616c75655f5f6d657267655f6d61705f6b65797319015c78265f5f68656c696f735f5f76616c75655f5f6164645f6f725f73756274726163745f696e6e657219015e781e5f5f68656c696f735f5f76616c75655f5f6765745f696e6e65725f6d617019016078205f5f68656c696f735f5f76616c75655f5f6164645f6f725f7375627472616374190162765f5f68656c696f735f5f76616c75655f5f5f5f616464190164755f5f68656c696f735f5f636f6d6d6f6e5f5f6d6170190166781a5f5f68656c696f735f5f76616c75655f5f5f5f746f5f64617461190168765f5f68656c696f735f5f76616c75655f5f76616c756519016a781a5f5f68656c696f735f5f76616c75655f5f66726f6d5f6461746119016c78225f5f68656c696f735f5f636f6d6d6f6e5f5f696e736572745f696e5f736f7274656419016e765f5f68656c696f735f5f636f6d6d6f6e5f5f736f727419017078265f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f66726f6d5f64617461190172781c5f5f68656c696f735f5f636f6d6d6f6e5f5f66696c7465725f6d617019017478195f5f68656c696f735f5f6279746561727261795f5f5f5f6c74190176725f5f68656c696f735f5f696e745f5f6d617819017878215f5f68656c696f735f5f636f6d6d6f6e5f5f736c6963655f62797465617272617919017a781a5f5f68656c696f735f5f6279746561727261795f5f736c69636519017c781c5f5f68656c696f735f5f6279746561727261795f5f626c616b65326219017e781b5f5f68656c696f735f5f6279746561727261795f5f6c656e677468190180781a5f5f68656c696f735f5f6279746561727261795f5f5f5f61646419018278195f5f68656c696f735f5f747869645f5f73657269616c697a65190184781b5f5f68656c696f735f5f74786f757470757469645f5f696e646578190186781b5f5f68656c696f735f5f74786f757470757469645f5f74785f696419018878255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3719018a78255f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c64735f61667465725f3819018c781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f3919018e775f5f68656c696f735f5f74785f5f72656465656d65727319019078275f5f68656c696f735f5f736372697074707572706f73655f5f7370656e64696e675f5f5f5f6973190192781a5f5f68656c696f735f5f74786f757470757469645f5f5f5f6571190194782c5f5f68656c696f735f5f736372697074707572706f73655f5f7370656e64696e675f5f6f75747075745f696419019678225f5f68656c696f735f5f736372697074707572706f73655f5f5f5f746f5f64617461190198745f5f68656c696f735f5f747869645f5f73686f7719019a781a5f5f68656c696f735f5f74786f757470757469645f5f73686f7719019c78185f5f68656c696f735f5f74785f5f7265665f696e7075747319019e775f5f68656c696f735f5f616464726573735f5f5f5f65711901a078205f5f68656c696f735f5f6279746561727261795f5f6465636f64655f757466381901a2781b5f5f68656c696f735f5f737472696e675f5f73657269616c697a651901a4765f5f68656c696f735f5f6f7074696f6e5f5f4e4f4e451901a6781d5f5f68656c696f735f5f74786f75747075745f5f66726f6d5f646174611901a878275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f301901aa78205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f311901ac78205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f301901ae781b5f5f68656c696f735f5f7374727563745f5f5f5f746f5f646174611901b0781b5f5f68656c696f735f5f7374727563745f5f73657269616c697a651901b2765f5f68656c696f735f5f7374727563745f5f5f5f65711901b4781e5f5f68656c696f735f5f76616c75655f5f636f6d706172655f696e6e65721901b678185f5f68656c696f735f5f76616c75655f5f636f6d706172651901b8765f5f68656c696f735f5f76616c75655f5f5f5f6765711901ba78195f5f68656c696f735f5f76616c75655f5f636f6e7461696e731901bc781e5f5f68656c696f735f5f74786f75747075745f5f73756d5f76616c7565731901be781c5f5f68656c696f735f5f74785f5f66696c7465725f6f7574707574731901c0781d5f5f68656c696f735f5f616464726573735f5f63726564656e7469616c1901c2782a5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f69735f76616c696461746f721901c4781d5f5f68656c696f735f5f76616c696461746f72686173685f5f5f5f65711901c678225f5f68656c696f735f5f76616c696461746f72686173685f5f66726f6d5f646174611901c8782d5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f76616c696461746f725f5f686173681901ca782d5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f76616c696461746f725f5f636173741901cc78205f5f68656c696f735f5f74786f75747075745f5f69735f6c6f636b65645f62791901ce781f5f5f68656c696f735f5f74785f5f6f7574707574735f6c6f636b65645f62791901d0781d5f5f68656c696f735f5f74785f5f76616c75655f6c6f636b65645f62791901d278225f5f68656c696f735f5f74786f7574707574646174756d5f5f73657269616c697a651901d478205f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f5f5f69731901d678225f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f6669656c64731901d8781f5f5f68656c696f735f5f646174615f5f636f6e737472646174615f5f7461671901da78275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f311901dc78275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f321901de78275f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c64735f61667465725f331901e078205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f341901e278205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f331901e478205f5f68656c696f735f5f636f6d6d6f6e5f5f7374727563745f6669656c645f321901e678215f5f68656c696f735f5f74786f75747075745f5f69735f76616c69645f646174611901e878205f5f68656c696f735f5f7478696e7075745f5f69735f76616c69645f646174611901ea781c5f5f68656c696f735f5f7478696e7075745f5f5f5f746f5f646174611901ec781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f361901ee781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f351901f0781e5f5f68656c696f735f5f636f6d6d6f6e5f5f656e756d5f6669656c645f331901f2782a5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685f5f69735f76616c69645f646174611901f478265f5f68656c696f735f5f76616c696461746f72686173685f5f69735f76616c69645f646174611901f678235f5f68656c696f735f5f7075626b6579686173685f5f69735f76616c69645f646174611901f8782b5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f69735f76616c69645f646174611901fa78255f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6c6973745f686561645f646174611901fc78245f5f68656c696f735f5f7374616b696e67686173685f5f69735f76616c69645f646174611901fe78215f5f68656c696f735f5f636f6d6d6f6e5f5f746573745f6c6973745f656d707479190200782a5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5f5f69735f76616c69645f64617461190202783c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7374616b696e6763726564656e7469616c5d5f5f69735f76616c69645f6461746119020478205f5f68656c696f735f5f616464726573735f5f69735f76616c69645f64617461190206781d5f5f68656c696f735f5f76616c696461746f72686173685f5f73686f77190208781b5f5f68656c696f735f5f636f6d6d6f6e5f5f66696e645f7361666519020a78225f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f5f5f657119020c78225f5f68656c696f735f5f76616c696461746f72686173685f5f5f5f746f5f6461746119020e782b5f5f68656c696f735f5f7370656e64696e6763726564656e7469616c5f5f6e65775f76616c696461746f72190210782d5f5f68656c696f735f5f6279746561727261795f5f69735f76616c69645f646174615f6d61785f6c656e67746819021278235f5f68656c696f735f5f6173736574636c6173735f5f69735f76616c69645f64617461190214781d5f5f68656c696f735f5f646174615f5f6d6170646174615f5f5f5f697319021678225f5f68656c696f735f5f736372697074707572706f73655f5f66726f6d5f6461746119021864544f444f19021a645245515419021c65625245515419021e646d6b547619022078285f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f74786f75747075745d5f5f66696e6419022278635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f6c656e67746819022478385f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f6c656e67746819022678485f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f69735f76616c69645f646174615f696e7465726e616c190228783b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f66726f6d5f6461746119022a783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f67657419022c783f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f66696e645f6b657919022e756d75737446696e64496e70757452656465656d657219023078385f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f69735f76616c69645f6461746119023278345f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f66726f6d5f64617461190234782d5f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f6964190236782f5f5f6d6f64756c655f5f5374656c6c617248656c696f7348656c706572735f5f416e79446174615b5d5f5f7479706519023878245f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f6865616419023a7066726f6d43697036385772617070657219023c78495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f69735f76616c69645f6461746119023e78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f66726f6d5f64617461190240784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f5f5f697319024278585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f646174615f32190244784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f7365656419024678505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f707572706f7365190248784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f5f5f697319024a78555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f646174615f3219024c78545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f5f5f697319024e785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f646174615f3219025078385f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5f5f746f5f64617461190252783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f69735f76616c69645f6461746119025478385f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f66726f6d5f64617461190256783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f5f5f697319025878475f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f646174615f3219025a783d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f5f5f6e657719025c783d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f5f5f697319025e78485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f646174615f32190260783e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f5f5f6e657719026278425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f5f5f6973190264784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f646174615f3219026678435f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f5f5f6973190268784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f646174615f3219026a78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f5f5f697319026c784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f3219026e78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f6e616d6519027078425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f5f5f6e657719027278425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f5f5f6973190274784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f646174615f3219027678485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f5f5f697319027878535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f646174615f3219027a78495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f5f5f6e657719027c78465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f5f5f697319027e78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f646174615f3219028078405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f69735f76616c69645f64617461190282783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f66726f6d5f6461746119028478465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f5f5f697319028678515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f646174615f3219028878465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f5f5f697319028a78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f646174615f3219028c78445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f5f5f697319028e784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f646174615f3219029078435f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f6b657919029278495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f746f6b656e4e616d65190294784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f5f5f697319029678565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f3219029878565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f3219029a78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f69735f76616c69645f6461746119029c78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f66726f6d5f6461746119029e78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f5f5f69731902a0784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f646174615f321902a278415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f736565641902a478445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f707572706f73651902a678455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69645072656669781902a878445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f5f5f69731902aa784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f646174615f321902ac78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f5f5f69731902ae78505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f646174615f321902b078455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f736565641902b278485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f707572706f73651902b478495f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69645072656669781902b6784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f7265706c616365734467741902b8783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f5f5f65711902ba78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f69735f76616c69645f646174611902bc78415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f66726f6d5f646174611902be784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f5f5f69731902c078595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f646174615f321902c2784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f736565641902c478515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f707572706f73651902c678505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f5f5f69731902c8785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f646174615f321902ca78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f5f5f69731902cc785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f646174615f321902ce78525f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f5f5f69731902d0785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f646174615f321902d278555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f5f5f69731902d478605f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174615f321902d678545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f5f5f69731902d8785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174615f321902da784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f5f5f69731902dc78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f646174615f321902de78525f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f61637469766974791902e0784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f69735f76616c69645f646174611902e2784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f66726f6d5f646174611902e478695f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f321902e678625f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f5f5f69731902e8786d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f321902ea78665f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f61637469766974791902ec78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f5f5f69731902ee78645f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f321902f0785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f61637469766974791902f278585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f5f5f69731902f478635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f321902f6785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f61637469766974791902f878635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f321902fa785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f5f5f69731902fc78675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f321902fe785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f5f5f697319030078675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f32190302785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f5f5f697319030478675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3219030678615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f5f5f697319030878365f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174615f696e7465726e616c19030a782d5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f69735f76616c69645f6461746119030c786c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f3219030e78295f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f66726f6d5f6461746119031078675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f6163746976697469657319031278415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f52657475726e65645f5f5f5f697319031478425f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f52657475726e65645f5f5f5f6e657719031678405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f437265617465645f5f5f5f697319031878415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4467546b6e446973706f736974696f6e5b5d5f5f437265617465645f5f5f5f6e657719031a78385f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f69735f76616c69645f6461746119031c78445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f69735f76616c69645f6461746119031e783b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f5f5f657119032078405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f66726f6d5f6461746119032278405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f5f5f746f5f64617461190324783e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f7575744e616d6519032678345f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f66726f6d5f64617461190328784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f64656c656761746556616c696461746f724861736819032a782652656c617469766544656c65676174654c696e6b3a3a7476417574686f72697479546f6b656e19032c782652656c617469766544656c65676174654c696e6b3a3a6163417574686f72697479546f6b656e19032e782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f6e6f6e655f5f5f5f6973190330782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f6e6f6e655f5f5f5f6e6577190332782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f736f6d655f5f5f5f6e6577190334782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f736f6d655f5f736f6d65190336782e52656c617469766544656c65676174654c696e6b3a3a76616c6964617465735570646174656453657474696e677319033878355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f6e6f6e655f5f5f5f697319033a78305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f6e6f6e655f5f5f5f6e657719033c782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f736f6d655f5f5f5f697319033e782c5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f66696e645f7361666519034078355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f736f6d655f5f736f6d65190342782652656c617469766544656c65676174654c696e6b3a3a68617344656c6567617465496e70757419034478355f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f76616c696461746f72686173685d5f5f736f6d655f5f5f5f697319034678305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f74786f75747075745d5f5f736f6d655f5f5f5f6973190348782d5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f74786f75747075745d5f5f66696e645f7361666519034a782452656c617469766544656c65676174654c696e6b3a3a68617356616c69644f757470757419034c78565f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f6461746119034e78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f69735f76616c69645f6461746119035078415f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f66726f6d5f64617461190352783e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f616374696f6e190354783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f726f6c6519035678525f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f64617461190358783f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c65676174654368616e67655b5d5f5f6467744c696e6b19035a78445f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f69735f76616c69645f6461746119035c78405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f66726f6d5f6461746119035e784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f5f5f697319036078565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f646174615f32190362784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f6368616e676519036478555f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c190366784c5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5d5f5f69735f76616c69645f64617461190368785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f646174615f3219036a78405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f69735f76616c69645f6461746119036c783c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f66726f6d5f6461746119036e78365f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f6d706819037078355f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174696f6e44657461696c5b5d5f5f746e190372782244656c65676174696f6e44657461696c3a3a6163417574686f72697479546f6b656e19037478265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f616e7919037678395f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f69735f76616c69645f6461746119037878355f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f66726f6d5f6461746119037a783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f5f5f697319037c784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f646174615f3219037e783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f5f5f697319038078495f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f3219038278445f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f706f6c6963794c696e6b19038478425f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f696450726566697819038678425f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f726566436f756e74190388784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f646174615f3219038a784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f646174615f3219038c784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f646174615f3219038e783c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685d5f5f69735f76616c69645f6461746119039078395f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f69735f76616c69645f6461746119039278355f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f66726f6d5f6461746119039478355f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f656e7472795479706519039678355f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f746f6b656e4e616d6519039878385f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685d5f5f66726f6d5f6461746119039a782f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5f5f6d706819039c78395f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d696e74696e67706f6c696379686173685d5f5f736f6d655f5f5f5f697319039e78315f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f69735f76616c69645f646174611903a0782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f66726f6d5f646174611903a2785d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c1903a478545f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174611903a6786d5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c1903a878645f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f69735f76616c69645f646174611903aa78625f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c1903ac78595f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f69735f76616c69645f646174611903ae785d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f69735f76616c69645f646174615f696e7465726e616c1903b078545f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f69735f76616c69645f646174611903b278405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f646174615f321903b4783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f66726f6d5f646174611903b6783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f5f5f746f5f646174611903b878425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f7370656e6444656c65676174654c696e6b1903ba78505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f646174611903bc78405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f7370656e64496e76617269616e74731903be78605f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f66726f6d5f646174611903c078445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6f746865724e616d656444656c6567617465731903c278415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d696e7444656c65676174654c696e6b1903c4783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d696e74496e76617269616e74731903c678415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f676f76417574686f726974794c696e6b1903c878555f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f66726f6d5f646174611903ca78395f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f6d616e69666573741903cc78505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f66726f6d5f646174611903ce783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f70656e64696e674368616e6765731903d078555f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f5f5f746f5f646174611903d278505f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f5f5f746f5f646174611903d478445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f646174615f321903d678375f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f5f5f69731903d878465f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174615f696e7465726e616c1903da783d5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f68656c696f735f5f646174615d5f5f69735f76616c69645f646174611903dc78425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f646174615f321903de78395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f5f5f746f5f646174611903e0783d5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f69735f76616c69645f646174611903e278395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f66726f6d5f646174611903e478395f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f5f5f69731903e678445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f646174615f321903e8783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f5f5f6e65771903ea783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f5f5f69731903ec78495f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f646174615f321903ee783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f646174756d1903f0783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f7574786f1903f2783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f5f5f6e65771903f4783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f5f5f69731903f678465f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f646174615f321903f8783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f646174756d1903fa783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f7574786f1903fc783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f5f5f6e65771903fe78345f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f69735f76616c69645f6461746119040078305f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f66726f6d5f6461746119040278425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f5f5f6973190404784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f646174615f3219040678465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f6163746976697479190408783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f5f5f697319040a78465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f646174615f3219040c783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f5f5f6e657719040e783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f5f5f697319041078495f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f646174615f3219041278415f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f5f5f6973190414784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f646174615f3219041678435f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f5f5f6973190418784e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f646174615f3219041a783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f5f5f697319041c78475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f646174615f3219041e71676574526566436861727465725574786f190420706765745478436861727465724461746119042278315f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f69735f76616c69645f6461746119042478325f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f69735f76616c69645f6461746119042678315f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f73657269616c697a65190428782c5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6c696e6b19042a782c5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f726f6c6519042c782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f66726f6d5f6461746119042e78305f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6964507265666978190430782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f66726f6d5f64617461190432782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f696e707574190434782b5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6d7068190436782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f5f5f746f5f64617461190438782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f5f5f746f5f6461746119043a782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f5f5f6e657719043c782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f7478696e7075745d5f5f756e7772617019043e782c44656c6567617465496e7075743a3a67656e6572696344656c65676174654163746976697479417344617461190440782644656c6567617465496e7075743a3a67656e6572696344656c656761746541637469766974791904427544656c6567617465496e7075743a3a6173736572741904447444656c6567617465496e7075743a3a6572726f7219044678235f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f67657419044878265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f6c656e67746819044a78265f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f66696c74657219044c782e44656c6567617465496e7075743a3a77697468556e697175655365656465644d696e74696e67416374697669747919044e782b44656c6567617465496e7075743a3a77697468556e6971756544445370656e64696e674163746976697479190450782044656c6567617465496e7075743a3a64656c6567617465556e6368616e6765641904527544656c6567617465496e7075743a3a6f724661696c19045478265f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f5f5f6571190456782b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f73657269616c697a6519045878255f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6d706819045a78295f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6368617274657219045c78275f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f5f5f6e657719045e781b4361706f4374783a3a6765744368617274657252656465656d657219046078545f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6765745f73616665190462781a4361706f4374783a3a66696e644d616e6966657374456e74727919046478485f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f736f6d655f5f5f5f697319046678485f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f736f6d655f5f736f6d6519046878485f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6e6f6e655f5f5f5f697319046a78325f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f6e6f6e655f5f5f5f6e657719046c78325f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f736f6d655f5f5f5f6e657719046e781e4361706f4374783a3a66696e644d616e6966657374546f6b656e4e616d65190470764361706f4374783a3a67657453657474696e6773496419047278305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f74786f75747075745d5f5f736f6d655f5f736f6d65190474781d4361706f4374783a3a7265717569726573476f76417574686f7269747919047678535f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f6e6f6e655f5f5f5f697319047878535f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f736f6d655f5f736f6d6519047a785f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f6765745f7361666519047c782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f736f6d655f5f5f5f6e657719047e78224361706f4374783a3a7265717569726573446744617461506f6c696379496e707574190480781b4361706f4374783a3a6e6f77416374696e6741734d696e74446774190482781c4361706f4374783a3a6e6f77416374696e6741735370656e64446774190484774361706f4374783a3a6765744368617274657244617461190486781b4361706f4374783a3a6765744e6578744368617274657244617461190488781b4361706f4374783a3a7265736f6c7665436861727465725574786f19048a782f5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f6e6f6e655f5f5f5f6e657719048c781e4361706f4374783a3a726571756972657344656c6567617465496e70757419048e704361706f4374783a3a6164647265737319049078194361706f4374783a3a64656c65676174656444617461526566190492781d4361706f4374783a3a64656c656761746564446174615478496e70757419049478214361706f4374783a3a6d6b44656c6567617465644461746150726564696361746519049678274361706f4374783a3a6d6b44656c656761746564446174614f757470757450726564696361746519049878204361706f4374783a3a6d7573744f757470757444656c6567617465644461746119049a78305f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f74786f75747075745d5f5f6e6f6e655f5f5f5f697319049c781a4361706f4374783a3a64656c65676174656454784f757470757419049e754361706f4374783a3a6e65656473436861727465721904a078194361706f4374783a3a7769746843686172746572496e7075741904a2774361706f4374783a3a77697468436861727465725265661904a4786b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f666f6c645b5f5f68656c696f735f5f626f6f6c5d1904a678285f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f756e777261701904a8784f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f616c6c1904aa784a5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f616c6c1904ac782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f626f6f6c5d5f5f736f6d655f5f5f5f69731904ae782a4361706f4374783a3a616c6c44656c65676174657341726556616c69646174696e6753657474696e67731904b078254361706f4374783a3a646774526f6c6573466f724c6966656379636c6541637469766974791904b26f4361706f4374783a3a6f724661696c1904b4696d6b4361706f4374781904b66b686173536565645574786f1904b8781a6e6f4f7468657241637469766974696573537570706f727465641904ba782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f646174615d5f5f6e6f6e655f5f5f5f69731904bc782c5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f646174615d5f5f736f6d655f5f736f6d651904be783f5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f736372697074707572706f7365405f5f68656c696f735f5f646174615d5f5f6765745f736166651904c0781f726571756972657344656c6567617465417574686f72697a696e674d696e741904c26e6d6b557574546e466163746f72791904c4781b736f7274506f6c69637956616c7565735072656469637461626c791904c6783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f666f725f656163681904c878635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f66696c7465721904ca78655f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f666f725f656163681904cc782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f696e745d5f5f6e6f6e655f5f5f5f69731904ce782b5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f696e745d5f5f736f6d655f5f736f6d651904d0783a5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f6765745f736166651904d278635f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f64656c6574651904d4783b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f5f5f746f5f646174611904d678365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f5f5f65711904d878365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f736f72741904da78255f5f68656c696f735f5f76616c75655f5f73756d5b5f5f68656c696f735f5f76616c75655d1904dc78365f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f6d61705b5f5f68656c696f735f5f76616c75655d1904de7276616c69646174655575744d696e74696e671904e078385f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f69735f76616c69645f646174615f696e7465726e616c1904e2782f5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f737472696e675d5f5f69735f76616c69645f646174611904e4782e5f5f6d6f64756c655f5f5265717473446174615f5f52657174446174615b5d5f5f69735f76616c69645f646174611904e6782a5f5f6d6f64756c655f5f5265717473446174615f5f52657174446174615b5d5f5f73657269616c697a651904e8782a5f5f6d6f64756c655f5f5265717473446174615f5f52657174446174615b5d5f5f66726f6d5f646174611904ea782e5f5f6d6f64756c655f5f5265717473446174615f5f52657174446174615b5d5f5f6d7573744672657368656e42791904ec7252657174446174613a3a76616c69646174651904ee78335f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f69735f76616c69645f646174611904f0782f5f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f66726f6d5f646174611904f278445f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f4369703638526566546f6b656e5f5f69735f76616c69645f646174615f321904f4783d5f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f73657269616c697a651904f678385f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f5f5f69731904f878435f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f69735f76616c69645f646174615f321904fa78365f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f64641904fc783a5f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f5f5f69731904fe78455f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f69735f76616c69645f646174615f3219050078355f5f6d6f64756c655f5f5265717473446174615f5f4d696e74696e6741637469766974795b5d5f5f69735f76616c69645f6461746119050278315f5f6d6f64756c655f5f5265717473446174615f5f4d696e74696e6741637469766974795b5d5f5f66726f6d5f6461746119050478475f5f6d6f64756c655f5f5265717473446174615f5f4d696e74696e6741637469766974795b5d5f5f4372656174696e675265636f72645f5f69735f76616c69645f646174615f32190506783c5f5f6d6f64756c655f5f5265717473446174615f5f4d696e74696e6741637469766974795b5d5f5f4372656174696e675265636f72645f5f7365656419050878365f5f6d6f64756c655f5f5265717473446174615f5f5370656e64696e6741637469766974795b5d5f5f69735f76616c69645f6461746119050a78325f5f6d6f64756c655f5f5265717473446174615f5f5370656e64696e6741637469766974795b5d5f5f66726f6d5f6461746119050c78485f5f6d6f64756c655f5f5265717473446174615f5f5370656e64696e6741637469766974795b5d5f5f5570646174696e675265636f72645f5f69735f76616c69645f646174615f3219050e783b5f5f6d6f64756c655f5f5265717473446174615f5f5370656e64696e6741637469766974795b5d5f5f5570646174696e675265636f72645f5f696419051078355f5f6d6f64756c655f5f5265717473446174615f5f4275726e696e6741637469766974795b5d5f5f69735f76616c69645f6461746119051278475f5f6d6f64756c655f5f5265717473446174615f5f4275726e696e6741637469766974795b5d5f5f44656c6574696e675265636f72645f5f69735f76616c69645f646174615f31190514781b656e73757265436f6e73747261696e6564547856616c69646974791905166c64617973496e46757475726519051878385f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f69735f76616c69645f6461746119051a78345f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f66726f6d5f6461746119051c78485f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f5f5f697319051e78535f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f32190520784c5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f6163746976697479190522784c5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f5f5f697319052478575f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f3219052678505f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f616374697669747919052878435f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f5f5f697319052a784e5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f3219052c78475f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f616374697669747919052e78425f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f5f5f6973190530784d5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f3219053278465f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f616374697669747919053478425f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f5f5f6973190536784d5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f3219053878465f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f5f5f697319053a78515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3219053c78465f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f7365656419053e784a5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f646174615479706519054078465f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f5f5f697319054278515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f32190544784a5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f646174615479706519054678475f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f726563496419054878465f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f5f5f697319054a78515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f3219054c78475f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f726563496419054e784b5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f5f5f697319055078565f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f3219055278515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f61637469766974696573190554782b5f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f666f725f6561636819055678295f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f7478696e7075745d5f5f66696c746572190558782e44656c656761746541637469766974793a3a6164646974696f6e616c44656c656761746556616c69646174696f6e19055a782644656c656761746541637469766974793a3a6f74686572446174756d56616c69646174696f6e19055c6372657619055e68696e7374616e63651905606c64656c65676174654e616d651905626e69734d696e7444656c65676174651905646f69735370656e6444656c65676174651905666e6973446744617461506f6c696379190568747265717569726573476f76417574686f7269747919056a78235f5f68656c696f735f5f6c6973745b5f5f68656c696f735f5f646174615d5f5f616c6c19056c784b5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f5f5f657119056e784b5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f7461696c190570784d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f6c656e677468190572782e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6173736574636c6173735d5f5f756e7772617019057478335f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6173736574636c6173735d5f5f736f6d655f5f5f5f6e6577190576784a5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f616c6c190578784b5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f6865616419057a78365f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f73686f7719057c787d5f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f666f6c645b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d19057e78385f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5f5f64656c657465190580784e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f736f6d655f5f5f5f6973190582784e5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f736f6d655f5f736f6d6519058478655f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f6d696e74696e67706f6c69637968617368405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f627974656172726179405f5f68656c696f735f5f696e745d5d5f5f6765745f7361666519058678e35f5f68656c696f735f5f6c6973745b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5d5f5f666f6c64325b5f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d405f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5d19058878525f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6c656e67746819058a78505f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f6865616419058c78505f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f7461696c19058e784f5f5f68656c696f735f5f6f7074696f6e5b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5d5f5f756e7772617019059078525f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f64656c65746519059278505f5f68656c696f735f5f6d61705b5f5f68656c696f735f5f737472696e67405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4d616e6966657374456e7472795b5d5d5f5f5f5f6571190594782a5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f737472696e675d5f5f756e77726170190596782d5f5f68656c696f735f5f6f7074696f6e5b5f5f68656c696f735f5f6279746561727261795d5f5f756e77726170190598646d61696e1905c8781d5f5f6d6f64756c655f5f426173696344656c65676174655f5f6d61696e1905c9636d64641905ca6861637469766974791905db68726573756c745f321905ed695f5f636f6e645f36301905f96b5f5f6c68735f305f3236311906086369734419060a62646419063f676d794467546b6e19064c781b636865636b4e6f6e44656c6567617465644163746976697469657319066266636374785f371906d2695f5f636f6e645f36321906de6b5f5f6c68735f305f3233391906e06c616374697669746965735f321906e266636374785f361906e46e6d696e74446774436865636b5f311906e66f7370656e64446774436865636b5f311906e871646744617461506f6c696379436865636b19071c6d72617741637469766974795f3219071e64615f32321907326a5f5f636f6e645f31313319073e6b5f5f6c68735f305f32363019074d6b5f5f6c68735f305f32353919075c6b5f5f6c68735f305f32353819076b6b5f5f6c68735f305f32353719077e6b5f5f6c68735f305f3235361907916b5f5f6c68735f305f3235351907ad6b5f5f6c68735f305f3235341907bc6b5f5f6c68735f305f3235331907c16b5f5f6c68735f305f3235321908026d72617741637469766974795f3119080464615f32311908186a5f5f636f6e645f3131321908246b5f5f6c68735f305f32353119084e6b5f5f6c68735f305f32353019085d6b5f5f6c68735f305f32343919086c6b5f5f6c68735f305f32343819087b6b5f5f6c68735f305f32343719088a6b5f5f6c68735f305f32343619088f645f5f37371908d06b72617741637469766974791908d264615f32301908e66a5f5f636f6e645f3131311908f26b5f5f6c68735f305f3234351909056b5f5f6c68735f305f3234341909186b5f5f6c68735f305f3234331909276b5f5f6c68735f305f3234321909366b5f5f6c68735f305f3234311909456b5f5f6c68735f305f32343019094a645f5f373619097b6b5f5f6c68735f305f32333319097d6d696e6e6572416374697669747919097f6a5f5f636f6e645f31303919098b6b5f5f6c68735f305f32333719098d66736565645f3919098f69707572706f73655f38190991664255524e4544190993726f746865724d696e74656456616c75655f3219099567746e5374725f331909bc66636374785f351909be7169735570646174696e67436861727465721909c06b69734d696e74696e674f6b1909f36a5f5f636f6e645f3131301909ff6b5f5f6c68735f305f323338190a02645f5f3735190a386b5f5f6c68735f305f323336190a606b5f5f6c68735f305f323334190a626b5f5f6c68735f305f323335190a976b5f5f6c68735f305f313333190a996464434c41190aa666636374785f34190ab76a5f5f636f6e645f313037190ac36b5f5f6c68735f305f323332190ac56463434c41190ae46b5f5f6c68735f305f323330190ae66a5f5f636f6e645f313038190af26b5f5f6c68735f305f323331190af7645f5f3734190afe645f5f3733190b086a6e6565646564526f6c65190b0a6d6d7943757272656e74526f6c65190b10695f5f636f6e645f3634190b1c6b5f5f6c68735f305f323236190b1e66736565645f38190b2069707572706f73655f37190b34666d6b546e5f31190b366a5f5f636f6e645f313035190b426b5f5f6c68735f305f323237190b966a5f5f636f6e645f313036190ba26b5f5f6c68735f305f323239190ba76b5f5f6c68735f305f323238190ba9696467744c696e6b5f33190bde645f5f3732190bf86b5f5f6c68735f305f313734190c056d63686172746572446174615f34190c12716f6c6450656e64696e674368616e676573190c14716e65787443686172746572446174615f32190c166e6e6578744368616e67654c697374190c18696e65774368616e6765190c216b5f5f6c68735f305f313735190c236b5f5f6c68735f305f305f32190c2566616374696f6e190c2766726f6c655f32190c29684f6467744c696e6b190c2b6e6e6577446774526f6c654e616d65190c316a5f5f636f6e645f313033190c3d6b5f5f6c68735f305f323234190c466a5f5f636f6e645f313034190c526b5f5f6c68735f305f323235190c62645f5f3731190c69645f5f3730190c8d6a5f5f636f6e645f313032190c996b5f5f6c68735f305f323233190ca86b5f5f6c68735f305f323232190caa66736565645f37190cac69707572706f73655f36190cae6a69645072656669785f39190caf6b63616c6c6261636b5f3134190cc16b5f5f6c68735f305f323231190cc366736565645f36190cc569707572706f73655f35190cc76a69645072656669785f38190cc86b63616c6c6261636b5f3133190cdb66736565645f35190cdc69707572706f73655f34190cdd7570656e64696e67416374696f6e4964507265666978190cdf781c706f737369626c654d696e74446774566572696669636174696f6e73190ce1781a6f74686572506f737369626c65566572696669636174696f6e73190d0a695f5f636f6e645f3931190d166b5f5f6c68735f305f323230190d2d6b5f5f6c68735f305f313934190d3a6f69734e6f74414475706c6963617465190d49766578697374696e67526f6c65456e7472794d61796265190d4b781c706f737369626c655265706c6163656d656e744973436f7272656374190d5a695f5f636f6e645f3934190d666b5f5f6c68735f305f323138190d776a5f5f636f6e645f313031190d836b5f5f6c68735f305f323139190d8c645f5f3639190d9c6b5f5f6c68735f305f313939190d9e6b7265706c61636573446774190dba6a5f5f636f6e645f313030190dc66b5f5f6c68735f305f323137190dd56b5f5f6c68735f305f323136190de46b5f5f6c68735f305f323135190de9645f5f3638190dfb716578697374696e674467744c696e6b5f31190e086d6578697374696e674467546b6e190e23695f5f636f6e645f3939190e2f6b5f5f6c68735f305f323134190e3c6b5f5f6c68735f305f323133190e496b5f5f6c68735f305f323132190e566b5f5f6c68735f305f323131190e59645f5f3637190e64695f5f636f6e645f3938190e706b5f5f6c68735f305f323130190e876b5f5f6c68735f305f323039190e9e6b5f5f6c68735f305f323038190ebe6b5f5f6c68735f305f323037190ecd6b5f5f6c68735f305f323036190edc6b5f5f6c68735f305f323035190eeb6b5f5f6c68735f305f323034190ef06b5f5f6c68735f305f323033190ef7695f5f636f6e645f3936190f036b5f5f6c68735f305f323032190f0c6b5f5f6c68735f305f323030190f0e6b5f5f6c68735f305f305f34190f106b656e747279547970655f32190f12695f5f636f6e645f3937190f1e6b5f5f6c68735f305f323031190f206f6578697374696e674467744c696e6b190f26645f5f3636190f406b5f5f6c68735f305f313937190f51695f5f636f6e645f3935190f5d6b5f5f6c68735f305f313938190f66645f5f3635190f7c6a70644368616e67655f32190f7e695f5f636f6e645f3932190f8a6b5f5f6c68735f305f313935190f8c6b5f5f6c68735f305f305f33190f8e6b70656e64696e67526f6c65190f90695f5f636f6e645f3933190f9c6b5f5f6c68735f305f313936190f9e6f6368616e67696e674467744e616d65190fa8645f5f3634190fb5645f5f3633190fbc645f5f3632190fc3695f5f636f6e645f3834190fcf6b5f5f6c68735f305f313933190fdc6b5f5f6c68735f305f313737190fea695f5f636f6e645f3835190ff66b5f5f6c68735f305f313835190ffc695f5f636f6e645f39301910086b5f5f6c68735f305f3139321910176b5f5f6c68735f305f3139311910266b5f5f6c68735f305f3139301910356b5f5f6c68735f305f3138391910446b5f5f6c68735f305f3138381910556b5f5f6c68735f305f3138371910666b5f5f6c68735f305f31383619106b645f5f363119108c645f5f35381910ab6d6d6b546f6b656e4e616d655f321910ad696467546b6e4e616d651910af6b6d696e7465644467546b6e1910bc696467744c696e6b5f321910db7664656c656761746554616b65734f776e6572736869701910dd781d706f737369626c6545787472615265706c6163656d656e74436865636b1910ec695f5f636f6e645f38371910f86b5f5f6c68735f305f313830191110695f5f636f6e645f383819111c6b5f5f6c68735f305f31383219111e636464651911206b5f5f6c68735f305f3138331911226b656e747279547970655f31191124695f5f636f6e645f38391911306b5f5f6c68735f305f3138341911326a69645072656669785f37191161645f5f36301911776b5f5f6c68735f305f313831191189645f5f35391911a4695f5f636f6e645f38361911b06b5f5f6c68735f305f3137391911b56b5f5f6c68735f305f3137381911b762646c1911ff645f5f3537191206695f5f636f6e645f38331912126b5f5f6c68735f305f313736191214676467744e616d6519121a645f5f35361912556b5f5f6c68735f305f31373319127d6b5f5f6c68735f305f3135301912957270656e64696e674368616e6765734c6973741912977070726576696f75734d616e6966657374191299716e65787443686172746572446174615f3119129b6c6e6578744d616e69666573741912ba6d7370656e64446774436865636b1912bc6c6d696e74446774436865636b19131a646d696e7419131c6e6d696e7454686973506f6c69637919131e636c656e19134d716f62736572766564546f6b656e4275726e19134f6d72656d61696e696e674d696e741913826b666f6c64696e674275726e1913836a70634368616e67655f311913906a70644368616e67655f31191392695f5f636f6e645f373819139e6b5f5f6c68735f305f3136351913a06a747970654e616d655f351913ad695f5f636f6e645f37391913b96b5f5f6c68735f305f3137321913bc645f5f35341913c9695f5f636f6e645f38301913d56b5f5f6c68735f305f3137311913de6b5f5f6c68735f305f3136361913e06b5f5f6c68735f305f305f311913e2694d455f747970655f311913e464746e5f351913e6666d70685f32391913e8695f5f636f6e645f38311913f46b5f5f6c68735f305f3137301913fe645f5f353519140b6b5f5f6c68735f305f31363719140d6a726566436f756e745f3119140f67746e5374725f32191411695f5f636f6e645f383219141d6b5f5f6c68735f305f3136391914266b5f5f6c68735f305f3136381914286c6275726e696e67436f756e7419149f645f5f35331914a8695f5f636f6e645f37371914b46b5f5f6c68735f305f3136341914b66b6467744368616e67655f311914bc6b5f5f6c68735f305f3136331914c4695f5f636f6e645f37361914d06b5f5f6c68735f305f3136321914d2666d696e7465641914d86b5f5f6c68735f305f31363119152877707265764d616e696665737452656d61696e6465725f31191529686e657874434d457319152a6870634368616e676519152c6870644368616e676519152e6f70656e64696e67547970654e616d65191534695f5f636f6e645f37321915406b5f5f6c68735f305f31353919154d695f5f636f6e645f37351915596b5f5f6c68735f305f313630191562645f5f353219156b645f5f343919159467434d455f6b6579191595675f5f6c68735f31191597674d455f747970651915a46b5f5f6c68735f305f3135351915a66d4d455f706f6c6963794c696e6b1915a86b4d455f69645072656669781915aa68726566436f756e741915cd674d455f6e616d651915da6b70656e64696e674c696e6b1915dc6b70656e64696e674e616d651915f66c6e657874496450726566697819160c695f5f636f6e645f37331916186b5f5f6c68735f305f31353719161a6a69645072656669785f3619162b695f5f636f6e645f37341916376b5f5f6c68735f305f313538191640645f5f35311916596b5f5f6c68735f305f31353619165b6a69645072656669785f35191661645f5f3530191691695f5f636f6e645f373119169d6b5f5f6c68735f305f31353419169e6b63616c6c6261636b5f31321916a7645f5f34381916a86b63616c6c6261636b5f31311916b9695f5f636f6e645f37301916c56b5f5f6c68735f305f3135331916c76a747970654e616d655f341916d4645f5f34371916dd695f5f636f6e645f36391916e96b5f5f6c68735f305f3135321916eb696467744368616e67651916f16b5f5f6c68735f305f3135311916f975707265764d616e696665737452656d61696e6465721916fa756e6578744d616e696665737452656d61696e6465721917226b5f5f6c68735f305f313430191724706d616e69666573744163746976697479191735695f5f636f6e645f36351917416b5f5f6c68735f305f3134391917736b5f5f6c68735f305f3134381917966b5f5f6c68735f305f313432191798666b65795f333119179a6b746f6b656e4e616d655f3519179c6d63686172746572446174615f3319179e6f6e65787443686172746572446174611917ab6b5f5f6c68735f305f3134331917bc695f5f636f6e645f36361917c86b5f5f6c68735f305f3134371917d16b5f5f6c68735f305f3134341917d3695f5f6c68735f305f301917d569656e747279547970651917d764746e5f341917d9666d70685f3238191802695f5f636f6e645f363819180e6b5f5f6c68735f305f313436191813645f5f3436191818695f5f636f6e645f36371918246b5f5f6c68735f305f313435191829645f5f34351918946b5f5f6c68735f305f3134311918e3645f5f34341918f66b5f5f6c68735f305f3133391919066b5f5f6c68735f305f31333819192d695f5f636f6e645f36331919396b5f5f6c68735f305f3133371919486b5f5f6c68735f305f3133361919786b5f5f6c68735f305f3133351919a86b5f5f6c68735f305f3133341919e4645f5f3433191a0a6b5f5f6c68735f305f313332191a0c66736565645f34191a0e6f6444617461547970654e616d655f31191a2066636374785f33191a4973706f6c69637944656c6567617465496e707574191a4b69746e466163746f7279191a4d69707572706f73655f33191a4f6b6e65774461746149645f31191aea6b5f5f6c68735f305f313331191aec6d6444617461547970654e616d65191aee6772656349645f38191b0066636374785f32191b5267696e7075744444191b716d63757253657474696e67734964191bab6a72656349645374725f34191bad7063757253657474696e67734964537472191c126b5f5f6c68735f305f313239191c146772656349645f37191c2666636374785f31191c706b5f5f6c68735f305f313330191cb36b5f5f6c68735f305f313238191cc06b5f5f6c68735f305f313237191cc36b5f5f6c68735f305f313236191cd5645f5f3431191cd7756b61626f6f6d496e76616c696452656465656d6572191cd9695f5f636f6e645f3631191ce56b5f5f6c68735f305f313235191cf36b5f5f6c68735f305f313234191cf7645f5f3432191d056873656c665f323830191d0c6873656c665f323739191d136873656c665f323738191d14676f746865725f36191d1e6873656c665f323736191d1f666b65795f3239191d21666b65795f3330191d236b726563757273655f313035191d296b726563757273655f313034191d2a6873656c665f323737191d3768686561645f313133191d39667461696c5f36191d656873656c665f323735191d6e6873656c665f323734191d7068686561645f313132191d716b63616c6c6261636b5f3130191d876873656c665f323733191d8b6873656c665f323732191d8c65666e5f3334191d8d6461305f31191d8e6462305f31191d9466707265765f35191d95676974656d5f3138191d9864615f3139191d9964625f3232191da76a63616c6c6261636b5f39191dad6873656c665f323731191dae666b65795f3238191db864785f3133191dc66873656c665f323730191dcc68646174615f333137191dd26873656c665f323638191dd3666b65795f3236191dd5666b65795f3237191dd76b726563757273655f313033191ddd6b726563757273655f313032191dde6873656c665f323639191deb68686561645f313131191ded667461696c5f35191e196873656c665f323637191e1a65666e5f3333191e1b626130191e2166707265765f34191e22676974656d5f3137191e2f6873656c665f323635191e326b726563757273655f313031191e426b726563757273655f313030191e436873656c665f323636191e44656669727374191e5c68686561645f313130191e5e686b65795f64617461191e60666b65795f3234191e626a76616c75655f64617461191e646776616c75655f37191e706776616c69645f38191e71666b65795f3235191e866776616c69645f37191e876776616c75655f38191eb76873656c665f323634191ec26873656c665f323633191ec365666e5f3332191ec8676974656d5f3136191ed266736f6d655f35191edc6873656c665f323632191ee66873656c665f323631191ee7676f746865725f35191ef16873656c665f323630191ef265666e5f3331191ef7676974656d5f3135191f106873656c665f323539191f11695f7072696f724d6464191f136e6e65766572547269676765726564191f15695f5f636f6e645f3539191f216b5f5f6c68735f305f313233191f2f6b5f5f6c68735f305f313232191f33645f5f3430191f3b6873656c665f323538191f3c697072696f724d646464191f3d6463637478191f4a695f5f636f6e645f3536191f566b5f5f6c68735f305f313231191f636b5f5f6c68735f305f313230191f726b5f5f6c68735f305f313138191f7463564d41191f76695f5f636f6e645f3538191f786b5f5f6c68735f305f313139191f7a66736565645f33191f83646d6b546e191f946b746f6b656e4e616d655f34191f96676e657752657174191f986a72657174446174615f31191fb37061636365707461626c65457870697279191fb56c646973636f756e74456e64731920376b5f5f6c68735f305f31313419203963565341192076695f5f636f6e645f35371920786b5f5f6c68735f305f31313519207a6772656349645f3619207c6768617344445f3219207e6b68617344444f757470757419208d667574786f5f3619208f6872657174446174611920916b757064617465645574786f1920936b75706461746564526571741920956b5f5f6c68735f305f3131361920976b5f5f6c68735f305f3131371920996b6672657368457870697279192125645f5f33391921356873656c665f32353719213665666e5f333019213b676974656d5f31341921416873656c665f32353619214265666e5f32391921446a726563757273655f393919214a6a726563757273655f393819214b666c73745f323719216b6873656c665f32353519217168646174615f33313519217e67706169725f383819219068646174615f3331361921a16a6669656c64735f3139311921ae68686561645f3130391921ba6a6669656c64735f3139321921e968646174615f3331341921ef6873656c665f3235341921f568646174615f33313219220267706169725f383719221468646174615f3331331922256a6669656c64735f31383819223268686561645f31303719223e6a6669656c64735f31383919224b68686561645f3130381922576a6669656c64735f31393019229068646174615f3331311922966873656c665f32353319229c6873656c665f3235321922a268646174615f3330391922af67706169725f38361922c168646174615f3331301922d26a6669656c64735f3138351922df68686561645f3130351922eb6a6669656c64735f3138361922f868686561645f3130361923046a6669656c64735f31383719233d68646174615f3330381923436873656c665f3235311923496873656c665f32353019234f68646174615f33303619235c67706169725f383519236e68646174615f33303719237f6a6669656c64735f31383219238c68686561645f3130331923986a6669656c64735f3138331923a568686561645f3130341923b16a6669656c64735f3138341923ea68646174615f3330351923f068646174615f3330331923fd67706169725f383419240f68646174615f3330341924206a6669656c64735f31383019242d68686561645f31303219243b6a6669656c64735f31383119246a68646174615f3330321924706873656c665f32343919247868646174615f33303019248567706169725f383319249768646174615f3330311924a86a6669656c64735f3137381924b568686561645f3130311924c36a6669656c64735f3137391924f268646174615f3239391924f86873656c665f32343819250068646174615f32393719250d67706169725f383219251f68646174615f3239381925306a6669656c64735f31373619253d68686561645f31303019254b6a6669656c64735f31373719257a68646174615f3239361925806873656c665f32343719258c68646174615f32393419259967706169725f38311925ab68646174615f3239351925bc6a6669656c64735f3137341925c967686561645f39391925db6a6669656c64735f31373519260a68646174615f3239331926106873656c665f32343619262468646174615f32393119263167706169725f383019264368646174615f3239321926546a6669656c64735f31373219266167686561645f393819267b6a6669656c64735f3137331926aa68646174615f3239301926b078535f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f311926b178575f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f311926b2784e5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f311926b3784d5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f311926b4784d5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f311926b578515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f311926b678515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f311926b778515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f311926b878565f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f311926b968646174615f3238391926bb6969676e6f72655f32311926e178515f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174611926e278555f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174611926e3784c5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174611926e4784b5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174611926e5784b5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174611926e6784f5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174611926e7784f5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174611926e8784f5f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174611926e978545f5f6d6f64756c655f5f5265717473506f6c6963795f5f44656c656761746541637469766974795b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174611926ea68646174615f3238381927586b6e6f77506c7573446179731927606e6578706972794475726174696f6e192762666c6565776179192764706c617465737441636365707461626c6519279f68646174615f3238361927ac67706169725f37391927be68646174615f3238371927cf6a6669656c64735f3137301927dc67686561645f39371927e86a6669656c64735f31373119281778455f5f6d6f64756c655f5f5265717473446174615f5f4275726e696e6741637469766974795b5d5f5f44656c6574696e675265636f72645f5f69735f76616c69645f6461746119281868646174615f3238351928266873656c665f32343519282c68646174615f32383319283967706169725f373819284b68646174615f32383419285c6a6669656c64735f31363819286967686561645f39361928756a6669656c64735f3136391928a478485f5f6d6f64756c655f5f5265717473446174615f5f5370656e64696e6741637469766974795b5d5f5f5570646174696e675265636f72645f5f69735f76616c69645f646174615f311928a568646174615f3238321928a76969676e6f72655f32301928bd78465f5f6d6f64756c655f5f5265717473446174615f5f5370656e64696e6741637469766974795b5d5f5f5570646174696e675265636f72645f5f69735f76616c69645f646174611928be68646174615f3238311928cc6873656c665f3234341928d268646174615f3237391928df67706169725f37371928f168646174615f3238301929026a6669656c64735f31363619290f67686561645f393519291b6a6669656c64735f31363719294a78475f5f6d6f64756c655f5f5265717473446174615f5f4d696e74696e6741637469766974795b5d5f5f4372656174696e675265636f72645f5f69735f76616c69645f646174615f3119294b68646174615f32373819294d6969676e6f72655f313919296378455f5f6d6f64756c655f5f5265717473446174615f5f4d696e74696e6741637469766974795b5d5f5f4372656174696e675265636f72645f5f69735f76616c69645f6461746119296468646174615f32373719297268646174615f32373519297f67706169725f373619299168646174615f3237361929a26a6669656c64735f3136321929af67686561645f39321929bb6a6669656c64735f3136331929c867686561645f39331929d46a6669656c64735f3136341929e167686561645f39341929ed6a6669656c64735f313635192a3068646174615f323734192a366873656c665f323433192a3c68646174615f323732192a4967706169725f3735192a5b68646174615f323733192a6c6a6669656c64735f313630192a7967686561645f3931192a856a6669656c64735f313631192ab468646174615f323731192abb68646174615f323639192ac867706169725f3734192ada68646174615f323730192aeb6a6669656c64735f313536192af867686561645f3838192b046a6669656c64735f313537192b1167686561645f3839192b1d6a6669656c64735f313538192b2a67686561645f3930192b366a6669656c64735f313539192b7978445f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f4369703638526566546f6b656e5f5f69735f76616c69645f646174615f31192b7a78435f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f69735f76616c69645f646174615f31192b7b78455f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f69735f76616c69645f646174615f31192b7c68646174615f323638192b7e6969676e6f72655f3138192b9878425f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f4369703638526566546f6b656e5f5f69735f76616c69645f64617461192b9978415f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f497344656c65676174696f6e5f5f69735f76616c69645f64617461192b9a78435f5f6d6f64756c655f5f5265717473446174615f5f44656c6567617465446174756d5b5d5f5f6361706f53746f726564446174615f5f69735f76616c69645f64617461192b9b68646174615f323637192bc16873656c665f323432192bdd6873656c665f323431192be568646174615f323636192be76969676e6f72655f3137192bfc68646174615f323635192d4368646174615f323634192d5c666c73745f3235192d5e6a726563757273655f3937192d646a726563757273655f3936192d65666c73745f3236192d88666d70685f3237192d8966736565645f32192d8a6473656564192d8b755f5f7573656f70745f5f6d6b546f6b656e4e616d65192d8c6b6d6b546f6b656e4e616d65192d8d781a5f5f7573656f70745f5f626f6f74737472617043686172746572192d8e70626f6f74737472617043686172746572192d8f781a5f5f7573656f70745f5f6f746865724d696e74656456616c7565192d90706f746865724d696e74656456616c7565192d9178235f5f7573656f70745f5f6e656564734d696e7444656c6567617465417070726f76616c192d9278196e656564734d696e7444656c6567617465417070726f76616c192d93782a5f5f7573656f70745f5f65787472614d696e7444656c656761746552656465656d6572436865636b5f31192d94782065787472614d696e7444656c656761746552656465656d6572436865636b5f32192d9578205f5f7573656f70745f5f636865636b4d696e7444677441637469766974795f31192d9676636865636b4d696e7444677441637469766974795f32192d986d6d6b546f6b656e4e616d655f31192d9a72626f6f747374726170436861727465725f31192d9c726f746865724d696e74656456616c75655f31192d9e781b6e656564734d696e7444656c6567617465417070726f76616c5f31192da0782065787472614d696e7444656c656761746552656465656d6572436865636b5f33192da276636865636b4d696e7444677441637469766974795f33192da46f6973426f6f74737472617070696e67192da67064656c6567617465417070726f76616c192da86b76616c75654d696e746564192daa6d657870656374656456616c7565192dbe666d7068537472192dc06676616c537472192ded74657870656374656456616c756573536f72746564192df664746e5f33192df764695f3135192df967746e5374725f31192e117461637475616c54686973506f6c6963794d696e74192e13781a61637475616c54686973506f6c6963794d696e74536f72746564192e2864746e5f32192e2964695f3134192e2b65746e537472192e5864625f3231192e59645f5f3338192e717074686973506f6c6963794d696e744f4b192e97736f74686572506f6c69636965734d696e744f6b192ed67572656d61696e696e6745787065637465644d696e74192f23686f746865724d7068192f2478186578706563746564546f6b656e7354686973506f6c696379192f26706d696e74656454686973506f6c696379192f2b6b746f6b656e4e616d655f33192f2c6d6578706563746564436f756e74192f36695f5f636f6e645f3535192f426b5f5f6c68735f305f313133192f456b5f5f6c68735f305f313132192f476b61637475616c436f756e74192f5868746e537472696e67192fb969707572706f73655f32192fdb6b5f5f6c68735f305f313131192fdd676d696e7444677419304f6873656c665f32343019305065666e5f3238193056676974656d5f31331930616873656c665f3233391930636a726563757273655f39351930696a726563757273655f393419306a666c73745f32341930896873656c665f32333819308a66636f6d705f3419308f64615f313819309064625f32301930b26873656c665f3233371930b3676f746865725f341930be6873656c665f3233351930bf666b65795f32321930c1666b65795f32331930c36a726563757273655f39331930c96a726563757273655f39321930ca6873656c665f3233361930d767686561645f38371930d9667461696c5f341931056873656c665f323334193106666b65795f323119311064785f313219311e6873656c665f32333319312468646174615f32363319312a6873656c665f32333219312b65666e5f323719312d6a726563757273655f39311931336a726563757273655f3930193134666d61705f333219314167686561645f38361931636873656c665f32333119316465666e5f323619316967706169725f373319317b6873656c665f32333019317c65666e5f323519317e6a726563757273655f38391931846a726563757273655f3838193185666d61705f333119319267686561645f38351931b4626b311931b5635f76311931b6626b321931b7635f76321931bd66736565645f311931bf6873656564547849641931c167736565644964781931c36869647842797465731931c567726177547849641931c76774786f496e666f1931c9686d696e69486173681931cb636d68731931cc617019321f6c64656c65676174654c696e6b193220666d70685f323619322178285f5f7573656f70745f5f65787472614d696e7444656c656761746552656465656d6572436865636b193222781e65787472614d696e7444656c656761746552656465656d6572436865636b193223781e5f5f7573656f70745f5f636865636b4d696e74446774416374697669747919322474636865636b4d696e744467744163746976697479193226782065787472614d696e7444656c656761746552656465656d6572436865636b5f3119322876636865636b4d696e7444677441637469766974795f3119322a67617574687a41631932446a74617267657449645f3119324d727370656e6473417574686f7269747955757419324f6365727219325178216d61796265436865636b65644d696e7444656c6567617465417574686f726974791932537464656c6567617465446964417574686f72697a6519325d695f5f636f6e645f35321932696b5f5f6c68735f305f31313019326e6b5f5f6c68735f305f31303519327064785f31311932726a61637469766974795f32193274695f5f636f6e645f35331932806b5f5f6c68735f305f31303619328263444c411932a7695f5f636f6e645f35341932b36b5f5f6c68735f305f3130391932c76b5f5f6c68735f305f3130381932cc6b5f5f6c68735f305f3130371932d6645f5f333719330d69707572706f73655f3119330f695f5f636f6e645f353119331b6473705f31193324645f5f3336193329695f5f636f6e645f35301933356b5f5f6c68735f305f31303419333764785f313019333f6b5f5f6c68735f305f31303319335064695f31331933776873656c665f323239193378666b65795f323019338263785f391933906873656c665f32323819339668646174615f32363219339c645f5f33351933bd6274781933be68736565645574786f1933dc67696e7075745f3419340e666d70685f32351934156873656c665f3232371934316873656c665f3232361934326a61637469766974795f31193447695f5f636f6e645f34391934536b5f5f6c68735f305f3130321934626b5f5f6c68735f305f3130311934716b5f5f6c68735f305f31303019348a6a5f5f6c68735f305f39391934a36a5f5f6c68735f305f39381934bc6a5f5f6c68735f305f39371934cb6a5f5f6c68735f305f39361934e26873656c665f3232351934e56d63686172746572446174615f321934e7666d70685f32341934e96a5f5f6c68735f305f39321934eb6f7370656e64496e76617269616e74731934ed736f746865724e616d656444656c6567617465731934ef6e6d696e74496e76617269616e74731934f16b676f7644656c65676174651934f3686d616e69666573741934f568696e707574735f3219350278197370656e6444656c6567617465497356616c69646174696e6719351a781a676f7644656c65676174654d6179626556616c69646174696e6719351c71636865636b4f6e65496e76617269616e74193529781c7370656e64496e76617269616e747341726556616c69646174696e67193536781b6d696e74496e76617269616e747341726556616c69646174696e67193543781b646744617461506f6c696369657341726556616c69646174696e67193550781b6e616d656444656c65676174657341726556616c69646174696e67193580626f6b193581666b65795f3139193582626f6b1935b0666b65795f31381935b167656e7472795f311935b3695f5f636f6e645f34381935bf6a5f5f6c68735f305f39351935c16c706f6c6963794c696e6b5f311935d6645f5f33341935f1666f6e6544677419360e695f5f636f6e645f343719361a6a5f5f6c68735f305f393419361d6a5f5f6c68735f305f393319365b68646174615f3236311936616873656c665f32323419366265666e5f3234193667676974656d5f313219366d6873656c665f32323319366e65666e5f323219367065666e5f323319367667706169725f37321936886873656c665f32323219368f6873656c665f32323119369065666e5f3231193691637a5f32193697637a5f3319369867706169725f37311936ad6873656c665f3232301936bb69636861727465725f331936bd695f5f636f6e645f34361936c96a5f5f6c68735f305f39311936d66a5f5f6c68735f305f39301936db6a5f5f6c68735f305f38381936dd6a5f5f6c68735f305f38391936df666d70685f32331936e1667574786f5f351936e367646174756d5f361937046873656c665f32313919371269636861727465725f32193714695f5f636f6e645f34341937206a5f5f6c68735f305f383719372d6a5f5f6c68735f305f38361937326a5f5f6c68735f305f38321937346a5f5f6c68735f305f3833193736666d70685f32321937386b6368617274657241635f3419373a6c686173436861727465725f331937436d636861727465725574786f5f3319374567646174756d5f3519375b695f5f636f6e645f34351937676a5f5f6c68735f305f38351937696463685f3319376f6a5f5f6c68735f305f383419377b667478696e5f3619379878325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f7769746843686172746572496e7075741937996873656c665f3231381937a769636861727465725f311937a9695f5f636f6e645f34321937b56a5f5f6c68735f305f38311937c26a5f5f6c68735f305f38301937c56a5f5f6c68735f305f37361937c76a5f5f6c68735f305f37371937c9666d70685f32311937cb6b6368617274657241635f331937cd6c686173436861727465725f321937cf695f5f636f6e645f34331937db6a5f5f6c68735f305f37391937e86a5f5f6c68735f305f37381937ea6d636861727465725574786f5f321937f367646174756d5f34193813667478696e5f351938306873656c665f3231371938316772656349645f351938336a72656349645374725f331938356461635f321938376a6361706f416464725f33193839695f5f636f6e645f34311938456a5f5f6c68735f305f373519384e6a5f5f6c68735f305f37341938506774786f75745f311938676574786f757419389c68646174615f3236301938a278335f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f64656c65676174656454784f75747075741938a36873656c665f3231361938a4696e65774461746149641938a5696e65774461746149641938b2666467446174611938b4676467446174756d1938c1695f5f636f6e645f34301938cd6a5f5f6c68735f305f37331938cf68646174615f3235391938d16a72656349645374725f321938ec6b61637475616c4964537472193938645f5f33331939506873656c665f3231351939516a747970654e616d655f331939526e5f5f7573656f70745f5f69645f311939536469645f3319395578274361706f4374783a3a6d6b44656c656761746564446174614f75747075745072656469636174651939576a6361706f416464725f32193958683c61737369676e3e19396868646174615f32353819396a695f5f636f6e645f33391939766a5f5f6c68735f305f373219397863785f3819399c645f5f33321939c06873656c665f3231341939c1725f5f7573656f70745f5f747970654e616d651939c26a747970654e616d655f311939c36c5f5f7573656f70745f5f69641939c46469645f311939c678214361706f4374783a3a6d6b44656c656761746564446174615072656469636174651939c86469645f321939ca6a6361706f416464725f311939e9667478696e5f341939f968646174615f3235371939fb695f5f636f6e645f3338193a076a5f5f6c68735f305f3731193a0963785f37193a3d645f5f3331193a6c783c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6d6b44656c656761746564446174615072656469636174655f31193a6d6873656c665f323133193a6e715f5f7573656f70745f5f72656349645f31193a6f6772656349645f33193a70765f5f7573656f70745f5f726563496442797465735f31193a716c726563496442797465735f32193a73781d4361706f4374783a3a64656c656761746564446174615478496e707574193a756c726563496442797465735f33193a776768617344445f31193a79683c61737369676e3e193a86695f5f636f6e645f3337193a926a5f5f6c68735f305f3730193a976a5f5f6c68735f305f3639193a99667478696e5f33193ad5783a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6d6b44656c65676174656444617461507265646963617465193ad66873656c665f323132193ad76473656c66193ad86772656349645f31193ad9745f5f7573656f70745f5f72656349644279746573193ada6a72656349644279746573193adc6772656349645f32193ade6c726563496442797465735f31193ae0656861734444193ae2687265634964537472193aef695f5f636f6e645f3336193afb6a5f5f6c68735f305f3638193b006a5f5f6c68735f305f3637193b02667478696e5f32193b3e6873656c665f323131193b416461646472193b496873656c665f323130193b4a696467744c696e6b5f31193b4b66726f6c655f31193b4c745f5f7573656f70745f5f72657175697265645f37193b4d6b72657175697265645f3134193b4e725f5f7573656f70745f5f6964507265666978193b4f6a69645072656669785f33193b516b72657175697265645f3135193b536a69645072656669785f34193b886873656c665f323039193b8b695f5f636f6e645f3335193b976a5f5f6c68735f305f3636193b99667574786f5f34193ba96a5f5f6c68735f305f3635193bab667574786f5f33193bb1645f5f3330193bb978345f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f7265736f6c7665436861727465725574786f193bba78295f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f61646472657373193bbb6873656c665f323038193bbe6b6368617274657241635f32193bc0686361706f41646472193bc2683c61737369676e3e193bce6a5f5f6c68735f305f3634193bd06d63686172746572446174615f31193be76374786f193c01645f5f3239193c176873656c665f323037193c1a695f5f636f6e645f3333193c266a5f5f6c68735f305f3633193c2867646174756d5f33193c386a5f5f6c68735f305f3632193c3a67646174756d5f32193c40645f5f3238193c4878325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f36193c496873656c665f323036193c4a745f5f7573656f70745f5f72657175697265645f36193c4b6b72657175697265645f3132193c4d6b72657175697265645f3133193c4f67696e7075745f33193c516a61635370656e64446774193c53683c61737369676e3e193c8e78325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f35193c8f6873656c665f323035193c90745f5f7573656f70745f5f72657175697265645f35193c916b72657175697265645f3130193c936b72657175697265645f3131193c9567696e7075745f32193c976961634d696e74446774193c99683c61737369676e3e193cd478325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f34193cd578375f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f726571756972657344656c6567617465496e707574193cd66873656c665f323034193cd768747970654e616d65193cd8745f5f7573656f70745f5f72657175697265645f34193cd96a72657175697265645f38193cdb6a72657175697265645f39193ce8695f5f636f6e645f3331193cf46a5f5f6c68735f305f3631193d016a5f5f6c68735f305f3539193d0365656e747279193d06695f5f636f6e645f3332193d126a5f5f6c68735f305f3630193d146a706f6c6963794c696e6b193d166a69645072656669785f32193d176a63616c6c6261636b5f38193d24645f5f3237193d30676467744c696e6b193d316a69645072656669785f31193d6d66736f6d655f34193d776873656c665f323033193d78666b65795f3137193d8263785f36193d906873656c665f323032193d9668646174615f323536193d9c78325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f33193d9d6873656c665f323031193dc76873656c665f323030193dcd78325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f32193dce6873656c665f313939193dcf745f5f7573656f70745f5f72657175697265645f33193dd06a72657175697265645f36193dd26a72657175697265645f37193de978325f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f67657443686172746572446174615f31193dea6873656c665f313938193deb666b65795f3136193dec745f5f7573656f70745f5f72657175697265645f32193ded6a72657175697265645f34193def6a72657175697265645f35193df1626f65193df3626f65193dff6a5f5f6c68735f305f3538193e126a5f5f6c68735f305f3537193e1463655f31193e3166736f6d655f33193e3d68646174615f323535193e436873656c665f313937193e4968646174615f323534193e4f78305f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f4374785b5d5f5f6765744368617274657244617461193e506873656c665f313936193e51666b65795f3135193e5e6b6368617274657244617461193e6e6873656c665f313935193e6f666b65795f3134193e7963785f35193e876873656c665f313934193e8a6165193e8c695f5f636f6e645f3238193e986a5f5f6c68735f305f3536193ea76a5f5f6c68735f305f3535193eac6a5f5f6c68735f305f3438193eae667574786f5f32193eb0686163746976697479193eb26d77726f6e674163746976697479193eb4695f5f636f6e645f3239193ec06a5f5f6c68735f305f3534193ece6a5f5f6c68735f305f3533193edc6a5f5f6c68735f305f3532193ee96a5f5f6c68735f305f3531193ef66a5f5f6c68735f305f3530193ef96a5f5f6c68735f305f3439193f27666d70685f3230193f286763686172746572193f3a6873656c665f313933193f466873656c665f313932193f4e6873656c665f313931193f516a5f5f6c68735f305f3437193f546873656c665f313930193f576a5f5f6c68735f305f3431193f59666c696e6b5f31193f5b6a3c64657374727563743e193f5d6a3c64657374727563743e193f5f6a3c64657374727563743e193f61683c61737369676e3e193f636f76616c696461746f72486173685f31193f656b74617267657456616c7565193f677172657475726e6564556e6368616e676564193f88695f5f636f6e645f3236193f946a5f5f6c68735f305f3434193f966476685f34193fb1695f5f636f6e645f3237193fbd6a5f5f6c68735f305f3436193fcb6a5f5f6c68735f305f3435193fdf636f5f31193ff66a5f5f6c68735f305f343319401b783b5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f64656c6567617465556e6368616e6765645f3119401c6873656c665f31383919401d657265634964194023695f5f636f6e645f323519402f6a5f5f6c68735f305f3430194034645f5f3236194048657374724964194072695f5f636f6e645f323119407e6a5f5f6c68735f305f33381940806473615f31194086695f5f636f6e645f32341940926a5f5f6c68735f305f333919409468696e6465785f31361940966a6669656c64735f3135351940a56c666f756e6452656349645f311940e6645f5f32351940fe6a5f5f6c68735f305f33321941006c616374697669746965735f3119411c70616374734f6e546869735265636f726419417164615f3137194173695f5f636f6e645f323219417f6a5f5f6c68735f305f33371941976a5f5f6c68735f305f33361941af6a5f5f6c68735f305f33351941c76a5f5f6c68735f305f33331941c96273611941cb695f5f636f6e645f32331941d76a5f5f6c68735f305f33341941d968696e6465785f31351941db6a6669656c64735f3135341941ea6a666f756e64526563496419422c645f5f323419423f645f5f323319425b645f5f323219427378395f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f64656c6567617465556e6368616e6765641942746873656c665f3138381942756473656564194282695f5f636f6e645f313719428e6a5f5f6c68735f305f3330194290646d615f31194296695f5f636f6e645f32301942a26a5f5f6c68735f305f33311942a46a6669656c64735f3135331942b8645f5f32311942d06a5f5f6c68735f305f32371942d26a616374697669746965731942e371666f756e6457697468546869735365656419432864615f313619432a695f5f636f6e645f31381943366a5f5f6c68735f305f3238194338626d6119433a695f5f636f6e645f31391943466a5f5f6c68735f305f323919434868696e6465785f313419434a6a6669656c64735f31353219436e645f5f3230194378645f5f3139194394645f5f31381943a86873656c665f3138371943a965666e5f32301943ae676974656d5f31311943b56873656c665f3138351943b668696e6465785f31331943b86a726563757273655f38371943c06a726563757273655f38361943c16873656c665f3138361943c264695f31321943ef6873656c665f3138341943f0656d73675f3419443d782d5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f6572726f7219443e6873656c665f31383319443f6b617373657274696f6e4f6b194440656d73675f3319446f783f5f5f6d6f64756c655f5f4361706f48656c706572735f5f44656c6567617465496e7075745b5d5f5f67656e6572696344656c656761746541637469766974791944706873656c665f31383219448a6873656c665f31383119448d64695f313119448f69696e70757444617461194495695f5f636f6e645f31351944a16a5f5f6c68735f305f32351944a368696e6465785f31321944a56a6669656c64735f3135311944b5695f5f636f6e645f31361944c16a5f5f6c68735f305f32361944c366696e646578321944d2645f5f31371944df645f5f31361944ed6873656c665f3138301944f4646c696e6b1944f564726f6c651944f66869645072656669781944f765696e7075741944f8666d70685f31381945216873656c665f3137391945276873656c665f31373819452d68646174615f32353319452f645f5f31351945436873656c665f31373719454968646174615f32353219454b645f5f313419455f6873656c665f3137361945756873656c665f31373519457c68646174615f32353119458967706169725f373019458b68696e6465785f313119458d6a6669656c64735f3135301945e668646174615f3235301945f367706169725f36391945f568696e6465785f31301945f76a6669656c64735f313439194650666d70685f3137194651735f5f7573656f70745f5f726566496e7075747319465269726566496e707574731946546b726566496e707574735f311946566b6368617274657241635f311946586c686173436861727465725f3119465a6d636861727465725574786f5f3119465c6363746419466a695f5f636f6e645f31331946766a5f5f6c68735f305f32341946786463685f3219467e6a5f5f6c68735f305f3231194680695f5f636f6e645f313419468c6a5f5f6c68735f305f323319468e6463685f311946946a5f5f6c68735f305f32321946a6667478696e5f311946c7666d70685f31361946c9696368617274657241631946cb6a686173436861727465721946d46b636861727465725574786f1946d7695f5f636f6e645f31321946e36a5f5f6c68735f305f32301946e56263681946eb6a5f5f6c68735f305f31391946f7647478696e19470b68646174615f32343819471867706169725f363819472a68646174615f32343919473b6a6669656c64735f31343819476068646174615f32343719476668646174615f32343519477367706169725f363719478568646174615f3234361947966a6669656c64735f3134371947bb68646174615f3234341947c168646174615f3234321947ce67706169725f36361947e068646174615f3234331947f16a6669656c64735f31343619481668646174615f32343119481c68646174615f32333919482967706169725f363519483b68646174615f32343019484c6a6669656c64735f31343519487168646174615f32333819487f68646174615f32333619488c67706169725f363419489e68646174615f3233371948af6a6669656c64735f3134341948d468646174615f3233351948da6873656c665f3137341948ee68646174615f3233331948fb67706169725f363319490d68646174615f32333419491e6a6669656c64735f31343219492b67686561645f38341949456a6669656c64735f31343319497468646174615f32333219497a784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f646174615f3119497b78465f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f646174615f3119497c78495f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f646174615f3119497d784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f646174615f3119497e784e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f646174615f3119497f78475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f646174615f3119498068646174615f3233311949826969676e6f72655f31361949a2784b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f6361706f4c6966656379636c6541637469766974795f5f69735f76616c69645f646174611949a378445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7573696e67417574686f726974795f5f69735f76616c69645f646174611949a478475f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7265746972696e675265665363726970745f5f69735f76616c69645f646174611949a5784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f616464696e675370656e64496e76617269616e745f5f69735f76616c69645f646174611949a6784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7370656e64696e6744656c656761746564446174756d5f5f69735f76616c69645f646174611949a778455f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f41637469766974795b5d5f5f7570646174696e67436861727465725f5f69735f76616c69645f646174611949a868646174615f3233301949f267646174756d5f311949f3667574786f5f31194a096873656c665f313733194a0f6873656c665f313732194a1568646174615f323238194a2267706169725f3632194a3468646174615f323239194a456a6669656c64735f313339194a5267686561645f3832194a5e6a6669656c64735f313430194a6b67686561645f3833194a776a6669656c64735f313431194ab068646174615f323237194ab665646174756d194ab7647574786f194acd6873656c665f313731194ad36873656c665f313730194ad968646174615f323235194ae667706169725f3631194af868646174615f323236194b096a6669656c64735f313336194b1667686561645f3830194b226a6669656c64735f313337194b2f67686561645f3831194b3b6a6669656c64735f313338194b7468646174615f323234194b8268646174615f323232194b8f67706169725f3630194ba168646174615f323233194bb26a6669656c64735f313335194bd768646174615f323231194bdd78445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f646174615f31194bde78495f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f646174615f31194bdf78465f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f646174615f31194be068646174615f323230194be26969676e6f72655f3135194bfc78425f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f556e6b5f5f69735f76616c69645f64617461194bfd78475f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f526566496e7075745f5f69735f76616c69645f64617461194bfe78445f5f6d6f64756c655f5f4361706f48656c706572735f5f636374785f43686172746572496e707574547970655b5d5f5f496e7075745f5f69735f76616c69645f64617461194bff68646174615f323139194c2668646174615f323137194c3367706169725f3539194c4568646174615f323138194c566a6669656c64735f313331194c6367686561645f3737194c6f6a6669656c64735f313332194c7c67686561645f3738194c886a6669656c64735f313333194c9567686561645f3739194ca16a6669656c64735f313334194ce468646174615f323136194cfd666d61705f3239194cff6a726563757273655f3835194d056a726563757273655f3834194d06666d61705f3330194d1367686561645f3736194d4068646174615f323135194d4668646174615f323133194d5367706169725f3538194d6568646174615f323134194d766a6669656c64735f313330194d9d6873656c665f313639194da368646174615f323132194da5666c73745f3233194da7645f5f3133194dbe6873656c665f313638194dc468646174615f323131194dc6666d61705f3238194dc8645f5f3132194ddf6873656c665f313637194de56873656c665f313636194deb6873656c665f313635194df16873656c665f313634194df768646174615f323130194df9666d61705f3237194dfb645f5f3131194e126873656c665f313633194e1868646174615f323039194e1a666c73745f3232194e1c645f5f3130194e336873656c665f313632194e3a68646174615f323038194e3c6969676e6f72655f3134194e5068646174615f323036194e5d67706169725f3537194e6f68646174615f323037194e806a6669656c64735f313231194e8d67686561645f3638194e996a6669656c64735f313232194ea667686561645f3639194eb26a6669656c64735f313233194ebf67686561645f3730194ecb6a6669656c64735f313234194ed867686561645f3731194ee46a6669656c64735f313235194ef167686561645f3732194efd6a6669656c64735f313236194f0a67686561645f3733194f166a6669656c64735f313237194f2367686561645f3734194f2f6a6669656c64735f313238194f3c67686561645f3735194f486a6669656c64735f313239194fbd68646174615f323035194fd6666c73745f3230194fd86a726563757273655f3833194fde6a726563757273655f3832194fdf666c73745f323119500668646174615f32303419501f666d61705f32351950216a726563757273655f38311950276a726563757273655f3830195028666d61705f323619503567686561645f363719506268646174615f32303319507b666d61705f323319507d6a726563757273655f37391950836a726563757273655f3738195084666d61705f323419509167686561645f36361950be68646174615f3230321950d7666c73745f31381950d96a726563757273655f37371950df6a726563757273655f37361950e0666c73745f313919510378405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f646174615f3119510478445f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f646174615f3119510578425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f646174615f3119510668646174615f3230311951086969676e6f72655f3133195122783e5f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f43686172746572446174615f5f69735f76616c69645f6461746119512378425f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f5363726970745265666572656e63655f5f69735f76616c69645f6461746119512478405f5f6d6f64756c655f5f4361706f48656c706572735f5f4361706f446174756d5b5d5f5f44656c656761746564446174615f5f69735f76616c69645f6461746119512568646174615f32303019514b68646174615f3139391951516873656c665f31363119515968646174615f31393819515b635f5f3919516f6873656c665f3136301951776873656c665f31353919518968646174615f31393719518b6969676e6f72655f313219519f68646174615f3139361951f668646174615f31393519520367706169725f353619520567696e6465785f391952076a6669656c64735f31323019526068646174615f31393319526d67706169725f353519527f68646174615f3139341952906a6669656c64735f3131391952b568646174615f3139311952c267706169725f35341952d468646174615f3139321952e56a6669656c64735f31313819530a68646174615f31383919531767706169725f353319532968646174615f31393019533a6a6669656c64735f31313519534767686561645f36341953636a6669656c64735f31313619537067686561645f363519537c6a6669656c64735f3131371953b56873656c665f3135381953bb6873656c665f3135371953c16873656c665f3135361953c768646174615f3138371953d467706169725f35321953e668646174615f3138381953f76a6669656c64735f31313119540467686561645f36311954106a6669656c64735f31313219541d67686561645f36321954296a6669656c64735f31313319543667686561645f36331954426a6669656c64735f31313419548568646174615f31383619548b68646174615f31383419549867706169725f35311954aa68646174615f3138351954bb6a6669656c64735f3131301954e068646174615f3138331954e6784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f646174615f311954e778495f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f311954e8784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f646174615f311954e9784d5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f646174615f311954ea784c5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f646174615f311954eb68646174615f3138321954ed6969676e6f72655f313119550b78485f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4e616d6564546f6b656e5265665f5f69735f76616c69645f6461746119550c78475f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f6461746119550d784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f44656c6567617465546872656164735f5f69735f76616c69645f6461746119550e784b5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c654d656d626572736869705f5f69735f76616c69645f6461746119550f784a5f5f6d6f64756c655f5f4361706f48656c706572735f5f4d616e6966657374456e747279547970655b5d5f5f4d65726b6c655374617465526f6f745f5f69735f76616c69645f6461746119551068646174615f31383119554e6873656c665f31353519554f65666e5f3139195554676974656d5f313019555a6873656c665f3135341955656873656c665f31353319556b6873656c665f31353219557168646174615f3138301955736969676e6f72655f313019558968646174615f31373919559a6a6669656c64735f3130361955a767686561645f35381955b36a6669656c64735f3130371955c067686561645f35391955cc6a6669656c64735f3130381955d967686561645f36301955e56a6669656c64735f31303919561468646174615f31373719562167706169725f353019563368646174615f3137381956446a6669656c64735f31303319565167686561645f35361956676a6669656c64735f31303419567467686561645f35371956806a6669656c64735f3130351956b968646174615f3137361956d2666c73745f31361956d46a726563757273655f37351956da6a726563757273655f37341956db666c73745f313719570e6873656c665f31353119571468646174615f31373419572167706169725f343919573368646174615f3137351957446a6669656c64735f31303119575167686561645f353519575d6a6669656c64735f31303219578c68646174615f31373319579278565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f646174615f31195793785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f646174615f3119579468646174615f3137321957966869676e6f72655f391957ae78545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f64656c65676174654368616e67655f5f69735f76616c69645f646174611957af78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e67436861727465724368616e67655b5d5f5f6f746865724d616e69666573744368616e67655f5f69735f76616c69645f646174611957b068646174615f3137311957ca6873656c665f3135301957d068646174615f3137301957d2635f5f381957e66873656c665f3134391957fc6873656c665f31343819580868646174615f31363919580a6869676e6f72655f3819582068646174615f313638195831696669656c64735f393719583e67686561645f3532195850696669656c64735f393819585d67686561645f3533195879696669656c64735f393919588667686561645f35341958926a6669656c64735f3130301958c168646174615f3136371958ce67706169725f34381958d067696e6465785f381958d2696669656c64735f393619592b6873656c665f31343719592c666d70685f313519592d745f5f7573656f70745f5f72657175697265645f3119592e6a72657175697265645f3219592f781b5f5f7573656f70745f5f637265617465644f7252657475726e656419593071637265617465644f7252657475726e65641959326a72657175697265645f3319593473637265617465644f7252657475726e65645f31195936695f5f6c68735f305f391959386375757419593a6d76616c696461746f724861736819593c6461635f3119593e64634f72521959536b68617344656c6567617465195969695f5f636f6e645f31311959756a5f5f6c68735f305f313819597e6a5f5f6c68735f305f31361959806a5f5f6c68735f305f31371959b5685f5f636f6e645f391959c16a5f5f6c68735f305f31351959c36476685f331959e76a5f5f6c68735f305f31321959f0695f5f636f6e645f31301959fc6a5f5f6c68735f305f31341959ff6a5f5f6c68735f305f3133195a08616f195a17685f5f636f6e645f38195a236a5f5f6c68735f305f3131195a266a5f5f6c68735f305f3130195a506873656c665f313436195a5165666e5f3138195a57666974656d5f39195a5e68646174615f313636195a6468646174615f313635195a6a6873656c665f313435195a6b68696e707574735f31195a6c666d70685f3134195a6d725f5f7573656f70745f5f7265717569726564195a6e687265717569726564195a706a72657175697265645f31195a72677575744e616d65195a74685f5f636f6e645f36195a80695f5f6c68735f305f38195a96695f5f6c68735f305f36195a986476685f32195a9a716e65656473416464725769746843726564195a9c626163195aa9685f5f636f6e645f37195ab569666f756e64476f6f64195abf695f5f6c68735f305f37195ae064695f3130195b1a6873656c665f313434195b206873656c665f313433195b2165666e5f3137195b27666974656d5f38195b2e68646174615f313634195b3668646174615f313633195b3c78475f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f68617344656c6567617465496e707574195b3d78455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f52656c617469766544656c65676174654c696e6b5b5d5f5f68617356616c69644f7574707574195b3e6873656c665f313432195b3f66696e70757473195b40666d70685f3133195b416d696e7075745265717569726564195b43685f5f636f6e645f33195b4f695f5f6c68735f305f35195b53695f5f6c68735f305f32195b55727370656e6444656c6567617465496e707574195b57747370656e6444656c6567617465497356616c6964195b65685f5f636f6e645f34195b71695f5f6c68735f305f33195b7364615f3135195b75685f5f636f6e645f35195b81695f5f6c68735f305f34195b90635f5f37195ba0635f5f36195bcb6873656c665f313431195bd166736f6d655f32195bdd68646174615f313632195be36873656c665f313430195be4666d70685f3132195bef6873656c665f313339195bf0666d70685f3131195c026873656c665f313338195c0868646174615f313631195c0a635f5f35195c1e6873656c665f313337195c2568646174615f313630195c276869676e6f72655f37195c3e68646174615f313539195c4f696669656c64735f3932195c5c67686561645f3439195c68696669656c64735f3933195c7567686561645f3530195c81696669656c64735f3934195c8e67686561645f3531195c9a696669656c64735f3935195cc968646174615f313538195cd667706169725f3437195cd867696e6465785f37195cda696669656c64735f3931195d3b68646174615f313537195d4968646174615f313536195d4f6873656c665f313336195d5568646174615f313535195d57666c73745f3135195d59635f5f34195d7068646174615f313533195d7d67706169725f3436195d8f68646174615f313534195da0696669656c64735f3839195dad67686561645f3438195db9696669656c64735f3930195de868646174615f313532195e01666c73745f3133195e036a726563757273655f3733195e096a726563757273655f3732195e0a666c73745f3134195e2d68646174615f313531195e3368646174615f313439195e4067706169725f3435195e5268646174615f313530195e63696669656c64735f3836195e7067686561645f3436195e7c696669656c64735f3837195e8967686561645f3437195e95696669656c64735f3838195ece68646174615f313438195ed468646174615f313436195ee167706169725f3434195ef368646174615f313437195f04696669656c64735f3833195f1167686561645f3434195f1d696669656c64735f3834195f2a67686561645f3435195f36696669656c64735f3835195f6f68646174615f313435195f7568646174615f313433195f8267706169725f3433195f9468646174615f313434195fa5696669656c64735f3830195fb267686561645f3432195fbe696669656c64735f3831195fcb67686561645f3433195fd7696669656c64735f383219601068646174615f31343219601668646174615f31343019602367706169725f343219603568646174615f313431196046696669656c64735f373819605367686561645f343119605f696669656c64735f373919608e6873656c665f31333519609468646174615f3133381960a167706169725f34311960b368646174615f3133391960c4696669656c64735f37361960d167686561645f34301960dd696669656c64735f373719610c68646174615f3133371961126873656c665f31333419611868646174615f31333519612567706169725f343019613768646174615f313336196148696669656c64735f373419615567686561645f3339196161696669656c64735f373519619068646174615f3133341961966873656c665f3133331961a268646174615f3133321961af67706169725f33391961c168646174615f3133331961d2696669656c64735f37321961df67686561645f33381961f1696669656c64735f373319622068646174615f31333119622668646174615f31323919623367706169725f333819624568646174615f313330196256696669656c64735f373019626367686561645f333719627d696669656c64735f37311962ac78695f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f311962ad786d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174615f311962ae78645f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174615f311962af78635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174615f311962b078635f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174615f311962b178675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f311962b278675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174615f311962b378675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174615f311962b4786c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174615f311962b568646174615f3132381962b76869676e6f72655f361962dd78675f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4361706f4c6966656379636c65416374697669746965735f5f69735f76616c69645f646174611962de786b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c65676174654c6966656379636c65416374697669746965735f5f69735f76616c69645f646174611962df78625f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5370656e64696e67416374697669746965735f5f69735f76616c69645f646174611962e078615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d696e74696e67416374697669746965735f5f69735f76616c69645f646174611962e178615f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4275726e696e67416374697669746965735f5f69735f76616c69645f646174611962e278655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4372656174696e6744656c656761746564446174615f5f69735f76616c69645f646174611962e378655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f5570646174696e6744656c656761746564446174615f5f69735f76616c69645f646174611962e478655f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f44656c6574696e6744656c656761746564446174615f5f69735f76616c69645f646174611962e5786a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f416273747261637444656c656761746541637469766974696573456e756d5b5d5f5f4d756c7469706c6544656c6567617465416374697669746965735f5f69735f76616c69645f646174611962e668646174615f3132371963546873656c665f31333219636468646174615f31323519637167706169725f333719638368646174615f313236196394696669656c64735f36381963a167686561645f33361963b7696669656c64735f36391963e668646174615f3132341963ec68646174615f3132321963f967706169725f333619640b68646174615f31323319641c696669656c64735f363519642967686561645f3334196435696669656c64735f363619644267686561645f333519644e696669656c64735f363719648768646174615f31323119648d68646174615f31313919649a67706169725f33351964ac68646174615f3132301964bd696669656c64735f36321964ca67686561645f33321964d6696669656c64735f36331964e367686561645f33331964ef696669656c64735f363419652868646174615f31313819652e68646174615f31313619653b67706169725f333419654d68646174615f31313719655e696669656c64735f363119658368646174615f31313519658968646174615f31313319659667706169725f33331965a868646174615f3131341965b9696669656c64735f35391965c667686561645f33311965e2696669656c64735f363019661168646174615f31313219661768646174615f31313019662467706169725f333219663668646174615f313131196647696669656c64735f353819666c68646174615f3130391966726873656c665f3133311966786873656c665f31333019667e68646174615f31303719668b67706169725f333119669d68646174615f3130381966ae696669656c64735f35351966bb67686561645f32391966c7696669656c64735f35361966d467686561645f33301966e0696669656c64735f353719671968646174615f31303619671f78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f646174615f31196720785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f646174615f31196721785c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f646174615f31196722785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f646174615f3119672378605f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f646174615f31196724785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f646174615f3119672578595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f646174615f3119672668646174615f3130351967286869676e6f72655f3519674a78575f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f4372656174696e6744656c65676174655f5f69735f76616c69645f6461746119674b78595f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f717565756550656e64696e674368616e67655f5f69735f76616c69645f6461746119674c785a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f72656d6f766550656e64696e674368616e67655f5f69735f76616c69645f6461746119674d785b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f636f6d6d697450656e64696e674368616e6765735f5f69735f76616c69645f6461746119674e785e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65775370656e6444656c65676174655f5f69735f76616c69645f6461746119674f785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f666f7263696e674e65774d696e7444656c65676174655f5f69735f76616c69645f6461746119675078575f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4361706f4c6966656379636c6541637469766974795b5d5f5f7570646174696e674d616e69666573745f5f69735f76616c69645f6461746119675168646174615f3130341967a86873656c665f3132391967ae6873656c665f3132381967b46873656c665f3132371967ba6873656c665f3132361967c068646174615f3130321967cd67706169725f33301967df68646174615f3130331967f0696669656c64735f35301967fd67686561645f3235196809696669656c64735f353119681667686561645f3236196822696669656c64735f353219682f67686561645f323719683b696669656c64735f353319684867686561645f3238196854696669656c64735f35341968a168646174615f3130311968a767646174615f39391968b467706169725f32391968c668646174615f3130301968d7696669656c64735f34391968fc67646174615f39381969026873656c665f3132351969086873656c665f31323419690e6873656c665f31323319691467646174615f393619692167706169725f323819693367646174615f3937196944696669656c64735f343519695167686561645f323219695d696669656c64735f343619696a67686561645f3233196976696669656c64735f343719698367686561645f323419698f696669656c64735f34381969d267646174615f39351969d8784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f646174615f311969d9784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f646174615f311969da78505f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f646174615f311969db67646174615f39341969dd6869676e6f72655f341969f7784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f4164645f5f69735f76616c69645f646174611969f8784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f52656d6f76655f5f69735f76616c69645f646174611969f9784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f50656e64696e6744656c6567617465416374696f6e5b5d5f5f5265706c6163655f5f69735f76616c69645f646174611969fa67646174615f3933196a2067646174615f3931196a2d67706169725f3237196a3f67646174615f3932196a50696669656c64735f3432196a5d67686561645f3230196a69696669656c64735f3433196a7667686561645f3231196a82696669656c64735f3434196abb67646174615f3839196ac867706169725f3236196ada67646174615f3930196aeb696669656c64735f3339196af867686561645f3138196b04696669656c64735f3430196b1167686561645f3139196b1d696669656c64735f3431196b5667646174615f3838196b5c6873656c665f313232196b626873656c665f313231196b6867646174615f3836196b7567706169725f3235196b8767646174615f3837196b98696669656c64735f3336196ba567686561645f3136196bb1696669656c64735f3337196bbe67686561645f3137196bca696669656c64735f3338196c0367646174615f3835196c0967646174615f3833196c1667706169725f3234196c2867646174615f3834196c39696669656c64735f3333196c4667686561645f3134196c52696669656c64735f3334196c5f67686561645f3135196c6b696669656c64735f3335196ca467646174615f3832196caa67646174615f3830196cb767706169725f3233196cc967646174615f3831196cda696669656c64735f3331196ce767686561645f3133196cf3696669656c64735f3332196d2267646174615f3739196d2878515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f646174615f31196d2978515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f646174615f31196d2a784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f646174615f31196d2b78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f31196d2c78565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f646174615f31196d2d67646174615f3738196d2f6869676e6f72655f33196d4d784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7265746972696e67456e7472795f5f69735f76616c69645f64617461196d4e784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f7570646174696e67456e7472795f5f69735f76616c69645f64617461196d4f784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f616464696e67456e7472795f5f69735f76616c69645f64617461196d5078545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f666f726b696e67546872656164546f6b656e5f5f69735f76616c69645f64617461196d5178545f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f4d616e696665737441637469766974795b5d5f5f6275726e696e67546872656164546f6b656e5f5f69735f76616c69645f64617461196d5267646174615f3737196d9067646174615f3735196d9d67706169725f3232196daf67646174615f3736196dc0696669656c64735f3330196de567646174615f3734196df367646174615f3732196e0067706169725f3231196e1267646174615f3733196e23696669656c64735f3239196e4867646174615f3731196e4e67646174615f3639196e5b67706169725f3230196e6d67646174615f3730196e7e696669656c64735f3237196e8b67686561645f3132196e97696669656c64735f3238196ec667646174615f3638196ecc6873656c665f313230196ed66873656c665f313139196edc67646174615f3636196ee967706169725f3139196efb67646174615f3637196f0c696669656c64735f3235196f1967686561645f3131196f25696669656c64735f3236196f5467646174615f3635196f5a67646174615f3633196f6767706169725f3138196f7967646174615f3634196f8a696669656c64735f3234196faf67646174615f3632196fb567646174615f3630196fc267706169725f3137196fd467646174615f3631196fe5696669656c64735f323319700a67646174615f353919701867646174615f353719702567706169725f313619703767646174615f3538197048696669656c64735f323219706d67646174615f353619707b67646174615f353419708867706169725f313519709a67646174615f35351970ab696669656c64735f32311970d067646174615f35331970d678475f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f646174615f311970d778485f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f646174615f311970d8784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f646174615f311970d9784e5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f646174615f311970da784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f646174615f311970db784d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f646174615f311970dc78535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f646174615f311970dd78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f646174615f311970de67646174615f35321970e06869676e6f72655f3219710478455f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e744467745f5f69735f76616c69645f6461746119710578465f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e644467745f5f69735f76616c69645f64617461197106784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4d696e74496e76617269616e745f5f69735f76616c69645f64617461197107784c5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f5370656e64496e76617269616e745f5f69735f76616c69645f64617461197108784a5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f446744617461506f6c6963795f5f69735f76616c69645f64617461197109784b5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f4f746865724e616d65644467745f5f69735f76616c69645f6461746119710a78515f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f426f74684d696e74416e645370656e644467745f5f69735f76616c69645f6461746119710b784f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c6567617465526f6c655b5d5f5f48616e646c656442794361706f4f6e6c795f5f69735f76616c69645f6461746119710c67646174615f353119716f67646174615f343919717c67706169725f313419718e67646174615f353019719f696669656c64735f32301971c467646174615f34381971ca67646174615f34361971d767706169725f31331971e967646174615f34371971fa696669656c64735f313919721f67646174615f34351972256873656c665f31313819722b6873656c665f31313719723167646174615f343319723e67706169725f313219725067646174615f3434197261696669656c64735f313619726e66686561645f3919727a696669656c64735f313719728767686561645f3130197293696669656c64735f31381972cc67646174615f34321972d278585f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f646174615f311972d378555f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f646174615f311972d4785f5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f646174615f311972d567646174615f34311972d76869676e6f72655f311972f178565f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265706c6163696e674d655f5f69735f76616c69645f646174611972f278535f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f5265746972696e675f5f69735f76616c69645f646174611972f3785d5f5f6d6f64756c655f5f4361706f44656c656761746548656c706572735f5f44656c65676174654c6966656379636c6541637469766974795b5d5f5f56616c69646174696e6753657474696e67735f5f69735f76616c69645f646174611972f467646174615f343019731a6776616c75655f3619731c685f5f636f6e645f31197328675f5f6c68735f3019732a696669656c64735f313519732c685f5f636f6e645f32197338695f5f6c68735f305f3119733d635f5f33197349635f5f3219734f6873656c665f3131361973566873656c665f31313519735e6873656c665f31313419736667646174615f33391973686669676e6f726519737c67646174615f33381973b0677478496e7075741973b26874617267657449641973b46972656465656d6572731973b6737370656e64734578706563746564496e7075741973c067707572706f73651973c2665f5f636f6e641973ce6273701973d7635f5f311973e16873656c665f3131331973e265666e5f31361973e46a726563757273655f37311973ea6a726563757273655f37301973eb666d61705f32321973fa666974656d5f371974196873656c665f31313219741a666b65795f313319742463785f3419742c67646174615f333719742e666d61705f3231197430615f197447666d61705f31391974496a726563757273655f363919744f6a726563757273655f3638197450666d61705f323019745d66686561645f3819748a6873656c665f31313119748e6873656c665f3131301974926873656c665f31303919749365666e5f31351974956a726563757273655f363719749b6a726563757273655f363619749c666c73745f31321974ab666974656d5f361974c6666d70685f31301974c76c5f5f7573656f70745f5f746e1974c862746e1974c9715f5f7573656f70745f5f746e42797465731974ca67746e42797465731974cb62746e1974cc65636f756e741974ce64746e5f311974d069746e42797465735f311974d267636f756e745f3119750f66726571745f31197510755f5f7573656f70745f5f617373657274696f6e5f311975116b617373657274696f6e5f321975136b617373657274696f6e5f3319752b647265717419752c735f5f7573656f70745f5f617373657274696f6e19752d69617373657274696f6e19752f6b617373657274696f6e5f3119754f647461736b19755c67646174615f333619757167646174615f333519757d636e5f3519757e67646174615f33341975936862797465735f31301975a866686173685f311975b46873656c665f3130371975b565666e5f31331975b66a63616c6c6261636b5f371975b86a726563757273655f36351975c06a726563757273655f36341975c16873656c665f3130381975c265666e5f31341975d366686561645f371975f767646174615f333319760167646174615f333219760e67706169725f313119761067696e6465785f36197612696669656c64735f313419766b67646174615f333119767867706169725f313019767a657461675f3819767c696669656c64735f31331976c3666c6973745f331976ce69746573745f686561641976cf69746573745f7461696c1976d0666c6973745f321976f167646174615f33301976fe66706169725f3919770067696e6465785f35197702696669656c64735f313219777767646174615f323919778c6762797465735f3919778e636e5f341977af6873656c665f3130361977b66873656c665f3130351977bd6873656c665f3130341977c567646174615f32381977cf67646174615f32371977e46873656c665f3130331977eb6873656c665f3130321977f26873656c665f3130311977f96873656c665f3130301978006773656c665f39391978076773656c665f393819780e67646174615f323619781667646174615f323519781e67646174615f32341978346773656c665f39371978356476685f3119783d6773656c665f393619783e627668197843666f75747075741978496773656c665f393519784a646861736819784c6a63726564656e7469616c19786767646174615f323319786d6773656c665f39341978756773656c665f39331978826773656c665f393219788365666e5f313219788b676f75747075747319789166707265765f331978926874784f757470757419789b6773656c665f393119789c6776616c75655f351978a264615f31341978a364625f31391978aa65615f7174791978ab65625f7174791978b364615f31331978b464625f31381978b566636f6d705f331978b76a726563757273655f36331978c16a726563757273655f36321978c2666b6579735f341978cf666b65795f31321978f666636f6d705f321978f764615f31321978f864625f31371978fa6a726563757273655f36311979046a726563757273655f3630197905666b6579735f33197912666b65795f31311979376773656c665f3930197938676f746865725f331979426773656c665f383919794c6773656c665f383819795b6773656c665f38371979626773656c665f38361979686773656c665f383519796e6773656c665f3834197973657461675f37197974696669656c64735f31311979826974785f69645f73747219798469696e6465785f73747219799563695f391979a06a74785f69645f646174611979ac6773656c665f38331979b1657461675f361979b2696669656c64735f31301979c66762797465735f381979d567646174615f32321979db6773656c665f38321979e16773656c665f38311979e86773656c665f38301979ef6773656c665f37391979f76773656c665f3738197a006773656c665f3737197a056773656c665f3736197a0b6773656c665f3735197a0c6c73656c664c656e677468466e197a0d657374617274197a0e63656e64197a10696e6f726d616c697a65197a1265666e5f3131197a186773746172745f31197a1a65666e5f3130197a2065656e645f31197a3065706f735f31197a4a64615f3131197a4b64625f3136197a596773656c665f3734197a5a64666e5f39197a65666c73745f3130197a6666636f6d705f31197a686a726563757273655f3539197a6e6a726563757273655f3538197a6f666c73745f3131197a7d66686561645f36197a7e667461696c5f33197a9263785f33197a93656c73745f38197a9464636f6d70197a966a726563757273655f3537197a9c6a726563757273655f3536197a9d656c73745f39197aaf66686561645f35197ad76773656c665f3733197ad864666e5f38197ad964696e6974197adb6a726563757273655f3535197ae36a726563757273655f3534197ae46572656d5f31197ae5656c73745f37197b0564615f3130197b0664625f3135197b0e63615f39197b0f64625f3134197b10646f705f31197b126a726563757273655f3533197b206a726563757273655f3532197b21666b6579735f32197b2268726573756c745f31197b2f666b65795f3130197b31667461696c5f32197b33666974656d5f35197b68666d61705f3137197b69656d70685f39197b6b6a726563757273655f3531197b716a726563757273655f3530197b72666d61705f3138197ba6626f70197ba763615f38197ba864625f3133197baa6a726563757273655f3439197bb86a726563757273655f3438197bb9666b6579735f31197bba66726573756c74197bc7656b65795f39197bc9667461696c5f31197bcb6373756d197c0163615f37197c0264625f3132197c0465614b657973197c066a726563757273655f3437197c086b756e69717565424b657973197c156a726563757273655f3436197c16646b657973197c17666d61705f3136197c24656b65795f38197c5663615f36197c5764625f3131197c596a726563757273655f3435197c616a726563757273655f3434197c62656c73745f36197c636372656d197c81656c73745f35197c82656b65795f37197c87666974656d5f34197c8d6773656c665f3731197c8e64666e5f36197c906a726563757273655f3433197c986a726563757273655f3432197c996773656c665f3732197c9a64666e5f37197cbf666d61705f3134197cc16a726563757273655f3431197cc76a726563757273655f3430197cc8666d61705f3135197ce8666d61705f3132197ce9656b65795f35197ceb6a726563757273655f3339197cf36a726563757273655f3338197cf4666d61705f3133197cf5656b65795f36197d296773656c665f3730197d2a656d70685f37197d2c656d70685f38197d2e6a726563757273655f3337197d346a726563757273655f3336197d35666d61705f3131197d6c6773656c665f3639197d6f6a726563757273655f3335197d756a726563757273655f3334197d76666d61705f3130197d9b68746f6b656e735f31197d9d6a726563757273655f3333197da36a726563757273655f3332197da468746f6b656e735f32197dcd6773656c665f3638197dce656d70685f35197dd0656d70685f36197dd26a726563757273655f3331197dd86a726563757273655f3330197dd9656d61705f39197e066773656c665f3637197e07666e616d655f32197e086a696e6e65725f74657374197e17656d61705f37197e196a726563757273655f3239197e1f6a726563757273655f3238197e20656d61705f38197e3c66686561645f34197e3e656b65795f34197e406776616c75655f34197e706773656c665f3636197e71666e616d655f31197e79656d61705f35197e7a646e616d65197e7c696e616d655f64617461197e7e6a726563757273655f3237197e846a726563757273655f3236197e85656d61705f36197e9e66686561645f33197ea0656b65795f33197ea26776616c75655f33197eca67646174615f3231197ed163615f34197ed263625f39197ed463615f35197ed664625f3130197f0663625f38197f1467646174615f3230197f1e67646174615f3139197f2d67646174615f3138197f3a66706169725f38197f3c67696e6465785f34197f3e686669656c64735f39197f83636e5f33197f8467646174615f3137197f996762797465735f37197fae67646174615f3136197faf67696e6465785f33197fb066746573745f61197fb166746573745f62197fbe66706169725f37197fd0686669656c64735f38197fea647461696c19802d67646174615f313519803c67646174615f31341980566773656c665f363519805764666e5f3519805f6773656c665f363319806064666e5f33198061636e696c1980636a726563757273655f323519806b6a726563757273655f323419806c6773656c665f363419806d64666e5f3419807a66686561645f321980a46773656c665f36321980a96773656c665f36311980af6773656c665f36301980b56773656c665f35391980c16773656c665f35381980c26c6173736574436c6173735f321980c4716d696e74696e67506f6c696379486173681980c66b746f6b656e4e616d655f321980c8676f757465725f331980ca67696e6e65725f351980d267696e6e65725f341980d3656d61705f34198105676f757465725f3219810667696e6e65725f33198107656d61705f331981466773656c665f353719814d6773656c665f3536198152657461675f35198153686669656c64735f37198161717370656e64696e675f637265645f737472198163777374616b696e675f637265645f6f7074696f6e5f73747219817a6b6f7074696f6e5f6461746119818569637265645f646174611981916773656c665f353519819867696e6465785f32198199686669656c64735f361981b269736f6d655f646174611981b466736f6d655f311981b76776616c69645f361981b86776616c75655f321981e86773656c665f35341981ed657461675f341981ee686669656c64735f351981fc68686173685f73747219820b69686173685f6461746119821f65695f737472198221656a5f737472198223656b5f73747219824463695f3819825163695f3719825e63695f3619826a6a63616c6c6261636b5f3619826b67646174615f313319826d6e63616c6c6261636b5f6e6f6b5f361982856773656c665f353319828a657461675f3319828b686669656c64735f3419829969706b685f7374725f311982aa63625f371982be6876685f7374725f311982cf63625f361982df67646174615f31321982e367646174615f31311982e46d63616c6c6261636b5f6f6b5f331982e56e63616c6c6261636b5f6e6f6b5f351982f266706169725f361983076773656c665f353219830c657461675f3219830d686669656c64735f3319831b67706b685f73747219832c63625f351983406676685f73747219835163625f341983626773656c665f35311983696773656c665f353019836b66706169725f3519836d67696e6465785f3119836f686669656c64735f321983946773656c665f34391983956174198397656c6f77657219839968657874656e64656419839b66636c6f73656419839d6c6c6f7765724578745479706519839f6a636865636b55707065721983f36575707065721983f56a657874656e6465645f311983f768636c6f7365645f311983f96c75707065724578745479706519846b6773656c665f34381984766773656c665f343719847d6773656c665f34361984846773656c665f343519848b6773656c665f34341984926773656c665f34331984a163645f311984b76773656c665f34321984b96773656c665f34301984ba64666e5f311984bc6a726563757273655f32331984c46a726563757273655f32321984c56773656c665f34311984c664666e5f321984eb67646174615f313019850466646174615f3919851d64736f6d6519851e6a63616c6c6261636b5f351985246a63616c6c6261636b5f3419852a66646174615f3819852b63695f351985376773656c665f3338198538656b65795f3119853967666e466f756e6419853a6a666e4e6f74466f756e6419853c6a726563757273655f32311985446a726563757273655f32301985456773656c665f3339198546656b65795f3219855266686561645f31198579656c73745f3319857b6a726563757273655f31391985816a726563757273655f3138198582656c73745f3419859a61641985a36269641985a56a726563757273655f31371985ad6a726563757273655f31361985ae656c73745f321985bd666974656d5f331985dc6773656c665f33371985ea6773656c665f33361985f16773656c665f33351985f76773656c665f33341985f8667072656669781986066773656c665f33331986116773656c665f333219861c6773656c665f33311986206773656c665f3330198621676f746865725f321986296773656c665f323919862a6d5f5f7573656f70745f5f61646119862b6361646119863166707265765f3119863266706169725f33198634686d70685f646174611986366b746f6b656e735f64617461198640656d70685f3419865f66746f6b656e7319866566707265765f3219866666706169725f341986686f746f6b656e5f6e616d655f6461746119866a687174795f646174611986706c746f6b656e5f6e616d655f32198676637174791986e06773656c665f32381986e36d73686f775f706f7369746976651986ff63785f3219871e6773656c665f323719871f636e5f321987216a726563757273655f313519872b6a726563757273655f313419872c63785f3119872d63706f7319872e6762797465735f361987736773656c665f32361987886773656c665f323519879066646174615f371987916d63616c6c6261636b5f6f6b5f321987926e63616c6c6261636b5f6e6f6b5f341987a766646174615f361987a86d63616c6c6261636b5f6f6b5f311987a96e63616c6c6261636b5f6e6f6b5f331987bf66646174615f351987c06b63616c6c6261636b5f6f6b1987c16e63616c6c6261636b5f6e6f6b5f321987d663615f331987d763625f331987df6773656c665f32341987e0676f746865725f311987e86773656c665f32331987ed657461675f311987ee686669656c64735f311987fc676d70685f7374721987fe6e746f6b656e5f6e616d655f73747219880f6c746f6b656e5f6e616d655f3119881c656d70685f331988286a63616c6c6261636b5f3319882966646174615f3419882b6e63616c6c6261636b5f6e6f6b5f3119884365696e6465781988446a63616c6c6261636b5f32198845666c6973745f311988476a726563757273655f313319884f6a726563757273655f3132198850656c73745f3119885163695f3419886a64686561641988816a63616c6c6261636b5f3119888266646174615f331988846c63616c6c6261636b5f6e6f6b19889166706169725f321988a96773656c665f32321988ac6e73686f775f646174615f6c6973741988af6a726563757273655f31311988b066646174615f321988b66a726563757273655f31301988b766646174615f311988c466706169725f311988c6637461671988c8666669656c64731988db666974656d5f321988f1656d61705f321988fd64706169721988ff636b65791989016776616c75655f31198923636c737419892f666974656d5f3119893b6576616c75651989456762797465735f3519894e646c69737419894f6973686f775f6974656d1989556470726576198956646974656d1989736773656c665f323119897869726563757273655f3919899c69726563757273655f3819899d63695f3319899e6762797465735f331989a06762797465735f341989c161781989cb6773656c665f31391989cc62666e1989cd617a1989cf69726563757273655f371989d769726563757273655f361989d86773656c665f32301989d9637a5f311989f964646174611989fa63695f32198a166773656c665f3138198a1c6773656c665f3137198a236773656c665f3136198a2a6773656c665f3135198a316773656c665f3134198a386773656c665f3133198a396c6173736574436c6173735f31198a3b656d70685f32198a3d6b746f6b656e4e616d655f31198a3f676f757465725f31198a4167696e6e65725f32198a4967696e6e65725f31198a4a656d61705f31198a7e656f75746572198a7f65696e6e6572198a80636d6170198acf6773656c665f3132198ad5656d70685f31198ad66a746f6b656e5f6e616d65198ae66461726730198ae76461726731198af063615f32198afa6a6173736574436c617373198afb63695f31198b0b636d7068198b0d69746f6b656e4e616d65198b2f6773656c665f3131198b366773656c665f3130198b3d6673656c665f39198b446673656c665f38198b4f6673656c665f37198b636673656c665f35198b6669726563757273655f35198b6c69726563757273655f34198b6d6673656c665f36198b6f636e5f31198b82696865785f6279746573198baf6673656c665f33198bb269726563757273655f33198bd869726563757273655f32198bd96673656c665f34198bda6762797465735f31198bdc656469676974198bde6762797465735f32198c15656279746573198c17616e198c1969726563757273655f31198c1f6772656375727365198c206169198c30626230198c5867696e6578745f32198c716776616c69645f35198c726463315f32198c7c63635f32198cc267696e6578745f31198cdb6776616c69645f33198cdc6463315f31198cf16776616c69645f34198cf26463325f31198cfc63635f31198d4c65696e657874198d656576616c6964198d66626331198d7b6776616c69645f31198d7c626332198d916776616c69645f32198d92626333198d9c6163198dee6462797465198def6863616c6c6261636b198e0f6173198e1563615f31198e1663625f32198e246161198e2563625f31198e336673656c665f32198e386673656c665f31198e406473656c66198e41656f74686572198e4a6162198e5364636f6e64198e54656d73675f32198e68656d73675f31198e6f636d7367", "termDescriptions": "b8361905c9646d61696e1905ca646d61696e19071e616119080461611908d26161191a206463637478191b006463637478191c266463637478191f106473656c66191f3b6473656c66191f3c6463637478191f3d6463637478191f83646d6b546e19208d647574786f192bc16473656c66192e2862746e192e2962746e192e2b65746e53747219330d67707572706f736519339f781a6e6f4f7468657241637469766974696573537570706f727465641933a0781a6e6f4f7468657241637469766974696573537570706f727465641933c16b686173536565645574786f1933c26b686173536565645574786f193411696d6b4361706f4374781936bb676368617274657219371267636861727465721937a76763686172746572193b3f6473656c66193b896473656c66193bbc6473656c66193c186473656c66193d9e6473656c66193df9683c7377697463683e193dfa683c7377697463683e193e54636b6579193e55636b6579193e886473656c66193e92683c7377697463683e193e93683c7377697463683e193f4f6473656c66193f556473656c66194078683c7377697463683e194079683c7377697463683e19411c70616374734f6e546869735265636f72641943f3636d73671943f4636d736719443f6b617373657274696f6e4f6b1944406b617373657274696f6e4f6b194443636d7367194444636d73671944716473656c6619448b6473656c6619751369617373657274696f6e19752f69617373657274696f6e" } },
      scriptHash: "7c436c63b6a2e63ead234f3f0bc898f1497b26038146f78065ad510c",
      config: { "rev": "1", "delegateName": "ReqtsPolicy", "isMintDelegate": false, "isSpendDelegate": false, "isDgDataPolicy": true, "requiresGovAuthority": true }
    }
  };
  specializedDelegateModule = ReqtsPolicy_hl;
  requiresGovAuthority = true;
}

export { ReqtsConcreteBundle as default };
//# sourceMappingURL=Reqts.concrete.hlb.mjs.map
